/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("leaflet"));
	else if(typeof define === 'function' && define.amd)
		define(["leaflet"], factory);
	else if(typeof exports === 'object')
		exports["GeoRasterLayer"] = factory(require("leaflet"));
	else
		root["GeoRasterLayer"] = factory(root["L"]);
})(self, (__WEBPACK_EXTERNAL_MODULE_leaflet__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/chroma-js/chroma.js":
/*!******************************************!*\
  !*** ./node_modules/chroma-js/chroma.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n(function () {\n  var Color,\n      DEG2RAD,\n      LAB_CONSTANTS,\n      PI,\n      PITHIRD,\n      RAD2DEG,\n      TWOPI,\n      _average_lrgb,\n      _guess_formats,\n      _guess_formats_sorted,\n      _input,\n      _interpolators,\n      abs,\n      atan2,\n      bezier,\n      blend,\n      blend_f,\n      brewer,\n      burn,\n      chroma,\n      clip_rgb,\n      cmyk2rgb,\n      colors,\n      cos,\n      css2rgb,\n      darken,\n      dodge,\n      each,\n      floor,\n      hcg2rgb,\n      hex2rgb,\n      hsi2rgb,\n      hsl2css,\n      hsl2rgb,\n      hsv2rgb,\n      interpolate,\n      interpolate_hsx,\n      interpolate_lab,\n      interpolate_lrgb,\n      interpolate_num,\n      interpolate_rgb,\n      lab2lch,\n      lab2rgb,\n      lab_xyz,\n      lch2lab,\n      lch2rgb,\n      lighten,\n      limit,\n      log,\n      luminance_x,\n      m,\n      max,\n      multiply,\n      normal,\n      num2rgb,\n      overlay,\n      pow,\n      rgb2cmyk,\n      rgb2css,\n      rgb2hcg,\n      rgb2hex,\n      rgb2hsi,\n      rgb2hsl,\n      rgb2hsv,\n      rgb2lab,\n      rgb2lch,\n      rgb2luminance,\n      rgb2num,\n      rgb2temperature,\n      rgb2xyz,\n      rgb_xyz,\n      rnd,\n      root,\n      round,\n      screen,\n      sin,\n      sqrt,\n      temperature2rgb,\n      type,\n      unpack,\n      w3cx11,\n      xyz_lab,\n      xyz_rgb,\n      slice = [].slice;\n\n  type = function () {\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n\n    return function (obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  }();\n\n  limit = function (x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n\n    if (max == null) {\n      max = 1;\n    }\n\n    if (x < min) {\n      x = min;\n    }\n\n    if (x > max) {\n      x = max;\n    }\n\n    return x;\n  };\n\n  unpack = function (args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function (rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n  TWOPI = PI * 2;\n  PITHIRD = PI / 3;\n  DEG2RAD = PI / 180;\n  RAD2DEG = 180 / PI;\n\n  chroma = function () {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, arguments, function () {});\n  };\n\n  chroma[\"default\"] = chroma;\n  _interpolators = [];\n\n  if ( true && module !== null && module.exports != null) {\n    module.exports = chroma;\n  }\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return chroma;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n  chroma.version = '1.4.1';\n  _input = {};\n  _guess_formats = [];\n  _guess_formats_sorted = false;\n\n  Color = function () {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function (a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n\n          if (mode) {\n            break;\n          }\n        }\n\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function () {\n      return this.hex();\n    };\n\n    return Color;\n  }();\n\n  chroma._input = _input;\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function () {\n    var key, results;\n    results = [];\n\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n\n    return results;\n  })();\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function () {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function (r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function (t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function () {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function (r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function (t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function () {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['lab']), function () {});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function () {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function (colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n\n    colors = function () {\n      var len, o, results;\n      results = [];\n\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n\n      return results;\n    }();\n\n    if (colors.length === 2) {\n      ref = function () {\n        var len, o, results;\n        results = [];\n\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n\n        return results;\n      }(), lab0 = ref[0], lab1 = ref[1];\n\n      I = function (t) {\n        var i, lab;\n\n        lab = function () {\n          var o, results;\n          results = [];\n\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n\n          return results;\n        }();\n\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = function () {\n        var len, o, results;\n        results = [];\n\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n\n        return results;\n      }(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n\n      I = function (t) {\n        var i, lab;\n\n        lab = function () {\n          var o, results;\n          results = [];\n\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n\n          return results;\n        }();\n\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = function () {\n        var len, o, results;\n        results = [];\n\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n\n        return results;\n      }(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n\n      I = function (t) {\n        var i, lab;\n\n        lab = function () {\n          var o, results;\n          results = [];\n\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n\n          return results;\n        }();\n\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n\n      I = function (t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n\n    return I;\n  };\n\n  chroma.bezier = function (colors) {\n    var f;\n    f = bezier(colors);\n\n    f.scale = function () {\n      return chroma.scale(f);\n    };\n\n    return f;\n  };\n\n  chroma.cubehelix = function (start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n\n    if (start == null) {\n      start = 300;\n    }\n\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n\n    if (hue == null) {\n      hue = 1;\n    }\n\n    if (gamma == null) {\n      gamma = 1;\n    }\n\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n\n    dh = 0;\n\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n\n    f = function (fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n\n    f.start = function (s) {\n      if (s == null) {\n        return start;\n      }\n\n      start = s;\n      return f;\n    };\n\n    f.rotations = function (r) {\n      if (r == null) {\n        return rotations;\n      }\n\n      rotations = r;\n      return f;\n    };\n\n    f.gamma = function (g) {\n      if (g == null) {\n        return gamma;\n      }\n\n      gamma = g;\n      return f;\n    };\n\n    f.hue = function (h) {\n      if (h == null) {\n        return hue;\n      }\n\n      hue = h;\n\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n\n      return f;\n    };\n\n    f.lightness = function (h) {\n      if (h == null) {\n        return lightness;\n      }\n\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n\n      return f;\n    };\n\n    f.scale = function () {\n      return chroma.scale(f);\n    };\n\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function () {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function (col1, col2, f, m) {\n    var interpol, len, o, res;\n\n    if (f == null) {\n      f = 0.5;\n    }\n\n    if (m == null) {\n      m = 'rgb';\n    }\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n\n\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function (col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function () {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n\n    return results;\n  };\n\n  chroma.rgb = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['rgb']), function () {});\n  };\n\n  Color.prototype.rgb = function (round) {\n    if (round == null) {\n      round = true;\n    }\n\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function (round) {\n    if (round == null) {\n      round = true;\n    }\n\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function (n) {\n      var a;\n      a = unpack(arguments);\n\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function (col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function (colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function (colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n\n    if (mode == null) {\n      mode = 'rgb';\n    }\n\n    l = colors.length;\n    colors = colors.map(function (c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n\n    alpha = first.alpha();\n\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n\n        while (A < 0) {\n          A += 360;\n        }\n\n        while (A >= 360) {\n          A -= 360;\n        }\n\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function (hex) {\n    var a, b, g, r, rgb, u;\n\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n\n    if (_input.css != null && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function (channels, mode) {\n    var a, b, g, hxa, r, str, u;\n\n    if (mode == null) {\n      mode = 'auto';\n    }\n\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + function () {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n\n        case 'argb':\n          return hxa + str;\n\n        default:\n          return str;\n      }\n    }();\n  };\n\n  _input.hex = function (h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['hex']), function () {});\n  };\n\n  Color.prototype.hex = function (mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function (n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function () {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function (r, g, b) {\n    var h, l, min, ref, s;\n\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n\n    h *= 60;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    return [h, s, l];\n  };\n\n  chroma.hsl = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['hsl']), function () {});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function () {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function () {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function () {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, s, v];\n  };\n\n  chroma.hsv = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['hsv']), function () {});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function () {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function (num) {\n    var b, g, r;\n\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = num >> 8 & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function () {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function (num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function (mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function (n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function () {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n\n      if (h > 360) {\n        h -= 360;\n      }\n\n      if (h < 0) {\n        h += 360;\n      }\n\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function () {\n    var _g, b, c, delta, g, h, min, r, ref;\n\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n\n      h *= 60;\n\n      if (h < 0) {\n        h += 360;\n      }\n    }\n\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['hcg']), function () {});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function () {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function (css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n\n    if (chroma.colors != null && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n\n    return rgb;\n  };\n\n  rgb2css = function (rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {}\n  };\n\n  rnd = function (a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function (hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function (h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['css']), function () {});\n  };\n\n  Color.prototype.css = function (mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function (name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function (n) {\n      if (arguments.length === 1 && w3cx11[n] != null) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function (n) {\n    var h, k;\n\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n\n      this._rgb[3] = 1;\n      this;\n    }\n\n    h = this.hex('rgb');\n\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n\n    return h;\n  };\n\n  lch2lab = function () {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function () {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function () {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n\n    return [l, c, h];\n  };\n\n  rgb2lch = function () {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function () {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function () {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function () {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function () {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function () {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function (mode) {\n    var b, c, f, g, k, m, r, ref, y;\n\n    if (mode == null) {\n      mode = 'rgb';\n    }\n\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function () {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function () {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['cmyk']), function () {});\n  };\n\n  Color.prototype.cmyk = function () {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function () {\n    var i, k, o, rgb, v;\n\n    rgb = function () {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n\n      return results;\n    }.apply(this, arguments);\n\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n\n    return rgb;\n  };\n\n  chroma.gl = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['gl']), function () {});\n  };\n\n  Color.prototype.gl = function () {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function (r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function (x) {\n    x /= 255;\n\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function (col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function (lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n\n    if (mode == null) {\n      mode = 'rgb';\n    }\n\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n\n    rgba = this._rgb;\n\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n\n      test = function (l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n\n        if (lm > lum) {\n          return test(l, m);\n        }\n\n        return test(m, h);\n      };\n\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function (kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n\n    return [r, g, b];\n  };\n\n  rgb2temperature = function () {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n\n      if (rgb[2] / rgb[0] >= b / r) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['temperature']), function () {});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function () {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function (a, b) {\n    var l1, l2, ref, ref1;\n\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n\n    l1 = a.luminance();\n    l2 = b.luminance();\n\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function (a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n\n    if (mode == null) {\n      mode = 'lab';\n    }\n\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function (a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n\n    if (L == null) {\n      L = 1;\n    }\n\n    if (C == null) {\n      C = 1;\n    }\n\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : 0.040975 * L1 / (1.0 + 0.01765 * L1);\n    sc = 0.0638 * c1 / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : atan2(b1, a1) * 180.0 / PI;\n\n    while (h1 < 0) {\n      h1 += 360;\n    }\n\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n\n    t = h1 >= 164.0 && h1 <= 345.0 ? 0.56 + abs(0.2 * cos(PI * (h1 + 168.0) / 180.0)) : 0.36 + abs(0.4 * cos(PI * (h1 + 35.0) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3));\n  };\n\n  Color.prototype.get = function (modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n\n    if (channel) {\n      i = mode.indexOf(channel);\n\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function (modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n\n            case '-':\n              src[i] += +value;\n              break;\n\n            case '*':\n              src[i] *= +value.substr(1);\n              break;\n\n            case '/':\n              src[i] /= +value.substr(1);\n              break;\n\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function () {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function (a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function (amount) {\n    var lab, me;\n\n    if (amount == null) {\n      amount = 1;\n    }\n\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function (amount) {\n    var lch, me;\n\n    if (amount == null) {\n      amount = 1;\n    }\n\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function (amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function () {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function (bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function (f) {\n    return function (bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function (f) {\n    return function (c0, c1) {\n      var i, o, out;\n      out = [];\n\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n\n      return out;\n    };\n  };\n\n  normal = function (a, b) {\n    return a;\n  };\n\n  multiply = function (a, b) {\n    return a * b / 255;\n  };\n\n  darken = function (a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function (a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function (a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function (a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function (a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function (a, b) {\n    if (a === 255) {\n      return 255;\n    }\n\n    a = 255 * (b / 255) / (1 - a / 255);\n\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n  blend.multiply = blend_f(each(multiply));\n  blend.screen = blend_f(each(screen));\n  blend.overlay = blend_f(each(overlay));\n  blend.darken = blend_f(each(darken));\n  blend.lighten = blend_f(each(lighten));\n  blend.dodge = blend_f(each(dodge));\n  blend.burn = blend_f(each(burn));\n  chroma.blend = blend;\n\n  chroma.analyze = function (data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n\n      if (val != null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    }\n\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  chroma.scale = function (colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n\n    setColors = function (colors) {\n      var c, col, o, ref, ref1, w;\n\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n\n      if (colors != null && type(colors) === 'string' && chroma.brewer != null) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n\n        colors = colors.slice(0);\n\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n\n        _pos.length = 0;\n\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n\n      resetCache();\n      return _colors = colors;\n    };\n\n    getClass = function (value) {\n      var i, n;\n\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n\n        return i - 1;\n      }\n\n      return 0;\n    };\n\n    tmap = function (t) {\n      return t;\n    };\n\n    classifyValue = function (value) {\n      var i, maxc, minc, n, val;\n      val = value;\n\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + (_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc) * (_max - _min);\n      }\n\n      return val;\n    };\n\n    getColor = function (val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n\n      t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n\n      return col;\n    };\n\n    resetCache = function () {\n      return _colorCache = {};\n    };\n\n    setColors(colors);\n\n    f = function (v) {\n      var c;\n      c = chroma(getColor(v));\n\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n\n    f.classes = function (classes) {\n      var d;\n\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n\n        return f;\n      }\n\n      return _classes;\n    };\n\n    f.domain = function (domain) {\n      var c, d, k, len, o, ref, w;\n\n      if (!arguments.length) {\n        return _domain;\n      }\n\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n\n      _domain = [_min, _max];\n      return f;\n    };\n\n    f.mode = function (_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n\n    f.range = function (colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n\n    f.out = function (_o) {\n      _out = _o;\n      return f;\n    };\n\n    f.spread = function (val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n\n      _spread = val;\n      return f;\n    };\n\n    f.correctLightness = function (v) {\n      if (v == null) {\n        v = true;\n      }\n\n      _correctLightness = v;\n      resetCache();\n\n      if (_correctLightness) {\n        tmap = function (t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function () {\n              if (pol) {\n                L_diff *= -1;\n              }\n\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n\n          return t;\n        };\n      } else {\n        tmap = function (t) {\n          return t;\n        };\n      }\n\n      return f;\n    };\n\n    f.padding = function (p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n\n    f.colors = function (numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n\n      result = [];\n\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n\n        result = function () {\n          results = [];\n\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--) {\n            results.push(o);\n          }\n\n          return results;\n        }.apply(this).map(function (i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n\n        result = samples.map(function (v) {\n          return f(v);\n        });\n      }\n\n      if (chroma[out]) {\n        result = result.map(function (c) {\n          return c[out]();\n        });\n      }\n\n      return result;\n    };\n\n    f.cache = function (c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n\n    f.gamma = function (g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n\n    f.nodata = function (d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function () {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function () {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function (data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n\n    if (filter == null) {\n      filter = function () {\n        return true;\n      };\n    }\n\n    add = function (val) {\n      if (val != null && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n\n        if (val < r.min) {\n          r.min = val;\n        }\n\n        if (val > r.max) {\n          r.max = val;\n        }\n\n        r.count += 1;\n      }\n    };\n\n    visit = function (val, k) {\n      if (filter(val, k)) {\n        if (key != null && type(key) === 'function') {\n          return add(key(val));\n        } else if (key != null && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n\n    r.domain = [r.min, r.max];\n\n    r.limits = function (mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n\n    return r;\n  };\n\n  chroma.limits = function (data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n\n    if (mode == null) {\n      mode = 'equal';\n    }\n\n    if (num == null) {\n      num = 7;\n    }\n\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function (a, b) {\n      return a - b;\n    });\n\n    if (num === 1) {\n      return [min, max];\n    }\n\n    limits = [];\n\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + i / num * (max - min));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + i / num * (max_log - min_log)));\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + i / num * (max - min));\n      }\n\n      centroids.push(max);\n\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n\n        newCentroids = new Array(num);\n\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n\n        repeat = false;\n\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n\n        centroids = newCentroids;\n        nb_iters++;\n\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n\n      kClusters = {};\n\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n\n      tmpKMeansBreaks = [];\n\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n\n    return limits;\n  };\n\n  hsi2rgb = function (h, s, i) {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n\n    if (isNaN(h)) {\n      h = 0;\n    }\n\n    h /= 360;\n\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function () {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = (r - g + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n\n      if (b > g) {\n        h = TWOPI - h;\n      }\n\n      h /= TWOPI;\n    }\n\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function () {\n    return function (func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor(),\n          result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    }(Color, slice.call(arguments).concat(['hsi']), function () {});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function () {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function (col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat(function () {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n\n    return results;\n  }());\n\n  interpolate_num = function (col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function (col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n}).call(this);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/chroma-js/chroma.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/calculate-core.js":
/*!***********************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/calculate-core.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const getLineFromPoints = __webpack_require__(/*! ./get-line-from-points.js */ \"./node_modules/dufour-peyton-intersection/src/get-line-from-points.js\");\n\nconst categorizeIntersection = __webpack_require__(/*! ./categorize-intersection.js */ \"./node_modules/dufour-peyton-intersection/src/categorize-intersection.js\");\n\nconst clamp = __webpack_require__(/*! ./clamp.js */ \"./node_modules/dufour-peyton-intersection/src/clamp.js\");\n\nconst couple = __webpack_require__(/*! ./couple.js */ \"./node_modules/dufour-peyton-intersection/src/couple.js\");\n\nconst clusterLineSegments = __webpack_require__(/*! ./cluster-line-segments.js */ \"./node_modules/dufour-peyton-intersection/src/cluster-line-segments.js\");\n\nconst getEdges = __webpack_require__(/*! ./get-edges.js */ \"./node_modules/dufour-peyton-intersection/src/get-edges.js\");\n\nconst getIntersectionOfTwoLines = __webpack_require__(/*! ./get-intersection-of-two-lines.js */ \"./node_modules/dufour-peyton-intersection/src/get-intersection-of-two-lines.js\");\n\nconst getPolygons = __webpack_require__(/*! ./get-polygons.js */ \"./node_modules/dufour-peyton-intersection/src/get-polygons.js\");\n\nconst mergeRanges = __webpack_require__(/*! ./merge-ranges.js */ \"./node_modules/dufour-peyton-intersection/src/merge-ranges.js\");\n\nconst partition = __webpack_require__(/*! ./partition.js */ \"./node_modules/dufour-peyton-intersection/src/partition.js\");\n\nconst range = __webpack_require__(/*! ./range.js */ \"./node_modules/dufour-peyton-intersection/src/range.js\");\n\nmodule.exports = function calculateCore({\n  raster_bbox,\n  raster_height,\n  raster_width,\n  pixel_height,\n  pixel_width,\n  geometry,\n  per_pixel,\n  per_row_segment\n}) {\n  const [raster_xmin, raster_ymin, raster_xmax, raster_ymax] = raster_bbox; // iterate through image rows and convert each one to a line\n  // running through the middle of the row\n\n  const imageLines = [];\n  if (raster_height === 0) return;\n\n  for (let y = 0; y < raster_height; y++) {\n    const lat = raster_ymax - pixel_height * y - pixel_height / 2; // use that point, plus another point along the same latitude to\n    // create a line\n\n    const point0 = [raster_xmin, lat];\n    const point1 = [raster_xmin + 1, lat];\n    const line = getLineFromPoints(point0, point1);\n    imageLines.push(line);\n  } // collapse geometry down to a list of edges\n  // necessary for multi-part geometries\n\n\n  const polygons = getPolygons(geometry);\n  const polygonEdges = polygons.map(getEdges);\n  polygonEdges.forEach(edges => {\n    // iterate through the list of polygon vertices, convert them to\n    // lines, and compute the intersections with each image row\n    const intersectionsByRow = range(raster_height).map(() => []);\n    const numberOfEdges = edges.length;\n\n    for (let i = 0; i < numberOfEdges; i++) {\n      // get vertices that make up an edge and convert that to a line\n      const edge = edges[i];\n      const [startPoint, endPoint] = edge;\n      const [x1, y1] = startPoint;\n      const [x2, y2] = endPoint;\n      const direction = Math.sign(y2 - y1);\n      const horizontal = y1 === y2;\n      const vertical = x1 === x2;\n      const edgeY = y1;\n      const edgeLine = getLineFromPoints(startPoint, endPoint);\n      const edgeYMin = Math.min(y1, y2);\n      const edgeYMax = Math.max(y1, y2);\n      let startLng, startLat, endLat, endLng;\n\n      if (x1 < x2) {\n        [startLng, startLat] = startPoint;\n        [endLng, endLat] = endPoint;\n      } else {\n        [startLng, startLat] = endPoint;\n        [endLng, endLat] = startPoint;\n      }\n\n      if (startLng === undefined) throw Error(\"startLng is \" + startLng); // find the y values in the image coordinate space\n\n      const imageY1 = Math.round((raster_bbox[3] - 0.5 * pixel_height - startLat) / pixel_height);\n      const imageY2 = Math.round((raster_bbox[3] - 0.5 * pixel_height - endLat) / pixel_height); // make sure to set the start and end points so that we are\n      // incrementing upwards through rows\n\n      let rowStart, rowEnd;\n\n      if (imageY1 < imageY2) {\n        rowStart = imageY1;\n        rowEnd = imageY2;\n      } else {\n        rowStart = imageY2;\n        rowEnd = imageY1;\n      }\n\n      rowStart = clamp(rowStart, 0, raster_height - 1);\n      rowEnd = clamp(rowEnd, 0, raster_height - 1); // iterate through image lines within the change in y of\n      // the edge line and find all intersections\n\n      for (let j = rowStart; j < rowEnd + 1; j++) {\n        const imageLine = imageLines[j];\n\n        if (imageLine === undefined) {\n          console.error(\"j:\", j);\n          console.error(\"imageLines:\", imageLines);\n          throw Error(\"imageLines\");\n        } // because you know x is zero in ax + by = c, so by = c and b = -1, so -1 * y = c or y = -1 * c\n\n\n        const imageLineY = -1 * imageLine.c;\n        const startsOnLine = y1 === imageLineY;\n        const endsOnLine = y2 === imageLineY;\n        const endsOffLine = !endsOnLine;\n        let xminOnLine, xmaxOnLine;\n\n        if (horizontal) {\n          if (edgeY === imageLineY) {\n            xminOnLine = startLng;\n            xmaxOnLine = endLng;\n          } else {\n            continue; // stop running calculations for this horizontal line because it doesn't intersect at all\n          }\n        } else if (vertical) {\n          /* we have to have a seprate section for vertical because of floating point arithmetic probs with get_inter...\" */\n          if (imageLineY >= edgeYMin && imageLineY <= edgeYMax) {\n            xminOnLine = startLng;\n            xmaxOnLine = endLng;\n          }\n        } else if (startsOnLine) {\n          // we know that the other end is not on the line because then it would be horizontal\n          xminOnLine = xmaxOnLine = x1;\n        } else if (endsOnLine) {\n          // we know that the other end is not on the line because then it would be horizontal\n          xminOnLine = xmaxOnLine = x2;\n        } else {\n          try {\n            xminOnLine = xmaxOnLine = getIntersectionOfTwoLines(edgeLine, imageLine).x;\n          } catch (error) {\n            throw error;\n          }\n        } // check to see if the intersection point is within the range of\n        // the edge line segment. If it is, add the intersection to the\n        // list of intersections at the corresponding index for that row\n        // in intersectionsByRow\n\n\n        if (xminOnLine && xmaxOnLine && (horizontal || xminOnLine >= startLng && xmaxOnLine <= endLng && imageLineY <= edgeYMax && imageLineY >= edgeYMin)) {\n          intersectionsByRow[j].push({\n            direction,\n            index: i,\n            edge,\n            endsOnLine,\n            endsOffLine,\n            horizontal,\n            startsOnLine,\n            vertical,\n            xmin: xminOnLine,\n            xmax: xmaxOnLine,\n            imageLineY\n          });\n        }\n      }\n    }\n\n    intersectionsByRow.map((segmentsInRow, row_index) => {\n      if (segmentsInRow.length > 0) {\n        const clusters = clusterLineSegments(segmentsInRow, numberOfEdges);\n        const categorized = clusters.map(categorizeIntersection);\n        const [throughs, nonthroughs] = partition(categorized, item => item.through);\n\n        if (throughs.length % 2 === 1) {\n          throw Error(\"throughs.length for \" + row_index + \" is odd with \" + throughs.length);\n        }\n\n        let insides = nonthroughs.map(intersection => [intersection.xmin, intersection.xmax]); // sorts throughs from left to right in-place\n\n        throughs.sort((a, b) => a.xmin - b.xmin);\n        const couples = couple(throughs).map(couple => {\n          const [left, right] = couple;\n          return [left.xmin, right.xmax];\n        });\n        insides = insides.concat(couples);\n        /*\n          This makes sure we don't double count pixels.\n          For example, converts `[[0,10],[10,10]]` to `[[0,10]]`\n        */\n\n        insides = mergeRanges(insides);\n        insides.forEach(pair => {\n          const [xmin, xmax] = pair; //convert left and right to image pixels\n\n          const left = Math.round((xmin - (raster_xmin + 0.5 * pixel_width)) / pixel_width);\n          const right = Math.round((xmax - (raster_xmin + 0.5 * pixel_width)) / pixel_width); // skip because segment is beyond the right edge of the raster\n\n          if (left >= raster_width) return; // skip because segment is beyond the left edge of the raster\n\n          if (right < 0) return;\n          const start_column_index = Math.max(left, 0);\n          const end_column_index = Math.min(right, raster_width - 1);\n\n          if (per_row_segment) {\n            per_row_segment({\n              row: row_index,\n              columns: [start_column_index, end_column_index]\n            });\n          }\n\n          if (per_pixel) {\n            for (let column_index = start_column_index; column_index <= end_column_index; column_index++) {\n              per_pixel({\n                row: row_index,\n                column: column_index\n              });\n            }\n          }\n        });\n      }\n    });\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/calculate-core.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/calculate.js":
/*!******************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/calculate.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const calculateCallbacks = __webpack_require__(/*! ./calculate-core.js */ \"./node_modules/dufour-peyton-intersection/src/calculate-core.js\");\n\nconst checkRows = __webpack_require__(/*! ./check-rows.js */ \"./node_modules/dufour-peyton-intersection/src/check-rows.js\");\n\nconst mergeConsecutiveRanges = __webpack_require__(/*! ./merge-consecutive-ranges.js */ \"./node_modules/dufour-peyton-intersection/src/merge-consecutive-ranges.js\");\n\nmodule.exports = function calculate({\n  debug = false,\n  raster_bbox,\n  raster_height,\n  raster_width,\n  pixel_height,\n  pixel_width,\n  geometry,\n  per_pixel,\n  per_row_segment\n}) {\n  const [xmin, ymin, xmax, ymax] = raster_bbox;\n  if (pixel_height === undefined || pixel_height === null) pixel_height = (ymax - ymin) / raster_height;\n  if (pixel_width === undefined || pixel_width === null) pixel_width = (xmax - xmin) / raster_width;\n  const rows = new Array(raster_height);\n  calculateCallbacks({\n    raster_bbox,\n    raster_height,\n    raster_width,\n    pixel_height,\n    pixel_width,\n    geometry,\n    per_pixel,\n    per_row_segment: ({\n      row,\n      columns\n    }) => {\n      if (!rows[row]) rows[row] = [];\n      rows[row].push(columns);\n      if (per_row_segment) per_row_segment({\n        row,\n        columns\n      });\n    }\n  });\n\n  for (let irow = 0; irow < rows.length; irow++) {\n    const ranges = rows[irow];\n\n    if (ranges) {\n      // sort from left to right\n      ranges.sort((a, b) => a === b ? a[1] - b[1] : a[0] - b[0]); // replace existing row with sorted and merged one\n\n      rows[irow] = mergeConsecutiveRanges(ranges);\n    }\n  }\n\n  if (debug) checkRows(insides);\n  return {\n    rows\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NhbGN1bGF0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVRBO0FBV0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQVpBOztBQWVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NhbGN1bGF0ZS5qcz9lZDg4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhbGN1bGF0ZUNhbGxiYWNrcyA9IHJlcXVpcmUoXCIuL2NhbGN1bGF0ZS1jb3JlLmpzXCIpO1xuY29uc3QgY2hlY2tSb3dzID0gcmVxdWlyZShcIi4vY2hlY2stcm93cy5qc1wiKTtcbmNvbnN0IG1lcmdlQ29uc2VjdXRpdmVSYW5nZXMgPSByZXF1aXJlKFwiLi9tZXJnZS1jb25zZWN1dGl2ZS1yYW5nZXMuanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY2FsY3VsYXRlKHtcbiAgZGVidWcgPSBmYWxzZSxcbiAgcmFzdGVyX2Jib3gsXG4gIHJhc3Rlcl9oZWlnaHQsXG4gIHJhc3Rlcl93aWR0aCxcbiAgcGl4ZWxfaGVpZ2h0LFxuICBwaXhlbF93aWR0aCxcbiAgZ2VvbWV0cnksXG4gIHBlcl9waXhlbCxcbiAgcGVyX3Jvd19zZWdtZW50XG59KSB7XG4gIGNvbnN0IFt4bWluLCB5bWluLCB4bWF4LCB5bWF4XSA9IHJhc3Rlcl9iYm94O1xuICBpZiAocGl4ZWxfaGVpZ2h0ID09PSB1bmRlZmluZWQgfHwgcGl4ZWxfaGVpZ2h0ID09PSBudWxsKSBwaXhlbF9oZWlnaHQgPSAoeW1heCAtIHltaW4pIC8gcmFzdGVyX2hlaWdodDtcbiAgaWYgKHBpeGVsX3dpZHRoID09PSB1bmRlZmluZWQgfHwgcGl4ZWxfd2lkdGggPT09IG51bGwpIHBpeGVsX3dpZHRoID0gKHhtYXggLSB4bWluKSAvIHJhc3Rlcl93aWR0aDtcblxuICBjb25zdCByb3dzID0gbmV3IEFycmF5KHJhc3Rlcl9oZWlnaHQpO1xuXG4gIGNhbGN1bGF0ZUNhbGxiYWNrcyh7XG4gICAgcmFzdGVyX2Jib3gsXG4gICAgcmFzdGVyX2hlaWdodCxcbiAgICByYXN0ZXJfd2lkdGgsXG4gICAgcGl4ZWxfaGVpZ2h0LFxuICAgIHBpeGVsX3dpZHRoLFxuICAgIGdlb21ldHJ5LFxuICAgIHBlcl9waXhlbCxcbiAgICBwZXJfcm93X3NlZ21lbnQ6ICh7IHJvdywgY29sdW1ucyB9KSA9PiB7XG4gICAgICBpZiAoIXJvd3Nbcm93XSkgcm93c1tyb3ddID0gW107XG4gICAgICByb3dzW3Jvd10ucHVzaChjb2x1bW5zKTtcbiAgICAgIGlmIChwZXJfcm93X3NlZ21lbnQpIHBlcl9yb3dfc2VnbWVudCh7IHJvdywgY29sdW1ucyB9KTtcbiAgICB9XG4gIH0pO1xuXG4gIGZvciAobGV0IGlyb3cgPSAwOyBpcm93IDwgcm93cy5sZW5ndGg7IGlyb3crKykge1xuICAgIGNvbnN0IHJhbmdlcyA9IHJvd3NbaXJvd107XG4gICAgaWYgKHJhbmdlcykge1xuICAgICAgLy8gc29ydCBmcm9tIGxlZnQgdG8gcmlnaHRcbiAgICAgIHJhbmdlcy5zb3J0KChhLCBiKSA9PiAoYSA9PT0gYiA/IGFbMV0gLSBiWzFdIDogYVswXSAtIGJbMF0pKTtcblxuICAgICAgLy8gcmVwbGFjZSBleGlzdGluZyByb3cgd2l0aCBzb3J0ZWQgYW5kIG1lcmdlZCBvbmVcbiAgICAgIHJvd3NbaXJvd10gPSBtZXJnZUNvbnNlY3V0aXZlUmFuZ2VzKHJhbmdlcyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKGRlYnVnKSBjaGVja1Jvd3MoaW5zaWRlcyk7XG5cbiAgcmV0dXJuIHsgcm93cyB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/calculate.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/categorize-intersection.js":
/*!********************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/categorize-intersection.js ***!
  \********************************************************************************/
/***/ ((module) => {

eval("module.exports = function categorizeIntersection(segments) {\n  try {\n    let through, xmin, xmax;\n    const n = segments.length;\n    const first = segments[0];\n\n    if (n === 1) {\n      through = true;\n      xmin = first.xmin;\n      xmax = first.xmax;\n    }\n    /* n > 1 */\n    else {\n      const last = segments[n - 1];\n      through = first.direction === last.direction;\n      xmin = Math.min(first.xmin, last.xmin);\n      xmax = Math.max(first.xmax, last.xmax);\n    }\n\n    if (xmin === undefined || xmax === undefined || through === undefined || isNaN(xmin) || isNaN(xmax)) {\n      throw Error(\"categorizeIntersection failed with xmin\", xmin, \"and xmax\", xmax);\n    }\n\n    return {\n      xmin,\n      xmax,\n      through\n    };\n  } catch (error) {\n    console.error(\"[categorizeIntersection] segments:\", segments);\n    console.error(\"[categorizeIntersection]\", error);\n    throw error;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NhdGVnb3JpemUtaW50ZXJzZWN0aW9uLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNhdGVnb3JpemVJbnRlcnNlY3Rpb24iLCJzZWdtZW50cyIsInRocm91Z2giLCJ4bWluIiwieG1heCIsIm4iLCJsZW5ndGgiLCJmaXJzdCIsImxhc3QiLCJkaXJlY3Rpb24iLCJNYXRoIiwibWluIiwibWF4IiwidW5kZWZpbmVkIiwiaXNOYU4iLCJFcnJvciIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NhdGVnb3JpemUtaW50ZXJzZWN0aW9uLmpzPzdkZDciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjYXRlZ29yaXplSW50ZXJzZWN0aW9uKHNlZ21lbnRzKSB7XG4gIHRyeSB7XG4gICAgbGV0IHRocm91Z2gsIHhtaW4sIHhtYXg7XG5cbiAgICBjb25zdCBuID0gc2VnbWVudHMubGVuZ3RoO1xuXG4gICAgY29uc3QgZmlyc3QgPSBzZWdtZW50c1swXTtcblxuICAgIGlmIChuID09PSAxKSB7XG4gICAgICB0aHJvdWdoID0gdHJ1ZTtcbiAgICAgIHhtaW4gPSBmaXJzdC54bWluO1xuICAgICAgeG1heCA9IGZpcnN0LnhtYXg7XG4gICAgfSAvKiBuID4gMSAqLyBlbHNlIHtcbiAgICAgIGNvbnN0IGxhc3QgPSBzZWdtZW50c1tuIC0gMV07XG4gICAgICB0aHJvdWdoID0gZmlyc3QuZGlyZWN0aW9uID09PSBsYXN0LmRpcmVjdGlvbjtcbiAgICAgIHhtaW4gPSBNYXRoLm1pbihmaXJzdC54bWluLCBsYXN0LnhtaW4pO1xuICAgICAgeG1heCA9IE1hdGgubWF4KGZpcnN0LnhtYXgsIGxhc3QueG1heCk7XG4gICAgfVxuXG4gICAgaWYgKHhtaW4gPT09IHVuZGVmaW5lZCB8fCB4bWF4ID09PSB1bmRlZmluZWQgfHwgdGhyb3VnaCA9PT0gdW5kZWZpbmVkIHx8IGlzTmFOKHhtaW4pIHx8IGlzTmFOKHhtYXgpKSB7XG4gICAgICB0aHJvdyBFcnJvcihcImNhdGVnb3JpemVJbnRlcnNlY3Rpb24gZmFpbGVkIHdpdGggeG1pblwiLCB4bWluLCBcImFuZCB4bWF4XCIsIHhtYXgpO1xuICAgIH1cblxuICAgIHJldHVybiB7IHhtaW4sIHhtYXgsIHRocm91Z2ggfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiW2NhdGVnb3JpemVJbnRlcnNlY3Rpb25dIHNlZ21lbnRzOlwiLCBzZWdtZW50cyk7XG4gICAgY29uc29sZS5lcnJvcihcIltjYXRlZ29yaXplSW50ZXJzZWN0aW9uXVwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0Msc0JBQVQsQ0FBZ0NDLFFBQWhDLEVBQTBDO0VBQ3pELElBQUk7SUFDRixJQUFJQyxPQUFKLEVBQWFDLElBQWIsRUFBbUJDLElBQW5CO0lBRUEsTUFBTUMsQ0FBQyxHQUFHSixRQUFRLENBQUNLLE1BQW5CO0lBRUEsTUFBTUMsS0FBSyxHQUFHTixRQUFRLENBQUMsQ0FBRCxDQUF0Qjs7SUFFQSxJQUFJSSxDQUFDLEtBQUssQ0FBVixFQUFhO01BQ1hILE9BQU8sR0FBRyxJQUFWO01BQ0FDLElBQUksR0FBR0ksS0FBSyxDQUFDSixJQUFiO01BQ0FDLElBQUksR0FBR0csS0FBSyxDQUFDSCxJQUFiO0lBQ0Q7SUFBQztJQUpGLEtBSW1CO01BQ2pCLE1BQU1JLElBQUksR0FBR1AsUUFBUSxDQUFDSSxDQUFDLEdBQUcsQ0FBTCxDQUFyQjtNQUNBSCxPQUFPLEdBQUdLLEtBQUssQ0FBQ0UsU0FBTixLQUFvQkQsSUFBSSxDQUFDQyxTQUFuQztNQUNBTixJQUFJLEdBQUdPLElBQUksQ0FBQ0MsR0FBTCxDQUFTSixLQUFLLENBQUNKLElBQWYsRUFBcUJLLElBQUksQ0FBQ0wsSUFBMUIsQ0FBUDtNQUNBQyxJQUFJLEdBQUdNLElBQUksQ0FBQ0UsR0FBTCxDQUFTTCxLQUFLLENBQUNILElBQWYsRUFBcUJJLElBQUksQ0FBQ0osSUFBMUIsQ0FBUDtJQUNEOztJQUVELElBQUlELElBQUksS0FBS1UsU0FBVCxJQUFzQlQsSUFBSSxLQUFLUyxTQUEvQixJQUE0Q1gsT0FBTyxLQUFLVyxTQUF4RCxJQUFxRUMsS0FBSyxDQUFDWCxJQUFELENBQTFFLElBQW9GVyxLQUFLLENBQUNWLElBQUQsQ0FBN0YsRUFBcUc7TUFDbkcsTUFBTVcsS0FBSyxDQUFDLHlDQUFELEVBQTRDWixJQUE1QyxFQUFrRCxVQUFsRCxFQUE4REMsSUFBOUQsQ0FBWDtJQUNEOztJQUVELE9BQU87TUFBRUQsSUFBRjtNQUFRQyxJQUFSO01BQWNGO0lBQWQsQ0FBUDtFQUNELENBdkJELENBdUJFLE9BQU9jLEtBQVAsRUFBYztJQUNkQyxPQUFPLENBQUNELEtBQVIsQ0FBYyxvQ0FBZCxFQUFvRGYsUUFBcEQ7SUFDQWdCLE9BQU8sQ0FBQ0QsS0FBUixDQUFjLDBCQUFkLEVBQTBDQSxLQUExQztJQUNBLE1BQU1BLEtBQU47RUFDRDtBQUNGLENBN0JEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/categorize-intersection.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/check-rows.js":
/*!*******************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/check-rows.js ***!
  \*******************************************************************/
/***/ ((module) => {

eval("module.exports = function checkRanges(rows) {\n  rows.forEach((ranges, irow) => {\n    for (let irange = 0; irange < ranges.length; irange++) {\n      const range = ranges[irange];\n      const [start, end] = range;\n\n      if (start > end) {\n        console.warn(\"[dufour-peyton-intersection] uh oh, encountered invalid range\", range, \"at row index\", irow, \"with ranges\", ranges);\n      }\n\n      for (let iother = irange + 1; iother < ranges.length; iother++) {\n        if (iother[0] <= end) {\n          console.warn(\"[dufour-peyton-intersection] encountered range problem on row index\", irow, \":\", ranges);\n        }\n      }\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NoZWNrLXJvd3MuanMuanMiLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2hlY2tSYW5nZXMiLCJyb3dzIiwiZm9yRWFjaCIsInJhbmdlcyIsImlyb3ciLCJpcmFuZ2UiLCJsZW5ndGgiLCJyYW5nZSIsInN0YXJ0IiwiZW5kIiwiY29uc29sZSIsIndhcm4iLCJpb3RoZXIiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9jaGVjay1yb3dzLmpzP2FjMmMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjaGVja1Jhbmdlcyhyb3dzKSB7XG4gIHJvd3MuZm9yRWFjaCgocmFuZ2VzLCBpcm93KSA9PiB7XG4gICAgZm9yIChsZXQgaXJhbmdlID0gMDsgaXJhbmdlIDwgcmFuZ2VzLmxlbmd0aDsgaXJhbmdlKyspIHtcbiAgICAgIGNvbnN0IHJhbmdlID0gcmFuZ2VzW2lyYW5nZV07XG4gICAgICBjb25zdCBbc3RhcnQsIGVuZF0gPSByYW5nZTtcbiAgICAgIGlmIChzdGFydCA+IGVuZCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb25dIHVoIG9oLCBlbmNvdW50ZXJlZCBpbnZhbGlkIHJhbmdlXCIsIHJhbmdlLCBcImF0IHJvdyBpbmRleFwiLCBpcm93LCBcIndpdGggcmFuZ2VzXCIsIHJhbmdlcyk7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGlvdGhlciA9IGlyYW5nZSArIDE7IGlvdGhlciA8IHJhbmdlcy5sZW5ndGg7IGlvdGhlcisrKSB7XG4gICAgICAgIGlmIChpb3RoZXJbMF0gPD0gZW5kKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiW2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uXSBlbmNvdW50ZXJlZCByYW5nZSBwcm9ibGVtIG9uIHJvdyBpbmRleFwiLCBpcm93LCBcIjpcIiwgcmFuZ2VzKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFdBQVQsQ0FBcUJDLElBQXJCLEVBQTJCO0VBQzFDQSxJQUFJLENBQUNDLE9BQUwsQ0FBYSxDQUFDQyxNQUFELEVBQVNDLElBQVQsS0FBa0I7SUFDN0IsS0FBSyxJQUFJQyxNQUFNLEdBQUcsQ0FBbEIsRUFBcUJBLE1BQU0sR0FBR0YsTUFBTSxDQUFDRyxNQUFyQyxFQUE2Q0QsTUFBTSxFQUFuRCxFQUF1RDtNQUNyRCxNQUFNRSxLQUFLLEdBQUdKLE1BQU0sQ0FBQ0UsTUFBRCxDQUFwQjtNQUNBLE1BQU0sQ0FBQ0csS0FBRCxFQUFRQyxHQUFSLElBQWVGLEtBQXJCOztNQUNBLElBQUlDLEtBQUssR0FBR0MsR0FBWixFQUFpQjtRQUNmQyxPQUFPLENBQUNDLElBQVIsQ0FBYSwrREFBYixFQUE4RUosS0FBOUUsRUFBcUYsY0FBckYsRUFBcUdILElBQXJHLEVBQTJHLGFBQTNHLEVBQTBIRCxNQUExSDtNQUNEOztNQUVELEtBQUssSUFBSVMsTUFBTSxHQUFHUCxNQUFNLEdBQUcsQ0FBM0IsRUFBOEJPLE1BQU0sR0FBR1QsTUFBTSxDQUFDRyxNQUE5QyxFQUFzRE0sTUFBTSxFQUE1RCxFQUFnRTtRQUM5RCxJQUFJQSxNQUFNLENBQUMsQ0FBRCxDQUFOLElBQWFILEdBQWpCLEVBQXNCO1VBQ3BCQyxPQUFPLENBQUNDLElBQVIsQ0FBYSxxRUFBYixFQUFvRlAsSUFBcEYsRUFBMEYsR0FBMUYsRUFBK0ZELE1BQS9GO1FBQ0Q7TUFDRjtJQUNGO0VBQ0YsQ0FkRDtBQWVELENBaEJEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/check-rows.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/clamp.js":
/*!**************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/clamp.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("module.exports = function clamp(n, min, max) {\n  if (n < min) return min;else if (n > max) return max;\n  return n;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NsYW1wLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImNsYW1wIiwibiIsIm1pbiIsIm1heCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NsYW1wLmpzPzI2MjciXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjbGFtcChuLCBtaW4sIG1heCkge1xuICBpZiAobiA8IG1pbikgcmV0dXJuIG1pbjtcbiAgZWxzZSBpZiAobiA+IG1heCkgcmV0dXJuIG1heDtcbiAgcmV0dXJuIG47XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLEtBQVQsQ0FBZUMsQ0FBZixFQUFrQkMsR0FBbEIsRUFBdUJDLEdBQXZCLEVBQTRCO0VBQzNDLElBQUlGLENBQUMsR0FBR0MsR0FBUixFQUFhLE9BQU9BLEdBQVAsQ0FBYixLQUNLLElBQUlELENBQUMsR0FBR0UsR0FBUixFQUFhLE9BQU9BLEdBQVA7RUFDbEIsT0FBT0YsQ0FBUDtBQUNELENBSkQifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/clamp.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/cluster-line-segments.js":
/*!******************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/cluster-line-segments.js ***!
  \******************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const cluster = __webpack_require__(/*! ./cluster.js */ \"./node_modules/dufour-peyton-intersection/src/cluster.js\");\n\nmodule.exports = function clusterLineSegments(lineSegments, numberOfEdges, debug = false) {\n  try {\n    const clusters = cluster(lineSegments, s => s.endsOffLine);\n    const numberOfClusters = clusters.length;\n\n    if (numberOfClusters >= 2) {\n      const firstCluster = clusters[0];\n      const firstSegment = firstCluster[0];\n      const lastCluster = clusters[clusters.length - 1];\n      const lastSegment = lastCluster[lastCluster.length - 1];\n\n      if (lastSegment.index === numberOfEdges - 1 && firstSegment.index === 0 && lastSegment.endsOnLine) {\n        clusters[0] = clusters.pop().concat(firstCluster);\n      }\n    }\n\n    return clusters;\n  } catch (error) {\n    console.error(\"[clusterLineSegments]\", error);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NsdXN0ZXItbGluZS1zZWdtZW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9kdWZvdXItcGV5dG9uLWludGVyc2VjdGlvbi9zcmMvY2x1c3Rlci1saW5lLXNlZ21lbnRzLmpzP2FhMzMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2x1c3RlciA9IHJlcXVpcmUoXCIuL2NsdXN0ZXIuanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY2x1c3RlckxpbmVTZWdtZW50cyhsaW5lU2VnbWVudHMsIG51bWJlck9mRWRnZXMsIGRlYnVnID0gZmFsc2UpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBjbHVzdGVycyA9IGNsdXN0ZXIobGluZVNlZ21lbnRzLCBzID0+IHMuZW5kc09mZkxpbmUpO1xuXG4gICAgY29uc3QgbnVtYmVyT2ZDbHVzdGVycyA9IGNsdXN0ZXJzLmxlbmd0aDtcblxuICAgIGlmIChudW1iZXJPZkNsdXN0ZXJzID49IDIpIHtcbiAgICAgIGNvbnN0IGZpcnN0Q2x1c3RlciA9IGNsdXN0ZXJzWzBdO1xuICAgICAgY29uc3QgZmlyc3RTZWdtZW50ID0gZmlyc3RDbHVzdGVyWzBdO1xuICAgICAgY29uc3QgbGFzdENsdXN0ZXIgPSBjbHVzdGVyc1tjbHVzdGVycy5sZW5ndGggLSAxXTtcbiAgICAgIGNvbnN0IGxhc3RTZWdtZW50ID0gbGFzdENsdXN0ZXJbbGFzdENsdXN0ZXIubGVuZ3RoIC0gMV07XG5cbiAgICAgIGlmIChsYXN0U2VnbWVudC5pbmRleCA9PT0gbnVtYmVyT2ZFZGdlcyAtIDEgJiYgZmlyc3RTZWdtZW50LmluZGV4ID09PSAwICYmIGxhc3RTZWdtZW50LmVuZHNPbkxpbmUpIHtcbiAgICAgICAgY2x1c3RlcnNbMF0gPSBjbHVzdGVycy5wb3AoKS5jb25jYXQoZmlyc3RDbHVzdGVyKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY2x1c3RlcnM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIltjbHVzdGVyTGluZVNlZ21lbnRzXVwiLCBlcnJvcik7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/cluster-line-segments.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/cluster.js":
/*!****************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/cluster.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("module.exports = function cluster(items, newClusterTest) {\n  try {\n    const numberOfItems = items.length;\n    const clusters = [];\n    let cluster = [];\n\n    for (let i = 0; i < numberOfItems; i++) {\n      const item = items[i];\n      cluster.push(item);\n\n      if (newClusterTest(item)) {\n        clusters.push(cluster);\n        cluster = [];\n      }\n    }\n\n    if (cluster.length > 0) clusters.push(cluster);\n    return clusters;\n  } catch (error) {\n    console.error(\"[cluster]:\", error);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NsdXN0ZXIuanMuanMiLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiY2x1c3RlciIsIml0ZW1zIiwibmV3Q2x1c3RlclRlc3QiLCJudW1iZXJPZkl0ZW1zIiwibGVuZ3RoIiwiY2x1c3RlcnMiLCJpIiwiaXRlbSIsInB1c2giLCJlcnJvciIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9jbHVzdGVyLmpzP2QxMjQiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjbHVzdGVyKGl0ZW1zLCBuZXdDbHVzdGVyVGVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IG51bWJlck9mSXRlbXMgPSBpdGVtcy5sZW5ndGg7XG4gICAgY29uc3QgY2x1c3RlcnMgPSBbXTtcbiAgICBsZXQgY2x1c3RlciA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbnVtYmVyT2ZJdGVtczsgaSsrKSB7XG4gICAgICBjb25zdCBpdGVtID0gaXRlbXNbaV07XG4gICAgICBjbHVzdGVyLnB1c2goaXRlbSk7XG4gICAgICBpZiAobmV3Q2x1c3RlclRlc3QoaXRlbSkpIHtcbiAgICAgICAgY2x1c3RlcnMucHVzaChjbHVzdGVyKTtcbiAgICAgICAgY2x1c3RlciA9IFtdO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjbHVzdGVyLmxlbmd0aCA+IDApIGNsdXN0ZXJzLnB1c2goY2x1c3Rlcik7XG5cbiAgICByZXR1cm4gY2x1c3RlcnM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIltjbHVzdGVyXTpcIiwgZXJyb3IpO1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLE9BQVQsQ0FBaUJDLEtBQWpCLEVBQXdCQyxjQUF4QixFQUF3QztFQUN2RCxJQUFJO0lBQ0YsTUFBTUMsYUFBYSxHQUFHRixLQUFLLENBQUNHLE1BQTVCO0lBQ0EsTUFBTUMsUUFBUSxHQUFHLEVBQWpCO0lBQ0EsSUFBSUwsT0FBTyxHQUFHLEVBQWQ7O0lBQ0EsS0FBSyxJQUFJTSxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSCxhQUFwQixFQUFtQ0csQ0FBQyxFQUFwQyxFQUF3QztNQUN0QyxNQUFNQyxJQUFJLEdBQUdOLEtBQUssQ0FBQ0ssQ0FBRCxDQUFsQjtNQUNBTixPQUFPLENBQUNRLElBQVIsQ0FBYUQsSUFBYjs7TUFDQSxJQUFJTCxjQUFjLENBQUNLLElBQUQsQ0FBbEIsRUFBMEI7UUFDeEJGLFFBQVEsQ0FBQ0csSUFBVCxDQUFjUixPQUFkO1FBQ0FBLE9BQU8sR0FBRyxFQUFWO01BQ0Q7SUFDRjs7SUFFRCxJQUFJQSxPQUFPLENBQUNJLE1BQVIsR0FBaUIsQ0FBckIsRUFBd0JDLFFBQVEsQ0FBQ0csSUFBVCxDQUFjUixPQUFkO0lBRXhCLE9BQU9LLFFBQVA7RUFDRCxDQWhCRCxDQWdCRSxPQUFPSSxLQUFQLEVBQWM7SUFDZEMsT0FBTyxDQUFDRCxLQUFSLENBQWMsWUFBZCxFQUE0QkEsS0FBNUI7RUFDRDtBQUNGLENBcEJEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/cluster.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/couple.js":
/*!***************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/couple.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("// This function takes in an array with an even number of elements and\n// returns an array that couples every two consecutive elements;\nmodule.exports = function couple(array) {\n  const couples = [];\n  const lengthOfArray = array.length;\n\n  for (let i = 0; i < lengthOfArray; i += 2) {\n    couples.push([array[i], array[i + 1]]);\n  }\n\n  return couples;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2NvdXBsZS5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb3VwbGUiLCJhcnJheSIsImNvdXBsZXMiLCJsZW5ndGhPZkFycmF5IiwibGVuZ3RoIiwiaSIsInB1c2giXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9jb3VwbGUuanM/MzZiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZ1bmN0aW9uIHRha2VzIGluIGFuIGFycmF5IHdpdGggYW4gZXZlbiBudW1iZXIgb2YgZWxlbWVudHMgYW5kXG4vLyByZXR1cm5zIGFuIGFycmF5IHRoYXQgY291cGxlcyBldmVyeSB0d28gY29uc2VjdXRpdmUgZWxlbWVudHM7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNvdXBsZShhcnJheSkge1xuICBjb25zdCBjb3VwbGVzID0gW107XG4gIGNvbnN0IGxlbmd0aE9mQXJyYXkgPSBhcnJheS5sZW5ndGg7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoT2ZBcnJheTsgaSArPSAyKSB7XG4gICAgY291cGxlcy5wdXNoKFthcnJheVtpXSwgYXJyYXlbaSArIDFdXSk7XG4gIH1cbiAgcmV0dXJuIGNvdXBsZXM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxNQUFULENBQWdCQyxLQUFoQixFQUF1QjtFQUN0QyxNQUFNQyxPQUFPLEdBQUcsRUFBaEI7RUFDQSxNQUFNQyxhQUFhLEdBQUdGLEtBQUssQ0FBQ0csTUFBNUI7O0VBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixhQUFwQixFQUFtQ0UsQ0FBQyxJQUFJLENBQXhDLEVBQTJDO0lBQ3pDSCxPQUFPLENBQUNJLElBQVIsQ0FBYSxDQUFDTCxLQUFLLENBQUNJLENBQUQsQ0FBTixFQUFXSixLQUFLLENBQUNJLENBQUMsR0FBRyxDQUFMLENBQWhCLENBQWI7RUFDRDs7RUFDRCxPQUFPSCxPQUFQO0FBQ0QsQ0FQRCJ9\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/couple.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/each-edge.js":
/*!******************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/each-edge.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("module.exports = function eachEdge(polygon, callback) {\n  polygon.forEach(ring => {\n    for (let i = 1; i < ring.length; i++) {\n      // should reuse previous endPoint as startPoint to save memory\n      const startPoint = ring[i - 1];\n      const endPoint = ring[i];\n      const edgeIndex = i - 1;\n      callback([startPoint, endPoint], edgeIndex);\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2VhY2gtZWRnZS5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJlYWNoRWRnZSIsInBvbHlnb24iLCJjYWxsYmFjayIsImZvckVhY2giLCJyaW5nIiwiaSIsImxlbmd0aCIsInN0YXJ0UG9pbnQiLCJlbmRQb2ludCIsImVkZ2VJbmRleCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2VhY2gtZWRnZS5qcz84ZDc3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZWFjaEVkZ2UocG9seWdvbiwgY2FsbGJhY2spIHtcbiAgcG9seWdvbi5mb3JFYWNoKHJpbmcgPT4ge1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgcmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gc2hvdWxkIHJldXNlIHByZXZpb3VzIGVuZFBvaW50IGFzIHN0YXJ0UG9pbnQgdG8gc2F2ZSBtZW1vcnlcbiAgICAgIGNvbnN0IHN0YXJ0UG9pbnQgPSByaW5nW2kgLSAxXTtcbiAgICAgIGNvbnN0IGVuZFBvaW50ID0gcmluZ1tpXTtcbiAgICAgIGNvbnN0IGVkZ2VJbmRleCA9IGkgLSAxO1xuICAgICAgY2FsbGJhY2soW3N0YXJ0UG9pbnQsIGVuZFBvaW50XSwgZWRnZUluZGV4KTtcbiAgICB9XG4gIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxRQUFULENBQWtCQyxPQUFsQixFQUEyQkMsUUFBM0IsRUFBcUM7RUFDcERELE9BQU8sQ0FBQ0UsT0FBUixDQUFnQkMsSUFBSSxJQUFJO0lBQ3RCLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsSUFBSSxDQUFDRSxNQUF6QixFQUFpQ0QsQ0FBQyxFQUFsQyxFQUFzQztNQUNwQztNQUNBLE1BQU1FLFVBQVUsR0FBR0gsSUFBSSxDQUFDQyxDQUFDLEdBQUcsQ0FBTCxDQUF2QjtNQUNBLE1BQU1HLFFBQVEsR0FBR0osSUFBSSxDQUFDQyxDQUFELENBQXJCO01BQ0EsTUFBTUksU0FBUyxHQUFHSixDQUFDLEdBQUcsQ0FBdEI7TUFDQUgsUUFBUSxDQUFDLENBQUNLLFVBQUQsRUFBYUMsUUFBYixDQUFELEVBQXlCQyxTQUF6QixDQUFSO0lBQ0Q7RUFDRixDQVJEO0FBU0QsQ0FWRCJ9\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/each-edge.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/each-polygon.js":
/*!*********************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/each-polygon.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const getDepth = __webpack_require__(/*! get-depth */ \"./node_modules/get-depth/index.js\"); // call callback function for each polygon in geojson\n\n\nmodule.exports = function eachPolygon(geojson, callback) {\n  if (geojson.type === \"FeatureCollection\") {\n    geojson.features.forEach(feature => eachPolygon(feature, callback));\n  } else if (geojson.type === \"Feature\") {\n    eachPolygon(geojson.geometry, callback);\n  } else if (geojson.type === \"Polygon\") {\n    eachPolygon(geojson.coordinates, callback);\n  } else if (geojson.type === \"MultiPolygon\") {\n    geojson.coordinates.forEach(polygon => {\n      callback(polygon);\n    });\n  } else if (Array.isArray(geojson)) {\n    const depth = getDepth(geojson);\n\n    if (depth === 4) {\n      geojson.forEach(polygon => {\n        callback(polygon);\n      });\n    } else if (depth === 3) {\n      callback(geojson);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2VhY2gtcG9seWdvbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2VhY2gtcG9seWdvbi5qcz85NzI0Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldERlcHRoID0gcmVxdWlyZShcImdldC1kZXB0aFwiKTtcblxuLy8gY2FsbCBjYWxsYmFjayBmdW5jdGlvbiBmb3IgZWFjaCBwb2x5Z29uIGluIGdlb2pzb25cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZWFjaFBvbHlnb24oZ2VvanNvbiwgY2FsbGJhY2spIHtcbiAgaWYgKGdlb2pzb24udHlwZSA9PT0gXCJGZWF0dXJlQ29sbGVjdGlvblwiKSB7XG4gICAgZ2VvanNvbi5mZWF0dXJlcy5mb3JFYWNoKGZlYXR1cmUgPT4gZWFjaFBvbHlnb24oZmVhdHVyZSwgY2FsbGJhY2spKTtcbiAgfSBlbHNlIGlmIChnZW9qc29uLnR5cGUgPT09IFwiRmVhdHVyZVwiKSB7XG4gICAgZWFjaFBvbHlnb24oZ2VvanNvbi5nZW9tZXRyeSwgY2FsbGJhY2spO1xuICB9IGVsc2UgaWYgKGdlb2pzb24udHlwZSA9PT0gXCJQb2x5Z29uXCIpIHtcbiAgICBlYWNoUG9seWdvbihnZW9qc29uLmNvb3JkaW5hdGVzLCBjYWxsYmFjayk7XG4gIH0gZWxzZSBpZiAoZ2VvanNvbi50eXBlID09PSBcIk11bHRpUG9seWdvblwiKSB7XG4gICAgZ2VvanNvbi5jb29yZGluYXRlcy5mb3JFYWNoKHBvbHlnb24gPT4ge1xuICAgICAgY2FsbGJhY2socG9seWdvbik7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShnZW9qc29uKSkge1xuICAgIGNvbnN0IGRlcHRoID0gZ2V0RGVwdGgoZ2VvanNvbik7XG4gICAgaWYgKGRlcHRoID09PSA0KSB7XG4gICAgICBnZW9qc29uLmZvckVhY2gocG9seWdvbiA9PiB7XG4gICAgICAgIGNhbGxiYWNrKHBvbHlnb24pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChkZXB0aCA9PT0gMykge1xuICAgICAgY2FsbGJhY2soZ2VvanNvbik7XG4gICAgfVxuICB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/each-polygon.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/get-bounding-box.js":
/*!*************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/get-bounding-box.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const eachPolygon = __webpack_require__(/*! ./each-polygon.js */ \"./node_modules/dufour-peyton-intersection/src/each-polygon.js\");\n\nmodule.exports = function getBoundingBox(geometry) {\n  let xmin, ymin, xmax, ymax;\n  eachPolygon(geometry, polygon => {\n    const ring = polygon[0]; // only want the exterior ring\n\n    const imax = ring.length - 1;\n    let i;\n\n    if (xmin === undefined) {\n      xmin = xmax = ring[0][0];\n      ymin = ymax = ring[0][1];\n      i = 1;\n    } else {\n      i = 0;\n    }\n\n    for (; i <= imax; i++) {\n      const [x, y] = ring[i];\n      if (x < xmin) xmin = x;else if (x > xmax) xmax = x;\n      if (y < ymin) ymin = y;else if (y > ymax) ymax = y;\n    }\n  });\n  return [xmin, ymin, xmax, ymax];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1ib3VuZGluZy1ib3guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1ib3VuZGluZy1ib3guanM/NTUxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlYWNoUG9seWdvbiA9IHJlcXVpcmUoXCIuL2VhY2gtcG9seWdvbi5qc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRCb3VuZGluZ0JveChnZW9tZXRyeSkge1xuICBsZXQgeG1pbiwgeW1pbiwgeG1heCwgeW1heDtcblxuICBlYWNoUG9seWdvbihnZW9tZXRyeSwgcG9seWdvbiA9PiB7XG4gICAgY29uc3QgcmluZyA9IHBvbHlnb25bMF07IC8vIG9ubHkgd2FudCB0aGUgZXh0ZXJpb3IgcmluZ1xuICAgIGNvbnN0IGltYXggPSByaW5nLmxlbmd0aCAtIDE7XG5cbiAgICBsZXQgaTtcbiAgICBpZiAoeG1pbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB4bWluID0geG1heCA9IHJpbmdbMF1bMF07XG4gICAgICB5bWluID0geW1heCA9IHJpbmdbMF1bMV07XG4gICAgICBpID0gMTtcbiAgICB9IGVsc2Uge1xuICAgICAgaSA9IDA7XG4gICAgfVxuXG4gICAgZm9yICg7IGkgPD0gaW1heDsgaSsrKSB7XG4gICAgICBjb25zdCBbeCwgeV0gPSByaW5nW2ldO1xuICAgICAgaWYgKHggPCB4bWluKSB4bWluID0geDtcbiAgICAgIGVsc2UgaWYgKHggPiB4bWF4KSB4bWF4ID0geDtcbiAgICAgIGlmICh5IDwgeW1pbikgeW1pbiA9IHk7XG4gICAgICBlbHNlIGlmICh5ID4geW1heCkgeW1heCA9IHk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gW3htaW4sIHltaW4sIHhtYXgsIHltYXhdO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/get-bounding-box.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/get-edges.js":
/*!******************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/get-edges.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const eachEdge = __webpack_require__(/*! ./each-edge.js */ \"./node_modules/dufour-peyton-intersection/src/each-edge.js\");\n\nmodule.exports = function getEdges(polygon) {\n  const edges = [];\n  eachEdge(polygon, edge => edges.push(edge));\n  return edges;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1lZGdlcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1lZGdlcy5qcz83ZTQ1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVhY2hFZGdlID0gcmVxdWlyZShcIi4vZWFjaC1lZGdlLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldEVkZ2VzKHBvbHlnb24pIHtcbiAgY29uc3QgZWRnZXMgPSBbXTtcbiAgZWFjaEVkZ2UocG9seWdvbiwgZWRnZSA9PiBlZGdlcy5wdXNoKGVkZ2UpKTtcbiAgcmV0dXJuIGVkZ2VzO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/get-edges.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/get-intersection-of-two-lines.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/get-intersection-of-two-lines.js ***!
  \**************************************************************************************/
/***/ ((module) => {

eval("// function to get the point at which two lines intersect\n// the input uses the line representations from the\n// getLineFromPoints function\nmodule.exports = function getIntersectionOfTwoLines(line1, line2) {\n  // calculate the determinant, ad - cb in a square matrix |a b|\n  const det = line1.a * line2.b - line2.a * line1.b;\n  /*  |c d| */\n\n  if (det) {\n    // this makes sure the lines aren't parallel, if they are, det will equal 0\n    const x = (line2.b * line1.c - line1.b * line2.c) / det;\n    const y = (line1.a * line2.c - line2.a * line1.c) / det;\n    return {\n      x,\n      y\n    };\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmVzLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldEludGVyc2VjdGlvbk9mVHdvTGluZXMiLCJsaW5lMSIsImxpbmUyIiwiZGV0IiwiYSIsImIiLCJ4IiwiYyIsInkiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9nZXQtaW50ZXJzZWN0aW9uLW9mLXR3by1saW5lcy5qcz84ZWUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZ1bmN0aW9uIHRvIGdldCB0aGUgcG9pbnQgYXQgd2hpY2ggdHdvIGxpbmVzIGludGVyc2VjdFxuLy8gdGhlIGlucHV0IHVzZXMgdGhlIGxpbmUgcmVwcmVzZW50YXRpb25zIGZyb20gdGhlXG4vLyBnZXRMaW5lRnJvbVBvaW50cyBmdW5jdGlvblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRJbnRlcnNlY3Rpb25PZlR3b0xpbmVzKGxpbmUxLCBsaW5lMikge1xuICAvLyBjYWxjdWxhdGUgdGhlIGRldGVybWluYW50LCBhZCAtIGNiIGluIGEgc3F1YXJlIG1hdHJpeCB8YSBifFxuICBjb25zdCBkZXQgPSBsaW5lMS5hICogbGluZTIuYiAtIGxpbmUyLmEgKiBsaW5lMS5iOyAvKiAgfGMgZHwgKi9cblxuICBpZiAoZGV0KSB7XG4gICAgLy8gdGhpcyBtYWtlcyBzdXJlIHRoZSBsaW5lcyBhcmVuJ3QgcGFyYWxsZWwsIGlmIHRoZXkgYXJlLCBkZXQgd2lsbCBlcXVhbCAwXG4gICAgY29uc3QgeCA9IChsaW5lMi5iICogbGluZTEuYyAtIGxpbmUxLmIgKiBsaW5lMi5jKSAvIGRldDtcbiAgICBjb25zdCB5ID0gKGxpbmUxLmEgKiBsaW5lMi5jIC0gbGluZTIuYSAqIGxpbmUxLmMpIC8gZGV0O1xuICAgIHJldHVybiB7IHgsIHkgfTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyx5QkFBVCxDQUFtQ0MsS0FBbkMsRUFBMENDLEtBQTFDLEVBQWlEO0VBQ2hFO0VBQ0EsTUFBTUMsR0FBRyxHQUFHRixLQUFLLENBQUNHLENBQU4sR0FBVUYsS0FBSyxDQUFDRyxDQUFoQixHQUFvQkgsS0FBSyxDQUFDRSxDQUFOLEdBQVVILEtBQUssQ0FBQ0ksQ0FBaEQ7RUFBbUQ7O0VBRW5ELElBQUlGLEdBQUosRUFBUztJQUNQO0lBQ0EsTUFBTUcsQ0FBQyxHQUFHLENBQUNKLEtBQUssQ0FBQ0csQ0FBTixHQUFVSixLQUFLLENBQUNNLENBQWhCLEdBQW9CTixLQUFLLENBQUNJLENBQU4sR0FBVUgsS0FBSyxDQUFDSyxDQUFyQyxJQUEwQ0osR0FBcEQ7SUFDQSxNQUFNSyxDQUFDLEdBQUcsQ0FBQ1AsS0FBSyxDQUFDRyxDQUFOLEdBQVVGLEtBQUssQ0FBQ0ssQ0FBaEIsR0FBb0JMLEtBQUssQ0FBQ0UsQ0FBTixHQUFVSCxLQUFLLENBQUNNLENBQXJDLElBQTBDSixHQUFwRDtJQUNBLE9BQU87TUFBRUcsQ0FBRjtNQUFLRTtJQUFMLENBQVA7RUFDRDtBQUNGLENBVkQifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/get-intersection-of-two-lines.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/get-line-from-points.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/get-line-from-points.js ***!
  \*****************************************************************************/
/***/ ((module) => {

eval("// function to convert two points into a\n// representation of a line\nmodule.exports = function getLineFromPoints(startPoint, endPoint) {\n  // get a, b, and c from line equation ax + by = c\n  const [x1, y1] = startPoint;\n  const [x2, y2] = endPoint;\n  const a = y2 - y1;\n  const b = x1 - x2;\n  const c = a * x1 + b * y1; // return just a b and c since that is all we need\n  // to compute the intersection\n\n  return {\n    a,\n    b,\n    c\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1saW5lLWZyb20tcG9pbnRzLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldExpbmVGcm9tUG9pbnRzIiwic3RhcnRQb2ludCIsImVuZFBvaW50IiwieDEiLCJ5MSIsIngyIiwieTIiLCJhIiwiYiIsImMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9nZXQtbGluZS1mcm9tLXBvaW50cy5qcz8wMWIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZ1bmN0aW9uIHRvIGNvbnZlcnQgdHdvIHBvaW50cyBpbnRvIGFcbi8vIHJlcHJlc2VudGF0aW9uIG9mIGEgbGluZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRMaW5lRnJvbVBvaW50cyhzdGFydFBvaW50LCBlbmRQb2ludCkge1xuICAvLyBnZXQgYSwgYiwgYW5kIGMgZnJvbSBsaW5lIGVxdWF0aW9uIGF4ICsgYnkgPSBjXG4gIGNvbnN0IFt4MSwgeTFdID0gc3RhcnRQb2ludDtcbiAgY29uc3QgW3gyLCB5Ml0gPSBlbmRQb2ludDtcbiAgY29uc3QgYSA9IHkyIC0geTE7XG4gIGNvbnN0IGIgPSB4MSAtIHgyO1xuICBjb25zdCBjID0gYSAqIHgxICsgYiAqIHkxO1xuXG4gIC8vIHJldHVybiBqdXN0IGEgYiBhbmQgYyBzaW5jZSB0aGF0IGlzIGFsbCB3ZSBuZWVkXG4gIC8vIHRvIGNvbXB1dGUgdGhlIGludGVyc2VjdGlvblxuICByZXR1cm4geyBhLCBiLCBjIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxpQkFBVCxDQUEyQkMsVUFBM0IsRUFBdUNDLFFBQXZDLEVBQWlEO0VBQ2hFO0VBQ0EsTUFBTSxDQUFDQyxFQUFELEVBQUtDLEVBQUwsSUFBV0gsVUFBakI7RUFDQSxNQUFNLENBQUNJLEVBQUQsRUFBS0MsRUFBTCxJQUFXSixRQUFqQjtFQUNBLE1BQU1LLENBQUMsR0FBR0QsRUFBRSxHQUFHRixFQUFmO0VBQ0EsTUFBTUksQ0FBQyxHQUFHTCxFQUFFLEdBQUdFLEVBQWY7RUFDQSxNQUFNSSxDQUFDLEdBQUdGLENBQUMsR0FBR0osRUFBSixHQUFTSyxDQUFDLEdBQUdKLEVBQXZCLENBTmdFLENBUWhFO0VBQ0E7O0VBQ0EsT0FBTztJQUFFRyxDQUFGO0lBQUtDLENBQUw7SUFBUUM7RUFBUixDQUFQO0FBQ0QsQ0FYRCJ9\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/get-line-from-points.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/get-polygons.js":
/*!*********************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/get-polygons.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const eachPolygon = __webpack_require__(/*! ./each-polygon.js */ \"./node_modules/dufour-peyton-intersection/src/each-polygon.js\");\n\nmodule.exports = function getPolygons(geojson) {\n  const polygons = [];\n  eachPolygon(geojson, polygon => polygons.push(polygon));\n  return polygons;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1wb2x5Z29ucy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2dldC1wb2x5Z29ucy5qcz9mMzNkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVhY2hQb2x5Z29uID0gcmVxdWlyZShcIi4vZWFjaC1wb2x5Z29uLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldFBvbHlnb25zKGdlb2pzb24pIHtcbiAgY29uc3QgcG9seWdvbnMgPSBbXTtcbiAgZWFjaFBvbHlnb24oZ2VvanNvbiwgcG9seWdvbiA9PiBwb2x5Z29ucy5wdXNoKHBvbHlnb24pKTtcbiAgcmV0dXJuIHBvbHlnb25zO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/get-polygons.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/index.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;const categorizeIntersection = __webpack_require__(/*! ./categorize-intersection.js */ \"./node_modules/dufour-peyton-intersection/src/categorize-intersection.js\");\n\nconst clamp = __webpack_require__(/*! ./clamp.js */ \"./node_modules/dufour-peyton-intersection/src/clamp.js\");\n\nconst cluster = __webpack_require__(/*! ./cluster.js */ \"./node_modules/dufour-peyton-intersection/src/cluster.js\");\n\nconst clusterLineSegments = __webpack_require__(/*! ./cluster-line-segments.js */ \"./node_modules/dufour-peyton-intersection/src/cluster-line-segments.js\");\n\nconst calculate = __webpack_require__(/*! ./calculate.js */ \"./node_modules/dufour-peyton-intersection/src/calculate.js\");\n\nconst calculateCore = __webpack_require__(/*! ./calculate-core.js */ \"./node_modules/dufour-peyton-intersection/src/calculate-core.js\");\n\nconst couple = __webpack_require__(/*! ./couple.js */ \"./node_modules/dufour-peyton-intersection/src/couple.js\");\n\nconst getBoundingBox = __webpack_require__(/*! ./get-bounding-box.js */ \"./node_modules/dufour-peyton-intersection/src/get-bounding-box.js\");\n\nconst getPolygons = __webpack_require__(/*! ./get-polygons.js */ \"./node_modules/dufour-peyton-intersection/src/get-polygons.js\");\n\nconst eachEdge = __webpack_require__(/*! ./each-edge.js */ \"./node_modules/dufour-peyton-intersection/src/each-edge.js\");\n\nconst getIntersectionOfTwoLines = __webpack_require__(/*! ./get-intersection-of-two-lines.js */ \"./node_modules/dufour-peyton-intersection/src/get-intersection-of-two-lines.js\");\n\nconst getLineFromPoints = __webpack_require__(/*! ./get-line-from-points.js */ \"./node_modules/dufour-peyton-intersection/src/get-line-from-points.js\");\n\nconst mergeRanges = __webpack_require__(/*! ./merge-ranges.js */ \"./node_modules/dufour-peyton-intersection/src/merge-ranges.js\");\n\nconst partition = __webpack_require__(/*! ./partition.js */ \"./node_modules/dufour-peyton-intersection/src/partition.js\");\n\nconst range = __webpack_require__(/*! ./range.js */ \"./node_modules/dufour-peyton-intersection/src/range.js\");\n\nconst dufour_peyton_intersection = {\n  calculate,\n  calculateCore,\n  categorizeIntersection,\n  clamp,\n  cluster,\n  clusterLineSegments,\n  couple,\n  eachEdge,\n  getBoundingBox,\n  getIntersectionOfTwoLines,\n  getLineFromPoints,\n  getPolygons,\n  mergeRanges,\n  partition,\n  range\n};\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (() => dufour_peyton_intersection).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\nif (true) module.exports = dufour_peyton_intersection;\nif (typeof self == \"object\") self.dufour_peyton_intersection = dufour_peyton_intersection;\nif (typeof window == \"object\") window.dufour_peyton_intersection = dufour_peyton_intersection;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZkE7QUFrQkE7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9pbmRleC5qcz81N2UxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNhdGVnb3JpemVJbnRlcnNlY3Rpb24gPSByZXF1aXJlKFwiLi9jYXRlZ29yaXplLWludGVyc2VjdGlvbi5qc1wiKTtcbmNvbnN0IGNsYW1wID0gcmVxdWlyZShcIi4vY2xhbXAuanNcIik7XG5jb25zdCBjbHVzdGVyID0gcmVxdWlyZShcIi4vY2x1c3Rlci5qc1wiKTtcbmNvbnN0IGNsdXN0ZXJMaW5lU2VnbWVudHMgPSByZXF1aXJlKFwiLi9jbHVzdGVyLWxpbmUtc2VnbWVudHMuanNcIik7XG5jb25zdCBjYWxjdWxhdGUgPSByZXF1aXJlKFwiLi9jYWxjdWxhdGUuanNcIik7XG5jb25zdCBjYWxjdWxhdGVDb3JlID0gcmVxdWlyZShcIi4vY2FsY3VsYXRlLWNvcmUuanNcIik7XG5jb25zdCBjb3VwbGUgPSByZXF1aXJlKFwiLi9jb3VwbGUuanNcIik7XG5jb25zdCBnZXRCb3VuZGluZ0JveCA9IHJlcXVpcmUoXCIuL2dldC1ib3VuZGluZy1ib3guanNcIik7XG5jb25zdCBnZXRQb2x5Z29ucyA9IHJlcXVpcmUoXCIuL2dldC1wb2x5Z29ucy5qc1wiKTtcbmNvbnN0IGVhY2hFZGdlID0gcmVxdWlyZShcIi4vZWFjaC1lZGdlLmpzXCIpO1xuY29uc3QgZ2V0SW50ZXJzZWN0aW9uT2ZUd29MaW5lcyA9IHJlcXVpcmUoXCIuL2dldC1pbnRlcnNlY3Rpb24tb2YtdHdvLWxpbmVzLmpzXCIpO1xuY29uc3QgZ2V0TGluZUZyb21Qb2ludHMgPSByZXF1aXJlKFwiLi9nZXQtbGluZS1mcm9tLXBvaW50cy5qc1wiKTtcbmNvbnN0IG1lcmdlUmFuZ2VzID0gcmVxdWlyZShcIi4vbWVyZ2UtcmFuZ2VzLmpzXCIpO1xuY29uc3QgcGFydGl0aW9uID0gcmVxdWlyZShcIi4vcGFydGl0aW9uLmpzXCIpO1xuY29uc3QgcmFuZ2UgPSByZXF1aXJlKFwiLi9yYW5nZS5qc1wiKTtcblxuY29uc3QgZHVmb3VyX3BleXRvbl9pbnRlcnNlY3Rpb24gPSB7XG4gIGNhbGN1bGF0ZSxcbiAgY2FsY3VsYXRlQ29yZSxcbiAgY2F0ZWdvcml6ZUludGVyc2VjdGlvbixcbiAgY2xhbXAsXG4gIGNsdXN0ZXIsXG4gIGNsdXN0ZXJMaW5lU2VnbWVudHMsXG4gIGNvdXBsZSxcbiAgZWFjaEVkZ2UsXG4gIGdldEJvdW5kaW5nQm94LFxuICBnZXRJbnRlcnNlY3Rpb25PZlR3b0xpbmVzLFxuICBnZXRMaW5lRnJvbVBvaW50cyxcbiAgZ2V0UG9seWdvbnMsXG4gIG1lcmdlUmFuZ2VzLFxuICBwYXJ0aXRpb24sXG4gIHJhbmdlXG59O1xuXG5pZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIGRlZmluZSgoKSA9PiBkdWZvdXJfcGV5dG9uX2ludGVyc2VjdGlvbik7XG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIikgbW9kdWxlLmV4cG9ydHMgPSBkdWZvdXJfcGV5dG9uX2ludGVyc2VjdGlvbjtcbmlmICh0eXBlb2Ygc2VsZiA9PSBcIm9iamVjdFwiKSBzZWxmLmR1Zm91cl9wZXl0b25faW50ZXJzZWN0aW9uID0gZHVmb3VyX3BleXRvbl9pbnRlcnNlY3Rpb247XG5pZiAodHlwZW9mIHdpbmRvdyA9PSBcIm9iamVjdFwiKSB3aW5kb3cuZHVmb3VyX3BleXRvbl9pbnRlcnNlY3Rpb24gPSBkdWZvdXJfcGV5dG9uX2ludGVyc2VjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/index.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/merge-consecutive-ranges.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/merge-consecutive-ranges.js ***!
  \*********************************************************************************/
/***/ ((module) => {

eval("module.exports = function mergeConsecutiveRanges(ranges) {\n  const numberOfRanges = ranges.length;\n\n  if (numberOfRanges > 0) {\n    const firstRange = ranges[0];\n    let previousEnd = firstRange[1];\n    const result = [firstRange];\n\n    for (let i = 1; i < numberOfRanges; i++) {\n      const tempRange = ranges[i];\n      const [start, end] = tempRange;\n\n      if (start <= previousEnd + 1) {\n        result[result.length - 1][1] = end;\n      } else {\n        result.push(tempRange);\n      }\n\n      previousEnd = end;\n    }\n\n    return result;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL21lcmdlLWNvbnNlY3V0aXZlLXJhbmdlcy5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXJnZUNvbnNlY3V0aXZlUmFuZ2VzIiwicmFuZ2VzIiwibnVtYmVyT2ZSYW5nZXMiLCJsZW5ndGgiLCJmaXJzdFJhbmdlIiwicHJldmlvdXNFbmQiLCJyZXN1bHQiLCJpIiwidGVtcFJhbmdlIiwic3RhcnQiLCJlbmQiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9kdWZvdXItcGV5dG9uLWludGVyc2VjdGlvbi9zcmMvbWVyZ2UtY29uc2VjdXRpdmUtcmFuZ2VzLmpzPzQ1M2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBtZXJnZUNvbnNlY3V0aXZlUmFuZ2VzKHJhbmdlcykge1xuICBjb25zdCBudW1iZXJPZlJhbmdlcyA9IHJhbmdlcy5sZW5ndGg7XG4gIGlmIChudW1iZXJPZlJhbmdlcyA+IDApIHtcbiAgICBjb25zdCBmaXJzdFJhbmdlID0gcmFuZ2VzWzBdO1xuICAgIGxldCBwcmV2aW91c0VuZCA9IGZpcnN0UmFuZ2VbMV07XG4gICAgY29uc3QgcmVzdWx0ID0gW2ZpcnN0UmFuZ2VdO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgbnVtYmVyT2ZSYW5nZXM7IGkrKykge1xuICAgICAgY29uc3QgdGVtcFJhbmdlID0gcmFuZ2VzW2ldO1xuICAgICAgY29uc3QgW3N0YXJ0LCBlbmRdID0gdGVtcFJhbmdlO1xuICAgICAgaWYgKHN0YXJ0IDw9IHByZXZpb3VzRW5kICsgMSkge1xuICAgICAgICByZXN1bHRbcmVzdWx0Lmxlbmd0aCAtIDFdWzFdID0gZW5kO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzdWx0LnB1c2godGVtcFJhbmdlKTtcbiAgICAgIH1cbiAgICAgIHByZXZpb3VzRW5kID0gZW5kO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLHNCQUFULENBQWdDQyxNQUFoQyxFQUF3QztFQUN2RCxNQUFNQyxjQUFjLEdBQUdELE1BQU0sQ0FBQ0UsTUFBOUI7O0VBQ0EsSUFBSUQsY0FBYyxHQUFHLENBQXJCLEVBQXdCO0lBQ3RCLE1BQU1FLFVBQVUsR0FBR0gsTUFBTSxDQUFDLENBQUQsQ0FBekI7SUFDQSxJQUFJSSxXQUFXLEdBQUdELFVBQVUsQ0FBQyxDQUFELENBQTVCO0lBQ0EsTUFBTUUsTUFBTSxHQUFHLENBQUNGLFVBQUQsQ0FBZjs7SUFDQSxLQUFLLElBQUlHLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdMLGNBQXBCLEVBQW9DSyxDQUFDLEVBQXJDLEVBQXlDO01BQ3ZDLE1BQU1DLFNBQVMsR0FBR1AsTUFBTSxDQUFDTSxDQUFELENBQXhCO01BQ0EsTUFBTSxDQUFDRSxLQUFELEVBQVFDLEdBQVIsSUFBZUYsU0FBckI7O01BQ0EsSUFBSUMsS0FBSyxJQUFJSixXQUFXLEdBQUcsQ0FBM0IsRUFBOEI7UUFDNUJDLE1BQU0sQ0FBQ0EsTUFBTSxDQUFDSCxNQUFQLEdBQWdCLENBQWpCLENBQU4sQ0FBMEIsQ0FBMUIsSUFBK0JPLEdBQS9CO01BQ0QsQ0FGRCxNQUVPO1FBQ0xKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZSCxTQUFaO01BQ0Q7O01BQ0RILFdBQVcsR0FBR0ssR0FBZDtJQUNEOztJQUNELE9BQU9KLE1BQVA7RUFDRDtBQUNGLENBbEJEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/merge-consecutive-ranges.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/merge-ranges.js":
/*!*********************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/merge-ranges.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("// This function takes in an array of number pairs and combines where there's overlap\nmodule.exports = function mergeRanges(ranges) {\n  const numberOfRanges = ranges.length;\n\n  if (numberOfRanges > 0) {\n    const firstRange = ranges[0];\n    let previousEnd = firstRange[1];\n    const result = [firstRange];\n\n    for (let i = 1; i < numberOfRanges; i++) {\n      const tempRange = ranges[i];\n      const [start, end] = tempRange;\n\n      if (start <= previousEnd) {\n        result[result.length - 1][1] = end;\n      } else {\n        result.push(tempRange);\n      }\n\n      previousEnd = end;\n    }\n\n    return result;\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL21lcmdlLXJhbmdlcy5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJtZXJnZVJhbmdlcyIsInJhbmdlcyIsIm51bWJlck9mUmFuZ2VzIiwibGVuZ3RoIiwiZmlyc3RSYW5nZSIsInByZXZpb3VzRW5kIiwicmVzdWx0IiwiaSIsInRlbXBSYW5nZSIsInN0YXJ0IiwiZW5kIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL21lcmdlLXJhbmdlcy5qcz81NDFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZnVuY3Rpb24gdGFrZXMgaW4gYW4gYXJyYXkgb2YgbnVtYmVyIHBhaXJzIGFuZCBjb21iaW5lcyB3aGVyZSB0aGVyZSdzIG92ZXJsYXBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VSYW5nZXMocmFuZ2VzKSB7XG4gIGNvbnN0IG51bWJlck9mUmFuZ2VzID0gcmFuZ2VzLmxlbmd0aDtcbiAgaWYgKG51bWJlck9mUmFuZ2VzID4gMCkge1xuICAgIGNvbnN0IGZpcnN0UmFuZ2UgPSByYW5nZXNbMF07XG4gICAgbGV0IHByZXZpb3VzRW5kID0gZmlyc3RSYW5nZVsxXTtcbiAgICBjb25zdCByZXN1bHQgPSBbZmlyc3RSYW5nZV07XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBudW1iZXJPZlJhbmdlczsgaSsrKSB7XG4gICAgICBjb25zdCB0ZW1wUmFuZ2UgPSByYW5nZXNbaV07XG4gICAgICBjb25zdCBbc3RhcnQsIGVuZF0gPSB0ZW1wUmFuZ2U7XG4gICAgICBpZiAoc3RhcnQgPD0gcHJldmlvdXNFbmQpIHtcbiAgICAgICAgcmVzdWx0W3Jlc3VsdC5sZW5ndGggLSAxXVsxXSA9IGVuZDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHRlbXBSYW5nZSk7XG4gICAgICB9XG4gICAgICBwcmV2aW91c0VuZCA9IGVuZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFdBQVQsQ0FBcUJDLE1BQXJCLEVBQTZCO0VBQzVDLE1BQU1DLGNBQWMsR0FBR0QsTUFBTSxDQUFDRSxNQUE5Qjs7RUFDQSxJQUFJRCxjQUFjLEdBQUcsQ0FBckIsRUFBd0I7SUFDdEIsTUFBTUUsVUFBVSxHQUFHSCxNQUFNLENBQUMsQ0FBRCxDQUF6QjtJQUNBLElBQUlJLFdBQVcsR0FBR0QsVUFBVSxDQUFDLENBQUQsQ0FBNUI7SUFDQSxNQUFNRSxNQUFNLEdBQUcsQ0FBQ0YsVUFBRCxDQUFmOztJQUNBLEtBQUssSUFBSUcsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0wsY0FBcEIsRUFBb0NLLENBQUMsRUFBckMsRUFBeUM7TUFDdkMsTUFBTUMsU0FBUyxHQUFHUCxNQUFNLENBQUNNLENBQUQsQ0FBeEI7TUFDQSxNQUFNLENBQUNFLEtBQUQsRUFBUUMsR0FBUixJQUFlRixTQUFyQjs7TUFDQSxJQUFJQyxLQUFLLElBQUlKLFdBQWIsRUFBMEI7UUFDeEJDLE1BQU0sQ0FBQ0EsTUFBTSxDQUFDSCxNQUFQLEdBQWdCLENBQWpCLENBQU4sQ0FBMEIsQ0FBMUIsSUFBK0JPLEdBQS9CO01BQ0QsQ0FGRCxNQUVPO1FBQ0xKLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZSCxTQUFaO01BQ0Q7O01BQ0RILFdBQVcsR0FBR0ssR0FBZDtJQUNEOztJQUNELE9BQU9KLE1BQVA7RUFDRDtBQUNGLENBbEJEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/merge-ranges.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/partition.js":
/*!******************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/partition.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("module.exports = function partition(array, filter) {\n  const passed = [];\n  const unpassed = [];\n  const len = array.length;\n\n  for (let i = 0; i < len; i++) {\n    const item = array[i];\n    if (filter(item)) passed.push(item);else unpassed.push(item);\n  }\n\n  return [passed, unpassed];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL3BhcnRpdGlvbi5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJwYXJ0aXRpb24iLCJhcnJheSIsImZpbHRlciIsInBhc3NlZCIsInVucGFzc2VkIiwibGVuIiwibGVuZ3RoIiwiaSIsIml0ZW0iLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9kdWZvdXItcGV5dG9uLWludGVyc2VjdGlvbi9zcmMvcGFydGl0aW9uLmpzPzJlNjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBwYXJ0aXRpb24oYXJyYXksIGZpbHRlcikge1xuICBjb25zdCBwYXNzZWQgPSBbXTtcbiAgY29uc3QgdW5wYXNzZWQgPSBbXTtcbiAgY29uc3QgbGVuID0gYXJyYXkubGVuZ3RoO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgY29uc3QgaXRlbSA9IGFycmF5W2ldO1xuICAgIGlmIChmaWx0ZXIoaXRlbSkpIHBhc3NlZC5wdXNoKGl0ZW0pO1xuICAgIGVsc2UgdW5wYXNzZWQucHVzaChpdGVtKTtcbiAgfVxuICByZXR1cm4gW3Bhc3NlZCwgdW5wYXNzZWRdO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxTQUFULENBQW1CQyxLQUFuQixFQUEwQkMsTUFBMUIsRUFBa0M7RUFDakQsTUFBTUMsTUFBTSxHQUFHLEVBQWY7RUFDQSxNQUFNQyxRQUFRLEdBQUcsRUFBakI7RUFDQSxNQUFNQyxHQUFHLEdBQUdKLEtBQUssQ0FBQ0ssTUFBbEI7O0VBQ0EsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixHQUFwQixFQUF5QkUsQ0FBQyxFQUExQixFQUE4QjtJQUM1QixNQUFNQyxJQUFJLEdBQUdQLEtBQUssQ0FBQ00sQ0FBRCxDQUFsQjtJQUNBLElBQUlMLE1BQU0sQ0FBQ00sSUFBRCxDQUFWLEVBQWtCTCxNQUFNLENBQUNNLElBQVAsQ0FBWUQsSUFBWixFQUFsQixLQUNLSixRQUFRLENBQUNLLElBQVQsQ0FBY0QsSUFBZDtFQUNOOztFQUNELE9BQU8sQ0FBQ0wsTUFBRCxFQUFTQyxRQUFULENBQVA7QUFDRCxDQVZEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/partition.js\n");

/***/ }),

/***/ "./node_modules/dufour-peyton-intersection/src/range.js":
/*!**************************************************************!*\
  !*** ./node_modules/dufour-peyton-intersection/src/range.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("module.exports = function range(count) {\n  const result = new Array(count);\n\n  for (let i = 0; i < count; i++) result[i] = i;\n\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb24vc3JjL3JhbmdlLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJhbmdlIiwiY291bnQiLCJyZXN1bHQiLCJBcnJheSIsImkiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2R1Zm91ci1wZXl0b24taW50ZXJzZWN0aW9uL3NyYy9yYW5nZS5qcz8yY2RhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcmFuZ2UoY291bnQpIHtcbiAgY29uc3QgcmVzdWx0ID0gbmV3IEFycmF5KGNvdW50KTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSByZXN1bHRbaV0gPSBpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxLQUFULENBQWVDLEtBQWYsRUFBc0I7RUFDckMsTUFBTUMsTUFBTSxHQUFHLElBQUlDLEtBQUosQ0FBVUYsS0FBVixDQUFmOztFQUNBLEtBQUssSUFBSUcsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0gsS0FBcEIsRUFBMkJHLENBQUMsRUFBNUIsRUFBZ0NGLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLEdBQVlBLENBQVo7O0VBQ2hDLE9BQU9GLE1BQVA7QUFDRCxDQUpEIn0=\n//# sourceURL=webpack-internal:///./node_modules/dufour-peyton-intersection/src/range.js\n");

/***/ }),

/***/ "./node_modules/geocanvas/src/core.js":
/*!********************************************!*\
  !*** ./node_modules/geocanvas/src/core.js ***!
  \********************************************/
/***/ ((module) => {

eval("// takes in image data array and sets alpha value to 0 for parts outside the mask geometry\nfunction maskImageData({\n  data,\n  data_bbox,\n  data_height,\n  data_width,\n  data_srs,\n  debug = false,\n  geomask,\n  mask,\n  mask_srs,\n  reproject,\n  strategy = \"outside\",\n  edition\n}) {\n  if (![\"inside\", \"outside\"].includes(strategy)) {\n    throw new Error(`[geocanvas] strategy can be either \"inside\" or \"outside\". you provided \"${strategy}\"`);\n  }\n\n  const {\n    rows\n  } = geomask[strategy]({\n    raster_bbox: data_bbox,\n    raster_height: data_height,\n    raster_width: data_width,\n    raster_srs: data_srs,\n    mask,\n    mask_srs,\n    reproject\n  });\n  rows.forEach((ranges, r) => {\n    if (ranges) {\n      const row_offset = r * 4 * data_width;\n      ranges.forEach(([start, end]) => {\n        for (let c = start; c <= end; c++) {\n          data[row_offset + c * 4 + 3] = 0; // set alpha to zero\n        }\n      });\n    }\n  });\n}\n\nfunction maskCanvas({\n  canvas,\n  canvas_bbox,\n  canvas_srs,\n  geomask,\n  mask,\n  mask_srs,\n  reproject,\n  strategy = \"outside\",\n  edition,\n  debug = false\n}) {\n  if (debug) console.log(\"[geocanvas] starting to mask canvas\");\n\n  if (![\"inside\", \"outside\"].includes(strategy)) {\n    throw new Error(`[geocanvas] strategy can be either \"inside\" or \"outside\". you provided \"${strategy}\"`);\n  }\n\n  const context = canvas.getContext(\"2d\");\n  const {\n    height,\n    width\n  } = canvas;\n  if (debug) console.log(`[geocanvas] canvas height is ${height} pixels`);\n  if (debug) console.log(`[geocanvas] canvas width is ${width} pixels`);\n  const imageData = context.getImageData(0, 0, width, height);\n  maskImageData({\n    data: imageData.data,\n    data_bbox: canvas_bbox,\n    data_height: height,\n    data_srs: canvas_srs,\n    data_width: width,\n    debug,\n    geomask,\n    mask,\n    mask_srs,\n    reproject,\n    strategy\n  });\n  if (debug) console.log(\"[geocanvas] image data after masking:\", imageData);\n  context.putImageData(imageData, 0, 0);\n  if (debug) console.log(\"[geocanvas] put image data back\");\n  return canvas;\n}\n\nmodule.exports = {\n  maskImageData,\n  maskCanvas\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VvY2FudmFzL3NyYy9jb3JlLmpzLmpzIiwibmFtZXMiOlsibWFza0ltYWdlRGF0YSIsImRhdGEiLCJkYXRhX2Jib3giLCJkYXRhX2hlaWdodCIsImRhdGFfd2lkdGgiLCJkYXRhX3NycyIsImRlYnVnIiwiZ2VvbWFzayIsIm1hc2siLCJtYXNrX3NycyIsInJlcHJvamVjdCIsInN0cmF0ZWd5IiwiZWRpdGlvbiIsImluY2x1ZGVzIiwiRXJyb3IiLCJyb3dzIiwicmFzdGVyX2Jib3giLCJyYXN0ZXJfaGVpZ2h0IiwicmFzdGVyX3dpZHRoIiwicmFzdGVyX3NycyIsImZvckVhY2giLCJyYW5nZXMiLCJyIiwicm93X29mZnNldCIsInN0YXJ0IiwiZW5kIiwiYyIsIm1hc2tDYW52YXMiLCJjYW52YXMiLCJjYW52YXNfYmJveCIsImNhbnZhc19zcnMiLCJjb25zb2xlIiwibG9nIiwiY29udGV4dCIsImdldENvbnRleHQiLCJoZWlnaHQiLCJ3aWR0aCIsImltYWdlRGF0YSIsImdldEltYWdlRGF0YSIsInB1dEltYWdlRGF0YSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2dlb2NhbnZhcy9zcmMvY29yZS5qcz8zMThlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHRha2VzIGluIGltYWdlIGRhdGEgYXJyYXkgYW5kIHNldHMgYWxwaGEgdmFsdWUgdG8gMCBmb3IgcGFydHMgb3V0c2lkZSB0aGUgbWFzayBnZW9tZXRyeVxuZnVuY3Rpb24gbWFza0ltYWdlRGF0YSh7XG4gIGRhdGEsXG4gIGRhdGFfYmJveCxcbiAgZGF0YV9oZWlnaHQsXG4gIGRhdGFfd2lkdGgsXG4gIGRhdGFfc3JzLFxuICBkZWJ1ZyA9IGZhbHNlLFxuICBnZW9tYXNrLFxuICBtYXNrLFxuICBtYXNrX3NycyxcbiAgcmVwcm9qZWN0LFxuICBzdHJhdGVneSA9IFwib3V0c2lkZVwiLFxuICBlZGl0aW9uXG59KSB7XG4gIGlmICghW1wiaW5zaWRlXCIsIFwib3V0c2lkZVwiXS5pbmNsdWRlcyhzdHJhdGVneSkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFtnZW9jYW52YXNdIHN0cmF0ZWd5IGNhbiBiZSBlaXRoZXIgXCJpbnNpZGVcIiBvciBcIm91dHNpZGVcIi4geW91IHByb3ZpZGVkIFwiJHtzdHJhdGVneX1cImApO1xuICB9XG4gIGNvbnN0IHsgcm93cyB9ID0gZ2VvbWFza1tzdHJhdGVneV0oe1xuICAgIHJhc3Rlcl9iYm94OiBkYXRhX2Jib3gsXG4gICAgcmFzdGVyX2hlaWdodDogZGF0YV9oZWlnaHQsXG4gICAgcmFzdGVyX3dpZHRoOiBkYXRhX3dpZHRoLFxuICAgIHJhc3Rlcl9zcnM6IGRhdGFfc3JzLFxuICAgIG1hc2ssXG4gICAgbWFza19zcnMsXG4gICAgcmVwcm9qZWN0XG4gIH0pO1xuXG4gIHJvd3MuZm9yRWFjaCgocmFuZ2VzLCByKSA9PiB7XG4gICAgaWYgKHJhbmdlcykge1xuICAgICAgY29uc3Qgcm93X29mZnNldCA9IHIgKiA0ICogZGF0YV93aWR0aDtcbiAgICAgIHJhbmdlcy5mb3JFYWNoKChbc3RhcnQsIGVuZF0pID0+IHtcbiAgICAgICAgZm9yIChsZXQgYyA9IHN0YXJ0OyBjIDw9IGVuZDsgYysrKSB7XG4gICAgICAgICAgZGF0YVtyb3dfb2Zmc2V0ICsgYyAqIDQgKyAzXSA9IDA7IC8vIHNldCBhbHBoYSB0byB6ZXJvXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59XG5cbmZ1bmN0aW9uIG1hc2tDYW52YXMoe1xuICBjYW52YXMsXG4gIGNhbnZhc19iYm94LFxuICBjYW52YXNfc3JzLFxuICBnZW9tYXNrLFxuICBtYXNrLFxuICBtYXNrX3NycyxcbiAgcmVwcm9qZWN0LFxuICBzdHJhdGVneSA9IFwib3V0c2lkZVwiLFxuICBlZGl0aW9uLFxuICBkZWJ1ZyA9IGZhbHNlXG59KSB7XG4gIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJbZ2VvY2FudmFzXSBzdGFydGluZyB0byBtYXNrIGNhbnZhc1wiKTtcbiAgaWYgKCFbXCJpbnNpZGVcIiwgXCJvdXRzaWRlXCJdLmluY2x1ZGVzKHN0cmF0ZWd5KSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgW2dlb2NhbnZhc10gc3RyYXRlZ3kgY2FuIGJlIGVpdGhlciBcImluc2lkZVwiIG9yIFwib3V0c2lkZVwiLiB5b3UgcHJvdmlkZWQgXCIke3N0cmF0ZWd5fVwiYCk7XG4gIH1cbiAgY29uc3QgY29udGV4dCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gIGNvbnN0IHsgaGVpZ2h0LCB3aWR0aCB9ID0gY2FudmFzO1xuICBpZiAoZGVidWcpIGNvbnNvbGUubG9nKGBbZ2VvY2FudmFzXSBjYW52YXMgaGVpZ2h0IGlzICR7aGVpZ2h0fSBwaXhlbHNgKTtcbiAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhgW2dlb2NhbnZhc10gY2FudmFzIHdpZHRoIGlzICR7d2lkdGh9IHBpeGVsc2ApO1xuICBjb25zdCBpbWFnZURhdGEgPSBjb250ZXh0LmdldEltYWdlRGF0YSgwLCAwLCB3aWR0aCwgaGVpZ2h0KTtcbiAgbWFza0ltYWdlRGF0YSh7XG4gICAgZGF0YTogaW1hZ2VEYXRhLmRhdGEsXG4gICAgZGF0YV9iYm94OiBjYW52YXNfYmJveCxcbiAgICBkYXRhX2hlaWdodDogaGVpZ2h0LFxuICAgIGRhdGFfc3JzOiBjYW52YXNfc3JzLFxuICAgIGRhdGFfd2lkdGg6IHdpZHRoLFxuICAgIGRlYnVnLFxuICAgIGdlb21hc2ssXG4gICAgbWFzayxcbiAgICBtYXNrX3NycyxcbiAgICByZXByb2plY3QsXG4gICAgc3RyYXRlZ3lcbiAgfSk7XG4gIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJbZ2VvY2FudmFzXSBpbWFnZSBkYXRhIGFmdGVyIG1hc2tpbmc6XCIsIGltYWdlRGF0YSk7XG4gIGNvbnRleHQucHV0SW1hZ2VEYXRhKGltYWdlRGF0YSwgMCwgMCk7XG4gIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJbZ2VvY2FudmFzXSBwdXQgaW1hZ2UgZGF0YSBiYWNrXCIpO1xuICByZXR1cm4gY2FudmFzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgbWFza0ltYWdlRGF0YSwgbWFza0NhbnZhcyB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLFNBQVNBLGFBQVQsQ0FBdUI7RUFDckJDLElBRHFCO0VBRXJCQyxTQUZxQjtFQUdyQkMsV0FIcUI7RUFJckJDLFVBSnFCO0VBS3JCQyxRQUxxQjtFQU1yQkMsS0FBSyxHQUFHLEtBTmE7RUFPckJDLE9BUHFCO0VBUXJCQyxJQVJxQjtFQVNyQkMsUUFUcUI7RUFVckJDLFNBVnFCO0VBV3JCQyxRQUFRLEdBQUcsU0FYVTtFQVlyQkM7QUFacUIsQ0FBdkIsRUFhRztFQUNELElBQUksQ0FBQyxDQUFDLFFBQUQsRUFBVyxTQUFYLEVBQXNCQyxRQUF0QixDQUErQkYsUUFBL0IsQ0FBTCxFQUErQztJQUM3QyxNQUFNLElBQUlHLEtBQUosQ0FBVywyRUFBMEVILFFBQVMsR0FBOUYsQ0FBTjtFQUNEOztFQUNELE1BQU07SUFBRUk7RUFBRixJQUFXUixPQUFPLENBQUNJLFFBQUQsQ0FBUCxDQUFrQjtJQUNqQ0ssV0FBVyxFQUFFZCxTQURvQjtJQUVqQ2UsYUFBYSxFQUFFZCxXQUZrQjtJQUdqQ2UsWUFBWSxFQUFFZCxVQUhtQjtJQUlqQ2UsVUFBVSxFQUFFZCxRQUpxQjtJQUtqQ0csSUFMaUM7SUFNakNDLFFBTmlDO0lBT2pDQztFQVBpQyxDQUFsQixDQUFqQjtFQVVBSyxJQUFJLENBQUNLLE9BQUwsQ0FBYSxDQUFDQyxNQUFELEVBQVNDLENBQVQsS0FBZTtJQUMxQixJQUFJRCxNQUFKLEVBQVk7TUFDVixNQUFNRSxVQUFVLEdBQUdELENBQUMsR0FBRyxDQUFKLEdBQVFsQixVQUEzQjtNQUNBaUIsTUFBTSxDQUFDRCxPQUFQLENBQWUsQ0FBQyxDQUFDSSxLQUFELEVBQVFDLEdBQVIsQ0FBRCxLQUFrQjtRQUMvQixLQUFLLElBQUlDLENBQUMsR0FBR0YsS0FBYixFQUFvQkUsQ0FBQyxJQUFJRCxHQUF6QixFQUE4QkMsQ0FBQyxFQUEvQixFQUFtQztVQUNqQ3pCLElBQUksQ0FBQ3NCLFVBQVUsR0FBR0csQ0FBQyxHQUFHLENBQWpCLEdBQXFCLENBQXRCLENBQUosR0FBK0IsQ0FBL0IsQ0FEaUMsQ0FDQztRQUNuQztNQUNGLENBSkQ7SUFLRDtFQUNGLENBVEQ7QUFVRDs7QUFFRCxTQUFTQyxVQUFULENBQW9CO0VBQ2xCQyxNQURrQjtFQUVsQkMsV0FGa0I7RUFHbEJDLFVBSGtCO0VBSWxCdkIsT0FKa0I7RUFLbEJDLElBTGtCO0VBTWxCQyxRQU5rQjtFQU9sQkMsU0FQa0I7RUFRbEJDLFFBQVEsR0FBRyxTQVJPO0VBU2xCQyxPQVRrQjtFQVVsQk4sS0FBSyxHQUFHO0FBVlUsQ0FBcEIsRUFXRztFQUNELElBQUlBLEtBQUosRUFBV3lCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFDQUFaOztFQUNYLElBQUksQ0FBQyxDQUFDLFFBQUQsRUFBVyxTQUFYLEVBQXNCbkIsUUFBdEIsQ0FBK0JGLFFBQS9CLENBQUwsRUFBK0M7SUFDN0MsTUFBTSxJQUFJRyxLQUFKLENBQVcsMkVBQTBFSCxRQUFTLEdBQTlGLENBQU47RUFDRDs7RUFDRCxNQUFNc0IsT0FBTyxHQUFHTCxNQUFNLENBQUNNLFVBQVAsQ0FBa0IsSUFBbEIsQ0FBaEI7RUFDQSxNQUFNO0lBQUVDLE1BQUY7SUFBVUM7RUFBVixJQUFvQlIsTUFBMUI7RUFDQSxJQUFJdEIsS0FBSixFQUFXeUIsT0FBTyxDQUFDQyxHQUFSLENBQWEsZ0NBQStCRyxNQUFPLFNBQW5EO0VBQ1gsSUFBSTdCLEtBQUosRUFBV3lCLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLCtCQUE4QkksS0FBTSxTQUFqRDtFQUNYLE1BQU1DLFNBQVMsR0FBR0osT0FBTyxDQUFDSyxZQUFSLENBQXFCLENBQXJCLEVBQXdCLENBQXhCLEVBQTJCRixLQUEzQixFQUFrQ0QsTUFBbEMsQ0FBbEI7RUFDQW5DLGFBQWEsQ0FBQztJQUNaQyxJQUFJLEVBQUVvQyxTQUFTLENBQUNwQyxJQURKO0lBRVpDLFNBQVMsRUFBRTJCLFdBRkM7SUFHWjFCLFdBQVcsRUFBRWdDLE1BSEQ7SUFJWjlCLFFBQVEsRUFBRXlCLFVBSkU7SUFLWjFCLFVBQVUsRUFBRWdDLEtBTEE7SUFNWjlCLEtBTlk7SUFPWkMsT0FQWTtJQVFaQyxJQVJZO0lBU1pDLFFBVFk7SUFVWkMsU0FWWTtJQVdaQztFQVhZLENBQUQsQ0FBYjtFQWFBLElBQUlMLEtBQUosRUFBV3lCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVDQUFaLEVBQXFESyxTQUFyRDtFQUNYSixPQUFPLENBQUNNLFlBQVIsQ0FBcUJGLFNBQXJCLEVBQWdDLENBQWhDLEVBQW1DLENBQW5DO0VBQ0EsSUFBSS9CLEtBQUosRUFBV3lCLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGlDQUFaO0VBQ1gsT0FBT0osTUFBUDtBQUNEOztBQUVEWSxNQUFNLENBQUNDLE9BQVAsR0FBaUI7RUFBRXpDLGFBQUY7RUFBaUIyQjtBQUFqQixDQUFqQiJ9\n//# sourceURL=webpack-internal:///./node_modules/geocanvas/src/core.js\n");

/***/ }),

/***/ "./node_modules/geocanvas/src/full.js":
/*!********************************************!*\
  !*** ./node_modules/geocanvas/src/full.js ***!
  \********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;const geomask = __webpack_require__(/*! geomask */ \"./node_modules/geomask/geomask.js\");\n\nconst core = __webpack_require__(/*! ./core.js */ \"./node_modules/geocanvas/src/core.js\");\n\nfunction maskImageData(options) {\n  return core.maskImageData({ ...options,\n    edition: \"full\",\n    geomask\n  });\n}\n\nfunction maskCanvas(options) {\n  return core.maskCanvas({ ...options,\n    edition: \"full\",\n    geomask\n  });\n}\n\nconst geocanvas = {\n  maskImageData,\n  maskCanvas\n};\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return geocanvas;\n}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\nif (true) module.exports = geocanvas;\nif (typeof self === \"object\") self.geocanvas = geocanvas;\nif (typeof window === \"object\") window.geocanvas = geocanvas;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VvY2FudmFzL3NyYy9mdWxsLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2dlb2NhbnZhcy9zcmMvZnVsbC5qcz8zYzQxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdlb21hc2sgPSByZXF1aXJlKFwiZ2VvbWFza1wiKTtcbmNvbnN0IGNvcmUgPSByZXF1aXJlKFwiLi9jb3JlLmpzXCIpO1xuXG5mdW5jdGlvbiBtYXNrSW1hZ2VEYXRhKG9wdGlvbnMpIHtcbiAgcmV0dXJuIGNvcmUubWFza0ltYWdlRGF0YSh7IC4uLm9wdGlvbnMsIGVkaXRpb246IFwiZnVsbFwiLCBnZW9tYXNrIH0pO1xufVxuXG5mdW5jdGlvbiBtYXNrQ2FudmFzKG9wdGlvbnMpIHtcbiAgcmV0dXJuIGNvcmUubWFza0NhbnZhcyh7IC4uLm9wdGlvbnMsIGVkaXRpb246IFwiZnVsbFwiLCBnZW9tYXNrIH0pO1xufVxuXG5jb25zdCBnZW9jYW52YXMgPSB7IG1hc2tJbWFnZURhdGEsIG1hc2tDYW52YXMgfTtcblxuaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKVxuICBkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBnZW9jYW52YXM7XG4gIH0pO1xuaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIpIG1vZHVsZS5leHBvcnRzID0gZ2VvY2FudmFzO1xuaWYgKHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiKSBzZWxmLmdlb2NhbnZhcyA9IGdlb2NhbnZhcztcbmlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSB3aW5kb3cuZ2VvY2FudmFzID0gZ2VvY2FudmFzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/geocanvas/src/full.js\n");

/***/ }),

/***/ "./node_modules/geomask/geomask.js":
/*!*****************************************!*\
  !*** ./node_modules/geomask/geomask.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const lite = __webpack_require__(/*! ./lite.js */ \"./node_modules/geomask/lite.js\");\n\nconst reprojectGeoJSON = __webpack_require__(/*! reproject-geojson */ \"./node_modules/reproject-geojson/reproject-geojson.js\");\n\nfunction calcMask({\n  debug = false,\n  fname,\n  raster_bbox,\n  raster_srs,\n  raster_height,\n  raster_width,\n  pixel_height,\n  pixel_width,\n  mask,\n  mask_srs\n}) {\n  if (raster_srs !== mask_srs) {\n    mask = reprojectGeoJSON(mask, {\n      from: mask_srs,\n      to: raster_srs\n    });\n  }\n\n  return lite[fname]({\n    debug,\n    raster_bbox,\n    raster_height,\n    raster_width,\n    pixel_height,\n    pixel_width,\n    mask\n  });\n}\n\nfunction inside(options) {\n  return calcMask({ ...options,\n    fname: \"inside\"\n  });\n}\n\nfunction outside(options) {\n  return calcMask({ ...options,\n    fname: \"outside\"\n  });\n}\n\nconst geomask = {\n  inside,\n  outside\n};\nif (true) module.exports = geomask;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VvbWFzay9nZW9tYXNrLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFWQTtBQVlBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFTQTs7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL2dlb21hc2svZ2VvbWFzay5qcz9lMTNiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGxpdGUgPSByZXF1aXJlKFwiLi9saXRlLmpzXCIpO1xuY29uc3QgcmVwcm9qZWN0R2VvSlNPTiA9IHJlcXVpcmUoXCJyZXByb2plY3QtZ2VvanNvblwiKTtcblxuZnVuY3Rpb24gY2FsY01hc2soe1xuICBkZWJ1ZyA9IGZhbHNlLFxuICBmbmFtZSxcbiAgcmFzdGVyX2Jib3gsXG4gIHJhc3Rlcl9zcnMsXG4gIHJhc3Rlcl9oZWlnaHQsXG4gIHJhc3Rlcl93aWR0aCxcbiAgcGl4ZWxfaGVpZ2h0LFxuICBwaXhlbF93aWR0aCxcbiAgbWFzayxcbiAgbWFza19zcnNcbn0pIHtcbiAgaWYgKHJhc3Rlcl9zcnMgIT09IG1hc2tfc3JzKSB7XG4gICAgbWFzayA9IHJlcHJvamVjdEdlb0pTT04obWFzaywgeyBmcm9tOiBtYXNrX3NycywgdG86IHJhc3Rlcl9zcnMgfSk7XG4gIH1cblxuICByZXR1cm4gbGl0ZVtmbmFtZV0oe1xuICAgIGRlYnVnLFxuICAgIHJhc3Rlcl9iYm94LFxuICAgIHJhc3Rlcl9oZWlnaHQsXG4gICAgcmFzdGVyX3dpZHRoLFxuICAgIHBpeGVsX2hlaWdodCxcbiAgICBwaXhlbF93aWR0aCxcbiAgICBtYXNrXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbnNpZGUob3B0aW9ucykge1xuICByZXR1cm4gY2FsY01hc2soeyAuLi5vcHRpb25zLCBmbmFtZTogXCJpbnNpZGVcIiB9KTtcbn1cblxuZnVuY3Rpb24gb3V0c2lkZShvcHRpb25zKSB7XG4gIHJldHVybiBjYWxjTWFzayh7IC4uLm9wdGlvbnMsIGZuYW1lOiBcIm91dHNpZGVcIiB9KTtcbn1cblxuY29uc3QgZ2VvbWFzayA9IHsgaW5zaWRlLCBvdXRzaWRlIH07XG5cbmlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiKSBtb2R1bGUuZXhwb3J0cyA9IGdlb21hc2s7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/geomask/geomask.js\n");

/***/ }),

/***/ "./node_modules/geomask/lite.js":
/*!**************************************!*\
  !*** ./node_modules/geomask/lite.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const dufour_peyton_intersection = __webpack_require__(/*! dufour-peyton-intersection */ \"./node_modules/dufour-peyton-intersection/src/index.js\");\n\nconst subtract = __webpack_require__(/*! preciso/subtract.js */ \"./node_modules/preciso/subtract.js\");\n\nconst divide = __webpack_require__(/*! preciso/divide.js */ \"./node_modules/preciso/divide.js\");\n\nconst reprojectGeoJSON = __webpack_require__(/*! reproject-geojson/pluggable.js */ \"./node_modules/reproject-geojson/pluggable.js\");\n\nconst segflip = __webpack_require__(/*! segflip */ \"./node_modules/segflip/segflip.js\");\n\nfunction checkRows({\n  rows\n}) {\n  rows.forEach((segs, irow) => {\n    if (segs) {\n      segs.forEach(([start, end], iseg) => {\n        if (start > end) {\n          throw Error(`uh oh: invalid segment at row ${irow}, segment ${iseg}`);\n        }\n      });\n    }\n  });\n}\n\nfunction inside({\n  debug = false,\n  raster_bbox,\n  raster_height,\n  raster_width,\n  pixel_height,\n  pixel_width,\n  mask,\n  reproject\n}) {\n  if (typeof reproject === \"function\") {\n    // reproject geometry to the srs of the raster\n    mask = reprojectGeoJSON(mask, {\n      in_place: false,\n      reproject\n    });\n  }\n\n  if (pixel_height === undefined) pixel_height = Number(divide(subtract(raster_bbox[3].toString(), raster_bbox[1].toString()), raster_height.toString()));\n  if (pixel_width === undefined) pixel_width = Number(divide(subtract(raster_bbox[2].toString(), raster_bbox[0].toString()), raster_width.toString()));\n  const {\n    rows\n  } = dufour_peyton_intersection.calculate({\n    raster_bbox,\n    raster_height,\n    raster_width,\n    pixel_height,\n    pixel_width,\n    geometry: mask\n  });\n  if (debug) checkRows({\n    rows\n  });\n  return {\n    rows\n  };\n}\n\nfunction outside({\n  debug = false,\n  raster_bbox,\n  raster_height,\n  raster_width,\n  pixel_height,\n  pixel_width,\n  mask,\n  reproject\n}) {\n  if (typeof reproject === \"function\") {\n    // reproject geometry to the srs of the raster\n    mask = reprojectGeoJSON(mask, {\n      in_place: false,\n      reproject\n    });\n  }\n\n  if (pixel_height === undefined) pixel_height = Number(divide(subtract(raster_bbox[3].toString(), raster_bbox[1].toString()), raster_height.toString()));\n  if (pixel_width === undefined) pixel_width = Number(divide(subtract(raster_bbox[2].toString(), raster_bbox[0].toString()), raster_width.toString())); // calculate inside segments\n\n  const {\n    rows: insides\n  } = inside({\n    debug,\n    raster_bbox,\n    raster_height,\n    raster_width,\n    pixel_height,\n    pixel_width,\n    mask\n  });\n  if (debug) checkRows({\n    rows: insides\n  });\n  const last_column_index = raster_width - 1; // consider optimizing memory and speed\n  // by just returning a reference to a whole row\n  // instead of generating a new array every time\n  // const whole_row = [0, last_column_index];\n\n  const outsides = []; // using for loop instead of map because\n  // map skips empty insides/rows\n\n  for (let i = 0; i < insides.length; i++) {\n    const segs = insides[i];\n\n    if (!Array.isArray(segs) || segs.length === 0) {\n      outsides.push([[0, last_column_index]]);\n    } else {\n      outsides.push(segflip({\n        segments: segs,\n        min: 0,\n        max: last_column_index,\n        debug: false\n      }));\n    }\n  }\n\n  if (debug) checkRows({\n    rows: outsides\n  });\n  return {\n    rows: outsides\n  };\n}\n\nconst geomask = {\n  inside,\n  outside\n};\nif (true) module.exports = geomask;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VvbWFzay9saXRlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVJBO0FBVUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFJQTtBQUtBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBU0E7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUkE7QUFVQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUlBOztBQU1BO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFVQTtBQUFBO0FBQUE7QUFFQTtBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBT0E7QUFDQTs7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvZ2VvbWFzay9saXRlLmpzPzljZDgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZHVmb3VyX3BleXRvbl9pbnRlcnNlY3Rpb24gPSByZXF1aXJlKFwiZHVmb3VyLXBleXRvbi1pbnRlcnNlY3Rpb25cIik7XG5jb25zdCBzdWJ0cmFjdCA9IHJlcXVpcmUoXCJwcmVjaXNvL3N1YnRyYWN0LmpzXCIpO1xuY29uc3QgZGl2aWRlID0gcmVxdWlyZShcInByZWNpc28vZGl2aWRlLmpzXCIpO1xuY29uc3QgcmVwcm9qZWN0R2VvSlNPTiA9IHJlcXVpcmUoXCJyZXByb2plY3QtZ2VvanNvbi9wbHVnZ2FibGUuanNcIik7XG5jb25zdCBzZWdmbGlwID0gcmVxdWlyZShcInNlZ2ZsaXBcIik7XG5cbmZ1bmN0aW9uIGNoZWNrUm93cyh7IHJvd3MgfSkge1xuICByb3dzLmZvckVhY2goKHNlZ3MsIGlyb3cpID0+IHtcbiAgICBpZiAoc2Vncykge1xuICAgICAgc2Vncy5mb3JFYWNoKChbc3RhcnQsIGVuZF0sIGlzZWcpID0+IHtcbiAgICAgICAgaWYgKHN0YXJ0ID4gZW5kKSB7XG4gICAgICAgICAgdGhyb3cgRXJyb3IoYHVoIG9oOiBpbnZhbGlkIHNlZ21lbnQgYXQgcm93ICR7aXJvd30sIHNlZ21lbnQgJHtpc2VnfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBpbnNpZGUoe1xuICBkZWJ1ZyA9IGZhbHNlLFxuICByYXN0ZXJfYmJveCxcbiAgcmFzdGVyX2hlaWdodCxcbiAgcmFzdGVyX3dpZHRoLFxuICBwaXhlbF9oZWlnaHQsXG4gIHBpeGVsX3dpZHRoLFxuICBtYXNrLFxuICByZXByb2plY3Rcbn0pIHtcbiAgaWYgKHR5cGVvZiByZXByb2plY3QgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIC8vIHJlcHJvamVjdCBnZW9tZXRyeSB0byB0aGUgc3JzIG9mIHRoZSByYXN0ZXJcbiAgICBtYXNrID0gcmVwcm9qZWN0R2VvSlNPTihtYXNrLCB7IGluX3BsYWNlOiBmYWxzZSwgcmVwcm9qZWN0IH0pO1xuICB9XG5cbiAgaWYgKHBpeGVsX2hlaWdodCA9PT0gdW5kZWZpbmVkKVxuICAgIHBpeGVsX2hlaWdodCA9IE51bWJlcihcbiAgICAgIGRpdmlkZShzdWJ0cmFjdChyYXN0ZXJfYmJveFszXS50b1N0cmluZygpLCByYXN0ZXJfYmJveFsxXS50b1N0cmluZygpKSwgcmFzdGVyX2hlaWdodC50b1N0cmluZygpKVxuICAgICk7XG4gIGlmIChwaXhlbF93aWR0aCA9PT0gdW5kZWZpbmVkKVxuICAgIHBpeGVsX3dpZHRoID0gTnVtYmVyKFxuICAgICAgZGl2aWRlKHN1YnRyYWN0KHJhc3Rlcl9iYm94WzJdLnRvU3RyaW5nKCksIHJhc3Rlcl9iYm94WzBdLnRvU3RyaW5nKCkpLCByYXN0ZXJfd2lkdGgudG9TdHJpbmcoKSlcbiAgICApO1xuXG4gIGNvbnN0IHsgcm93cyB9ID0gZHVmb3VyX3BleXRvbl9pbnRlcnNlY3Rpb24uY2FsY3VsYXRlKHtcbiAgICByYXN0ZXJfYmJveCxcbiAgICByYXN0ZXJfaGVpZ2h0LFxuICAgIHJhc3Rlcl93aWR0aCxcbiAgICBwaXhlbF9oZWlnaHQsXG4gICAgcGl4ZWxfd2lkdGgsXG4gICAgZ2VvbWV0cnk6IG1hc2tcbiAgfSk7XG5cbiAgaWYgKGRlYnVnKSBjaGVja1Jvd3MoeyByb3dzIH0pO1xuXG4gIHJldHVybiB7IHJvd3MgfTtcbn1cblxuZnVuY3Rpb24gb3V0c2lkZSh7XG4gIGRlYnVnID0gZmFsc2UsXG4gIHJhc3Rlcl9iYm94LFxuICByYXN0ZXJfaGVpZ2h0LFxuICByYXN0ZXJfd2lkdGgsXG4gIHBpeGVsX2hlaWdodCxcbiAgcGl4ZWxfd2lkdGgsXG4gIG1hc2ssXG4gIHJlcHJvamVjdFxufSkge1xuICBpZiAodHlwZW9mIHJlcHJvamVjdCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgLy8gcmVwcm9qZWN0IGdlb21ldHJ5IHRvIHRoZSBzcnMgb2YgdGhlIHJhc3RlclxuICAgIG1hc2sgPSByZXByb2plY3RHZW9KU09OKG1hc2ssIHsgaW5fcGxhY2U6IGZhbHNlLCByZXByb2plY3QgfSk7XG4gIH1cblxuICBpZiAocGl4ZWxfaGVpZ2h0ID09PSB1bmRlZmluZWQpXG4gICAgcGl4ZWxfaGVpZ2h0ID0gTnVtYmVyKFxuICAgICAgZGl2aWRlKHN1YnRyYWN0KHJhc3Rlcl9iYm94WzNdLnRvU3RyaW5nKCksIHJhc3Rlcl9iYm94WzFdLnRvU3RyaW5nKCkpLCByYXN0ZXJfaGVpZ2h0LnRvU3RyaW5nKCkpXG4gICAgKTtcbiAgaWYgKHBpeGVsX3dpZHRoID09PSB1bmRlZmluZWQpXG4gICAgcGl4ZWxfd2lkdGggPSBOdW1iZXIoXG4gICAgICBkaXZpZGUoc3VidHJhY3QocmFzdGVyX2Jib3hbMl0udG9TdHJpbmcoKSwgcmFzdGVyX2Jib3hbMF0udG9TdHJpbmcoKSksIHJhc3Rlcl93aWR0aC50b1N0cmluZygpKVxuICAgICk7XG5cbiAgLy8gY2FsY3VsYXRlIGluc2lkZSBzZWdtZW50c1xuICBjb25zdCB7IHJvd3M6IGluc2lkZXMgfSA9IGluc2lkZSh7XG4gICAgZGVidWcsXG4gICAgcmFzdGVyX2Jib3gsXG4gICAgcmFzdGVyX2hlaWdodCxcbiAgICByYXN0ZXJfd2lkdGgsXG4gICAgcGl4ZWxfaGVpZ2h0LFxuICAgIHBpeGVsX3dpZHRoLFxuICAgIG1hc2tcbiAgfSk7XG5cbiAgaWYgKGRlYnVnKSBjaGVja1Jvd3MoeyByb3dzOiBpbnNpZGVzIH0pO1xuXG4gIGNvbnN0IGxhc3RfY29sdW1uX2luZGV4ID0gcmFzdGVyX3dpZHRoIC0gMTtcblxuICAvLyBjb25zaWRlciBvcHRpbWl6aW5nIG1lbW9yeSBhbmQgc3BlZWRcbiAgLy8gYnkganVzdCByZXR1cm5pbmcgYSByZWZlcmVuY2UgdG8gYSB3aG9sZSByb3dcbiAgLy8gaW5zdGVhZCBvZiBnZW5lcmF0aW5nIGEgbmV3IGFycmF5IGV2ZXJ5IHRpbWVcbiAgLy8gY29uc3Qgd2hvbGVfcm93ID0gWzAsIGxhc3RfY29sdW1uX2luZGV4XTtcblxuICBjb25zdCBvdXRzaWRlcyA9IFtdO1xuICAvLyB1c2luZyBmb3IgbG9vcCBpbnN0ZWFkIG9mIG1hcCBiZWNhdXNlXG4gIC8vIG1hcCBza2lwcyBlbXB0eSBpbnNpZGVzL3Jvd3NcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnNpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgc2VncyA9IGluc2lkZXNbaV07XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHNlZ3MpIHx8IHNlZ3MubGVuZ3RoID09PSAwKSB7XG4gICAgICBvdXRzaWRlcy5wdXNoKFtbMCwgbGFzdF9jb2x1bW5faW5kZXhdXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dHNpZGVzLnB1c2goXG4gICAgICAgIHNlZ2ZsaXAoe1xuICAgICAgICAgIHNlZ21lbnRzOiBzZWdzLFxuICAgICAgICAgIG1pbjogMCxcbiAgICAgICAgICBtYXg6IGxhc3RfY29sdW1uX2luZGV4LFxuICAgICAgICAgIGRlYnVnOiBmYWxzZVxuICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICBpZiAoZGVidWcpIGNoZWNrUm93cyh7IHJvd3M6IG91dHNpZGVzIH0pO1xuXG4gIHJldHVybiB7IHJvd3M6IG91dHNpZGVzIH07XG59XG5cbmNvbnN0IGdlb21hc2sgPSB7IGluc2lkZSwgb3V0c2lkZSB9O1xuXG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIikgbW9kdWxlLmV4cG9ydHMgPSBnZW9tYXNrO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/geomask/lite.js\n");

/***/ }),

/***/ "./node_modules/get-depth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/get-depth/index.js ***!
  \*****************************************/
/***/ ((module) => {

eval("module.exports = function getDepth(arr) {\n  const isArray = arr => Array.isArray(arr) || arr instanceof Int8Array || arr instanceof Uint8Array || arr instanceof Uint8ClampedArray || arr instanceof Int16Array || arr instanceof Uint16Array || arr instanceof Int32Array || arr instanceof Uint32Array || arr instanceof Float32Array || arr instanceof Float64Array || arr instanceof BigInt64Array || arr instanceof BigUint64Array;\n\n  let depth = 0;\n  let part = arr;\n\n  while (isArray(part)) {\n    depth++;\n    part = part[0];\n  }\n\n  return depth;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2V0LWRlcHRoL2luZGV4LmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldERlcHRoIiwiYXJyIiwiaXNBcnJheSIsIkFycmF5IiwiSW50OEFycmF5IiwiVWludDhBcnJheSIsIlVpbnQ4Q2xhbXBlZEFycmF5IiwiSW50MTZBcnJheSIsIlVpbnQxNkFycmF5IiwiSW50MzJBcnJheSIsIlVpbnQzMkFycmF5IiwiRmxvYXQzMkFycmF5IiwiRmxvYXQ2NEFycmF5IiwiQmlnSW50NjRBcnJheSIsIkJpZ1VpbnQ2NEFycmF5IiwiZGVwdGgiLCJwYXJ0Il0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9nZXQtZGVwdGgvaW5kZXguanM/MjhkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldERlcHRoKGFycikge1xuICBjb25zdCBpc0FycmF5ID0gKGFycikgPT5cbiAgICBBcnJheS5pc0FycmF5KGFycikgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBJbnQ4QXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8XG4gICAgYXJyIGluc3RhbmNlb2YgVWludDhDbGFtcGVkQXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBJbnQxNkFycmF5IHx8XG4gICAgYXJyIGluc3RhbmNlb2YgVWludDE2QXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBJbnQzMkFycmF5IHx8XG4gICAgYXJyIGluc3RhbmNlb2YgVWludDMyQXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBGbG9hdDY0QXJyYXkgfHxcbiAgICBhcnIgaW5zdGFuY2VvZiBCaWdJbnQ2NEFycmF5IHx8XG4gICAgYXJyIGluc3RhbmNlb2YgQmlnVWludDY0QXJyYXk7XG5cbiAgbGV0IGRlcHRoID0gMDtcbiAgbGV0IHBhcnQgPSBhcnI7XG4gIHdoaWxlIChpc0FycmF5KHBhcnQpKSB7XG4gICAgZGVwdGgrKztcbiAgICBwYXJ0ID0gcGFydFswXTtcbiAgfVxuICByZXR1cm4gZGVwdGg7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCO0VBQ3RDLE1BQU1DLE9BQU8sR0FBSUQsR0FBRCxJQUNkRSxLQUFLLENBQUNELE9BQU4sQ0FBY0QsR0FBZCxLQUNBQSxHQUFHLFlBQVlHLFNBRGYsSUFFQUgsR0FBRyxZQUFZSSxVQUZmLElBR0FKLEdBQUcsWUFBWUssaUJBSGYsSUFJQUwsR0FBRyxZQUFZTSxVQUpmLElBS0FOLEdBQUcsWUFBWU8sV0FMZixJQU1BUCxHQUFHLFlBQVlRLFVBTmYsSUFPQVIsR0FBRyxZQUFZUyxXQVBmLElBUUFULEdBQUcsWUFBWVUsWUFSZixJQVNBVixHQUFHLFlBQVlXLFlBVGYsSUFVQVgsR0FBRyxZQUFZWSxhQVZmLElBV0FaLEdBQUcsWUFBWWEsY0FaakI7O0VBY0EsSUFBSUMsS0FBSyxHQUFHLENBQVo7RUFDQSxJQUFJQyxJQUFJLEdBQUdmLEdBQVg7O0VBQ0EsT0FBT0MsT0FBTyxDQUFDYyxJQUFELENBQWQsRUFBc0I7SUFDcEJELEtBQUs7SUFDTEMsSUFBSSxHQUFHQSxJQUFJLENBQUMsQ0FBRCxDQUFYO0VBQ0Q7O0VBQ0QsT0FBT0QsS0FBUDtBQUNELENBdEJEIn0=\n//# sourceURL=webpack-internal:///./node_modules/get-depth/index.js\n");

/***/ }),

/***/ "./node_modules/get-epsg-code/dist/get-epsg-code-all.node.min.js":
/*!***********************************************************************!*\
  !*** ./node_modules/get-epsg-code/dist/get-epsg-code-all.node.min.js ***!
  \***********************************************************************/
/***/ (function(module) {

eval("!function (t, e) {\n   true ? module.exports = e() : 0;\n}(\"undefined\" != typeof self ? self : this, function () {\n  return function (t) {\n    var e = {};\n\n    function o(r) {\n      if (e[r]) return e[r].exports;\n      var n = e[r] = {\n        i: r,\n        l: !1,\n        exports: {}\n      };\n      return t[r].call(n.exports, n, n.exports, o), n.l = !0, n.exports;\n    }\n\n    return o.m = t, o.c = e, o.d = function (t, e, r) {\n      o.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: r\n      });\n    }, o.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, o.t = function (t, e) {\n      if (1 & e && (t = o(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var r = Object.create(null);\n      if (o.r(r), Object.defineProperty(r, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var n in t) o.d(r, n, function (e) {\n        return t[e];\n      }.bind(null, n));\n      return r;\n    }, o.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return o.d(e, \"a\", e), e;\n    }, o.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, o.p = \"\", o(o.s = 1);\n  }([function (t, e, o) {\n    const r = o(5);\n\n    t.exports = function (t, e, o) {\n      const n = o && o.debug || !1,\n            a = o && o.startIndex || 0;\n      n && console.log(\"starting findTag with\", e, \" and \", o);\n      const i = r(t, `<${e}[ >]`, a);\n      if (n && console.log(\"start:\", i), -1 === i) return;\n      const s = i + e.length + r(t.slice(i + e.length), \"[ /]\" + e + \">\", 0) + 1 + e.length + 1;\n      if (n && console.log(\"end:\", s), -1 === s) return;\n      const C = t.slice(i, s);\n      return {\n        inner: C.slice(C.indexOf(\">\") + 1, C.lastIndexOf(\"<\")),\n        outer: C,\n        start: i,\n        end: s\n      };\n    };\n  }, function (t, e, o) {\n    var r = o(2),\n        n = o(0),\n        a = o(6),\n        i = o(12).default,\n        s = o(7),\n        C = o(8),\n        E = (C.ARRAY_TYPE, C.EXCLUDED_FORMATS),\n        d = C.BYTES_PER_VALUE,\n        f = C.DATA_VIEW_READER_NAME,\n        D = C.FORMATS,\n        c = C.HASHED_FIELDS,\n        g = C.NUM_FIELDS,\n        l = (C.NUM_HASHED_FIELDS, C.UNSUPPORTED_MSG),\n        p = D.ESRI_WKT,\n        A = D.GEOSERVER,\n        u = D.MAPFILE,\n        Q = D.MAPNIK,\n        h = D.OGC_GML,\n        R = D.OGC_XML,\n        G = D.OGC_WKT,\n        I = D.POSTGIS,\n        x = D.PROJ_4,\n        w = D.PROJ_4_JS,\n        M = o(9),\n        m = new DataView(M),\n        B = o(11).hash,\n        F = [\"PROJECTEDCRS\", \"PROJCRS\", \"GEOGCS\", \"GEOCCS\", \"PROJCS\", \"LOCAL_CS\", \"GEODCRS\", \"GEODETICCRS\", \"GEODETICDATUM\", \"ENGCRS\", \"ENGINEERINGCRS\"];\n\n    function O(t) {\n      return function (t) {\n        return !(!(t = t.trim()).startsWith(\"PROJCS[\") && !t.startsWith(\"GEOGCS[\")) && F.some(function (e) {\n          return t.includes(e);\n        });\n      }(t) ? t.includes(\"AUTHORITY\") ? G : p : t.includes(\"gml:ProjectedCRS\") || t.includes(\"gml:GeodeticCRS\") || t.includes(\"gml:GeographicCRS\") ? t.includes(\"gml:srsID\") ? R : h : t.startsWith(\"+proj=\") ? x : t.startsWith('proj4.defs(\"EPSG:') ? w : /^\\d{1,6}\\=(PROJCS|GEOGCS)/.test(t) ? A : t.startsWith(\"PROJECTION\") && t.endsWith(\"END\") ? u : t.endsWith(\"</Map>\") ? Q : t.startsWith(\"INSERT\") ? I : \"SOMETHING ELSE\";\n    }\n\n    function k(t, e, o) {\n      o && console.log(\"looking up \" + e);\n      var r = B(t);\n      o && console.log(\"hashed:\", r);\n      var n = c.indexOf(e) + 1;\n      o && console.log(\"offset:\", n);\n\n      for (var a = n * d; a < M.byteLength; a += g * d) {\n        if (r === m[f](a, !0)) return m[f](a - n * d, !0);\n      }\n    }\n\n    function T(t, e) {\n      var o = !(!e || !e.debug) && e.debug,\n          C = O(t);\n      if (o && console.log(\"dataType:\", C), o && console.log(\"EXCLUDED_FORMATS:\", E), E.includes(C.toLowerCase())) throw new Error(l.replace(\"{}\", C));\n\n      if (C === G) {\n        var d = i(t);\n\n        if (o && console.log(\"parsed:\", d), d.AUTHORITY) {\n          var f = d.AUTHORITY;\n          return Number(f.epsg || f.EPSG);\n        }\n      } else {\n        if (C == p) {\n          var D = i(t);\n\n          if (o && console.log(\"parsed:\", D), D.name.match(/^WGS_1984_UTM_Zone_\\d{1,2}(N|S)$/)) {\n            var c = D.name.split(\"_\").pop(),\n                g = c.substring(0, c.length - 1),\n                M = \"N\" == c.substr(-1) ? 6 : 7;\n            return Number.parseInt(\"32\" + M + g);\n          }\n\n          return k(t = s(t), p, !1);\n        }\n\n        if (C === h) {\n          var m = n(t, \"gml:identifier\", {\n            debug: o\n          }).inner;\n          return Number(m.replace(\"urn:ogc:def:crs:EPSG::\", \"\"));\n        }\n\n        if (C === R) return Number(r(t, [\"gml:srsID\", \"gml:name\"], {\n          debug: o\n        }).inner);\n\n        if (C === x) {\n          if (t.startsWith(\"+proj=utm\")) {\n            var B = t.split(\" \").find(function (t) {\n              return t.startsWith(\"+zone=\");\n            }).split(\"=\")[1],\n                F = t.includes(\"+south\") ? \"7\" : \"6\";\n            return Number.parseInt(\"32\" + F + B);\n          }\n\n          return k(t, x);\n        }\n\n        if (C === w) return Number(t.substring(17, t.indexOf('\"', 17)));\n        if (C === A) return Number(t.match(/^\\d{1,6}/)[0]);\n\n        if (C === u) {\n          if (t.includes(\"init=epsg:\")) return Number.parseInt(/(\"init\\=epsg:)(\\d{1,10})(\")/.exec(t)[2]);\n\n          if (t.includes('\"proj=utm\"')) {\n            var Z = /(\"zone\\=)(\\d{1,2})(\")/.exec(t)[2],\n                H = t.includes('\"south\"') ? \"7\" : \"6\";\n            return Number.parseInt(\"32\" + H + Z);\n          }\n\n          return k(t, u);\n        }\n\n        if (C === Q) {\n          var U = n(t, \"Map\");\n          return T(a(U.outer, \"srs\"));\n        }\n\n        if (C === I) return Number(t.substring(t.indexOf(\"values (\") + 8, t.indexOf(\"EPSG\") - 3).trim());\n      }\n    }\n\n    void 0 !== t.exports && (t.exports = T), \"undefined\" != typeof window ? window.getEPSGCode = T : \"undefined\" != typeof self && (self.getEPSGCode = T);\n  }, function (t, e, o) {\n    const r = o(3);\n\n    t.exports = function (t, e, o) {\n      const n = o && o.debug || !1,\n            a = r(t, e, {\n        debug: n,\n        returnOnFirst: !0\n      });\n      return Array.isArray(a) && 1 === a.length ? a[0] : void 0;\n    };\n  }, function (t, e, o) {\n    const r = o(4);\n\n    t.exports = function (t, e, o) {\n      const n = o && o.debug || !1,\n            a = o && o.returnOnFirst || !1;\n      let i = r(t, e.shift(), {\n        debug: n\n      });\n      n && console.log(\"first tags are:\", i);\n\n      for (let t = 0; t < e.length; t++) {\n        const o = e[t];\n        let s = [];\n\n        for (let C = 0; C < i.length; C++) {\n          const E = i[C],\n                d = r(E.outer, o, {\n            debug: n,\n            startIndex: 1\n          });\n\n          if (d.length > 0) {\n            if (d.forEach(t => {\n              t.start += E.start, t.end += E.start;\n            }), a && t === e.length - 1) return [d[0]];\n            s = s.concat(d);\n          }\n        }\n\n        i = s;\n      }\n\n      return i;\n    };\n  }, function (t, e, o) {\n    const r = o(0);\n\n    t.exports = function (t, e, o) {\n      const n = [],\n            a = o && o.debug || !1;\n      let i,\n          s = o && o.startIndex || 0;\n\n      for (; i = r(t, e, {\n        debug: a,\n        startIndex: s\n      });) s = i.end, n.push(i);\n\n      return n;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e, o) {\n      const r = new RegExp(e).exec(t.slice(o));\n      return r ? o + r.index : -1;\n    };\n  }, function (t, e) {\n    t.exports = function (t, e, o) {\n      const r = o && o.debug || !1;\n      r && console.log(\"getting \" + e + \" in \" + t);\n      const n = \"object\" == typeof t ? t.outer : t,\n            a = `${e}\\\\=\"(.*)\"`;\n      r && console.log(\"pattern:\", a);\n      const i = new RegExp(a).exec(n);\n      if (i) return i[1];\n    };\n  }, function (t, e) {\n    t.exports = function (t) {\n      return t = (t = t.replace('DATUM[\"D_', 'DATUM[\"')).replace(/\\.\\d{16,}/g, function (t) {\n        return t.substr(0, 16);\n      });\n    };\n  }, function (t, e) {\n    var o = [\"esriwkt\", \"mapfile\", \"proj4\"],\n        r = o;\n    \"undefined\" != typeof process && process.env;\n    var n = [];\n    \"undefined\" != typeof process && process.env, r.includes(\"esriwkt\") || n.push(\"esriwkt\"), r.includes(\"mapfile\") || n.push(\"mapfile\"), r.includes(\"proj4\") || (n.push(\"mapnik\"), n.push(\"proj4\")), n.sort();\n    var a = r.length,\n        i = a + 1,\n        s = Int16Array;\n    t.exports = {\n      ARRAY_TYPE: s,\n      DATA_VIEW_READER_NAME: \"getInt16\",\n      BYTES_PER_VALUE: 2,\n      DEFAULT_HASHED_FIELDS: o,\n      EXCLUDED_FORMATS: n,\n      FORMATS: {\n        ESRI_WKT: \"esriwkt\",\n        GEOSERVER: \"geoserver\",\n        MAPFILE: \"mapfile\",\n        MAPNIK: \"mapnik\",\n        OGC_GML: \"gml\",\n        OGC_XML: \"xml\",\n        OGC_WKT: \"wkt\",\n        POSTGIS: \"postgis\",\n        PROJ_4: \"proj4\",\n        PROJ_4_JS: \"js\"\n      },\n      HASHED_FIELDS: r,\n      NUM_HASHED_FIELDS: a,\n      NUM_FIELDS: i,\n      UNSUPPORTED_MSG: \"[get-epsg-code] {} format not supported\"\n    };\n  }, function (t, e, o) {\n    t.exports = o(10)(\"\");\n  }, function (t, e, o) {\n    \"use strict\";\n\n    t.exports = function (t) {\n      for (var e = \"undefined\" != typeof window && \"function\" == typeof window.atob ? window.atob(t) : Buffer.from(t, \"base64\").toString(\"binary\"), o = new Uint8Array(e.length), r = 0; r < e.length; ++r) o[r] = e.charCodeAt(r);\n\n      return o.buffer;\n    };\n  }, function (t, e) {\n    t.exports = {\n      hash: function (t) {\n        var e,\n            o = 0;\n        if (0 === (t = (t = t.trim()).replace(/  /g, \" \")).length) return o;\n\n        for (t.length, e = 0; e < t.length; e++) o = (o << 5) - o + t.charCodeAt(e), o |= 0;\n\n        return o = Math.round(o / Math.pow(2, 16));\n      }\n    };\n  }, function (t, e, o) {\n    \"use strict\";\n\n    o.r(e);\n\n    var r = function (t) {\n      return new E(t).output();\n    },\n        n = /\\s/,\n        a = /[A-Za-z]/,\n        i = /[A-Za-z84]/,\n        s = /[,\\]]/,\n        C = /[\\d\\.E\\-\\+]/;\n\n    function E(t) {\n      if (\"string\" != typeof t) throw new Error(\"not a string\");\n      this.text = t.trim(), this.level = 0, this.place = 0, this.root = null, this.stack = [], this.currentObject = null, this.state = 1;\n    }\n\n    function d(t, e, o) {\n      Array.isArray(e) && (o.unshift(e), e = null);\n      var r = e ? {} : t,\n          n = o.reduce(function (t, e) {\n        return f(e, t), t;\n      }, r);\n      e && (t[e] = n);\n    }\n\n    function f(t, e) {\n      if (Array.isArray(t)) {\n        var o,\n            r = t.shift();\n        if (\"PARAMETER\" === r && (r = t.shift()), 1 === t.length) return Array.isArray(t[0]) ? (e[r] = {}, void f(t[0], e[r])) : void (e[r] = t[0]);\n        if (t.length) {\n          if (\"TOWGS84\" !== r) switch (Array.isArray(r) || (e[r] = {}), r) {\n            case \"UNIT\":\n            case \"PRIMEM\":\n            case \"VERT_DATUM\":\n              return e[r] = {\n                name: t[0].toLowerCase(),\n                convert: t[1]\n              }, void (3 === t.length && f(t[2], e[r]));\n\n            case \"SPHEROID\":\n            case \"ELLIPSOID\":\n              return e[r] = {\n                name: t[0],\n                a: t[1],\n                rf: t[2]\n              }, void (4 === t.length && f(t[3], e[r]));\n\n            case \"PROJECTEDCRS\":\n            case \"PROJCRS\":\n            case \"GEOGCS\":\n            case \"GEOCCS\":\n            case \"PROJCS\":\n            case \"LOCAL_CS\":\n            case \"GEODCRS\":\n            case \"GEODETICCRS\":\n            case \"GEODETICDATUM\":\n            case \"EDATUM\":\n            case \"ENGINEERINGDATUM\":\n            case \"VERT_CS\":\n            case \"VERTCRS\":\n            case \"VERTICALCRS\":\n            case \"COMPD_CS\":\n            case \"COMPOUNDCRS\":\n            case \"ENGINEERINGCRS\":\n            case \"ENGCRS\":\n            case \"FITTED_CS\":\n            case \"LOCAL_DATUM\":\n            case \"DATUM\":\n              return t[0] = [\"name\", t[0]], void d(e, r, t);\n\n            default:\n              for (o = -1; ++o < t.length;) if (!Array.isArray(t[o])) return f(t, e[r]);\n\n              return d(e, r, t);\n          } else e[r] = t;\n        } else e[r] = !0;\n      } else e[t] = !0;\n    }\n\n    E.prototype.readCharicter = function () {\n      var t = this.text[this.place++];\n      if (4 !== this.state) for (; n.test(t);) {\n        if (this.place >= this.text.length) return;\n        t = this.text[this.place++];\n      }\n\n      switch (this.state) {\n        case 1:\n          return this.neutral(t);\n\n        case 2:\n          return this.keyword(t);\n\n        case 4:\n          return this.quoted(t);\n\n        case 5:\n          return this.afterquote(t);\n\n        case 3:\n          return this.number(t);\n\n        case -1:\n          return;\n      }\n    }, E.prototype.afterquote = function (t) {\n      if ('\"' === t) return this.word += '\"', void (this.state = 4);\n      if (s.test(t)) return this.word = this.word.trim(), void this.afterItem(t);\n      throw new Error(\"havn't handled \\\"\" + t + '\" in afterquote yet, index ' + this.place);\n    }, E.prototype.afterItem = function (t) {\n      return \",\" === t ? (null !== this.word && this.currentObject.push(this.word), this.word = null, void (this.state = 1)) : \"]\" === t ? (this.level--, null !== this.word && (this.currentObject.push(this.word), this.word = null), this.state = 1, this.currentObject = this.stack.pop(), void (this.currentObject || (this.state = -1))) : void 0;\n    }, E.prototype.number = function (t) {\n      if (!C.test(t)) {\n        if (s.test(t)) return this.word = parseFloat(this.word), void this.afterItem(t);\n        throw new Error(\"havn't handled \\\"\" + t + '\" in number yet, index ' + this.place);\n      }\n\n      this.word += t;\n    }, E.prototype.quoted = function (t) {\n      '\"' !== t ? this.word += t : this.state = 5;\n    }, E.prototype.keyword = function (t) {\n      if (i.test(t)) this.word += t;else {\n        if (\"[\" === t) {\n          var e = [];\n          return e.push(this.word), this.level++, null === this.root ? this.root = e : this.currentObject.push(e), this.stack.push(this.currentObject), this.currentObject = e, void (this.state = 1);\n        }\n\n        if (!s.test(t)) throw new Error(\"havn't handled \\\"\" + t + '\" in keyword yet, index ' + this.place);\n        this.afterItem(t);\n      }\n    }, E.prototype.neutral = function (t) {\n      if (a.test(t)) return this.word = t, void (this.state = 2);\n      if ('\"' === t) return this.word = \"\", void (this.state = 4);\n      if (C.test(t)) return this.word = t, void (this.state = 3);\n      if (!s.test(t)) throw new Error(\"havn't handled \\\"\" + t + '\" in neutral yet, index ' + this.place);\n      this.afterItem(t);\n    }, E.prototype.output = function () {\n      for (; this.place < this.text.length;) this.readCharicter();\n\n      if (-1 === this.state) return this.root;\n      throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n    };\n\n    function D(t) {\n      return .017453292519943295 * t;\n    }\n\n    e.default = function (t) {\n      var e = r(t),\n          o = e.shift(),\n          n = e.shift();\n      e.unshift([\"name\", n]), e.unshift([\"type\", o]);\n      var a = {};\n      return f(e, a), function (t) {\n        \"GEOGCS\" === t.type ? t.projName = \"longlat\" : \"LOCAL_CS\" === t.type ? (t.projName = \"identity\", t.local = !0) : \"object\" == typeof t.PROJECTION ? t.projName = Object.keys(t.PROJECTION)[0] : t.projName = t.PROJECTION, t.UNIT && (t.units = t.UNIT.name.toLowerCase(), \"metre\" === t.units && (t.units = \"meter\"), t.UNIT.convert && (\"GEOGCS\" === t.type ? t.DATUM && t.DATUM.SPHEROID && (t.to_meter = t.UNIT.convert * t.DATUM.SPHEROID.a) : t.to_meter = t.UNIT.convert));\n        var e = t.GEOGCS;\n\n        function o(e) {\n          return e * (t.to_meter || 1);\n        }\n\n        \"GEOGCS\" === t.type && (e = t), e && (e.DATUM ? t.datumCode = e.DATUM.name.toLowerCase() : t.datumCode = e.name.toLowerCase(), \"d_\" === t.datumCode.slice(0, 2) && (t.datumCode = t.datumCode.slice(2)), \"new_zealand_geodetic_datum_1949\" !== t.datumCode && \"new_zealand_1949\" !== t.datumCode || (t.datumCode = \"nzgd49\"), \"wgs_1984\" === t.datumCode && (\"Mercator_Auxiliary_Sphere\" === t.PROJECTION && (t.sphere = !0), t.datumCode = \"wgs84\"), \"_ferro\" === t.datumCode.slice(-6) && (t.datumCode = t.datumCode.slice(0, -6)), \"_jakarta\" === t.datumCode.slice(-8) && (t.datumCode = t.datumCode.slice(0, -8)), ~t.datumCode.indexOf(\"belge\") && (t.datumCode = \"rnb72\"), e.DATUM && e.DATUM.SPHEROID && (t.ellps = e.DATUM.SPHEROID.name.replace(\"_19\", \"\").replace(/[Cc]larke\\_18/, \"clrk\"), \"international\" === t.ellps.toLowerCase().slice(0, 13) && (t.ellps = \"intl\"), t.a = e.DATUM.SPHEROID.a, t.rf = parseFloat(e.DATUM.SPHEROID.rf, 10)), e.DATUM && e.DATUM.TOWGS84 && (t.datum_params = e.DATUM.TOWGS84), ~t.datumCode.indexOf(\"osgb_1936\") && (t.datumCode = \"osgb36\"), ~t.datumCode.indexOf(\"osni_1952\") && (t.datumCode = \"osni52\"), (~t.datumCode.indexOf(\"tm65\") || ~t.datumCode.indexOf(\"geodetic_datum_of_1965\")) && (t.datumCode = \"ire65\"), \"ch1903+\" === t.datumCode && (t.datumCode = \"ch1903\"), ~t.datumCode.indexOf(\"israel\") && (t.datumCode = \"isr93\")), t.b && !isFinite(t.b) && (t.b = t.a), [[\"standard_parallel_1\", \"Standard_Parallel_1\"], [\"standard_parallel_2\", \"Standard_Parallel_2\"], [\"false_easting\", \"False_Easting\"], [\"false_northing\", \"False_Northing\"], [\"central_meridian\", \"Central_Meridian\"], [\"latitude_of_origin\", \"Latitude_Of_Origin\"], [\"latitude_of_origin\", \"Central_Parallel\"], [\"scale_factor\", \"Scale_Factor\"], [\"k0\", \"scale_factor\"], [\"latitude_of_center\", \"Latitude_Of_Center\"], [\"latitude_of_center\", \"Latitude_of_center\"], [\"lat0\", \"latitude_of_center\", D], [\"longitude_of_center\", \"Longitude_Of_Center\"], [\"longitude_of_center\", \"Longitude_of_center\"], [\"longc\", \"longitude_of_center\", D], [\"x0\", \"false_easting\", o], [\"y0\", \"false_northing\", o], [\"long0\", \"central_meridian\", D], [\"lat0\", \"latitude_of_origin\", D], [\"lat0\", \"standard_parallel_1\", D], [\"lat1\", \"standard_parallel_1\", D], [\"lat2\", \"standard_parallel_2\", D], [\"azimuth\", \"Azimuth\"], [\"alpha\", \"azimuth\", D], [\"srsCode\", \"name\"]].forEach(function (e) {\n          return o = t, n = (r = e)[0], a = r[1], void (!(n in o) && a in o && (o[n] = o[a], 3 === r.length && (o[n] = r[2](o[n]))));\n          var o, r, n, a;\n        }), t.long0 || !t.longc || \"Albers_Conic_Equal_Area\" !== t.projName && \"Lambert_Azimuthal_Equal_Area\" !== t.projName || (t.long0 = t.longc), t.lat_ts || !t.lat1 || \"Stereographic_South_Pole\" !== t.projName && \"Polar Stereographic (variant B)\" !== t.projName || (t.lat0 = D(t.lat1 > 0 ? 90 : -90), t.lat_ts = t.lat1);\n      }(a), a;\n    };\n  }]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/get-epsg-code/dist/get-epsg-code-all.node.min.js\n");

/***/ }),

/***/ "./node_modules/mgrs/mgrs.js":
/*!***********************************!*\
  !*** ./node_modules/mgrs/mgrs.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"toPoint\": () => (/* binding */ toPoint)\n/* harmony export */ });\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\n\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\nvar A = 65; // A\n\nvar I = 73; // I\n\nvar O = 79; // O\n\nvar V = 86; // V\n\nvar Z = 90; // Z\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n});\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\n\nfunction forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n}\n;\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\n\nfunction inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n}\n;\nfunction toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n}\n;\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\n\nfunction degToRad(deg) {\n  return deg * (Math.PI / 180.0);\n}\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\n\n\nfunction radToDeg(rad) {\n  return 180.0 * (rad / Math.PI);\n}\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\n\n\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber; // (int)\n\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1; //Make sure the longitude 180.00 is in Zone 60\n\n  if (Long === 180) {\n    ZoneNumber = 60;\n  } // Special zone for Norway\n\n\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  } // Special zones for Svalbard\n\n\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    } else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    } else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    } else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n\n  LongOriginRad = degToRad(LongOrigin);\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - 35 * eccSquared * eccSquared * eccSquared / 3072 * Math.sin(6 * LatRad));\n  var UTMEasting = k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0;\n  var UTMNorthing = k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0));\n\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\n\n\nfunction UTMtoLL(utm) {\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber; // check the ZoneNummber is valid\n\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n\n  var eccSquared = 0.00669438; //ellip.eccsq;\n\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad; // remove 500,000 meter offset for longitude\n\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing; // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  } // There are 60 zones with zone 1 being at West -180 to -174\n\n\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = eccSquared / (1 - eccSquared);\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + 151 * e1 * e1 * e1 / 96 * Math.sin(6 * mu); // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n  var lat = phi1Rad - N1 * Math.tan(phi1Rad) / R1 * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n  var result;\n\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  } else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n\n  return result;\n}\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\n\n\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if (84 >= lat && lat >= 72) {\n    LetterDesignator = 'X';\n  } else if (72 > lat && lat >= 64) {\n    LetterDesignator = 'W';\n  } else if (64 > lat && lat >= 56) {\n    LetterDesignator = 'V';\n  } else if (56 > lat && lat >= 48) {\n    LetterDesignator = 'U';\n  } else if (48 > lat && lat >= 40) {\n    LetterDesignator = 'T';\n  } else if (40 > lat && lat >= 32) {\n    LetterDesignator = 'S';\n  } else if (32 > lat && lat >= 24) {\n    LetterDesignator = 'R';\n  } else if (24 > lat && lat >= 16) {\n    LetterDesignator = 'Q';\n  } else if (16 > lat && lat >= 8) {\n    LetterDesignator = 'P';\n  } else if (8 > lat && lat >= 0) {\n    LetterDesignator = 'N';\n  } else if (0 > lat && lat >= -8) {\n    LetterDesignator = 'M';\n  } else if (-8 > lat && lat >= -16) {\n    LetterDesignator = 'L';\n  } else if (-16 > lat && lat >= -24) {\n    LetterDesignator = 'K';\n  } else if (-24 > lat && lat >= -32) {\n    LetterDesignator = 'J';\n  } else if (-32 > lat && lat >= -40) {\n    LetterDesignator = 'H';\n  } else if (-40 > lat && lat >= -48) {\n    LetterDesignator = 'G';\n  } else if (-48 > lat && lat >= -56) {\n    LetterDesignator = 'F';\n  } else if (-56 > lat && lat >= -64) {\n    LetterDesignator = 'E';\n  } else if (-64 > lat && lat >= -72) {\n    LetterDesignator = 'D';\n  } else if (-72 > lat && lat >= -80) {\n    LetterDesignator = 'C';\n  }\n\n  return LetterDesignator;\n}\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\n\n\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n      snorthing = \"00000\" + utm.northing;\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\n\n\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\n\n\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\n\n\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index); // colInt and rowInt are the letters to build to return\n\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || colOrigin < I && colInt > I || (colInt > I || colOrigin < I) && rollover) {\n    colInt++;\n  }\n\n  if (colInt === O || colOrigin < O && colInt > O || (colInt > O || colOrigin < O) && rollover) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  } else {\n    rollover = false;\n  }\n\n  if (rowInt === I || rowOrigin < I && rowInt > I || (rowInt > I || rowOrigin < I) && rollover) {\n    rowInt++;\n  }\n\n  if (rowInt === O || rowOrigin < O && rowInt > O || (rowInt > O || rowOrigin < O) && rollover) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\n\n\nfunction decode(mgrsString) {\n  if (mgrsString && mgrsString.length === 0) {\n    throw \"MGRSPoint coverting from nothing\";\n  }\n\n  var length = mgrsString.length;\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0; // get Zone number\n\n  while (!/[A-Z]/.test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw \"MGRSPoint bad conversion from: \" + mgrsString;\n    }\n\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw \"MGRSPoint bad conversion from: \" + mgrsString;\n  }\n\n  var zoneLetter = mgrsString.charAt(i++); // Should we check the zone letter here? Why not.\n\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw \"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString;\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n  var set = get100kSetForZone(zoneNumber);\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set); // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  } // calculate the char index for easting/northing separator\n\n\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw \"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString;\n  }\n\n  var sep = remainder / 2;\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\n\n\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n\n    if (curCol === I) {\n      curCol++;\n    }\n\n    if (curCol === O) {\n      curCol++;\n    }\n\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw \"Bad character: \" + e;\n      }\n\n      curCol = A;\n      rewindMarker = true;\n    }\n\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\n\n\nfunction getNorthingFromChar(n, set) {\n  if (n > 'V') {\n    throw \"MGRSPoint given invalid Northing \" + n;\n  } // rowOrigin is the letter at the origin of the set for the\n  // column\n\n\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n\n    if (curRow === I) {\n      curRow++;\n    }\n\n    if (curRow === O) {\n      curRow++;\n    } // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n\n\n    if (curRow > V) {\n      if (rewindMarker) {\n        // making sure that this loop ends\n        throw \"Bad character: \" + n;\n      }\n\n      curRow = A;\n      rewindMarker = true;\n    }\n\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\n\n\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n\n  switch (zoneLetter) {\n    case 'C':\n      northing = 1100000.0;\n      break;\n\n    case 'D':\n      northing = 2000000.0;\n      break;\n\n    case 'E':\n      northing = 2800000.0;\n      break;\n\n    case 'F':\n      northing = 3700000.0;\n      break;\n\n    case 'G':\n      northing = 4600000.0;\n      break;\n\n    case 'H':\n      northing = 5500000.0;\n      break;\n\n    case 'J':\n      northing = 6400000.0;\n      break;\n\n    case 'K':\n      northing = 7300000.0;\n      break;\n\n    case 'L':\n      northing = 8200000.0;\n      break;\n\n    case 'M':\n      northing = 9100000.0;\n      break;\n\n    case 'N':\n      northing = 0.0;\n      break;\n\n    case 'P':\n      northing = 800000.0;\n      break;\n\n    case 'Q':\n      northing = 1700000.0;\n      break;\n\n    case 'R':\n      northing = 2600000.0;\n      break;\n\n    case 'S':\n      northing = 3500000.0;\n      break;\n\n    case 'T':\n      northing = 4400000.0;\n      break;\n\n    case 'U':\n      northing = 5300000.0;\n      break;\n\n    case 'V':\n      northing = 6200000.0;\n      break;\n\n    case 'W':\n      northing = 7000000.0;\n      break;\n\n    case 'X':\n      northing = 7900000.0;\n      break;\n\n    default:\n      northing = -1.0;\n  }\n\n  if (northing >= 0.0) {\n    return northing;\n  } else {\n    throw \"Invalid zone letter: \" + zoneLetter;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mgrs/mgrs.js\n");

/***/ }),

/***/ "./node_modules/preciso/absolute.js":
/*!******************************************!*\
  !*** ./node_modules/preciso/absolute.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const clean = __webpack_require__(/*! ./clean.js */ \"./node_modules/preciso/clean.js\");\n\nmodule.exports = function absolute(n) {\n  n = clean(n);\n  if (n[0] === \"-\") return n.substring(1);else return n;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9hYnNvbHV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3ByZWNpc28vYWJzb2x1dGUuanM/OTA2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjbGVhbiA9IHJlcXVpcmUoXCIuL2NsZWFuLmpzXCIpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBhYnNvbHV0ZShuKSB7XG4gIG4gPSBjbGVhbihuKTtcbiAgaWYgKG5bMF0gPT09IFwiLVwiKSByZXR1cm4gbi5zdWJzdHJpbmcoMSk7XG4gIGVsc2UgcmV0dXJuIG47XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/preciso/absolute.js\n");

/***/ }),

/***/ "./node_modules/preciso/add.js":
/*!*************************************!*\
  !*** ./node_modules/preciso/add.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare_positive = __webpack_require__(/*! ./compare_positive.js */ \"./node_modules/preciso/compare_positive.js\");\n\nconst clean = __webpack_require__(/*! ./clean.js */ \"./node_modules/preciso/clean.js\");\n\nconst long_addition = __webpack_require__(/*! ./long_addition.js */ \"./node_modules/preciso/long_addition.js\");\n\nconst long_subtraction = __webpack_require__(/*! ./long_subtraction.js */ \"./node_modules/preciso/long_subtraction.js\");\n\nmodule.exports = function add(a, b) {\n  a = clean(a);\n  b = clean(b);\n  const apos = a[0] !== \"-\";\n  const bpos = b[0] !== \"-\";\n\n  if (apos && bpos) {\n    return long_addition(a, b);\n  } else if (!apos && !bpos) {\n    return \"-\" + long_addition(a.substring(1), b.substring(1));\n  } else if (!apos && bpos) {\n    a = a.substring(1);\n\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n\n      case \"<\":\n        return long_subtraction(b, a);\n\n      case \">\":\n        return \"-\" + long_subtraction(a, b);\n    }\n  } else if (apos && !bpos) {\n    b = b.substring(1);\n\n    switch (compare_positive(a, b)) {\n      case \"=\":\n        return \"0\";\n\n      case \"<\":\n        return \"-\" + long_subtraction(b, a);\n\n      case \">\":\n        return long_subtraction(a, b);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9hZGQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQU5BO0FBUUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBTkE7QUFRQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJlY2lzby9hZGQuanM/MGVhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21wYXJlX3Bvc2l0aXZlID0gcmVxdWlyZShcIi4vY29tcGFyZV9wb3NpdGl2ZS5qc1wiKTtcbmNvbnN0IGNsZWFuID0gcmVxdWlyZShcIi4vY2xlYW4uanNcIik7XG5jb25zdCBsb25nX2FkZGl0aW9uID0gcmVxdWlyZShcIi4vbG9uZ19hZGRpdGlvbi5qc1wiKTtcbmNvbnN0IGxvbmdfc3VidHJhY3Rpb24gPSByZXF1aXJlKFwiLi9sb25nX3N1YnRyYWN0aW9uLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFkZChhLCBiKSB7XG4gIGEgPSBjbGVhbihhKTtcbiAgYiA9IGNsZWFuKGIpO1xuXG4gIGNvbnN0IGFwb3MgPSBhWzBdICE9PSBcIi1cIjtcbiAgY29uc3QgYnBvcyA9IGJbMF0gIT09IFwiLVwiO1xuXG4gIGlmIChhcG9zICYmIGJwb3MpIHtcbiAgICByZXR1cm4gbG9uZ19hZGRpdGlvbihhLCBiKTtcbiAgfSBlbHNlIGlmICghYXBvcyAmJiAhYnBvcykge1xuICAgIHJldHVybiBcIi1cIiArIGxvbmdfYWRkaXRpb24oYS5zdWJzdHJpbmcoMSksIGIuc3Vic3RyaW5nKDEpKTtcbiAgfSBlbHNlIGlmICghYXBvcyAmJiBicG9zKSB7XG4gICAgYSA9IGEuc3Vic3RyaW5nKDEpO1xuICAgIHN3aXRjaCAoY29tcGFyZV9wb3NpdGl2ZShhLCBiKSkge1xuICAgICAgY2FzZSBcIj1cIjpcbiAgICAgICAgcmV0dXJuIFwiMFwiO1xuICAgICAgY2FzZSBcIjxcIjpcbiAgICAgICAgcmV0dXJuIGxvbmdfc3VidHJhY3Rpb24oYiwgYSk7XG4gICAgICBjYXNlIFwiPlwiOlxuICAgICAgICByZXR1cm4gXCItXCIgKyBsb25nX3N1YnRyYWN0aW9uKGEsIGIpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChhcG9zICYmICFicG9zKSB7XG4gICAgYiA9IGIuc3Vic3RyaW5nKDEpO1xuICAgIHN3aXRjaCAoY29tcGFyZV9wb3NpdGl2ZShhLCBiKSkge1xuICAgICAgY2FzZSBcIj1cIjpcbiAgICAgICAgcmV0dXJuIFwiMFwiO1xuICAgICAgY2FzZSBcIjxcIjpcbiAgICAgICAgcmV0dXJuIFwiLVwiICsgbG9uZ19zdWJ0cmFjdGlvbihiLCBhKTtcbiAgICAgIGNhc2UgXCI+XCI6XG4gICAgICAgIHJldHVybiBsb25nX3N1YnRyYWN0aW9uKGEsIGIpO1xuICAgIH1cbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/preciso/add.js\n");

/***/ }),

/***/ "./node_modules/preciso/clean.js":
/*!***************************************!*\
  !*** ./node_modules/preciso/clean.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const expand = __webpack_require__(/*! ./expand.js */ \"./node_modules/preciso/expand.js\");\n\nmodule.exports = function clean(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n  n = expand(n); // remove extra zero in front\n  // 03938.123 => 3938.123\n\n  n = n.replace(/^0+(?=\\d)/, \"\"); // remove extra zero at end\n\n  return n;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9jbGVhbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUdBOztBQUNBOztBQUlBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL2NsZWFuLmpzPzY0ODUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwYW5kID0gcmVxdWlyZShcIi4vZXhwYW5kLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNsZWFuKG4pIHtcbiAgLy8gcmVtb3ZlICsgZnJvbSBiZWdpbm5pbmdcbiAgaWYgKG5bMF0gPT09IFwiK1wiKSBuID0gbi5zdWJzdHJpbmcoMSk7XG5cbiAgbiA9IGV4cGFuZChuKTtcblxuICAvLyByZW1vdmUgZXh0cmEgemVybyBpbiBmcm9udFxuICAvLyAwMzkzOC4xMjMgPT4gMzkzOC4xMjNcbiAgbiA9IG4ucmVwbGFjZSgvXjArKD89XFxkKS8sIFwiXCIpO1xuXG4gIC8vIHJlbW92ZSBleHRyYSB6ZXJvIGF0IGVuZFxuXG4gIHJldHVybiBuO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/preciso/clean.js\n");

/***/ }),

/***/ "./node_modules/preciso/compare_positive.js":
/*!**************************************************!*\
  !*** ./node_modules/preciso/compare_positive.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const clean = __webpack_require__(/*! ./clean.js */ \"./node_modules/preciso/clean.js\"); // given:\n//  - a and b are positive numbers\n//  - a and b have been cleaned (i.e. no + or leading zeros)\n\n\nmodule.exports = function compare_positive(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\"); // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx; // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n  let right = Math.max(alen - a_adjusted_dot_index, blen - b_adjusted_dot_index);\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let i = 0;\n\n  while (i < imax) {\n    const achar = a[i - aoffset] || \"0\";\n    const bchar = b[i - boffset] || \"0\";\n\n    if (achar !== bchar) {\n      if (achar > bchar) return \">\";else if (achar < bchar) return \"<\";\n    }\n\n    i++;\n  }\n\n  return \"=\";\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9jb21wYXJlX3Bvc2l0aXZlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBR0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7O0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBRUE7O0FBRUE7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL2NvbXBhcmVfcG9zaXRpdmUuanM/NzViOSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjbGVhbiA9IHJlcXVpcmUoXCIuL2NsZWFuLmpzXCIpO1xuXG4vLyBnaXZlbjpcbi8vICAtIGEgYW5kIGIgYXJlIHBvc2l0aXZlIG51bWJlcnNcbi8vICAtIGEgYW5kIGIgaGF2ZSBiZWVuIGNsZWFuZWQgKGkuZS4gbm8gKyBvciBsZWFkaW5nIHplcm9zKVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21wYXJlX3Bvc2l0aXZlKGEsIGIpIHtcbiAgY29uc3QgYWxlbiA9IGEubGVuZ3RoO1xuICBjb25zdCBibGVuID0gYi5sZW5ndGg7XG5cbiAgY29uc3QgYWlkeCA9IGEuaW5kZXhPZihcIi5cIik7XG4gIGNvbnN0IGJpZHggPSBiLmluZGV4T2YoXCIuXCIpO1xuXG4gIC8vIGJhc2ljYWxseSB3aGVyZSB3b3VsZCB0aGUgZG90IGJlXG4gIC8vIGlmIHdlIGFkZCBhIGRvdCBhdCB0aGUgZW5kIG9mIGludGVnZXJzXG4gIC8vIGxpa2UgMTIzLlxuICBjb25zdCBhX2FkanVzdGVkX2RvdF9pbmRleCA9IGFpZHggPT09IC0xID8gYWxlbiA6IGFpZHg7XG4gIGNvbnN0IGJfYWRqdXN0ZWRfZG90X2luZGV4ID0gYmlkeCA9PT0gLTEgPyBibGVuIDogYmlkeDtcblxuICAvLyBob3cgbXVjaCB5b3UgbmVlZCB0byBzaGlmdCB0aGUgc2Vjb25kIG51bWJlclxuICAvLyB0byBsaW5lIHVwIHRoZSBkZWNpbWFsIHdpdGggdGhlIGZpcnN0XG4gIC8vICAgICAgICAwLjEyMzQ1XG4gIC8vICAgIDEyMzQ1LjBcblxuICBjb25zdCBvZmZzZXQgPSBhX2FkanVzdGVkX2RvdF9pbmRleCAtIGJfYWRqdXN0ZWRfZG90X2luZGV4O1xuXG4gIGxldCBsZWZ0ID0gTWF0aC5tYXgoYV9hZGp1c3RlZF9kb3RfaW5kZXgsIGJfYWRqdXN0ZWRfZG90X2luZGV4KTtcblxuICBsZXQgcmlnaHQgPSBNYXRoLm1heChhbGVuIC0gYV9hZGp1c3RlZF9kb3RfaW5kZXgsIGJsZW4gLSBiX2FkanVzdGVkX2RvdF9pbmRleCk7XG5cbiAgbGV0IGFvZmZzZXQgPSBvZmZzZXQgPCAwID8gLTEgKiBvZmZzZXQgOiAwO1xuICBsZXQgYm9mZnNldCA9IG9mZnNldCA8PSAwID8gMCA6IG9mZnNldDtcblxuICBsZXQgaW1heCA9IGxlZnQgKyAxICsgcmlnaHQgLSAxOyAvLyAtMSBmb3IgemVyby1pbmRleFxuXG4gIGxldCBpID0gMDtcbiAgd2hpbGUgKGkgPCBpbWF4KSB7XG4gICAgY29uc3QgYWNoYXIgPSBhW2kgLSBhb2Zmc2V0XSB8fCBcIjBcIjtcbiAgICBjb25zdCBiY2hhciA9IGJbaSAtIGJvZmZzZXRdIHx8IFwiMFwiO1xuICAgIGlmIChhY2hhciAhPT0gYmNoYXIpIHtcbiAgICAgIGlmIChhY2hhciA+IGJjaGFyKSByZXR1cm4gXCI+XCI7XG4gICAgICBlbHNlIGlmIChhY2hhciA8IGJjaGFyKSByZXR1cm4gXCI8XCI7XG4gICAgfVxuICAgIGkrKztcbiAgfVxuXG4gIHJldHVybiBcIj1cIjtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/compare_positive.js\n");

/***/ }),

/***/ "./node_modules/preciso/divide.js":
/*!****************************************!*\
  !*** ./node_modules/preciso/divide.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const absolute = __webpack_require__(/*! ./absolute.js */ \"./node_modules/preciso/absolute.js\");\n\nconst clean = __webpack_require__(/*! ./clean.js */ \"./node_modules/preciso/clean.js\");\n\nconst long_division = __webpack_require__(/*! ./long_division.js */ \"./node_modules/preciso/long_division.js\");\n\nmodule.exports = function (dividend, divisor, options) {\n  dividend = clean(dividend);\n  divisor = clean(divisor);\n  const dividend_is_positive = dividend[0] !== \"-\";\n  const divisor_is_positive = divisor[0] !== \"-\";\n  const out_sign = dividend_is_positive !== divisor_is_positive ? \"-\" : \"\";\n  if (!dividend_is_positive) dividend = absolute(dividend);\n  if (!divisor_is_positive) divisor = absolute(divisor);\n  return out_sign + long_division(dividend, divisor, options);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9kaXZpZGUuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL2RpdmlkZS5qcz8zNzZmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFic29sdXRlID0gcmVxdWlyZShcIi4vYWJzb2x1dGUuanNcIik7XG5jb25zdCBjbGVhbiA9IHJlcXVpcmUoXCIuL2NsZWFuLmpzXCIpO1xuY29uc3QgbG9uZ19kaXZpc2lvbiA9IHJlcXVpcmUoXCIuL2xvbmdfZGl2aXNpb24uanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRpdmlkZW5kLCBkaXZpc29yLCBvcHRpb25zKSB7XG4gIGRpdmlkZW5kID0gY2xlYW4oZGl2aWRlbmQpO1xuICBkaXZpc29yID0gY2xlYW4oZGl2aXNvcik7XG5cbiAgY29uc3QgZGl2aWRlbmRfaXNfcG9zaXRpdmUgPSBkaXZpZGVuZFswXSAhPT0gXCItXCI7XG4gIGNvbnN0IGRpdmlzb3JfaXNfcG9zaXRpdmUgPSBkaXZpc29yWzBdICE9PSBcIi1cIjtcblxuICBjb25zdCBvdXRfc2lnbiA9IGRpdmlkZW5kX2lzX3Bvc2l0aXZlICE9PSBkaXZpc29yX2lzX3Bvc2l0aXZlID8gXCItXCIgOiBcIlwiO1xuXG4gIGlmICghZGl2aWRlbmRfaXNfcG9zaXRpdmUpIGRpdmlkZW5kID0gYWJzb2x1dGUoZGl2aWRlbmQpO1xuICBpZiAoIWRpdmlzb3JfaXNfcG9zaXRpdmUpIGRpdmlzb3IgPSBhYnNvbHV0ZShkaXZpc29yKTtcblxuICByZXR1cm4gb3V0X3NpZ24gKyBsb25nX2RpdmlzaW9uKGRpdmlkZW5kLCBkaXZpc29yLCBvcHRpb25zKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/divide.js\n");

/***/ }),

/***/ "./node_modules/preciso/expand.js":
/*!****************************************!*\
  !*** ./node_modules/preciso/expand.js ***!
  \****************************************/
/***/ ((module) => {

eval("// convert exponential notation to normal string\n// not optimized yet and no support for big numbers\nmodule.exports = function expand(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1);\n  const sign = n[0] === \"-\" ? \"-\" : \"\";\n  if (sign === \"-\") n = n.substring(1);\n  const index_of_e = n.indexOf(\"e\"); // number not in exponential notation\n\n  if (index_of_e === -1) return sign + n;\n  let index_of_dot = n.indexOf(\".\"); // if number doesn't include a period dot\n  // then just assume it at the end\n  // such that 3e4 has index of dot at 1\n\n  if (index_of_dot === -1) index_of_dot = index_of_e;\n  const shift = Number(n.substring(index_of_e + 1)); // remove old decimal place\n\n  const base = n.substring(0, index_of_e).replace(\".\", \"\"); // normalize shift to start of the string at index zero\n\n  const normshift = index_of_dot + shift;\n  const baselen = base.length;\n\n  if (normshift >= baselen) {\n    const zct = normshift - baselen;\n    let result = base;\n\n    for (let i = 0; i < zct; i++) result += \"0\";\n\n    return sign + result;\n  } else if (normshift < 0) {\n    // need to add zeros in decimal places\n    result = \"0.\";\n\n    for (let i = 0; i > normshift; i--) result += \"0\";\n\n    result += base;\n    return sign + result;\n  } else {\n    // shifting within the base\n    return sign + base.substring(0, normshift) + \".\" + base.substring(normshift);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9leHBhbmQuanMuanMiLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiZXhwYW5kIiwibiIsInN1YnN0cmluZyIsInNpZ24iLCJpbmRleF9vZl9lIiwiaW5kZXhPZiIsImluZGV4X29mX2RvdCIsInNoaWZ0IiwiTnVtYmVyIiwiYmFzZSIsInJlcGxhY2UiLCJub3Jtc2hpZnQiLCJiYXNlbGVuIiwibGVuZ3RoIiwiemN0IiwicmVzdWx0IiwiaSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJlY2lzby9leHBhbmQuanM/MDMyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb252ZXJ0IGV4cG9uZW50aWFsIG5vdGF0aW9uIHRvIG5vcm1hbCBzdHJpbmdcbi8vIG5vdCBvcHRpbWl6ZWQgeWV0IGFuZCBubyBzdXBwb3J0IGZvciBiaWcgbnVtYmVyc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBleHBhbmQobikge1xuICAvLyByZW1vdmUgKyBmcm9tIGJlZ2lubmluZ1xuICBpZiAoblswXSA9PT0gXCIrXCIpIG4gPSBuLnN1YnN0cmluZygxKTtcblxuICBjb25zdCBzaWduID0gblswXSA9PT0gXCItXCIgPyBcIi1cIiA6IFwiXCI7XG4gIGlmIChzaWduID09PSBcIi1cIikgbiA9IG4uc3Vic3RyaW5nKDEpO1xuXG4gIGNvbnN0IGluZGV4X29mX2UgPSBuLmluZGV4T2YoXCJlXCIpO1xuXG4gIC8vIG51bWJlciBub3QgaW4gZXhwb25lbnRpYWwgbm90YXRpb25cbiAgaWYgKGluZGV4X29mX2UgPT09IC0xKSByZXR1cm4gc2lnbiArIG47XG5cbiAgbGV0IGluZGV4X29mX2RvdCA9IG4uaW5kZXhPZihcIi5cIik7XG5cbiAgLy8gaWYgbnVtYmVyIGRvZXNuJ3QgaW5jbHVkZSBhIHBlcmlvZCBkb3RcbiAgLy8gdGhlbiBqdXN0IGFzc3VtZSBpdCBhdCB0aGUgZW5kXG4gIC8vIHN1Y2ggdGhhdCAzZTQgaGFzIGluZGV4IG9mIGRvdCBhdCAxXG4gIGlmIChpbmRleF9vZl9kb3QgPT09IC0xKSBpbmRleF9vZl9kb3QgPSBpbmRleF9vZl9lO1xuXG4gIGNvbnN0IHNoaWZ0ID0gTnVtYmVyKG4uc3Vic3RyaW5nKGluZGV4X29mX2UgKyAxKSk7XG5cbiAgLy8gcmVtb3ZlIG9sZCBkZWNpbWFsIHBsYWNlXG4gIGNvbnN0IGJhc2UgPSBuLnN1YnN0cmluZygwLCBpbmRleF9vZl9lKS5yZXBsYWNlKFwiLlwiLCBcIlwiKTtcblxuICAvLyBub3JtYWxpemUgc2hpZnQgdG8gc3RhcnQgb2YgdGhlIHN0cmluZyBhdCBpbmRleCB6ZXJvXG4gIGNvbnN0IG5vcm1zaGlmdCA9IGluZGV4X29mX2RvdCArIHNoaWZ0O1xuXG4gIGNvbnN0IGJhc2VsZW4gPSBiYXNlLmxlbmd0aDtcblxuICBpZiAobm9ybXNoaWZ0ID49IGJhc2VsZW4pIHtcbiAgICBjb25zdCB6Y3QgPSBub3Jtc2hpZnQgLSBiYXNlbGVuO1xuICAgIGxldCByZXN1bHQgPSBiYXNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgemN0OyBpKyspIHJlc3VsdCArPSBcIjBcIjtcbiAgICByZXR1cm4gc2lnbiArIHJlc3VsdDtcbiAgfSBlbHNlIGlmIChub3Jtc2hpZnQgPCAwKSB7XG4gICAgLy8gbmVlZCB0byBhZGQgemVyb3MgaW4gZGVjaW1hbCBwbGFjZXNcbiAgICByZXN1bHQgPSBcIjAuXCI7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPiBub3Jtc2hpZnQ7IGktLSkgcmVzdWx0ICs9IFwiMFwiO1xuICAgIHJlc3VsdCArPSBiYXNlO1xuICAgIHJldHVybiBzaWduICsgcmVzdWx0O1xuICB9IGVsc2Uge1xuICAgIC8vIHNoaWZ0aW5nIHdpdGhpbiB0aGUgYmFzZVxuICAgIHJldHVybiBzaWduICsgYmFzZS5zdWJzdHJpbmcoMCwgbm9ybXNoaWZ0KSArIFwiLlwiICsgYmFzZS5zdWJzdHJpbmcobm9ybXNoaWZ0KTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsU0FBU0MsTUFBVCxDQUFnQkMsQ0FBaEIsRUFBbUI7RUFDbEM7RUFDQSxJQUFJQSxDQUFDLENBQUMsQ0FBRCxDQUFELEtBQVMsR0FBYixFQUFrQkEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLFNBQUYsQ0FBWSxDQUFaLENBQUo7RUFFbEIsTUFBTUMsSUFBSSxHQUFHRixDQUFDLENBQUMsQ0FBRCxDQUFELEtBQVMsR0FBVCxHQUFlLEdBQWYsR0FBcUIsRUFBbEM7RUFDQSxJQUFJRSxJQUFJLEtBQUssR0FBYixFQUFrQkYsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLFNBQUYsQ0FBWSxDQUFaLENBQUo7RUFFbEIsTUFBTUUsVUFBVSxHQUFHSCxDQUFDLENBQUNJLE9BQUYsQ0FBVSxHQUFWLENBQW5CLENBUGtDLENBU2xDOztFQUNBLElBQUlELFVBQVUsS0FBSyxDQUFDLENBQXBCLEVBQXVCLE9BQU9ELElBQUksR0FBR0YsQ0FBZDtFQUV2QixJQUFJSyxZQUFZLEdBQUdMLENBQUMsQ0FBQ0ksT0FBRixDQUFVLEdBQVYsQ0FBbkIsQ0Faa0MsQ0FjbEM7RUFDQTtFQUNBOztFQUNBLElBQUlDLFlBQVksS0FBSyxDQUFDLENBQXRCLEVBQXlCQSxZQUFZLEdBQUdGLFVBQWY7RUFFekIsTUFBTUcsS0FBSyxHQUFHQyxNQUFNLENBQUNQLENBQUMsQ0FBQ0MsU0FBRixDQUFZRSxVQUFVLEdBQUcsQ0FBekIsQ0FBRCxDQUFwQixDQW5Ca0MsQ0FxQmxDOztFQUNBLE1BQU1LLElBQUksR0FBR1IsQ0FBQyxDQUFDQyxTQUFGLENBQVksQ0FBWixFQUFlRSxVQUFmLEVBQTJCTSxPQUEzQixDQUFtQyxHQUFuQyxFQUF3QyxFQUF4QyxDQUFiLENBdEJrQyxDQXdCbEM7O0VBQ0EsTUFBTUMsU0FBUyxHQUFHTCxZQUFZLEdBQUdDLEtBQWpDO0VBRUEsTUFBTUssT0FBTyxHQUFHSCxJQUFJLENBQUNJLE1BQXJCOztFQUVBLElBQUlGLFNBQVMsSUFBSUMsT0FBakIsRUFBMEI7SUFDeEIsTUFBTUUsR0FBRyxHQUFHSCxTQUFTLEdBQUdDLE9BQXhCO0lBQ0EsSUFBSUcsTUFBTSxHQUFHTixJQUFiOztJQUNBLEtBQUssSUFBSU8sQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsR0FBcEIsRUFBeUJFLENBQUMsRUFBMUIsRUFBOEJELE1BQU0sSUFBSSxHQUFWOztJQUM5QixPQUFPWixJQUFJLEdBQUdZLE1BQWQ7RUFDRCxDQUxELE1BS08sSUFBSUosU0FBUyxHQUFHLENBQWhCLEVBQW1CO0lBQ3hCO0lBQ0FJLE1BQU0sR0FBRyxJQUFUOztJQUNBLEtBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0wsU0FBcEIsRUFBK0JLLENBQUMsRUFBaEMsRUFBb0NELE1BQU0sSUFBSSxHQUFWOztJQUNwQ0EsTUFBTSxJQUFJTixJQUFWO0lBQ0EsT0FBT04sSUFBSSxHQUFHWSxNQUFkO0VBQ0QsQ0FOTSxNQU1BO0lBQ0w7SUFDQSxPQUFPWixJQUFJLEdBQUdNLElBQUksQ0FBQ1AsU0FBTCxDQUFlLENBQWYsRUFBa0JTLFNBQWxCLENBQVAsR0FBc0MsR0FBdEMsR0FBNENGLElBQUksQ0FBQ1AsU0FBTCxDQUFlUyxTQUFmLENBQW5EO0VBQ0Q7QUFDRixDQTVDRCJ9\n//# sourceURL=webpack-internal:///./node_modules/preciso/expand.js\n");

/***/ }),

/***/ "./node_modules/preciso/long_addition.js":
/*!***********************************************!*\
  !*** ./node_modules/preciso/long_addition.js ***!
  \***********************************************/
/***/ ((module) => {

eval("// assumes both numbers are positive integers\nmodule.exports = function long_addition(a, b) {\n  // assuming both positive for now\n  const alen = a.length;\n  const blen = b.length;\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\"); // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx; // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index;\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index);\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1);\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset;\n  let imax = left + 1 + right - 1; // -1 for zero-index\n\n  let result = \"\";\n  let carried = 0; // to the right of the period\n  //        0.12345\n  //    12345.0\n\n  let i = imax;\n\n  if (right > 0) {\n    while (i > imax - right) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n\n      i--;\n    }\n\n    if (result) result = \".\" + result;\n    i--; // substract 1 for dot\n  }\n\n  if (left > 0) {\n    while (i >= 0) {\n      const achar = a[i - aoffset] || \"0\";\n      const bchar = b[i - boffset] || \"0\";\n      let n = Number(achar) + Number(bchar) + carried;\n\n      if (n >= 10) {\n        n -= 10;\n        carried = 1;\n      } else {\n        carried = 0;\n      }\n\n      result = n + result;\n      i--;\n    }\n  }\n\n  if (carried === 1) {\n    result = carried + result;\n  }\n\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9sb25nX2FkZGl0aW9uLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImxvbmdfYWRkaXRpb24iLCJhIiwiYiIsImFsZW4iLCJsZW5ndGgiLCJibGVuIiwiYWlkeCIsImluZGV4T2YiLCJiaWR4IiwiYV9hZGp1c3RlZF9kb3RfaW5kZXgiLCJiX2FkanVzdGVkX2RvdF9pbmRleCIsIm9mZnNldCIsImxlZnQiLCJNYXRoIiwibWF4IiwicmlnaHQiLCJhb2Zmc2V0IiwiYm9mZnNldCIsImltYXgiLCJyZXN1bHQiLCJjYXJyaWVkIiwiaSIsImFjaGFyIiwiYmNoYXIiLCJuIiwiTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL2xvbmdfYWRkaXRpb24uanM/MGNkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhc3N1bWVzIGJvdGggbnVtYmVycyBhcmUgcG9zaXRpdmUgaW50ZWdlcnNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbG9uZ19hZGRpdGlvbihhLCBiKSB7XG4gIC8vIGFzc3VtaW5nIGJvdGggcG9zaXRpdmUgZm9yIG5vd1xuXG4gIGNvbnN0IGFsZW4gPSBhLmxlbmd0aDtcbiAgY29uc3QgYmxlbiA9IGIubGVuZ3RoO1xuXG4gIGNvbnN0IGFpZHggPSBhLmluZGV4T2YoXCIuXCIpO1xuICBjb25zdCBiaWR4ID0gYi5pbmRleE9mKFwiLlwiKTtcblxuICAvLyBiYXNpY2FsbHkgd2hlcmUgd291bGQgdGhlIGRvdCBiZVxuICAvLyBpZiB3ZSBhZGQgYSBkb3QgYXQgdGhlIGVuZCBvZiBpbnRlZ2Vyc1xuICAvLyBsaWtlIDEyMy5cbiAgY29uc3QgYV9hZGp1c3RlZF9kb3RfaW5kZXggPSBhaWR4ID09PSAtMSA/IGFsZW4gOiBhaWR4O1xuICBjb25zdCBiX2FkanVzdGVkX2RvdF9pbmRleCA9IGJpZHggPT09IC0xID8gYmxlbiA6IGJpZHg7XG5cbiAgLy8gaG93IG11Y2ggeW91IG5lZWQgdG8gc2hpZnQgdGhlIHNlY29uZCBudW1iZXJcbiAgLy8gdG8gbGluZSB1cCB0aGUgZGVjaW1hbCB3aXRoIHRoZSBmaXJzdFxuICAvLyAgICAgICAgMC4xMjM0NVxuICAvLyAgICAxMjM0NS4wXG5cbiAgY29uc3Qgb2Zmc2V0ID0gYV9hZGp1c3RlZF9kb3RfaW5kZXggLSBiX2FkanVzdGVkX2RvdF9pbmRleDtcblxuICBsZXQgbGVmdCA9IE1hdGgubWF4KGFfYWRqdXN0ZWRfZG90X2luZGV4LCBiX2FkanVzdGVkX2RvdF9pbmRleCk7XG5cbiAgbGV0IHJpZ2h0ID0gTWF0aC5tYXgoYWxlbiAtIGFfYWRqdXN0ZWRfZG90X2luZGV4IC0gMSwgYmxlbiAtIGJfYWRqdXN0ZWRfZG90X2luZGV4IC0gMSk7XG5cbiAgbGV0IGFvZmZzZXQgPSBvZmZzZXQgPCAwID8gLTEgKiBvZmZzZXQgOiAwO1xuICBsZXQgYm9mZnNldCA9IG9mZnNldCA8PSAwID8gMCA6IG9mZnNldDtcblxuICBsZXQgaW1heCA9IGxlZnQgKyAxICsgcmlnaHQgLSAxOyAvLyAtMSBmb3IgemVyby1pbmRleFxuXG4gIGxldCByZXN1bHQgPSBcIlwiO1xuXG4gIGxldCBjYXJyaWVkID0gMDtcblxuICAvLyB0byB0aGUgcmlnaHQgb2YgdGhlIHBlcmlvZFxuICAvLyAgICAgICAgMC4xMjM0NVxuICAvLyAgICAxMjM0NS4wXG4gIGxldCBpID0gaW1heDtcbiAgaWYgKHJpZ2h0ID4gMCkge1xuICAgIHdoaWxlIChpID4gaW1heCAtIHJpZ2h0KSB7XG4gICAgICBjb25zdCBhY2hhciA9IGFbaSAtIGFvZmZzZXRdIHx8IFwiMFwiO1xuICAgICAgY29uc3QgYmNoYXIgPSBiW2kgLSBib2Zmc2V0XSB8fCBcIjBcIjtcbiAgICAgIGxldCBuID0gTnVtYmVyKGFjaGFyKSArIE51bWJlcihiY2hhcikgKyBjYXJyaWVkO1xuICAgICAgaWYgKG4gPj0gMTApIHtcbiAgICAgICAgbiAtPSAxMDtcbiAgICAgICAgY2FycmllZCA9IDE7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYXJyaWVkID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChyZXN1bHQgIT09IFwiXCIgfHwgbiAhPT0gMCkge1xuICAgICAgICByZXN1bHQgPSBuICsgcmVzdWx0O1xuICAgICAgfVxuICAgICAgaS0tO1xuICAgIH1cbiAgICBpZiAocmVzdWx0KSByZXN1bHQgPSBcIi5cIiArIHJlc3VsdDtcbiAgICBpLS07IC8vIHN1YnN0cmFjdCAxIGZvciBkb3RcbiAgfVxuXG4gIGlmIChsZWZ0ID4gMCkge1xuICAgIHdoaWxlIChpID49IDApIHtcbiAgICAgIGNvbnN0IGFjaGFyID0gYVtpIC0gYW9mZnNldF0gfHwgXCIwXCI7XG4gICAgICBjb25zdCBiY2hhciA9IGJbaSAtIGJvZmZzZXRdIHx8IFwiMFwiO1xuICAgICAgbGV0IG4gPSBOdW1iZXIoYWNoYXIpICsgTnVtYmVyKGJjaGFyKSArIGNhcnJpZWQ7XG4gICAgICBpZiAobiA+PSAxMCkge1xuICAgICAgICBuIC09IDEwO1xuICAgICAgICBjYXJyaWVkID0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNhcnJpZWQgPSAwO1xuICAgICAgfVxuICAgICAgcmVzdWx0ID0gbiArIHJlc3VsdDtcbiAgICAgIGktLTtcbiAgICB9XG4gIH1cblxuICBpZiAoY2FycmllZCA9PT0gMSkge1xuICAgIHJlc3VsdCA9IGNhcnJpZWQgKyByZXN1bHQ7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLGFBQVQsQ0FBdUJDLENBQXZCLEVBQTBCQyxDQUExQixFQUE2QjtFQUM1QztFQUVBLE1BQU1DLElBQUksR0FBR0YsQ0FBQyxDQUFDRyxNQUFmO0VBQ0EsTUFBTUMsSUFBSSxHQUFHSCxDQUFDLENBQUNFLE1BQWY7RUFFQSxNQUFNRSxJQUFJLEdBQUdMLENBQUMsQ0FBQ00sT0FBRixDQUFVLEdBQVYsQ0FBYjtFQUNBLE1BQU1DLElBQUksR0FBR04sQ0FBQyxDQUFDSyxPQUFGLENBQVUsR0FBVixDQUFiLENBUDRDLENBUzVDO0VBQ0E7RUFDQTs7RUFDQSxNQUFNRSxvQkFBb0IsR0FBR0gsSUFBSSxLQUFLLENBQUMsQ0FBVixHQUFjSCxJQUFkLEdBQXFCRyxJQUFsRDtFQUNBLE1BQU1JLG9CQUFvQixHQUFHRixJQUFJLEtBQUssQ0FBQyxDQUFWLEdBQWNILElBQWQsR0FBcUJHLElBQWxELENBYjRDLENBZTVDO0VBQ0E7RUFDQTtFQUNBOztFQUVBLE1BQU1HLE1BQU0sR0FBR0Ysb0JBQW9CLEdBQUdDLG9CQUF0QztFQUVBLElBQUlFLElBQUksR0FBR0MsSUFBSSxDQUFDQyxHQUFMLENBQVNMLG9CQUFULEVBQStCQyxvQkFBL0IsQ0FBWDtFQUVBLElBQUlLLEtBQUssR0FBR0YsSUFBSSxDQUFDQyxHQUFMLENBQVNYLElBQUksR0FBR00sb0JBQVAsR0FBOEIsQ0FBdkMsRUFBMENKLElBQUksR0FBR0ssb0JBQVAsR0FBOEIsQ0FBeEUsQ0FBWjtFQUVBLElBQUlNLE9BQU8sR0FBR0wsTUFBTSxHQUFHLENBQVQsR0FBYSxDQUFDLENBQUQsR0FBS0EsTUFBbEIsR0FBMkIsQ0FBekM7RUFDQSxJQUFJTSxPQUFPLEdBQUdOLE1BQU0sSUFBSSxDQUFWLEdBQWMsQ0FBZCxHQUFrQkEsTUFBaEM7RUFFQSxJQUFJTyxJQUFJLEdBQUdOLElBQUksR0FBRyxDQUFQLEdBQVdHLEtBQVgsR0FBbUIsQ0FBOUIsQ0E3QjRDLENBNkJYOztFQUVqQyxJQUFJSSxNQUFNLEdBQUcsRUFBYjtFQUVBLElBQUlDLE9BQU8sR0FBRyxDQUFkLENBakM0QyxDQW1DNUM7RUFDQTtFQUNBOztFQUNBLElBQUlDLENBQUMsR0FBR0gsSUFBUjs7RUFDQSxJQUFJSCxLQUFLLEdBQUcsQ0FBWixFQUFlO0lBQ2IsT0FBT00sQ0FBQyxHQUFHSCxJQUFJLEdBQUdILEtBQWxCLEVBQXlCO01BQ3ZCLE1BQU1PLEtBQUssR0FBR3JCLENBQUMsQ0FBQ29CLENBQUMsR0FBR0wsT0FBTCxDQUFELElBQWtCLEdBQWhDO01BQ0EsTUFBTU8sS0FBSyxHQUFHckIsQ0FBQyxDQUFDbUIsQ0FBQyxHQUFHSixPQUFMLENBQUQsSUFBa0IsR0FBaEM7TUFDQSxJQUFJTyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0gsS0FBRCxDQUFOLEdBQWdCRyxNQUFNLENBQUNGLEtBQUQsQ0FBdEIsR0FBZ0NILE9BQXhDOztNQUNBLElBQUlJLENBQUMsSUFBSSxFQUFULEVBQWE7UUFDWEEsQ0FBQyxJQUFJLEVBQUw7UUFDQUosT0FBTyxHQUFHLENBQVY7TUFDRCxDQUhELE1BR087UUFDTEEsT0FBTyxHQUFHLENBQVY7TUFDRDs7TUFDRCxJQUFJRCxNQUFNLEtBQUssRUFBWCxJQUFpQkssQ0FBQyxLQUFLLENBQTNCLEVBQThCO1FBQzVCTCxNQUFNLEdBQUdLLENBQUMsR0FBR0wsTUFBYjtNQUNEOztNQUNERSxDQUFDO0lBQ0Y7O0lBQ0QsSUFBSUYsTUFBSixFQUFZQSxNQUFNLEdBQUcsTUFBTUEsTUFBZjtJQUNaRSxDQUFDLEdBakJZLENBaUJSO0VBQ047O0VBRUQsSUFBSVQsSUFBSSxHQUFHLENBQVgsRUFBYztJQUNaLE9BQU9TLENBQUMsSUFBSSxDQUFaLEVBQWU7TUFDYixNQUFNQyxLQUFLLEdBQUdyQixDQUFDLENBQUNvQixDQUFDLEdBQUdMLE9BQUwsQ0FBRCxJQUFrQixHQUFoQztNQUNBLE1BQU1PLEtBQUssR0FBR3JCLENBQUMsQ0FBQ21CLENBQUMsR0FBR0osT0FBTCxDQUFELElBQWtCLEdBQWhDO01BQ0EsSUFBSU8sQ0FBQyxHQUFHQyxNQUFNLENBQUNILEtBQUQsQ0FBTixHQUFnQkcsTUFBTSxDQUFDRixLQUFELENBQXRCLEdBQWdDSCxPQUF4Qzs7TUFDQSxJQUFJSSxDQUFDLElBQUksRUFBVCxFQUFhO1FBQ1hBLENBQUMsSUFBSSxFQUFMO1FBQ0FKLE9BQU8sR0FBRyxDQUFWO01BQ0QsQ0FIRCxNQUdPO1FBQ0xBLE9BQU8sR0FBRyxDQUFWO01BQ0Q7O01BQ0RELE1BQU0sR0FBR0ssQ0FBQyxHQUFHTCxNQUFiO01BQ0FFLENBQUM7SUFDRjtFQUNGOztFQUVELElBQUlELE9BQU8sS0FBSyxDQUFoQixFQUFtQjtJQUNqQkQsTUFBTSxHQUFHQyxPQUFPLEdBQUdELE1BQW5CO0VBQ0Q7O0VBRUQsT0FBT0EsTUFBUDtBQUNELENBaEZEIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/long_addition.js\n");

/***/ }),

/***/ "./node_modules/preciso/long_division.js":
/*!***********************************************!*\
  !*** ./node_modules/preciso/long_division.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const compare_positive = __webpack_require__(/*! ./compare_positive.js */ \"./node_modules/preciso/compare_positive.js\");\n\nconst add = __webpack_require__(/*! ./add.js */ \"./node_modules/preciso/add.js\");\n\nconst multiply = __webpack_require__(/*! ./multiply.js */ \"./node_modules/preciso/multiply.js\");\n\nconst subtract = __webpack_require__(/*! ./subtract.js */ \"./node_modules/preciso/subtract.js\");\n\nconst round_last_decimal = __webpack_require__(/*! ./round_last_decimal.js */ \"./node_modules/preciso/round_last_decimal.js\"); // given dividend and divisor are positive numberical strings\n\n\nmodule.exports = function long_division(dividend, divisor, {\n  max_decimal_digits = 100,\n  ellipsis = false\n} = {}) {\n  // remove unnecessary starting zeros\n  // ex: 0.5 => .5\n  if (dividend[0] === \"0\") dividend = dividend.substring(1);\n  if (divisor[0] === \"0\") divisor = divisor.substring(1);\n  const dividend_index_of_dot = dividend.indexOf(\".\");\n  const divisor_index_of_dot = divisor.indexOf(\".\");\n  const adjusted_dividend_index_of_dot = dividend_index_of_dot === -1 ? dividend.length : dividend_index_of_dot;\n  const divisor_num_decimal_places = divisor_index_of_dot === -1 ? 0 : divisor.length - 1 - divisor_index_of_dot; // whether the result has a repeating decimal\n  // e.g. 1/3 is repeating as in \"0.333...\"\n\n  let repeating = false; // remove decimals\n\n  dividend = dividend.replace(/\\./, \"\");\n  divisor = divisor.replace(/\\./, \"\");\n  const dividend_length = dividend.length;\n  let current = \"\";\n  let quotient = \"\";\n  let comparison;\n  let offset = -1 * divisor_num_decimal_places;\n  let skip = 0;\n\n  for (let i = 0; i < dividend_length; i++) {\n    const char = dividend[i];\n    current += char;\n    comparison = compare_positive(current, divisor);\n\n    if (comparison === \">\") {\n      // same as const times = Math.floor(current / divisor);\n      // but without floating point problems\n      let times = 1;\n      let product = add(divisor, divisor);\n      let passed_product = divisor;\n\n      while (compare_positive(product, current) !== \">\") {\n        times++;\n        passed_product = product;\n        product = add(product, divisor);\n      }\n\n      times = times.toString();\n\n      if (quotient !== \"\") {\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n      }\n\n      quotient += times; // string concatentation\n\n      current = subtract(current, passed_product);\n      skip = 0;\n    } else if (comparison === \"<\") {\n      if (quotient === \"\") {\n        offset++;\n      }\n\n      skip++; // outside greater than inside\n\n      continue;\n    } else if (comparison === \"=\") {\n      if (quotient !== \"\") {\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n      }\n\n      quotient += \"1\";\n      current = \"0\";\n      skip = 0;\n    }\n  }\n\n  if (current.match(/^0+$/g)) {\n    if (comparison === \"<\") {\n      quotient += current.substring(0, current.length - 1);\n    }\n  } else {\n    const previous = {}; // keep dividing until we have an answer\n    // figure out current place of decimal number\n\n    const idot = adjusted_dividend_index_of_dot - offset;\n    const qlen = quotient.length; // add 1 extra for rounding purposes\n\n    const imax = idot - qlen + max_decimal_digits + 1; // reset skip if just \"\" so far because don't want to count 0 in 0.\n\n    if (quotient === \"\") {\n      skip = 0;\n    }\n\n    for (let i = 0; i < imax; i++) {\n      current += \"0\";\n\n      if (ellipsis) {\n        if (current in previous) {\n          previous[current]++;\n\n          if (previous[current] > 3) {\n            quotient += \"...\";\n            repeating = true;\n            break;\n          }\n        } else {\n          previous[current] = 1;\n        }\n      }\n\n      const comparison = compare_positive(current, divisor);\n\n      if (comparison === \">\") {\n        // inside greater than outside\n        // how many times the divisor goes into the current\n        let times = 1;\n        let product = add(divisor, divisor);\n        let passed_product = divisor;\n\n        while (compare_positive(product, current) !== \">\") {\n          times++;\n          passed_product = product;\n          product = add(product, divisor);\n        }\n\n        times = times.toString(); // pad left zeros\n\n        for (let i = times.length; i <= skip; i++) quotient += \"0\";\n\n        quotient += times; // string concatentation\n\n        current = subtract(current, passed_product);\n\n        if (current === \"0\") {\n          break;\n        }\n\n        skip = 0;\n      } else if (comparison === \"<\") {\n        // outside greater than inside\n        skip++;\n        continue;\n      } else if (comparison === \"=\") {\n        // fill in previous with zeros\n        for (let i = 0; i < skip; i++) quotient += \"0\";\n\n        quotient += \"1\";\n        skip = 0;\n        break;\n      }\n    }\n  } // reinsert decimal place\n\n\n  const idot = adjusted_dividend_index_of_dot - offset;\n  const qlen = quotient.length;\n  let num_decimals;\n\n  if (idot === qlen) {\n    // integer number so don't do anything\n    num_decimals = 0;\n  } else if (idot < 0) {\n    quotient = \"0.\" + \"0\".repeat(Math.abs(idot)) + quotient;\n    num_decimals = qlen - idot; // idot is negative, so adding\n  } else if (idot > qlen) {\n    // add more zeros to integer\n    for (let i = qlen; i < idot; i++) quotient += \"0\";\n\n    num_decimals = 0;\n  } else if (idot < qlen) {\n    quotient = quotient.substring(0, idot) + \".\" + quotient.substring(idot);\n    num_decimals = qlen - idot;\n  } else if (idot === 0) {\n    quotient = \"0.\" + quotient;\n    num_decimals = qlen;\n  } // remove zeros from front\n  // 03938.123 => 3938.123\n\n\n  quotient = quotient.replace(/^0+/, \"\"); // remove extra zeros from the end\n\n  quotient = quotient.replace(/\\.\\d+0+$/, \"\"); // round if necessary\n\n  if (!repeating) {\n    const extra_decimals = num_decimals - max_decimal_digits;\n\n    if (extra_decimals > 0) {\n      quotient = round_last_decimal(quotient.substring(0, quotient.length - extra_decimals + 1));\n    }\n  }\n\n  if (quotient[0] === \".\") quotient = \"0\" + quotient;\n  return quotient;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/preciso/long_division.js\n");

/***/ }),

/***/ "./node_modules/preciso/long_multiplication.js":
/*!*****************************************************!*\
  !*** ./node_modules/preciso/long_multiplication.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("const CHUNK_SIZE = 15;\n/**\n *\n * @param {String} a - numerical string larger or equal to b\n * @param {String} b - numerical string smaller or equal to a\n * @returns {String} product - result of multiplying a with b\n */\n\nmodule.exports = function long_multiplication(a, b) {\n  if (a === \"0\" || b === \"0\") return \"0\";\n  const top_index_of_dot = a.indexOf(\".\");\n  const bottom_index_of_dot = b.indexOf(\".\");\n  const a_num_decimal_places = top_index_of_dot === -1 ? 0 : a.length - 1 - top_index_of_dot;\n  const b_num_decimal_places = bottom_index_of_dot === -1 ? 0 : b.length - 1 - bottom_index_of_dot;\n  const out_num_decimal_places = a_num_decimal_places + b_num_decimal_places; // remove decimals\n\n  a = a.replace(\".\", \"\");\n  b = b.replace(\".\", \"\");\n  const alen = a.length;\n  const blen = b.length;\n  const chunks = [];\n  let i = alen;\n\n  while (i >= 0) {\n    const end = i;\n    const start = i -= CHUNK_SIZE;\n    const str = a.substring(start, end);\n    chunks.push([Number(str), str.length]);\n  }\n\n  const partial_products = [];\n  const partials = []; // for each number in multiplier\n\n  for (let i = 0, ireverse = blen - 1; ireverse >= 0; ireverse--, i++) {\n    const bstr = b[ireverse];\n    const bnum = Number(bstr);\n    let carried = 0;\n    let partial = \"\";\n    const ichunklast = chunks.length - 1;\n    chunks.forEach(([chunk, chunklen], c) => {\n      const subpartial = carried + bnum * chunk;\n      let subpartstr = subpartial.toString();\n      const subpartcharlen = subpartstr.length;\n\n      if (subpartcharlen > chunklen && c !== ichunklast) {\n        const islice = -1 * chunklen;\n        partial = subpartstr.slice(islice) + partial;\n        carried = Number(subpartstr.slice(0, islice));\n      } else {\n        const imax = chunklen - subpartcharlen;\n\n        for (let i = 0; i < imax; i++) {\n          subpartstr = \"0\" + subpartstr;\n        }\n\n        carried = 0;\n        partial = subpartstr + partial;\n      }\n    }); // add number of zeros at end\n\n    partial += \"0\".repeat(i);\n    partial_products.push(partial);\n    partials.push([Array.from(partial).map(char => Number(char)), partial.length]);\n  } // back to front, iterate through columns\n  // and add partial products together\n\n\n  const num_partials = partial_products.length;\n  const number_of_columns = partials[partials.length - 1][1] + num_partials;\n  let result = \"\";\n  let carried = 0;\n\n  for (let icol = 0; icol < number_of_columns; icol++) {\n    let sum = carried;\n    const pmax = Math.min(icol, num_partials - 1);\n\n    for (let p = 0; p <= pmax; p++) {\n      const [pnums, plen] = partials[p];\n      const i = plen - 1 - icol;\n\n      if (i >= 0) {\n        sum += pnums[i];\n      }\n    }\n\n    if (sum >= 10) {\n      sum = sum.toString();\n      result = sum[sum.length - 1] + result;\n      carried = Number(sum.slice(0, -1));\n    } else {\n      result = sum + result;\n      carried = 0;\n    }\n  } // add decimal back in\n\n\n  if (out_num_decimal_places === 0) {\n    // integer\n    // remove extra zeros\n    result = result.replace(/^0+/, \"\");\n  } else {\n    // decimal number\n    const idot = result.length - out_num_decimal_places;\n    result = result.substring(0, idot) + \".\" + result.substring(idot); // remove zeros from front\n\n    result = result.replace(/^0+/, \"\"); // remove extra zeros from the end\n\n    result = result.replace(/\\.?0+$/, \"\");\n    if (result[0] === \".\") result = \"0\" + result;\n  }\n\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/preciso/long_multiplication.js\n");

/***/ }),

/***/ "./node_modules/preciso/long_subtraction.js":
/*!**************************************************!*\
  !*** ./node_modules/preciso/long_subtraction.js ***!
  \**************************************************/
/***/ ((module) => {

eval("// const lookup = {};\n// const vals = [undefined, 0, 1, 2, 3, 4, 5, 6, 8, 9];\n// vals.forEach(top => {\n//   lookup[top] = {};\n//   vals.forEach(bottom => {\n//     lookup[top][bottom] = (top || 0) - (bottom || 0);\n//   })\n// });\n// assumes (1) both a and b are positive numbers\n// and (2) a is larger than b\nmodule.exports = function long_subtraction(a, b) {\n  const alen = a.length;\n  const blen = b.length;\n  const aidx = a.indexOf(\".\");\n  const bidx = b.indexOf(\".\"); // basically where would the dot be\n  // if we add a dot at the end of integers\n  // like 123.\n\n  const a_adjusted_dot_index = aidx === -1 ? alen : aidx;\n  const b_adjusted_dot_index = bidx === -1 ? blen : bidx; // console.log({a_adjusted_dot_index, b_adjusted_dot_index});\n  // how much you need to shift the second number\n  // to line up the decimal with the first\n  //        0.12345\n  //    12345.0\n\n  const offset = a_adjusted_dot_index - b_adjusted_dot_index; // console.log(\"offset:\", offset);\n\n  let left = Math.max(a_adjusted_dot_index, b_adjusted_dot_index); // console.log(\"left:\", left);\n\n  let right = Math.max(alen - a_adjusted_dot_index - 1, blen - b_adjusted_dot_index - 1); // console.log(\"right:\", right);\n\n  let aoffset = offset < 0 ? -1 * offset : 0;\n  let boffset = offset <= 0 ? 0 : offset; // console.log({aoffset, boffset});\n\n  let imax = left + 1 + right - 1; // -1 for zero-index\n  // console.log({imax});\n\n  let result = \"\"; // number of borrowings\n\n  let borrowed = 0; // to the right of the period\n  //  100.5  6  7\n  //    2.2  9  3\n  //        (-3 + 10)  4\n\n  let i = imax;\n\n  if (right > 0) {\n    while (i > imax - right) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\"; // console.log(\"pre borrowing\", {top, bottom});\n\n      top -= borrowed;\n      borrowed = 0; // console.log(\"after borrowing\", {top, bottom});\n\n      let n = top - bottom; // console.log({n});\n\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      } // console.log({n});\n\n\n      if (result !== \"\" || n !== 0) {\n        result = n + result;\n      }\n\n      i--;\n    }\n\n    if (result !== \"\") {\n      result = \".\" + result;\n    }\n\n    i--; // substract 1 for dot\n  } // console.log({result});\n\n\n  if (left > 0) {\n    while (i > 0) {\n      // console.log(\"\\n\\n\", {i});\n      let top = a[i - aoffset] || \"0\";\n      let bottom = b[i - boffset] || \"0\"; // console.log(\"pre borrowing\", {top, bottom});\n\n      top -= borrowed;\n      borrowed = 0; // console.log(\"after borrowing\", {top, bottom});\n\n      let n = top - bottom; // console.log({n});\n\n      if (n < 0) {\n        while (n < 0) {\n          borrowed++;\n          n += 10;\n        }\n      } else if (borrowed) {\n        borrowed--;\n      } // console.log({n});\n\n\n      result = n + result;\n      i--;\n    } // console.log({borrowed});\n    // special rule for last one\n\n\n    const achar = a[0 - aoffset] || \"0\";\n    const bchar = b[0 - boffset] || \"0\";\n    let n = Number(achar) - (borrowed > 0 ? 1 : 0) - Number(bchar);\n\n    if (n !== 0) {\n      result = n + result;\n    } // remove any zeros in front like in 0123\n\n\n    result = result.replace(/^0+/, \"\");\n  } // if decimal number add zero\n\n\n  if (result[0] === \".\") result = \"0\" + result;\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/preciso/long_subtraction.js\n");

/***/ }),

/***/ "./node_modules/preciso/multiply.js":
/*!******************************************!*\
  !*** ./node_modules/preciso/multiply.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const absolute = __webpack_require__(/*! ./absolute.js */ \"./node_modules/preciso/absolute.js\");\n\nconst clean = __webpack_require__(/*! ./clean.js */ \"./node_modules/preciso/clean.js\");\n\nconst compare_positive = __webpack_require__(/*! ./compare_positive.js */ \"./node_modules/preciso/compare_positive.js\");\n\nconst long_multiplication = __webpack_require__(/*! ./long_multiplication.js */ \"./node_modules/preciso/long_multiplication.js\");\n\nmodule.exports = function multiply(a, b) {\n  a = clean(a);\n  b = clean(b);\n  const apos = a[0] !== \"-\";\n  const bpos = b[0] !== \"-\";\n  const out_sign = apos !== bpos ? \"-\" : \"\";\n  a = absolute(a);\n  b = absolute(b);\n  const comparison = compare_positive(a, b);\n\n  if (comparison === \"<\") {\n    const aold = a;\n    const bold = b;\n    a = bold;\n    b = aold;\n  }\n\n  return out_sign + long_multiplication(a, b);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9tdWx0aXBseS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL211bHRpcGx5LmpzPzYxODgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYWJzb2x1dGUgPSByZXF1aXJlKFwiLi9hYnNvbHV0ZS5qc1wiKTtcbmNvbnN0IGNsZWFuID0gcmVxdWlyZShcIi4vY2xlYW4uanNcIik7XG5jb25zdCBjb21wYXJlX3Bvc2l0aXZlID0gcmVxdWlyZShcIi4vY29tcGFyZV9wb3NpdGl2ZS5qc1wiKTtcbmNvbnN0IGxvbmdfbXVsdGlwbGljYXRpb24gPSByZXF1aXJlKFwiLi9sb25nX211bHRpcGxpY2F0aW9uLmpzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG11bHRpcGx5KGEsIGIpIHtcbiAgYSA9IGNsZWFuKGEpO1xuICBiID0gY2xlYW4oYik7XG5cbiAgY29uc3QgYXBvcyA9IGFbMF0gIT09IFwiLVwiO1xuICBjb25zdCBicG9zID0gYlswXSAhPT0gXCItXCI7XG5cbiAgY29uc3Qgb3V0X3NpZ24gPSBhcG9zICE9PSBicG9zID8gXCItXCIgOiBcIlwiO1xuXG4gIGEgPSBhYnNvbHV0ZShhKTtcbiAgYiA9IGFic29sdXRlKGIpO1xuXG4gIGNvbnN0IGNvbXBhcmlzb24gPSBjb21wYXJlX3Bvc2l0aXZlKGEsIGIpO1xuXG4gIGlmIChjb21wYXJpc29uID09PSBcIjxcIikge1xuICAgIGNvbnN0IGFvbGQgPSBhO1xuICAgIGNvbnN0IGJvbGQgPSBiO1xuICAgIGEgPSBib2xkO1xuICAgIGIgPSBhb2xkO1xuICB9XG5cbiAgcmV0dXJuIG91dF9zaWduICsgbG9uZ19tdWx0aXBsaWNhdGlvbihhLCBiKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/multiply.js\n");

/***/ }),

/***/ "./node_modules/preciso/round_last_decimal.js":
/*!****************************************************!*\
  !*** ./node_modules/preciso/round_last_decimal.js ***!
  \****************************************************/
/***/ ((module) => {

eval("// given n is a decimal number\nconst up = [\"5\", \"6\", \"7\", \"8\", \"9\"];\n\nmodule.exports = function round_last_decimal(n) {\n  // remove + from beginning\n  if (n[0] === \"+\") n = n.substring(1); //console.log(\"rounding:\", {n});\n\n  const len = n.length; //console.log({len});\n\n  let result = \"\";\n  const last_char = n[n.length - 1]; //console.log({last_char});\n\n  if (up.includes(last_char)) {\n    let i;\n\n    for (i = len - 2; i >= 0; i--) {\n      const char = n[i]; //console.log({char});\n      // skip over . or -\n\n      if (char === \".\" || char === \"-\") continue;\n      const nchar = Number(char) + 1; //console.log({nchar});\n\n      if (nchar === 10) {\n        result = \"0\" + result; // keep rounding up\n      } else {\n        result = nchar + result;\n        break;\n      }\n    } //console.log({i});\n\n\n    if (i > 0) result = n.substring(0, i) + result;\n  } else {\n    result = n.substring(0, len - 1);\n  }\n\n  if (result[result.length - 1] === \".\") result = result.substring(0, result.length - 1); // remove trailing zeros in decimal number\n  // 0.50 => 0.5\n\n  if (result.indexOf(\".\") > -1) result = result.replace(/0+$/, \"\");\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9yb3VuZF9sYXN0X2RlY2ltYWwuanMuanMiLCJuYW1lcyI6WyJ1cCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyb3VuZF9sYXN0X2RlY2ltYWwiLCJuIiwic3Vic3RyaW5nIiwibGVuIiwibGVuZ3RoIiwicmVzdWx0IiwibGFzdF9jaGFyIiwiaW5jbHVkZXMiLCJpIiwiY2hhciIsIm5jaGFyIiwiTnVtYmVyIiwiaW5kZXhPZiIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3ByZWNpc28vcm91bmRfbGFzdF9kZWNpbWFsLmpzPzE3YzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2l2ZW4gbiBpcyBhIGRlY2ltYWwgbnVtYmVyXG5jb25zdCB1cCA9IFtcIjVcIiwgXCI2XCIsIFwiN1wiLCBcIjhcIiwgXCI5XCJdO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByb3VuZF9sYXN0X2RlY2ltYWwobikge1xuICAvLyByZW1vdmUgKyBmcm9tIGJlZ2lubmluZ1xuICBpZiAoblswXSA9PT0gXCIrXCIpIG4gPSBuLnN1YnN0cmluZygxKTtcblxuICAvL2NvbnNvbGUubG9nKFwicm91bmRpbmc6XCIsIHtufSk7XG4gIGNvbnN0IGxlbiA9IG4ubGVuZ3RoO1xuICAvL2NvbnNvbGUubG9nKHtsZW59KTtcbiAgbGV0IHJlc3VsdCA9IFwiXCI7XG5cbiAgY29uc3QgbGFzdF9jaGFyID0gbltuLmxlbmd0aCAtIDFdO1xuICAvL2NvbnNvbGUubG9nKHtsYXN0X2NoYXJ9KTtcblxuICBpZiAodXAuaW5jbHVkZXMobGFzdF9jaGFyKSkge1xuICAgIGxldCBpO1xuICAgIGZvciAoaSA9IGxlbiAtIDI7IGkgPj0gMDsgaS0tKSB7XG4gICAgICBjb25zdCBjaGFyID0gbltpXTtcbiAgICAgIC8vY29uc29sZS5sb2coe2NoYXJ9KTtcbiAgICAgIC8vIHNraXAgb3ZlciAuIG9yIC1cbiAgICAgIGlmIChjaGFyID09PSBcIi5cIiB8fCBjaGFyID09PSBcIi1cIikgY29udGludWU7XG5cbiAgICAgIGNvbnN0IG5jaGFyID0gTnVtYmVyKGNoYXIpICsgMTtcbiAgICAgIC8vY29uc29sZS5sb2coe25jaGFyfSk7XG5cbiAgICAgIGlmIChuY2hhciA9PT0gMTApIHtcbiAgICAgICAgcmVzdWx0ID0gXCIwXCIgKyByZXN1bHQ7XG4gICAgICAgIC8vIGtlZXAgcm91bmRpbmcgdXBcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc3VsdCA9IG5jaGFyICsgcmVzdWx0O1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgLy9jb25zb2xlLmxvZyh7aX0pO1xuICAgIGlmIChpID4gMCkgcmVzdWx0ID0gbi5zdWJzdHJpbmcoMCwgaSkgKyByZXN1bHQ7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gbi5zdWJzdHJpbmcoMCwgbGVuIC0gMSk7XG4gIH1cblxuICBpZiAocmVzdWx0W3Jlc3VsdC5sZW5ndGggLSAxXSA9PT0gXCIuXCIpIHJlc3VsdCA9IHJlc3VsdC5zdWJzdHJpbmcoMCwgcmVzdWx0Lmxlbmd0aCAtIDEpO1xuXG4gIC8vIHJlbW92ZSB0cmFpbGluZyB6ZXJvcyBpbiBkZWNpbWFsIG51bWJlclxuICAvLyAwLjUwID0+IDAuNVxuICBpZiAocmVzdWx0LmluZGV4T2YoXCIuXCIpID4gLTEpIHJlc3VsdCA9IHJlc3VsdC5yZXBsYWNlKC8wKyQvLCBcIlwiKTtcblxuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxFQUFFLEdBQUcsQ0FBQyxHQUFELEVBQU0sR0FBTixFQUFXLEdBQVgsRUFBZ0IsR0FBaEIsRUFBcUIsR0FBckIsQ0FBWDs7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLGtCQUFULENBQTRCQyxDQUE1QixFQUErQjtFQUM5QztFQUNBLElBQUlBLENBQUMsQ0FBQyxDQUFELENBQUQsS0FBUyxHQUFiLEVBQWtCQSxDQUFDLEdBQUdBLENBQUMsQ0FBQ0MsU0FBRixDQUFZLENBQVosQ0FBSixDQUY0QixDQUk5Qzs7RUFDQSxNQUFNQyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0csTUFBZCxDQUw4QyxDQU05Qzs7RUFDQSxJQUFJQyxNQUFNLEdBQUcsRUFBYjtFQUVBLE1BQU1DLFNBQVMsR0FBR0wsQ0FBQyxDQUFDQSxDQUFDLENBQUNHLE1BQUYsR0FBVyxDQUFaLENBQW5CLENBVDhDLENBVTlDOztFQUVBLElBQUlQLEVBQUUsQ0FBQ1UsUUFBSCxDQUFZRCxTQUFaLENBQUosRUFBNEI7SUFDMUIsSUFBSUUsQ0FBSjs7SUFDQSxLQUFLQSxDQUFDLEdBQUdMLEdBQUcsR0FBRyxDQUFmLEVBQWtCSyxDQUFDLElBQUksQ0FBdkIsRUFBMEJBLENBQUMsRUFBM0IsRUFBK0I7TUFDN0IsTUFBTUMsSUFBSSxHQUFHUixDQUFDLENBQUNPLENBQUQsQ0FBZCxDQUQ2QixDQUU3QjtNQUNBOztNQUNBLElBQUlDLElBQUksS0FBSyxHQUFULElBQWdCQSxJQUFJLEtBQUssR0FBN0IsRUFBa0M7TUFFbEMsTUFBTUMsS0FBSyxHQUFHQyxNQUFNLENBQUNGLElBQUQsQ0FBTixHQUFlLENBQTdCLENBTjZCLENBTzdCOztNQUVBLElBQUlDLEtBQUssS0FBSyxFQUFkLEVBQWtCO1FBQ2hCTCxNQUFNLEdBQUcsTUFBTUEsTUFBZixDQURnQixDQUVoQjtNQUNELENBSEQsTUFHTztRQUNMQSxNQUFNLEdBQUdLLEtBQUssR0FBR0wsTUFBakI7UUFDQTtNQUNEO0lBQ0YsQ0FsQnlCLENBbUIxQjs7O0lBQ0EsSUFBSUcsQ0FBQyxHQUFHLENBQVIsRUFBV0gsTUFBTSxHQUFHSixDQUFDLENBQUNDLFNBQUYsQ0FBWSxDQUFaLEVBQWVNLENBQWYsSUFBb0JILE1BQTdCO0VBQ1osQ0FyQkQsTUFxQk87SUFDTEEsTUFBTSxHQUFHSixDQUFDLENBQUNDLFNBQUYsQ0FBWSxDQUFaLEVBQWVDLEdBQUcsR0FBRyxDQUFyQixDQUFUO0VBQ0Q7O0VBRUQsSUFBSUUsTUFBTSxDQUFDQSxNQUFNLENBQUNELE1BQVAsR0FBZ0IsQ0FBakIsQ0FBTixLQUE4QixHQUFsQyxFQUF1Q0MsTUFBTSxHQUFHQSxNQUFNLENBQUNILFNBQVAsQ0FBaUIsQ0FBakIsRUFBb0JHLE1BQU0sQ0FBQ0QsTUFBUCxHQUFnQixDQUFwQyxDQUFULENBckNPLENBdUM5QztFQUNBOztFQUNBLElBQUlDLE1BQU0sQ0FBQ08sT0FBUCxDQUFlLEdBQWYsSUFBc0IsQ0FBQyxDQUEzQixFQUE4QlAsTUFBTSxHQUFHQSxNQUFNLENBQUNRLE9BQVAsQ0FBZSxLQUFmLEVBQXNCLEVBQXRCLENBQVQ7RUFFOUIsT0FBT1IsTUFBUDtBQUNELENBNUNEIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/round_last_decimal.js\n");

/***/ }),

/***/ "./node_modules/preciso/subtract.js":
/*!******************************************!*\
  !*** ./node_modules/preciso/subtract.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const clean = __webpack_require__(/*! ./clean */ \"./node_modules/preciso/clean.js\");\n\nconst compare_positive = __webpack_require__(/*! ./compare_positive.js */ \"./node_modules/preciso/compare_positive.js\");\n\nconst long_addition = __webpack_require__(/*! ./long_addition.js */ \"./node_modules/preciso/long_addition.js\");\n\nconst long_subtraction = __webpack_require__(/*! ./long_subtraction.js */ \"./node_modules/preciso/long_subtraction.js\");\n\nmodule.exports = function subtract(a, b) {\n  a = clean(a);\n  b = clean(b);\n  const a_is_positive = a[0] !== \"-\";\n  const b_is_positive = b[0] !== \"-\";\n\n  if (a_is_positive) {\n    if (b_is_positive) {\n      const comparison = compare_positive(a, b);\n\n      if (comparison === \">\") {\n        return long_subtraction(a, b);\n      } else if (comparison === \"<\") {\n        return \"-\" + long_subtraction(b, a);\n      } else {\n        return \"0\";\n      }\n    } else {\n      return long_addition(a, b.substring(1));\n    }\n  } else if (b_is_positive) {\n    return \"-\" + long_addition(a.substring(1), b);\n  } else {\n    a = a.substring(1);\n    b = b.substring(1);\n    const comparison = compare_positive(a, b);\n\n    if (comparison === \">\") {\n      return \"-\" + long_subtraction(a, b);\n    } else if (comparison === \"<\") {\n      return long_subtraction(b, a);\n    } else {\n      return \"0\";\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJlY2lzby9zdWJ0cmFjdC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcmVjaXNvL3N1YnRyYWN0LmpzPzRlOGIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2xlYW4gPSByZXF1aXJlKFwiLi9jbGVhblwiKTtcbmNvbnN0IGNvbXBhcmVfcG9zaXRpdmUgPSByZXF1aXJlKFwiLi9jb21wYXJlX3Bvc2l0aXZlLmpzXCIpO1xuY29uc3QgbG9uZ19hZGRpdGlvbiA9IHJlcXVpcmUoXCIuL2xvbmdfYWRkaXRpb24uanNcIik7XG5jb25zdCBsb25nX3N1YnRyYWN0aW9uID0gcmVxdWlyZShcIi4vbG9uZ19zdWJ0cmFjdGlvbi5qc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzdWJ0cmFjdChhLCBiKSB7XG4gIGEgPSBjbGVhbihhKTtcbiAgYiA9IGNsZWFuKGIpO1xuXG4gIGNvbnN0IGFfaXNfcG9zaXRpdmUgPSBhWzBdICE9PSBcIi1cIjtcbiAgY29uc3QgYl9pc19wb3NpdGl2ZSA9IGJbMF0gIT09IFwiLVwiO1xuICBpZiAoYV9pc19wb3NpdGl2ZSkge1xuICAgIGlmIChiX2lzX3Bvc2l0aXZlKSB7XG4gICAgICBjb25zdCBjb21wYXJpc29uID0gY29tcGFyZV9wb3NpdGl2ZShhLCBiKTtcbiAgICAgIGlmIChjb21wYXJpc29uID09PSBcIj5cIikge1xuICAgICAgICByZXR1cm4gbG9uZ19zdWJ0cmFjdGlvbihhLCBiKTtcbiAgICAgIH0gZWxzZSBpZiAoY29tcGFyaXNvbiA9PT0gXCI8XCIpIHtcbiAgICAgICAgcmV0dXJuIFwiLVwiICsgbG9uZ19zdWJ0cmFjdGlvbihiLCBhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBcIjBcIjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGxvbmdfYWRkaXRpb24oYSwgYi5zdWJzdHJpbmcoMSkpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChiX2lzX3Bvc2l0aXZlKSB7XG4gICAgcmV0dXJuIFwiLVwiICsgbG9uZ19hZGRpdGlvbihhLnN1YnN0cmluZygxKSwgYik7XG4gIH0gZWxzZSB7XG4gICAgYSA9IGEuc3Vic3RyaW5nKDEpO1xuICAgIGIgPSBiLnN1YnN0cmluZygxKTtcbiAgICBjb25zdCBjb21wYXJpc29uID0gY29tcGFyZV9wb3NpdGl2ZShhLCBiKTtcbiAgICBpZiAoY29tcGFyaXNvbiA9PT0gXCI+XCIpIHtcbiAgICAgIHJldHVybiBcIi1cIiArIGxvbmdfc3VidHJhY3Rpb24oYSwgYik7XG4gICAgfSBlbHNlIGlmIChjb21wYXJpc29uID09PSBcIjxcIikge1xuICAgICAgcmV0dXJuIGxvbmdfc3VidHJhY3Rpb24oYiwgYSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBcIjBcIjtcbiAgICB9XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/preciso/subtract.js\n");

/***/ }),

/***/ "./node_modules/proj4-fully-loaded/proj4-fully-loaded.js":
/*!***************************************************************!*\
  !*** ./node_modules/proj4-fully-loaded/proj4-fully-loaded.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("let proj4 = __webpack_require__(/*! proj4 */ \"./node_modules/proj4/lib/index.js\");\n\nconst defs = __webpack_require__(/*! proj4js-definitions */ \"./node_modules/proj4js-definitions/proj4js-definitions.js\");\n\nif (typeof proj4 === \"object\" && typeof proj4.defs !== \"function\" && typeof proj4.default === \"function\") {\n  // probably inside an Angular project\n  proj4 = proj4.default;\n}\n\nproj4.defs(defs);\nmodule.exports = proj4;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQtZnVsbHktbG9hZGVkL3Byb2o0LWZ1bGx5LWxvYWRlZC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQtZnVsbHktbG9hZGVkL3Byb2o0LWZ1bGx5LWxvYWRlZC5qcz9jYjU5Il0sInNvdXJjZXNDb250ZW50IjpbImxldCBwcm9qNCA9IHJlcXVpcmUoXCJwcm9qNFwiKTtcbmNvbnN0IGRlZnMgPSByZXF1aXJlKFwicHJvajRqcy1kZWZpbml0aW9uc1wiKTtcblxuaWYgKHR5cGVvZiBwcm9qNCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgcHJvajQuZGVmcyAhPT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBwcm9qNC5kZWZhdWx0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgLy8gcHJvYmFibHkgaW5zaWRlIGFuIEFuZ3VsYXIgcHJvamVjdFxuICBwcm9qNCA9IHByb2o0LmRlZmF1bHQ7XG59XG5cbnByb2o0LmRlZnMoZGVmcyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcHJvajQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4-fully-loaded/proj4-fully-loaded.js\n");

/***/ }),

/***/ "./node_modules/proj4-merge/proj4-merge.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4-merge/proj4-merge.js ***!
  \*************************************************/
/***/ ((module) => {

eval("function merge() {\n  const instances = [];\n\n  const add = it => {\n    if (!it) return;\n    if (Array.isArray(it)) return it.forEach(add);\n    if (it.default) it = it.default;\n    instances.push(it);\n  };\n\n  Array.from(arguments).forEach(add);\n  if (instances.length === 0) throw Error(\"[proj4-merge] merge called with zero instances of proj4\");\n  const [first, ...rest] = instances;\n  rest.forEach(instance => {\n    first.defs(Object.entries(instance.defs));\n  });\n  return first;\n}\n\nmodule.exports = merge;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQtbWVyZ2UvcHJvajQtbWVyZ2UuanMuanMiLCJuYW1lcyI6WyJtZXJnZSIsImluc3RhbmNlcyIsImFkZCIsIml0IiwiQXJyYXkiLCJpc0FycmF5IiwiZm9yRWFjaCIsImRlZmF1bHQiLCJwdXNoIiwiZnJvbSIsImFyZ3VtZW50cyIsImxlbmd0aCIsIkVycm9yIiwiZmlyc3QiLCJyZXN0IiwiaW5zdGFuY2UiLCJkZWZzIiwiT2JqZWN0IiwiZW50cmllcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0LW1lcmdlL3Byb2o0LW1lcmdlLmpzPzY1MDkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWVyZ2UoKSB7XG4gIGNvbnN0IGluc3RhbmNlcyA9IFtdO1xuXG4gIGNvbnN0IGFkZCA9IGl0ID0+IHtcbiAgICBpZiAoIWl0KSByZXR1cm47XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoaXQpKSByZXR1cm4gaXQuZm9yRWFjaChhZGQpO1xuICAgIGlmIChpdC5kZWZhdWx0KSBpdCA9IGl0LmRlZmF1bHQ7XG4gICAgaW5zdGFuY2VzLnB1c2goaXQpO1xuICB9O1xuXG4gIEFycmF5LmZyb20oYXJndW1lbnRzKS5mb3JFYWNoKGFkZCk7XG5cbiAgaWYgKGluc3RhbmNlcy5sZW5ndGggPT09IDApIHRocm93IEVycm9yKFwiW3Byb2o0LW1lcmdlXSBtZXJnZSBjYWxsZWQgd2l0aCB6ZXJvIGluc3RhbmNlcyBvZiBwcm9qNFwiKTtcblxuICBjb25zdCBbZmlyc3QsIC4uLnJlc3RdID0gaW5zdGFuY2VzO1xuXG4gIHJlc3QuZm9yRWFjaChpbnN0YW5jZSA9PiB7XG4gICAgZmlyc3QuZGVmcyhPYmplY3QuZW50cmllcyhpbnN0YW5jZS5kZWZzKSk7XG4gIH0pO1xuXG4gIHJldHVybiBmaXJzdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBtZXJnZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsS0FBVCxHQUFpQjtFQUNmLE1BQU1DLFNBQVMsR0FBRyxFQUFsQjs7RUFFQSxNQUFNQyxHQUFHLEdBQUdDLEVBQUUsSUFBSTtJQUNoQixJQUFJLENBQUNBLEVBQUwsRUFBUztJQUNULElBQUlDLEtBQUssQ0FBQ0MsT0FBTixDQUFjRixFQUFkLENBQUosRUFBdUIsT0FBT0EsRUFBRSxDQUFDRyxPQUFILENBQVdKLEdBQVgsQ0FBUDtJQUN2QixJQUFJQyxFQUFFLENBQUNJLE9BQVAsRUFBZ0JKLEVBQUUsR0FBR0EsRUFBRSxDQUFDSSxPQUFSO0lBQ2hCTixTQUFTLENBQUNPLElBQVYsQ0FBZUwsRUFBZjtFQUNELENBTEQ7O0VBT0FDLEtBQUssQ0FBQ0ssSUFBTixDQUFXQyxTQUFYLEVBQXNCSixPQUF0QixDQUE4QkosR0FBOUI7RUFFQSxJQUFJRCxTQUFTLENBQUNVLE1BQVYsS0FBcUIsQ0FBekIsRUFBNEIsTUFBTUMsS0FBSyxDQUFDLHlEQUFELENBQVg7RUFFNUIsTUFBTSxDQUFDQyxLQUFELEVBQVEsR0FBR0MsSUFBWCxJQUFtQmIsU0FBekI7RUFFQWEsSUFBSSxDQUFDUixPQUFMLENBQWFTLFFBQVEsSUFBSTtJQUN2QkYsS0FBSyxDQUFDRyxJQUFOLENBQVdDLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlSCxRQUFRLENBQUNDLElBQXhCLENBQVg7RUFDRCxDQUZEO0VBSUEsT0FBT0gsS0FBUDtBQUNEOztBQUVETSxNQUFNLENBQUNDLE9BQVAsR0FBaUJwQixLQUFqQiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4-merge/proj4-merge.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/Point.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/Point.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mgrs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mgrs */ \"./node_modules/mgrs/mgrs.js\");\n\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point((0,mgrs__WEBPACK_IMPORTED_MODULE_0__.toPoint)(mgrsStr));\n};\n\nPoint.prototype.toMGRS = function (accuracy) {\n  return (0,mgrs__WEBPACK_IMPORTED_MODULE_0__.forward)([this.x, this.y], accuracy);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Point);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL1BvaW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9Qb2ludC5qcz9jYjg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dG9Qb2ludCwgZm9yd2FyZH0gZnJvbSAnbWdycyc7XG5cbmZ1bmN0aW9uIFBvaW50KHgsIHksIHopIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFBvaW50KSkge1xuICAgIHJldHVybiBuZXcgUG9pbnQoeCwgeSwgeik7XG4gIH1cbiAgaWYgKEFycmF5LmlzQXJyYXkoeCkpIHtcbiAgICB0aGlzLnggPSB4WzBdO1xuICAgIHRoaXMueSA9IHhbMV07XG4gICAgdGhpcy56ID0geFsyXSB8fCAwLjA7XG4gIH0gZWxzZSBpZih0eXBlb2YgeCA9PT0gJ29iamVjdCcpIHtcbiAgICB0aGlzLnggPSB4Lng7XG4gICAgdGhpcy55ID0geC55O1xuICAgIHRoaXMueiA9IHgueiB8fCAwLjA7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHggPT09ICdzdHJpbmcnICYmIHR5cGVvZiB5ID09PSAndW5kZWZpbmVkJykge1xuICAgIHZhciBjb29yZHMgPSB4LnNwbGl0KCcsJyk7XG4gICAgdGhpcy54ID0gcGFyc2VGbG9hdChjb29yZHNbMF0sIDEwKTtcbiAgICB0aGlzLnkgPSBwYXJzZUZsb2F0KGNvb3Jkc1sxXSwgMTApO1xuICAgIHRoaXMueiA9IHBhcnNlRmxvYXQoY29vcmRzWzJdLCAxMCkgfHwgMC4wO1xuICB9IGVsc2Uge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLnogPSB6IHx8IDAuMDtcbiAgfVxuICBjb25zb2xlLndhcm4oJ3Byb2o0LlBvaW50IHdpbGwgYmUgcmVtb3ZlZCBpbiB2ZXJzaW9uIDMsIHVzZSBwcm9qNC50b1BvaW50Jyk7XG59XG5cblBvaW50LmZyb21NR1JTID0gZnVuY3Rpb24obWdyc1N0cikge1xuICByZXR1cm4gbmV3IFBvaW50KHRvUG9pbnQobWdyc1N0cikpO1xufTtcblBvaW50LnByb3RvdHlwZS50b01HUlMgPSBmdW5jdGlvbihhY2N1cmFjeSkge1xuICByZXR1cm4gZm9yd2FyZChbdGhpcy54LCB0aGlzLnldLCBhY2N1cmFjeSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgUG9pbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/Point.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/Proj.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/Proj.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _parseCode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseCode */ \"./node_modules/proj4/lib/parseCode.js\");\n/* harmony import */ var _extend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extend */ \"./node_modules/proj4/lib/extend.js\");\n/* harmony import */ var _projections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projections */ \"./node_modules/proj4/lib/projections.js\");\n/* harmony import */ var _deriveConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./deriveConstants */ \"./node_modules/proj4/lib/deriveConstants.js\");\n/* harmony import */ var _constants_Datum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants/Datum */ \"./node_modules/proj4/lib/constants/Datum.js\");\n/* harmony import */ var _datum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./datum */ \"./node_modules/proj4/lib/datum.js\");\n/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./match */ \"./node_modules/proj4/lib/match.js\");\n/* harmony import */ var _nadgrid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./nadgrid */ \"./node_modules/proj4/lib/nadgrid.js\");\n\n\n\n\n\n\n\n\n\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n\n  var json = (0,_parseCode__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(srsCode);\n\n  if (typeof json !== 'object') {\n    callback(srsCode);\n    return;\n  }\n\n  var ourProj = Projection.projections.get(json.projName);\n\n  if (!ourProj) {\n    callback(srsCode);\n    return;\n  }\n\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = (0,_match__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_constants_Datum__WEBPACK_IMPORTED_MODULE_4__[\"default\"], json.datumCode);\n\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = (0,_deriveConstants__WEBPACK_IMPORTED_MODULE_3__.sphere)(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = (0,_deriveConstants__WEBPACK_IMPORTED_MODULE_3__.eccentricity)(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = (0,_nadgrid__WEBPACK_IMPORTED_MODULE_7__.getNadgrids)(json.nadgrids);\n  var datumObj = json.datum || (0,_datum__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2, nadgrids);\n  (0,_extend__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, json); // transfer everything over from the projection because we don't know what we'll need\n\n  (0,_extend__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, ourProj); // transfer all the methods from the projection\n  // copy the 4 things over we calculated in deriveConstants.sphere\n\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere; // copy the 3 things we calculated in deriveConstants.eccentricity\n\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2; // add in the datum object\n\n  this.datum = datumObj; // init the projection\n\n  this.init(); // legecy callback from back in the day when it went to spatialreference.org\n\n  callback(null, this);\n}\n\nProjection.projections = _projections__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nProjection.projections.start();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Projection);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL1Byb2ouanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7O0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7O0FBR0E7O0FBR0E7O0FBR0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvUHJvai5qcz81NTlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwYXJzZUNvZGUgZnJvbSAnLi9wYXJzZUNvZGUnO1xuaW1wb3J0IGV4dGVuZCBmcm9tICcuL2V4dGVuZCc7XG5pbXBvcnQgcHJvamVjdGlvbnMgZnJvbSAnLi9wcm9qZWN0aW9ucyc7XG5pbXBvcnQge3NwaGVyZSBhcyBkY19zcGhlcmUsIGVjY2VudHJpY2l0eSBhcyBkY19lY2NlbnRyaWNpdHl9IGZyb20gJy4vZGVyaXZlQ29uc3RhbnRzJztcbmltcG9ydCBEYXR1bSBmcm9tICcuL2NvbnN0YW50cy9EYXR1bSc7XG5pbXBvcnQgZGF0dW0gZnJvbSAnLi9kYXR1bSc7XG5pbXBvcnQgbWF0Y2ggZnJvbSAnLi9tYXRjaCc7XG5pbXBvcnQge2dldE5hZGdyaWRzfSBmcm9tIFwiLi9uYWRncmlkXCI7XG5cbmZ1bmN0aW9uIFByb2plY3Rpb24oc3JzQ29kZSxjYWxsYmFjaykge1xuICBpZiAoISh0aGlzIGluc3RhbmNlb2YgUHJvamVjdGlvbikpIHtcbiAgICByZXR1cm4gbmV3IFByb2plY3Rpb24oc3JzQ29kZSk7XG4gIH1cbiAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmdW5jdGlvbihlcnJvcil7XG4gICAgaWYoZXJyb3Ipe1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9O1xuICB2YXIganNvbiA9IHBhcnNlQ29kZShzcnNDb2RlKTtcbiAgaWYodHlwZW9mIGpzb24gIT09ICdvYmplY3QnKXtcbiAgICBjYWxsYmFjayhzcnNDb2RlKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG91clByb2ogPSBQcm9qZWN0aW9uLnByb2plY3Rpb25zLmdldChqc29uLnByb2pOYW1lKTtcbiAgaWYoIW91clByb2ope1xuICAgIGNhbGxiYWNrKHNyc0NvZGUpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoanNvbi5kYXR1bUNvZGUgJiYganNvbi5kYXR1bUNvZGUgIT09ICdub25lJykge1xuICAgIHZhciBkYXR1bURlZiA9IG1hdGNoKERhdHVtLCBqc29uLmRhdHVtQ29kZSk7XG4gICAgaWYgKGRhdHVtRGVmKSB7XG4gICAgICBqc29uLmRhdHVtX3BhcmFtcyA9IGpzb24uZGF0dW1fcGFyYW1zIHx8IChkYXR1bURlZi50b3dnczg0ID8gZGF0dW1EZWYudG93Z3M4NC5zcGxpdCgnLCcpIDogbnVsbCk7XG4gICAgICBqc29uLmVsbHBzID0gZGF0dW1EZWYuZWxsaXBzZTtcbiAgICAgIGpzb24uZGF0dW1OYW1lID0gZGF0dW1EZWYuZGF0dW1OYW1lID8gZGF0dW1EZWYuZGF0dW1OYW1lIDoganNvbi5kYXR1bUNvZGU7XG4gICAgfVxuICB9XG4gIGpzb24uazAgPSBqc29uLmswIHx8IDEuMDtcbiAganNvbi5heGlzID0ganNvbi5heGlzIHx8ICdlbnUnO1xuICBqc29uLmVsbHBzID0ganNvbi5lbGxwcyB8fCAnd2dzODQnO1xuICBqc29uLmxhdDEgPSBqc29uLmxhdDEgfHwganNvbi5sYXQwOyAvLyBMYW1iZXJ0X0NvbmZvcm1hbF9Db25pY18xU1AsIGZvciBleGFtcGxlLCBuZWVkcyB0aGlzXG5cbiAgdmFyIHNwaGVyZV8gPSBkY19zcGhlcmUoanNvbi5hLCBqc29uLmIsIGpzb24ucmYsIGpzb24uZWxscHMsIGpzb24uc3BoZXJlKTtcbiAgdmFyIGVjYyA9IGRjX2VjY2VudHJpY2l0eShzcGhlcmVfLmEsIHNwaGVyZV8uYiwgc3BoZXJlXy5yZiwganNvbi5SX0EpO1xuICB2YXIgbmFkZ3JpZHMgPSBnZXROYWRncmlkcyhqc29uLm5hZGdyaWRzKTtcbiAgdmFyIGRhdHVtT2JqID0ganNvbi5kYXR1bSB8fCBkYXR1bShqc29uLmRhdHVtQ29kZSwganNvbi5kYXR1bV9wYXJhbXMsIHNwaGVyZV8uYSwgc3BoZXJlXy5iLCBlY2MuZXMsIGVjYy5lcDIsXG4gICAgbmFkZ3JpZHMpO1xuXG4gIGV4dGVuZCh0aGlzLCBqc29uKTsgLy8gdHJhbnNmZXIgZXZlcnl0aGluZyBvdmVyIGZyb20gdGhlIHByb2plY3Rpb24gYmVjYXVzZSB3ZSBkb24ndCBrbm93IHdoYXQgd2UnbGwgbmVlZFxuICBleHRlbmQodGhpcywgb3VyUHJvaik7IC8vIHRyYW5zZmVyIGFsbCB0aGUgbWV0aG9kcyBmcm9tIHRoZSBwcm9qZWN0aW9uXG5cbiAgLy8gY29weSB0aGUgNCB0aGluZ3Mgb3ZlciB3ZSBjYWxjdWxhdGVkIGluIGRlcml2ZUNvbnN0YW50cy5zcGhlcmVcbiAgdGhpcy5hID0gc3BoZXJlXy5hO1xuICB0aGlzLmIgPSBzcGhlcmVfLmI7XG4gIHRoaXMucmYgPSBzcGhlcmVfLnJmO1xuICB0aGlzLnNwaGVyZSA9IHNwaGVyZV8uc3BoZXJlO1xuXG4gIC8vIGNvcHkgdGhlIDMgdGhpbmdzIHdlIGNhbGN1bGF0ZWQgaW4gZGVyaXZlQ29uc3RhbnRzLmVjY2VudHJpY2l0eVxuICB0aGlzLmVzID0gZWNjLmVzO1xuICB0aGlzLmUgPSBlY2MuZTtcbiAgdGhpcy5lcDIgPSBlY2MuZXAyO1xuXG4gIC8vIGFkZCBpbiB0aGUgZGF0dW0gb2JqZWN0XG4gIHRoaXMuZGF0dW0gPSBkYXR1bU9iajtcblxuICAvLyBpbml0IHRoZSBwcm9qZWN0aW9uXG4gIHRoaXMuaW5pdCgpO1xuXG4gIC8vIGxlZ2VjeSBjYWxsYmFjayBmcm9tIGJhY2sgaW4gdGhlIGRheSB3aGVuIGl0IHdlbnQgdG8gc3BhdGlhbHJlZmVyZW5jZS5vcmdcbiAgY2FsbGJhY2sobnVsbCwgdGhpcyk7XG5cbn1cblByb2plY3Rpb24ucHJvamVjdGlvbnMgPSBwcm9qZWN0aW9ucztcblByb2plY3Rpb24ucHJvamVjdGlvbnMuc3RhcnQoKTtcbmV4cG9ydCBkZWZhdWx0IFByb2plY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/Proj.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/adjust_axis.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/adjust_axis.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(crs, denorm, point) {\n  var xin = point.x,\n      yin = point.y,\n      zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n\n    if (i === 0) {\n      v = xin;\n\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n\n      case 'w':\n        out[t] = -v;\n        break;\n\n      case 'n':\n        out[t] = v;\n        break;\n\n      case 's':\n        out[t] = -v;\n        break;\n\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n\n        break;\n\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n\n        break;\n\n      default:\n        //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n\n  return out;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2FkanVzdF9heGlzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBekJBO0FBMkJBOztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvYWRqdXN0X2F4aXMuanM/MjRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihjcnMsIGRlbm9ybSwgcG9pbnQpIHtcbiAgdmFyIHhpbiA9IHBvaW50LngsXG4gICAgeWluID0gcG9pbnQueSxcbiAgICB6aW4gPSBwb2ludC56IHx8IDAuMDtcbiAgdmFyIHYsIHQsIGk7XG4gIHZhciBvdXQgPSB7fTtcbiAgZm9yIChpID0gMDsgaSA8IDM7IGkrKykge1xuICAgIGlmIChkZW5vcm0gJiYgaSA9PT0gMiAmJiBwb2ludC56ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgdiA9IHhpbjtcbiAgICAgIGlmIChcImV3XCIuaW5kZXhPZihjcnMuYXhpc1tpXSkgIT09IC0xKSB7XG4gICAgICAgIHQgPSAneCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ID0gJ3knO1xuICAgICAgfVxuXG4gICAgfVxuICAgIGVsc2UgaWYgKGkgPT09IDEpIHtcbiAgICAgIHYgPSB5aW47XG4gICAgICBpZiAoXCJuc1wiLmluZGV4T2YoY3JzLmF4aXNbaV0pICE9PSAtMSkge1xuICAgICAgICB0ID0gJ3knO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdCA9ICd4JztcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB2ID0gemluO1xuICAgICAgdCA9ICd6JztcbiAgICB9XG4gICAgc3dpdGNoIChjcnMuYXhpc1tpXSkge1xuICAgIGNhc2UgJ2UnOlxuICAgICAgb3V0W3RdID0gdjtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgJ3cnOlxuICAgICAgb3V0W3RdID0gLXY7XG4gICAgICBicmVhaztcbiAgICBjYXNlICduJzpcbiAgICAgIG91dFt0XSA9IHY7XG4gICAgICBicmVhaztcbiAgICBjYXNlICdzJzpcbiAgICAgIG91dFt0XSA9IC12O1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAndSc6XG4gICAgICBpZiAocG9pbnRbdF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBvdXQueiA9IHY7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlICdkJzpcbiAgICAgIGlmIChwb2ludFt0XSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIG91dC56ID0gLXY7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgLy9jb25zb2xlLmxvZyhcIkVSUk9SOiB1bmtub3cgYXhpcyAoXCIrY3JzLmF4aXNbaV0rXCIpIC0gY2hlY2sgZGVmaW5pdGlvbiBvZiBcIitjcnMucHJvak5hbWUpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBvdXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/adjust_axis.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/checkSanity.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/checkSanity.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\n\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n\n    throw new TypeError('coordinates must be finite numbers');\n  }\n\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NoZWNrU2FuaXR5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY2hlY2tTYW5pdHkuanM/ZGIyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAocG9pbnQpIHtcbiAgY2hlY2tDb29yZChwb2ludC54KTtcbiAgY2hlY2tDb29yZChwb2ludC55KTtcbn1cbmZ1bmN0aW9uIGNoZWNrQ29vcmQobnVtKSB7XG4gIGlmICh0eXBlb2YgTnVtYmVyLmlzRmluaXRlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgaWYgKE51bWJlci5pc0Zpbml0ZShudW0pKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2Nvb3JkaW5hdGVzIG11c3QgYmUgZmluaXRlIG51bWJlcnMnKTtcbiAgfVxuICBpZiAodHlwZW9mIG51bSAhPT0gJ251bWJlcicgfHwgbnVtICE9PSBudW0gfHwgIWlzRmluaXRlKG51bSkpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdjb29yZGluYXRlcyBtdXN0IGJlIGZpbml0ZSBudW1iZXJzJyk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/checkSanity.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_lat.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_lat.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sign */ \"./node_modules/proj4/lib/common/sign.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return Math.abs(x) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI ? x : x - (0,_sign__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(x) * Math.PI;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hZGp1c3RfbGF0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2FkanVzdF9sYXQuanM/YWIwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0hBTEZfUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuaW1wb3J0IHNpZ24gZnJvbSAnLi9zaWduJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gKE1hdGguYWJzKHgpIDwgSEFMRl9QSSkgPyB4IDogKHggLSAoc2lnbih4KSAqIE1hdGguUEkpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/adjust_lat.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_lon.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_lon.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sign */ \"./node_modules/proj4/lib/common/sign.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return Math.abs(x) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI ? x : x - (0,_sign__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(x) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hZGp1c3RfbG9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2FkanVzdF9sb24uanM/NzJiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7VFdPX1BJLCBTUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuaW1wb3J0IHNpZ24gZnJvbSAnLi9zaWduJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICByZXR1cm4gKE1hdGguYWJzKHgpIDw9IFNQSSkgPyB4IDogKHggLSAoc2lnbih4KSAqIFRXT19QSSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/adjust_lon.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/adjust_zone.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/adjust_zone.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor(((0,_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n\n  return zone;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hZGp1c3Rfem9uZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hZGp1c3Rfem9uZS5qcz9hZDEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4vYWRqdXN0X2xvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHpvbmUsIGxvbikge1xuICBpZiAoem9uZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgem9uZSA9IE1hdGguZmxvb3IoKGFkanVzdF9sb24obG9uKSArIE1hdGguUEkpICogMzAgLyBNYXRoLlBJKSArIDE7XG5cbiAgICBpZiAoem9uZSA8IDApIHtcbiAgICAgIHJldHVybiAwO1xuICAgIH0gZWxzZSBpZiAoem9uZSA+IDYwKSB7XG4gICAgICByZXR1cm4gNjA7XG4gICAgfVxuICB9XG4gIHJldHVybiB6b25lO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/adjust_zone.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/asinhy.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/asinhy.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hypot */ \"./node_modules/proj4/lib/common/hypot.js\");\n/* harmony import */ var _log1py__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log1py */ \"./node_modules/proj4/lib/common/log1py.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  var y = Math.abs(x);\n  y = (0,_log1py__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(y * (1 + y / ((0,_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, y) + 1)));\n  return x < 0 ? -y : y;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hc2luaHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2FzaW5oeS5qcz9mZGIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoeXBvdCBmcm9tICcuL2h5cG90JztcbmltcG9ydCBsb2cxcHkgZnJvbSAnLi9sb2cxcHknO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHZhciB5ID0gTWF0aC5hYnMoeCk7XG4gIHkgPSBsb2cxcHkoeSAqICgxICsgeSAvIChoeXBvdCgxLCB5KSArIDEpKSk7XG5cbiAgcmV0dXJuIHggPCAwID8gLXkgOiB5O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/asinhy.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/asinz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/asinz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  if (Math.abs(x) > 1) {\n    x = x > 1 ? 1 : -1;\n  }\n\n  return Math.asin(x);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9hc2luei5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb21tb24vYXNpbnouanM/YjQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIGlmIChNYXRoLmFicyh4KSA+IDEpIHtcbiAgICB4ID0gKHggPiAxKSA/IDEgOiAtMTtcbiAgfVxuICByZXR1cm4gTWF0aC5hc2luKHgpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/asinz.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/clens.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/clens.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9jbGVucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb21tb24vY2xlbnMuanM/MGVjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwcCwgYXJnX3IpIHtcbiAgdmFyIHIgPSAyICogTWF0aC5jb3MoYXJnX3IpO1xuICB2YXIgaSA9IHBwLmxlbmd0aCAtIDE7XG4gIHZhciBocjEgPSBwcFtpXTtcbiAgdmFyIGhyMiA9IDA7XG4gIHZhciBocjtcblxuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBociA9IC1ocjIgKyByICogaHIxICsgcHBbaV07XG4gICAgaHIyID0gaHIxO1xuICAgIGhyMSA9IGhyO1xuICB9XG5cbiAgcmV0dXJuIE1hdGguc2luKGFyZ19yKSAqIGhyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/clens.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/clens_cmplx.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/clens_cmplx.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _sinh__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sinh */ \"./node_modules/proj4/lib/common/sinh.js\");\n/* harmony import */ var _cosh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cosh */ \"./node_modules/proj4/lib/common/cosh.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = (0,_sinh__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arg_i);\n  var cosh_arg_i = (0,_cosh__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n  return [r * hr - i * hi, r * hi + i * hr];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9jbGVuc19jbXBseC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9jbGVuc19jbXBseC5qcz9hMTFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzaW5oIGZyb20gJy4vc2luaCc7XG5pbXBvcnQgY29zaCBmcm9tICcuL2Nvc2gnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihwcCwgYXJnX3IsIGFyZ19pKSB7XG4gIHZhciBzaW5fYXJnX3IgPSBNYXRoLnNpbihhcmdfcik7XG4gIHZhciBjb3NfYXJnX3IgPSBNYXRoLmNvcyhhcmdfcik7XG4gIHZhciBzaW5oX2FyZ19pID0gc2luaChhcmdfaSk7XG4gIHZhciBjb3NoX2FyZ19pID0gY29zaChhcmdfaSk7XG4gIHZhciByID0gMiAqIGNvc19hcmdfciAqIGNvc2hfYXJnX2k7XG4gIHZhciBpID0gLTIgKiBzaW5fYXJnX3IgKiBzaW5oX2FyZ19pO1xuICB2YXIgaiA9IHBwLmxlbmd0aCAtIDE7XG4gIHZhciBociA9IHBwW2pdO1xuICB2YXIgaGkxID0gMDtcbiAgdmFyIGhyMSA9IDA7XG4gIHZhciBoaSA9IDA7XG4gIHZhciBocjI7XG4gIHZhciBoaTI7XG5cbiAgd2hpbGUgKC0taiA+PSAwKSB7XG4gICAgaHIyID0gaHIxO1xuICAgIGhpMiA9IGhpMTtcbiAgICBocjEgPSBocjtcbiAgICBoaTEgPSBoaTtcbiAgICBociA9IC1ocjIgKyByICogaHIxIC0gaSAqIGhpMSArIHBwW2pdO1xuICAgIGhpID0gLWhpMiArIGkgKiBocjEgKyByICogaGkxO1xuICB9XG5cbiAgciA9IHNpbl9hcmdfciAqIGNvc2hfYXJnX2k7XG4gIGkgPSBjb3NfYXJnX3IgKiBzaW5oX2FyZ19pO1xuXG4gIHJldHVybiBbciAqIGhyIC0gaSAqIGhpLCByICogaGkgKyBpICogaHJdO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/clens_cmplx.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/cosh.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/cosh.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9jb3NoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9jb3NoLmpzPzZiMDkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICB2YXIgciA9IE1hdGguZXhwKHgpO1xuICByID0gKHIgKyAxIC8gcikgLyAyO1xuICByZXR1cm4gcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/cosh.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/e0fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e0fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return 1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9lMGZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2UwZm4uanM/NTMxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiAoMSAtIDAuMjUgKiB4ICogKDEgKyB4IC8gMTYgKiAoMyArIDEuMjUgKiB4KSkpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/e0fn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/e1fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e1fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return 0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9lMWZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2UxZm4uanM/YTQ1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiAoMC4zNzUgKiB4ICogKDEgKyAwLjI1ICogeCAqICgxICsgMC40Njg3NSAqIHgpKSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/e1fn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/e2fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e2fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return 0.05859375 * x * x * (1 + 0.75 * x);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9lMmZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2UyZm4uanM/YzYwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiAoMC4wNTg1OTM3NSAqIHggKiB4ICogKDEgKyAwLjc1ICogeCkpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/e2fn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/e3fn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/e3fn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return x * x * x * (35 / 3072);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9lM2ZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2UzZm4uanM/NDU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiAoeCAqIHggKiB4ICogKDM1IC8gMzA3MikpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/e3fn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/gN.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/common/gN.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9nTi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2dOLmpzPzA2YjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYSwgZSwgc2lucGhpKSB7XG4gIHZhciB0ZW1wID0gZSAqIHNpbnBoaTtcbiAgcmV0dXJuIGEgLyBNYXRoLnNxcnQoMSAtIHRlbXAgKiB0ZW1wKTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/gN.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/gatg.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/gatg.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return B + h * Math.sin(2 * B);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9nYXRnLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9nYXRnLmpzP2M0MWIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHAsIEIpIHtcbiAgdmFyIGNvc18yQiA9IDIgKiBNYXRoLmNvcygyICogQik7XG4gIHZhciBpID0gcHAubGVuZ3RoIC0gMTtcbiAgdmFyIGgxID0gcHBbaV07XG4gIHZhciBoMiA9IDA7XG4gIHZhciBoO1xuXG4gIHdoaWxlICgtLWkgPj0gMCkge1xuICAgIGggPSAtaDIgKyBjb3NfMkIgKiBoMSArIHBwW2ldO1xuICAgIGgyID0gaDE7XG4gICAgaDEgPSBoO1xuICB9XG5cbiAgcmV0dXJuIChCICsgaCAqIE1hdGguc2luKDIgKiBCKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/gatg.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/hypot.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/hypot.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9oeXBvdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2h5cG90LmpzPzhlOGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCwgeSkge1xuICB4ID0gTWF0aC5hYnMoeCk7XG4gIHkgPSBNYXRoLmFicyh5KTtcbiAgdmFyIGEgPSBNYXRoLm1heCh4LCB5KTtcbiAgdmFyIGIgPSBNYXRoLm1pbih4LCB5KSAvIChhID8gYSA6IDEpO1xuXG4gIHJldHVybiBhICogTWF0aC5zcXJ0KDEgKyBNYXRoLnBvdyhiLCAyKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/hypot.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/imlfn.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/imlfn.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n  phi = ml / e0;\n\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n\n\n  return NaN;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9pbWxmbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9pbWxmbi5qcz8yOTIwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKG1sLCBlMCwgZTEsIGUyLCBlMykge1xuICB2YXIgcGhpO1xuICB2YXIgZHBoaTtcblxuICBwaGkgPSBtbCAvIGUwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IDE1OyBpKyspIHtcbiAgICBkcGhpID0gKG1sIC0gKGUwICogcGhpIC0gZTEgKiBNYXRoLnNpbigyICogcGhpKSArIGUyICogTWF0aC5zaW4oNCAqIHBoaSkgLSBlMyAqIE1hdGguc2luKDYgKiBwaGkpKSkgLyAoZTAgLSAyICogZTEgKiBNYXRoLmNvcygyICogcGhpKSArIDQgKiBlMiAqIE1hdGguY29zKDQgKiBwaGkpIC0gNiAqIGUzICogTWF0aC5jb3MoNiAqIHBoaSkpO1xuICAgIHBoaSArPSBkcGhpO1xuICAgIGlmIChNYXRoLmFicyhkcGhpKSA8PSAwLjAwMDAwMDAwMDEpIHtcbiAgICAgIHJldHVybiBwaGk7XG4gICAgfVxuICB9XG5cbiAgLy8uLnJlcG9ydEVycm9yKFwiSU1MRk4tQ09OVjpMYXRpdHVkZSBmYWlsZWQgdG8gY29udmVyZ2UgYWZ0ZXIgMTUgaXRlcmF0aW9uc1wiKTtcbiAgcmV0dXJuIE5hTjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/imlfn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/iqsfnz.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/iqsfnz.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return -1 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else {\n      return _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    }\n  } //var phi = 0.5* q/(1-eccent*eccent);\n\n\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n\n\n  return NaN;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9pcXNmbnouanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9pcXNmbnouanM/N2M1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0hBTEZfUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlY2NlbnQsIHEpIHtcbiAgdmFyIHRlbXAgPSAxIC0gKDEgLSBlY2NlbnQgKiBlY2NlbnQpIC8gKDIgKiBlY2NlbnQpICogTWF0aC5sb2coKDEgLSBlY2NlbnQpIC8gKDEgKyBlY2NlbnQpKTtcbiAgaWYgKE1hdGguYWJzKE1hdGguYWJzKHEpIC0gdGVtcCkgPCAxLjBFLTYpIHtcbiAgICBpZiAocSA8IDApIHtcbiAgICAgIHJldHVybiAoLTEgKiBIQUxGX1BJKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gSEFMRl9QSTtcbiAgICB9XG4gIH1cbiAgLy92YXIgcGhpID0gMC41KiBxLygxLWVjY2VudCplY2NlbnQpO1xuICB2YXIgcGhpID0gTWF0aC5hc2luKDAuNSAqIHEpO1xuICB2YXIgZHBoaTtcbiAgdmFyIHNpbl9waGk7XG4gIHZhciBjb3NfcGhpO1xuICB2YXIgY29uO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IDMwOyBpKyspIHtcbiAgICBzaW5fcGhpID0gTWF0aC5zaW4ocGhpKTtcbiAgICBjb3NfcGhpID0gTWF0aC5jb3MocGhpKTtcbiAgICBjb24gPSBlY2NlbnQgKiBzaW5fcGhpO1xuICAgIGRwaGkgPSBNYXRoLnBvdygxIC0gY29uICogY29uLCAyKSAvICgyICogY29zX3BoaSkgKiAocSAvICgxIC0gZWNjZW50ICogZWNjZW50KSAtIHNpbl9waGkgLyAoMSAtIGNvbiAqIGNvbikgKyAwLjUgLyBlY2NlbnQgKiBNYXRoLmxvZygoMSAtIGNvbikgLyAoMSArIGNvbikpKTtcbiAgICBwaGkgKz0gZHBoaTtcbiAgICBpZiAoTWF0aC5hYnMoZHBoaSkgPD0gMC4wMDAwMDAwMDAxKSB7XG4gICAgICByZXR1cm4gcGhpO1xuICAgIH1cbiAgfVxuXG4gIC8vY29uc29sZS5sb2coXCJJUVNGTi1DT05WOkxhdGl0dWRlIGZhaWxlZCB0byBjb252ZXJnZSBhZnRlciAzMCBpdGVyYXRpb25zXCIpO1xuICByZXR1cm4gTmFOO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/iqsfnz.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/log1py.js":
/*!*************************************************!*\
  !*** ./node_modules/proj4/lib/common/log1py.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  var y = 1 + x;\n  var z = y - 1;\n  return z === 0 ? x : x * Math.log(y) / z;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9sb2cxcHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL2xvZzFweS5qcz85NDZmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHgpIHtcbiAgdmFyIHkgPSAxICsgeDtcbiAgdmFyIHogPSB5IC0gMTtcblxuICByZXR1cm4geiA9PT0gMCA/IHggOiB4ICogTWF0aC5sb2coeSkgLyB6O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/log1py.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/mlfn.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/mlfn.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(e0, e1, e2, e3, phi) {\n  return e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9tbGZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL21sZm4uanM/MTA4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlMCwgZTEsIGUyLCBlMywgcGhpKSB7XG4gIHJldHVybiAoZTAgKiBwaGkgLSBlMSAqIE1hdGguc2luKDIgKiBwaGkpICsgZTIgKiBNYXRoLnNpbig0ICogcGhpKSAtIGUzICogTWF0aC5zaW4oNiAqIHBoaSkpO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/mlfn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/msfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/msfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / Math.sqrt(1 - con * con);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9tc2Zuei5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL21zZm56LmpzP2NiNWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZWNjZW50LCBzaW5waGksIGNvc3BoaSkge1xuICB2YXIgY29uID0gZWNjZW50ICogc2lucGhpO1xuICByZXR1cm4gY29zcGhpIC8gKE1hdGguc3FydCgxIC0gY29uICogY29uKSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/msfnz.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/phi2z.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/phi2z.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - 2 * Math.atan(ts);\n\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - 2 * Math.atan(ts * Math.pow((1 - con) / (1 + con), eccnth)) - phi;\n    phi += dphi;\n\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  } //console.log(\"phi2z has NoConvergence\");\n\n\n  return -9999;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9waGkyei5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL3BoaTJ6LmpzP2ZmYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtIQUxGX1BJfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZWNjZW50LCB0cykge1xuICB2YXIgZWNjbnRoID0gMC41ICogZWNjZW50O1xuICB2YXIgY29uLCBkcGhpO1xuICB2YXIgcGhpID0gSEFMRl9QSSAtIDIgKiBNYXRoLmF0YW4odHMpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8PSAxNTsgaSsrKSB7XG4gICAgY29uID0gZWNjZW50ICogTWF0aC5zaW4ocGhpKTtcbiAgICBkcGhpID0gSEFMRl9QSSAtIDIgKiBNYXRoLmF0YW4odHMgKiAoTWF0aC5wb3coKCgxIC0gY29uKSAvICgxICsgY29uKSksIGVjY250aCkpKSAtIHBoaTtcbiAgICBwaGkgKz0gZHBoaTtcbiAgICBpZiAoTWF0aC5hYnMoZHBoaSkgPD0gMC4wMDAwMDAwMDAxKSB7XG4gICAgICByZXR1cm4gcGhpO1xuICAgIH1cbiAgfVxuICAvL2NvbnNvbGUubG9nKFwicGhpMnogaGFzIE5vQ29udmVyZ2VuY2VcIik7XG4gIHJldHVybiAtOTk5OTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/phi2z.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_enfn.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_enfn.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9lbmZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9lbmZuLmpzPzIxNzYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIEMwMCA9IDE7XG52YXIgQzAyID0gMC4yNTtcbnZhciBDMDQgPSAwLjA0Njg3NTtcbnZhciBDMDYgPSAwLjAxOTUzMTI1O1xudmFyIEMwOCA9IDAuMDEwNjgxMTUyMzQzNzU7XG52YXIgQzIyID0gMC43NTtcbnZhciBDNDQgPSAwLjQ2ODc1O1xudmFyIEM0NiA9IDAuMDEzMDIwODMzMzMzMzMzMzMzMzM7XG52YXIgQzQ4ID0gMC4wMDcxMjA3NjgyMjkxNjY2NjY2NjtcbnZhciBDNjYgPSAwLjM2NDU4MzMzMzMzMzMzMzMzMzMzO1xudmFyIEM2OCA9IDAuMDA1Njk2NjE0NTgzMzMzMzMzMzM7XG52YXIgQzg4ID0gMC4zMDc2MTcxODc1O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlcykge1xuICB2YXIgZW4gPSBbXTtcbiAgZW5bMF0gPSBDMDAgLSBlcyAqIChDMDIgKyBlcyAqIChDMDQgKyBlcyAqIChDMDYgKyBlcyAqIEMwOCkpKTtcbiAgZW5bMV0gPSBlcyAqIChDMjIgLSBlcyAqIChDMDQgKyBlcyAqIChDMDYgKyBlcyAqIEMwOCkpKTtcbiAgdmFyIHQgPSBlcyAqIGVzO1xuICBlblsyXSA9IHQgKiAoQzQ0IC0gZXMgKiAoQzQ2ICsgZXMgKiBDNDgpKTtcbiAgdCAqPSBlcztcbiAgZW5bM10gPSB0ICogKEM2NiAtIGVzICogQzY4KTtcbiAgZW5bNF0gPSB0ICogZXMgKiBDODg7XG4gIHJldHVybiBlbjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/pj_enfn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_inv_mlfn.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_inv_mlfn.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _pj_mlfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pj_mlfn */ \"./node_modules/proj4/lib/common/pj_mlfn.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\nvar MAX_ITER = 20;\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n\n  for (var i = MAX_ITER; i; --i) {\n    /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s; //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n\n    t = ((0,_pj_mlfn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n\n    if (Math.abs(t) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      return phi;\n    }\n  } //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n\n\n  return phi;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9pbnZfbWxmbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9pbnZfbWxmbi5qcz9jOTRiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwal9tbGZuIGZyb20gXCIuL3BqX21sZm5cIjtcbmltcG9ydCB7RVBTTE59IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuXG52YXIgTUFYX0lURVIgPSAyMDtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oYXJnLCBlcywgZW4pIHtcbiAgdmFyIGsgPSAxIC8gKDEgLSBlcyk7XG4gIHZhciBwaGkgPSBhcmc7XG4gIGZvciAodmFyIGkgPSBNQVhfSVRFUjsgaTsgLS1pKSB7IC8qIHJhcmVseSBnb2VzIG92ZXIgMiBpdGVyYXRpb25zICovXG4gICAgdmFyIHMgPSBNYXRoLnNpbihwaGkpO1xuICAgIHZhciB0ID0gMSAtIGVzICogcyAqIHM7XG4gICAgLy90ID0gdGhpcy5wal9tbGZuKHBoaSwgcywgTWF0aC5jb3MocGhpKSwgZW4pIC0gYXJnO1xuICAgIC8vcGhpIC09IHQgKiAodCAqIE1hdGguc3FydCh0KSkgKiBrO1xuICAgIHQgPSAocGpfbWxmbihwaGksIHMsIE1hdGguY29zKHBoaSksIGVuKSAtIGFyZykgKiAodCAqIE1hdGguc3FydCh0KSkgKiBrO1xuICAgIHBoaSAtPSB0O1xuICAgIGlmIChNYXRoLmFicyh0KSA8IEVQU0xOKSB7XG4gICAgICByZXR1cm4gcGhpO1xuICAgIH1cbiAgfVxuICAvLy4ucmVwb3J0RXJyb3IoXCJjYXNzOnBqX2ludl9tbGZuOiBDb252ZXJnZW5jZSBlcnJvclwiKTtcbiAgcmV0dXJuIHBoaTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/pj_inv_mlfn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/pj_mlfn.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/pj_mlfn.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4])));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9tbGZuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9wal9tbGZuLmpzPzczZWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocGhpLCBzcGhpLCBjcGhpLCBlbikge1xuICBjcGhpICo9IHNwaGk7XG4gIHNwaGkgKj0gc3BoaTtcbiAgcmV0dXJuIChlblswXSAqIHBoaSAtIGNwaGkgKiAoZW5bMV0gKyBzcGhpICogKGVuWzJdICsgc3BoaSAqIChlblszXSArIHNwaGkgKiBlbls0XSkpKSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/pj_mlfn.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/qsfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/qsfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, sinphi) {\n  var con;\n\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return (1 - eccent * eccent) * (sinphi / (1 - con * con) - 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n  } else {\n    return 2 * sinphi;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9xc2Zuei5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb21tb24vcXNmbnouanM/YTdiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlY2NlbnQsIHNpbnBoaSkge1xuICB2YXIgY29uO1xuICBpZiAoZWNjZW50ID4gMS4wZS03KSB7XG4gICAgY29uID0gZWNjZW50ICogc2lucGhpO1xuICAgIHJldHVybiAoKDEgLSBlY2NlbnQgKiBlY2NlbnQpICogKHNpbnBoaSAvICgxIC0gY29uICogY29uKSAtICgwLjUgLyBlY2NlbnQpICogTWF0aC5sb2coKDEgLSBjb24pIC8gKDEgKyBjb24pKSkpO1xuICB9XG4gIGVsc2Uge1xuICAgIHJldHVybiAoMiAqIHNpbnBoaSk7XG4gIH1cbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/qsfnz.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/sign.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/sign.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  return x < 0 ? -1 : 1;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9zaWduLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL3NpZ24uanM/ZTAxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbih4KSB7XG4gIHJldHVybiB4PDAgPyAtMSA6IDE7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/sign.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/sinh.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/sinh.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9zaW5oLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9zaW5oLmpzPzJjMjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oeCkge1xuICB2YXIgciA9IE1hdGguZXhwKHgpO1xuICByID0gKHIgLSAxIC8gcikgLyAyO1xuICByZXR1cm4gcjtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/sinh.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/srat.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/common/srat.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(esinp, exp) {\n  return Math.pow((1 - esinp) / (1 + esinp), exp);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi9zcmF0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29tbW9uL3NyYXQuanM/NGNiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihlc2lucCwgZXhwKSB7XG4gIHJldHVybiAoTWF0aC5wb3coKDEgLSBlc2lucCkgLyAoMSArIGVzaW5wKSwgZXhwKSk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/srat.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/toPoint.js":
/*!**************************************************!*\
  !*** ./node_modules/proj4/lib/common/toPoint.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n\n  return out;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi90b1BvaW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUZBOztBQUlBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb21tb24vdG9Qb2ludC5qcz85ZDljIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChhcnJheSl7XG4gIHZhciBvdXQgPSB7XG4gICAgeDogYXJyYXlbMF0sXG4gICAgeTogYXJyYXlbMV1cbiAgfTtcbiAgaWYgKGFycmF5Lmxlbmd0aD4yKSB7XG4gICAgb3V0LnogPSBhcnJheVsyXTtcbiAgfVxuICBpZiAoYXJyYXkubGVuZ3RoPjMpIHtcbiAgICBvdXQubSA9IGFycmF5WzNdO1xuICB9XG4gIHJldHVybiBvdXQ7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/toPoint.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/common/tsfnz.js":
/*!************************************************!*\
  !*** ./node_modules/proj4/lib/common/tsfnz.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow((1 - con) / (1 + con), com);\n  return Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi)) / con;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi90c2Zuei5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbW1vbi90c2Zuei5qcz8xM2ZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SEFMRl9QSX0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGVjY2VudCwgcGhpLCBzaW5waGkpIHtcbiAgdmFyIGNvbiA9IGVjY2VudCAqIHNpbnBoaTtcbiAgdmFyIGNvbSA9IDAuNSAqIGVjY2VudDtcbiAgY29uID0gTWF0aC5wb3coKCgxIC0gY29uKSAvICgxICsgY29uKSksIGNvbSk7XG4gIHJldHVybiAoTWF0aC50YW4oMC41ICogKEhBTEZfUEkgLSBwaGkpKSAvIGNvbik7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/common/tsfnz.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/constants/Datum.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/constants/Datum.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ exports)\n/* harmony export */ });\nvar exports = {};\n\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy9EYXR1bS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy9EYXR1bS5qcz84NTczIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBleHBvcnRzID0ge307XG5leHBvcnQge2V4cG9ydHMgYXMgZGVmYXVsdH07XG5leHBvcnRzLndnczg0ID0ge1xuICB0b3dnczg0OiBcIjAsMCwwXCIsXG4gIGVsbGlwc2U6IFwiV0dTODRcIixcbiAgZGF0dW1OYW1lOiBcIldHUzg0XCJcbn07XG5cbmV4cG9ydHMuY2gxOTAzID0ge1xuICB0b3dnczg0OiBcIjY3NC4zNzQsMTUuMDU2LDQwNS4zNDZcIixcbiAgZWxsaXBzZTogXCJiZXNzZWxcIixcbiAgZGF0dW1OYW1lOiBcInN3aXNzXCJcbn07XG5cbmV4cG9ydHMuZ2dyczg3ID0ge1xuICB0b3dnczg0OiBcIi0xOTkuODcsNzQuNzksMjQ2LjYyXCIsXG4gIGVsbGlwc2U6IFwiR1JTODBcIixcbiAgZGF0dW1OYW1lOiBcIkdyZWVrX0dlb2RldGljX1JlZmVyZW5jZV9TeXN0ZW1fMTk4N1wiXG59O1xuXG5leHBvcnRzLm5hZDgzID0ge1xuICB0b3dnczg0OiBcIjAsMCwwXCIsXG4gIGVsbGlwc2U6IFwiR1JTODBcIixcbiAgZGF0dW1OYW1lOiBcIk5vcnRoX0FtZXJpY2FuX0RhdHVtXzE5ODNcIlxufTtcblxuZXhwb3J0cy5uYWQyNyA9IHtcbiAgbmFkZ3JpZHM6IFwiQGNvbnVzLEBhbGFza2EsQG50djJfMC5nc2IsQG50djFfY2FuLmRhdFwiLFxuICBlbGxpcHNlOiBcImNscms2NlwiLFxuICBkYXR1bU5hbWU6IFwiTm9ydGhfQW1lcmljYW5fRGF0dW1fMTkyN1wiXG59O1xuXG5leHBvcnRzLnBvdHNkYW0gPSB7XG4gIHRvd2dzODQ6IFwiNTk4LjEsNzMuNyw0MTguMiwwLjIwMiwwLjA0NSwtMi40NTUsNi43XCIsXG4gIGVsbGlwc2U6IFwiYmVzc2VsXCIsXG4gIGRhdHVtTmFtZTogXCJQb3RzZGFtIFJhdWVuYmVyZyAxOTUwIERIRE5cIlxufTtcblxuZXhwb3J0cy5jYXJ0aGFnZSA9IHtcbiAgdG93Z3M4NDogXCItMjYzLjAsNi4wLDQzMS4wXCIsXG4gIGVsbGlwc2U6IFwiY2xhcms4MFwiLFxuICBkYXR1bU5hbWU6IFwiQ2FydGhhZ2UgMTkzNCBUdW5pc2lhXCJcbn07XG5cbmV4cG9ydHMuaGVybWFubnNrb2dlbCA9IHtcbiAgdG93Z3M4NDogXCI1NzcuMzI2LDkwLjEyOSw0NjMuOTE5LDUuMTM3LDEuNDc0LDUuMjk3LDIuNDIzMlwiLFxuICBlbGxpcHNlOiBcImJlc3NlbFwiLFxuICBkYXR1bU5hbWU6IFwiSGVybWFubnNrb2dlbFwiXG59O1xuXG5leHBvcnRzLm9zbmk1MiA9IHtcbiAgdG93Z3M4NDogXCI0ODIuNTMwLC0xMzAuNTk2LDU2NC41NTcsLTEuMDQyLC0wLjIxNCwtMC42MzEsOC4xNVwiLFxuICBlbGxpcHNlOiBcImFpcnlcIixcbiAgZGF0dW1OYW1lOiBcIklyaXNoIE5hdGlvbmFsXCJcbn07XG5cbmV4cG9ydHMuaXJlNjUgPSB7XG4gIHRvd2dzODQ6IFwiNDgyLjUzMCwtMTMwLjU5Niw1NjQuNTU3LC0xLjA0MiwtMC4yMTQsLTAuNjMxLDguMTVcIixcbiAgZWxsaXBzZTogXCJtb2RfYWlyeVwiLFxuICBkYXR1bU5hbWU6IFwiSXJlbGFuZCAxOTY1XCJcbn07XG5cbmV4cG9ydHMucmFzc2FkaXJhbiA9IHtcbiAgdG93Z3M4NDogXCItMTMzLjYzLC0xNTcuNSwtMTU4LjYyXCIsXG4gIGVsbGlwc2U6IFwiaW50bFwiLFxuICBkYXR1bU5hbWU6IFwiUmFzc2FkaXJhblwiXG59O1xuXG5leHBvcnRzLm56Z2Q0OSA9IHtcbiAgdG93Z3M4NDogXCI1OS40NywtNS4wNCwxODcuNDQsMC40NywtMC4xLDEuMDI0LC00LjU5OTNcIixcbiAgZWxsaXBzZTogXCJpbnRsXCIsXG4gIGRhdHVtTmFtZTogXCJOZXcgWmVhbGFuZCBHZW9kZXRpYyBEYXR1bSAxOTQ5XCJcbn07XG5cbmV4cG9ydHMub3NnYjM2ID0ge1xuICB0b3dnczg0OiBcIjQ0Ni40NDgsLTEyNS4xNTcsNTQyLjA2MCwwLjE1MDIsMC4yNDcwLDAuODQyMSwtMjAuNDg5NFwiLFxuICBlbGxpcHNlOiBcImFpcnlcIixcbiAgZGF0dW1OYW1lOiBcIkFpcnkgMTgzMFwiXG59O1xuXG5leHBvcnRzLnNfanRzayA9IHtcbiAgdG93Z3M4NDogXCI1ODksNzYsNDgwXCIsXG4gIGVsbGlwc2U6ICdiZXNzZWwnLFxuICBkYXR1bU5hbWU6ICdTLUpUU0sgKEZlcnJvKSdcbn07XG5cbmV4cG9ydHMuYmVkdWFyYW0gPSB7XG4gIHRvd2dzODQ6ICctMTA2LC04NywxODgnLFxuICBlbGxpcHNlOiAnY2xyazgwJyxcbiAgZGF0dW1OYW1lOiAnQmVkdWFyYW0nXG59O1xuXG5leHBvcnRzLmd1bnVuZ19zZWdhcmEgPSB7XG4gIHRvd2dzODQ6ICctNDAzLDY4NCw0MScsXG4gIGVsbGlwc2U6ICdiZXNzZWwnLFxuICBkYXR1bU5hbWU6ICdHdW51bmcgU2VnYXJhIEpha2FydGEnXG59O1xuXG5leHBvcnRzLnJuYjcyID0ge1xuICB0b3dnczg0OiBcIjEwNi44NjksLTUyLjI5NzgsMTAzLjcyNCwtMC4zMzY1NywwLjQ1Njk1NSwtMS44NDIxOCwxXCIsXG4gIGVsbGlwc2U6IFwiaW50bFwiLFxuICBkYXR1bU5hbWU6IFwiUmVzZWF1IE5hdGlvbmFsIEJlbGdlIDE5NzJcIlxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/constants/Datum.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/constants/Ellipsoid.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/constants/Ellipsoid.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WGS84\": () => (/* binding */ WGS84),\n/* harmony export */   \"default\": () => (/* binding */ exports)\n/* harmony export */ });\nvar exports = {};\n\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\nvar WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy9FbGxpcHNvaWQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFIQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb25zdGFudHMvRWxsaXBzb2lkLmpzP2MyN2QiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGV4cG9ydHMgPSB7fTtcbmV4cG9ydCB7ZXhwb3J0cyBhcyBkZWZhdWx0fTtcbmV4cG9ydHMuTUVSSVQgPSB7XG4gIGE6IDYzNzgxMzcuMCxcbiAgcmY6IDI5OC4yNTcsXG4gIGVsbGlwc2VOYW1lOiBcIk1FUklUIDE5ODNcIlxufTtcblxuZXhwb3J0cy5TR1M4NSA9IHtcbiAgYTogNjM3ODEzNi4wLFxuICByZjogMjk4LjI1NyxcbiAgZWxsaXBzZU5hbWU6IFwiU292aWV0IEdlb2RldGljIFN5c3RlbSA4NVwiXG59O1xuXG5leHBvcnRzLkdSUzgwID0ge1xuICBhOiA2Mzc4MTM3LjAsXG4gIHJmOiAyOTguMjU3MjIyMTAxLFxuICBlbGxpcHNlTmFtZTogXCJHUlMgMTk4MChJVUdHLCAxOTgwKVwiXG59O1xuXG5leHBvcnRzLklBVTc2ID0ge1xuICBhOiA2Mzc4MTQwLjAsXG4gIHJmOiAyOTguMjU3LFxuICBlbGxpcHNlTmFtZTogXCJJQVUgMTk3NlwiXG59O1xuXG5leHBvcnRzLmFpcnkgPSB7XG4gIGE6IDYzNzc1NjMuMzk2LFxuICBiOiA2MzU2MjU2LjkxMCxcbiAgZWxsaXBzZU5hbWU6IFwiQWlyeSAxODMwXCJcbn07XG5cbmV4cG9ydHMuQVBMNCA9IHtcbiAgYTogNjM3ODEzNyxcbiAgcmY6IDI5OC4yNSxcbiAgZWxsaXBzZU5hbWU6IFwiQXBwbC4gUGh5c2ljcy4gMTk2NVwiXG59O1xuXG5leHBvcnRzLk5XTDlEID0ge1xuICBhOiA2Mzc4MTQ1LjAsXG4gIHJmOiAyOTguMjUsXG4gIGVsbGlwc2VOYW1lOiBcIk5hdmFsIFdlYXBvbnMgTGFiLiwgMTk2NVwiXG59O1xuXG5leHBvcnRzLm1vZF9haXJ5ID0ge1xuICBhOiA2Mzc3MzQwLjE4OSxcbiAgYjogNjM1NjAzNC40NDYsXG4gIGVsbGlwc2VOYW1lOiBcIk1vZGlmaWVkIEFpcnlcIlxufTtcblxuZXhwb3J0cy5hbmRyYWUgPSB7XG4gIGE6IDYzNzcxMDQuNDMsXG4gIHJmOiAzMDAuMCxcbiAgZWxsaXBzZU5hbWU6IFwiQW5kcmFlIDE4NzYgKERlbi4sIEljbG5kLilcIlxufTtcblxuZXhwb3J0cy5hdXN0X1NBID0ge1xuICBhOiA2Mzc4MTYwLjAsXG4gIHJmOiAyOTguMjUsXG4gIGVsbGlwc2VOYW1lOiBcIkF1c3RyYWxpYW4gTmF0bCAmIFMuIEFtZXIuIDE5NjlcIlxufTtcblxuZXhwb3J0cy5HUlM2NyA9IHtcbiAgYTogNjM3ODE2MC4wLFxuICByZjogMjk4LjI0NzE2NzQyNzAsXG4gIGVsbGlwc2VOYW1lOiBcIkdSUyA2NyhJVUdHIDE5NjcpXCJcbn07XG5cbmV4cG9ydHMuYmVzc2VsID0ge1xuICBhOiA2Mzc3Mzk3LjE1NSxcbiAgcmY6IDI5OS4xNTI4MTI4LFxuICBlbGxpcHNlTmFtZTogXCJCZXNzZWwgMTg0MVwiXG59O1xuXG5leHBvcnRzLmJlc3NfbmFtID0ge1xuICBhOiA2Mzc3NDgzLjg2NSxcbiAgcmY6IDI5OS4xNTI4MTI4LFxuICBlbGxpcHNlTmFtZTogXCJCZXNzZWwgMTg0MSAoTmFtaWJpYSlcIlxufTtcblxuZXhwb3J0cy5jbHJrNjYgPSB7XG4gIGE6IDYzNzgyMDYuNCxcbiAgYjogNjM1NjU4My44LFxuICBlbGxpcHNlTmFtZTogXCJDbGFya2UgMTg2NlwiXG59O1xuXG5leHBvcnRzLmNscms4MCA9IHtcbiAgYTogNjM3ODI0OS4xNDUsXG4gIHJmOiAyOTMuNDY2MyxcbiAgZWxsaXBzZU5hbWU6IFwiQ2xhcmtlIDE4ODAgbW9kLlwiXG59O1xuXG5leHBvcnRzLmNscms1OCA9IHtcbiAgYTogNjM3ODI5My42NDUyMDg3NTksXG4gIHJmOiAyOTQuMjYwNjc2MzY5MjY1NCxcbiAgZWxsaXBzZU5hbWU6IFwiQ2xhcmtlIDE4NThcIlxufTtcblxuZXhwb3J0cy5DUE0gPSB7XG4gIGE6IDYzNzU3MzguNyxcbiAgcmY6IDMzNC4yOSxcbiAgZWxsaXBzZU5hbWU6IFwiQ29tbS4gZGVzIFBvaWRzIGV0IE1lc3VyZXMgMTc5OVwiXG59O1xuXG5leHBvcnRzLmRlbG1iciA9IHtcbiAgYTogNjM3NjQyOC4wLFxuICByZjogMzExLjUsXG4gIGVsbGlwc2VOYW1lOiBcIkRlbGFtYnJlIDE4MTAgKEJlbGdpdW0pXCJcbn07XG5cbmV4cG9ydHMuZW5nZWxpcyA9IHtcbiAgYTogNjM3ODEzNi4wNSxcbiAgcmY6IDI5OC4yNTY2LFxuICBlbGxpcHNlTmFtZTogXCJFbmdlbGlzIDE5ODVcIlxufTtcblxuZXhwb3J0cy5ldnJzdDMwID0ge1xuICBhOiA2Mzc3Mjc2LjM0NSxcbiAgcmY6IDMwMC44MDE3LFxuICBlbGxpcHNlTmFtZTogXCJFdmVyZXN0IDE4MzBcIlxufTtcblxuZXhwb3J0cy5ldnJzdDQ4ID0ge1xuICBhOiA2Mzc3MzA0LjA2MyxcbiAgcmY6IDMwMC44MDE3LFxuICBlbGxpcHNlTmFtZTogXCJFdmVyZXN0IDE5NDhcIlxufTtcblxuZXhwb3J0cy5ldnJzdDU2ID0ge1xuICBhOiA2Mzc3MzAxLjI0MyxcbiAgcmY6IDMwMC44MDE3LFxuICBlbGxpcHNlTmFtZTogXCJFdmVyZXN0IDE5NTZcIlxufTtcblxuZXhwb3J0cy5ldnJzdDY5ID0ge1xuICBhOiA2Mzc3Mjk1LjY2NCxcbiAgcmY6IDMwMC44MDE3LFxuICBlbGxpcHNlTmFtZTogXCJFdmVyZXN0IDE5NjlcIlxufTtcblxuZXhwb3J0cy5ldnJzdFNTID0ge1xuICBhOiA2Mzc3Mjk4LjU1NixcbiAgcmY6IDMwMC44MDE3LFxuICBlbGxpcHNlTmFtZTogXCJFdmVyZXN0IChTYWJhaCAmIFNhcmF3YWspXCJcbn07XG5cbmV4cG9ydHMuZnNjaHI2MCA9IHtcbiAgYTogNjM3ODE2Ni4wLFxuICByZjogMjk4LjMsXG4gIGVsbGlwc2VOYW1lOiBcIkZpc2NoZXIgKE1lcmN1cnkgRGF0dW0pIDE5NjBcIlxufTtcblxuZXhwb3J0cy5mc2NocjYwbSA9IHtcbiAgYTogNjM3ODE1NS4wLFxuICByZjogMjk4LjMsXG4gIGVsbGlwc2VOYW1lOiBcIkZpc2NoZXIgMTk2MFwiXG59O1xuXG5leHBvcnRzLmZzY2hyNjggPSB7XG4gIGE6IDYzNzgxNTAuMCxcbiAgcmY6IDI5OC4zLFxuICBlbGxpcHNlTmFtZTogXCJGaXNjaGVyIDE5NjhcIlxufTtcblxuZXhwb3J0cy5oZWxtZXJ0ID0ge1xuICBhOiA2Mzc4MjAwLjAsXG4gIHJmOiAyOTguMyxcbiAgZWxsaXBzZU5hbWU6IFwiSGVsbWVydCAxOTA2XCJcbn07XG5cbmV4cG9ydHMuaG91Z2ggPSB7XG4gIGE6IDYzNzgyNzAuMCxcbiAgcmY6IDI5Ny4wLFxuICBlbGxpcHNlTmFtZTogXCJIb3VnaFwiXG59O1xuXG5leHBvcnRzLmludGwgPSB7XG4gIGE6IDYzNzgzODguMCxcbiAgcmY6IDI5Ny4wLFxuICBlbGxpcHNlTmFtZTogXCJJbnRlcm5hdGlvbmFsIDE5MDkgKEhheWZvcmQpXCJcbn07XG5cbmV4cG9ydHMua2F1bGEgPSB7XG4gIGE6IDYzNzgxNjMuMCxcbiAgcmY6IDI5OC4yNCxcbiAgZWxsaXBzZU5hbWU6IFwiS2F1bGEgMTk2MVwiXG59O1xuXG5leHBvcnRzLmxlcmNoID0ge1xuICBhOiA2Mzc4MTM5LjAsXG4gIHJmOiAyOTguMjU3LFxuICBlbGxpcHNlTmFtZTogXCJMZXJjaCAxOTc5XCJcbn07XG5cbmV4cG9ydHMubXBydHMgPSB7XG4gIGE6IDYzOTczMDAuMCxcbiAgcmY6IDE5MS4wLFxuICBlbGxpcHNlTmFtZTogXCJNYXVwZXJ0aXVzIDE3MzhcIlxufTtcblxuZXhwb3J0cy5uZXdfaW50bCA9IHtcbiAgYTogNjM3ODE1Ny41LFxuICBiOiA2MzU2NzcyLjIsXG4gIGVsbGlwc2VOYW1lOiBcIk5ldyBJbnRlcm5hdGlvbmFsIDE5NjdcIlxufTtcblxuZXhwb3J0cy5wbGVzc2lzID0ge1xuICBhOiA2Mzc2NTIzLjAsXG4gIHJmOiA2MzU1ODYzLjAsXG4gIGVsbGlwc2VOYW1lOiBcIlBsZXNzaXMgMTgxNyAoRnJhbmNlKVwiXG59O1xuXG5leHBvcnRzLmtyYXNzID0ge1xuICBhOiA2Mzc4MjQ1LjAsXG4gIHJmOiAyOTguMyxcbiAgZWxsaXBzZU5hbWU6IFwiS3Jhc3NvdnNreSwgMTk0MlwiXG59O1xuXG5leHBvcnRzLlNFYXNpYSA9IHtcbiAgYTogNjM3ODE1NS4wLFxuICBiOiA2MzU2NzczLjMyMDUsXG4gIGVsbGlwc2VOYW1lOiBcIlNvdXRoZWFzdCBBc2lhXCJcbn07XG5cbmV4cG9ydHMud2FsYmVjayA9IHtcbiAgYTogNjM3Njg5Ni4wLFxuICBiOiA2MzU1ODM0Ljg0NjcsXG4gIGVsbGlwc2VOYW1lOiBcIldhbGJlY2tcIlxufTtcblxuZXhwb3J0cy5XR1M2MCA9IHtcbiAgYTogNjM3ODE2NS4wLFxuICByZjogMjk4LjMsXG4gIGVsbGlwc2VOYW1lOiBcIldHUyA2MFwiXG59O1xuXG5leHBvcnRzLldHUzY2ID0ge1xuICBhOiA2Mzc4MTQ1LjAsXG4gIHJmOiAyOTguMjUsXG4gIGVsbGlwc2VOYW1lOiBcIldHUyA2NlwiXG59O1xuXG5leHBvcnRzLldHUzcgPSB7XG4gIGE6IDYzNzgxMzUuMCxcbiAgcmY6IDI5OC4yNixcbiAgZWxsaXBzZU5hbWU6IFwiV0dTIDcyXCJcbn07XG5cbmV4cG9ydCB2YXIgV0dTODQgPSBleHBvcnRzLldHUzg0ID0ge1xuICBhOiA2Mzc4MTM3LjAsXG4gIHJmOiAyOTguMjU3MjIzNTYzLFxuICBlbGxpcHNlTmFtZTogXCJXR1MgODRcIlxufTtcblxuZXhwb3J0cy5zcGhlcmUgPSB7XG4gIGE6IDYzNzA5OTcuMCxcbiAgYjogNjM3MDk5Ny4wLFxuICBlbGxpcHNlTmFtZTogXCJOb3JtYWwgU3BoZXJlIChyPTYzNzA5OTcpXCJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/constants/Ellipsoid.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/constants/PrimeMeridian.js":
/*!***********************************************************!*\
  !*** ./node_modules/proj4/lib/constants/PrimeMeridian.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ exports)\n/* harmony export */ });\nvar exports = {};\n\nexports.greenwich = 0.0; //\"0dE\",\n\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\n\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\n\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\n\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\n\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\n\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\n\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\n\nexports.ferro = -17.666666666667; //\"17d40'W\",\n\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\n\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\n\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\n\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy9QcmltZU1lcmlkaWFuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29uc3RhbnRzL1ByaW1lTWVyaWRpYW4uanM/M2ZlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwb3J0cyA9IHt9O1xuZXhwb3J0IHtleHBvcnRzIGFzIGRlZmF1bHR9O1xuXG5leHBvcnRzLmdyZWVud2ljaCA9IDAuMDsgLy9cIjBkRVwiLFxuZXhwb3J0cy5saXNib24gPSAtOS4xMzE5MDYxMTExMTE7IC8vXCI5ZDA3JzU0Ljg2MlxcXCJXXCIsXG5leHBvcnRzLnBhcmlzID0gMi4zMzcyMjkxNjY2Njc7IC8vXCIyZDIwJzE0LjAyNVxcXCJFXCIsXG5leHBvcnRzLmJvZ290YSA9IC03NC4wODA5MTY2NjY2Njc7IC8vXCI3NGQwNCc1MS4zXFxcIldcIixcbmV4cG9ydHMubWFkcmlkID0gLTMuNjg3OTM4ODg4ODg5OyAvL1wiM2Q0MScxNi41OFxcXCJXXCIsXG5leHBvcnRzLnJvbWUgPSAxMi40NTIzMzMzMzMzMzM7IC8vXCIxMmQyNyc4LjRcXFwiRVwiLFxuZXhwb3J0cy5iZXJuID0gNy40Mzk1ODMzMzMzMzM7IC8vXCI3ZDI2JzIyLjVcXFwiRVwiLFxuZXhwb3J0cy5qYWthcnRhID0gMTA2LjgwNzcxOTQ0NDQ0NDsgLy9cIjEwNmQ0OCcyNy43OVxcXCJFXCIsXG5leHBvcnRzLmZlcnJvID0gLTE3LjY2NjY2NjY2NjY2NzsgLy9cIjE3ZDQwJ1dcIixcbmV4cG9ydHMuYnJ1c3NlbHMgPSA0LjM2Nzk3NTsgLy9cIjRkMjInNC43MVxcXCJFXCIsXG5leHBvcnRzLnN0b2NraG9sbSA9IDE4LjA1ODI3Nzc3Nzc3ODsgLy9cIjE4ZDMnMjkuOFxcXCJFXCIsXG5leHBvcnRzLmF0aGVucyA9IDIzLjcxNjMzNzU7IC8vXCIyM2Q0Mic1OC44MTVcXFwiRVwiLFxuZXhwb3J0cy5vc2xvID0gMTAuNzIyOTE2NjY2NjY3OyAvL1wiMTBkNDMnMjIuNVxcXCJFXCJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/constants/PrimeMeridian.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/constants/units.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/constants/units.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ft: {\n    to_meter: 0.3048\n  },\n  'us-ft': {\n    to_meter: 1200 / 3937\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy91bml0cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFGQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb25zdGFudHMvdW5pdHMuanM/ZTU2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XG4gIGZ0OiB7dG9fbWV0ZXI6IDAuMzA0OH0sXG4gICd1cy1mdCc6IHt0b19tZXRlcjogMTIwMCAvIDM5Mzd9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/constants/units.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/constants/values.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/constants/values.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"D2R\": () => (/* binding */ D2R),\n/* harmony export */   \"EPSLN\": () => (/* binding */ EPSLN),\n/* harmony export */   \"FORTPI\": () => (/* binding */ FORTPI),\n/* harmony export */   \"HALF_PI\": () => (/* binding */ HALF_PI),\n/* harmony export */   \"PJD_3PARAM\": () => (/* binding */ PJD_3PARAM),\n/* harmony export */   \"PJD_7PARAM\": () => (/* binding */ PJD_7PARAM),\n/* harmony export */   \"PJD_GRIDSHIFT\": () => (/* binding */ PJD_GRIDSHIFT),\n/* harmony export */   \"PJD_NODATUM\": () => (/* binding */ PJD_NODATUM),\n/* harmony export */   \"PJD_WGS84\": () => (/* binding */ PJD_WGS84),\n/* harmony export */   \"R2D\": () => (/* binding */ R2D),\n/* harmony export */   \"RA4\": () => (/* binding */ RA4),\n/* harmony export */   \"RA6\": () => (/* binding */ RA6),\n/* harmony export */   \"SEC_TO_RAD\": () => (/* binding */ SEC_TO_RAD),\n/* harmony export */   \"SIXTH\": () => (/* binding */ SIXTH),\n/* harmony export */   \"SPI\": () => (/* binding */ SPI),\n/* harmony export */   \"SRS_WGS84_ESQUARED\": () => (/* binding */ SRS_WGS84_ESQUARED),\n/* harmony export */   \"SRS_WGS84_SEMIMAJOR\": () => (/* binding */ SRS_WGS84_SEMIMAJOR),\n/* harmony export */   \"SRS_WGS84_SEMIMINOR\": () => (/* binding */ SRS_WGS84_SEMIMINOR),\n/* harmony export */   \"TWO_PI\": () => (/* binding */ TWO_PI)\n/* harmony export */ });\nvar PJD_3PARAM = 1;\nvar PJD_7PARAM = 2;\nvar PJD_GRIDSHIFT = 3;\nvar PJD_WGS84 = 4; // WGS84 or equivalent\n\nvar PJD_NODATUM = 5; // WGS84 or equivalent\n\nvar SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\n\nvar SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\n\nvar SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\n\nvar SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nvar HALF_PI = Math.PI / 2; // ellipoid pj_set_ell.c\n\nvar SIXTH = 0.1666666666666666667;\n/* 1/6 */\n\nvar RA4 = 0.04722222222222222222;\n/* 17/360 */\n\nvar RA6 = 0.02215608465608465608;\nvar EPSLN = 1.0e-10; // you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nvar D2R = 0.01745329251994329577;\nvar R2D = 57.29577951308232088;\nvar FORTPI = Math.PI / 4;\nvar TWO_PI = Math.PI * 2; // SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\n\nvar SPI = 3.14159265359;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvbnN0YW50cy92YWx1ZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9jb25zdGFudHMvdmFsdWVzLmpzP2I2ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBQSkRfM1BBUkFNID0gMTtcbmV4cG9ydCB2YXIgUEpEXzdQQVJBTSA9IDI7XG5leHBvcnQgdmFyIFBKRF9HUklEU0hJRlQgPSAzO1xuZXhwb3J0IHZhciBQSkRfV0dTODQgPSA0OyAvLyBXR1M4NCBvciBlcXVpdmFsZW50XG5leHBvcnQgdmFyIFBKRF9OT0RBVFVNID0gNTsgLy8gV0dTODQgb3IgZXF1aXZhbGVudFxuZXhwb3J0IHZhciBTUlNfV0dTODRfU0VNSU1BSk9SID0gNjM3ODEzNy4wOyAgLy8gb25seSB1c2VkIGluIGdyaWQgc2hpZnQgdHJhbnNmb3Jtc1xuZXhwb3J0IHZhciBTUlNfV0dTODRfU0VNSU1JTk9SID0gNjM1Njc1Mi4zMTQ7ICAvLyBvbmx5IHVzZWQgaW4gZ3JpZCBzaGlmdCB0cmFuc2Zvcm1zXG5leHBvcnQgdmFyIFNSU19XR1M4NF9FU1FVQVJFRCA9IDAuMDA2Njk0Mzc5OTkwMTQxMzE2NTsgLy8gb25seSB1c2VkIGluIGdyaWQgc2hpZnQgdHJhbnNmb3Jtc1xuZXhwb3J0IHZhciBTRUNfVE9fUkFEID0gNC44NDgxMzY4MTEwOTUzNTk5MzU4OTkxNDEwMjM1N2UtNjtcbmV4cG9ydCB2YXIgSEFMRl9QSSA9IE1hdGguUEkvMjtcbi8vIGVsbGlwb2lkIHBqX3NldF9lbGwuY1xuZXhwb3J0IHZhciBTSVhUSCA9IDAuMTY2NjY2NjY2NjY2NjY2NjY2Nztcbi8qIDEvNiAqL1xuZXhwb3J0IHZhciBSQTQgPSAwLjA0NzIyMjIyMjIyMjIyMjIyMjIyO1xuLyogMTcvMzYwICovXG5leHBvcnQgdmFyIFJBNiA9IDAuMDIyMTU2MDg0NjU2MDg0NjU2MDg7XG5leHBvcnQgdmFyIEVQU0xOID0gMS4wZS0xMDtcbi8vIHlvdSdkIHRoaW5rIHlvdSBjb3VsZCB1c2UgTnVtYmVyLkVQU0lMT04gYWJvdmUgYnV0IHRoYXQgbWFrZXNcbi8vIE1vbGx3ZWlkZSBnZXQgaW50byBhbiBpbmZpbmF0ZSBsb29wLlxuXG5leHBvcnQgdmFyIEQyUiA9IDAuMDE3NDUzMjkyNTE5OTQzMjk1Nzc7XG5leHBvcnQgdmFyIFIyRCA9IDU3LjI5NTc3OTUxMzA4MjMyMDg4O1xuZXhwb3J0IHZhciBGT1JUUEkgPSBNYXRoLlBJLzQ7XG5leHBvcnQgdmFyIFRXT19QSSA9IE1hdGguUEkgKiAyO1xuLy8gU1BJIGlzIHNsaWdodGx5IGdyZWF0ZXIgdGhhbiBNYXRoLlBJLCBzbyB2YWx1ZXMgdGhhdCBleGNlZWQgdGhlIC0xODAuLjE4MFxuLy8gZGVncmVlIHJhbmdlIGJ5IGEgdGlueSBhbW91bnQgZG9uJ3QgZ2V0IHdyYXBwZWQuIFRoaXMgcHJldmVudHMgcG9pbnRzIHRoYXRcbi8vIGhhdmUgZHJpZnRlZCBmcm9tIHRoZWlyIG9yaWdpbmFsIGxvY2F0aW9uIGFsb25nIHRoZSAxODB0aCBtZXJpZGlhbiAoZHVlIHRvXG4vLyBmbG9hdGluZyBwb2ludCBlcnJvcikgZnJvbSBjaGFuZ2luZyB0aGVpciBzaWduLlxuZXhwb3J0IHZhciBTUEkgPSAzLjE0MTU5MjY1MzU5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/constants/values.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/core.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/core.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Proj */ \"./node_modules/proj4/lib/Proj.js\");\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ \"./node_modules/proj4/lib/transform.js\");\n\n\nvar wgs84 = (0,_Proj__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n\n  if (Array.isArray(coords)) {\n    transformedArray = (0,_transform__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(from, to, coords, enforceAxis) || {\n      x: NaN,\n      y: NaN\n    };\n\n    if (coords.length > 2) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = (0,_transform__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n\n    if (keys.length === 2) {\n      return out;\n    }\n\n    keys.forEach(function (key) {\n      if (typeof from.name !== 'undefined' && from.name === 'geocent' || typeof to.name !== 'undefined' && to.name === 'geocent') {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof _Proj__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    return item;\n  }\n\n  if (item.oProj) {\n    return item.oProj;\n  }\n\n  return (0,_Proj__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n\n  toProj = checkProj(toProj);\n\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n\n    if (single) {\n      obj.oProj = toProj;\n    }\n\n    return obj;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (proj4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2NvcmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BOztBQVFBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvY29yZS5qcz85MDcyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwcm9qIGZyb20gJy4vUHJvaic7XG5pbXBvcnQgdHJhbnNmb3JtIGZyb20gJy4vdHJhbnNmb3JtJztcbnZhciB3Z3M4NCA9IHByb2ooJ1dHUzg0Jyk7XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybWVyKGZyb20sIHRvLCBjb29yZHMsIGVuZm9yY2VBeGlzKSB7XG4gIHZhciB0cmFuc2Zvcm1lZEFycmF5LCBvdXQsIGtleXM7XG4gIGlmIChBcnJheS5pc0FycmF5KGNvb3JkcykpIHtcbiAgICB0cmFuc2Zvcm1lZEFycmF5ID0gdHJhbnNmb3JtKGZyb20sIHRvLCBjb29yZHMsIGVuZm9yY2VBeGlzKSB8fCB7eDogTmFOLCB5OiBOYU59O1xuICAgIGlmIChjb29yZHMubGVuZ3RoID4gMikge1xuICAgICAgaWYgKCh0eXBlb2YgZnJvbS5uYW1lICE9PSAndW5kZWZpbmVkJyAmJiBmcm9tLm5hbWUgPT09ICdnZW9jZW50JykgfHwgKHR5cGVvZiB0by5uYW1lICE9PSAndW5kZWZpbmVkJyAmJiB0by5uYW1lID09PSAnZ2VvY2VudCcpKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdHJhbnNmb3JtZWRBcnJheS56ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgIHJldHVybiBbdHJhbnNmb3JtZWRBcnJheS54LCB0cmFuc2Zvcm1lZEFycmF5LnksIHRyYW5zZm9ybWVkQXJyYXkuel0uY29uY2F0KGNvb3Jkcy5zcGxpY2UoMykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBbdHJhbnNmb3JtZWRBcnJheS54LCB0cmFuc2Zvcm1lZEFycmF5LnksIGNvb3Jkc1syXV0uY29uY2F0KGNvb3Jkcy5zcGxpY2UoMykpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gW3RyYW5zZm9ybWVkQXJyYXkueCwgdHJhbnNmb3JtZWRBcnJheS55XS5jb25jYXQoY29vcmRzLnNwbGljZSgyKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBbdHJhbnNmb3JtZWRBcnJheS54LCB0cmFuc2Zvcm1lZEFycmF5LnldO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBvdXQgPSB0cmFuc2Zvcm0oZnJvbSwgdG8sIGNvb3JkcywgZW5mb3JjZUF4aXMpO1xuICAgIGtleXMgPSBPYmplY3Qua2V5cyhjb29yZHMpO1xuICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMikge1xuICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmICgodHlwZW9mIGZyb20ubmFtZSAhPT0gJ3VuZGVmaW5lZCcgJiYgZnJvbS5uYW1lID09PSAnZ2VvY2VudCcpIHx8ICh0eXBlb2YgdG8ubmFtZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdG8ubmFtZSA9PT0gJ2dlb2NlbnQnKSkge1xuICAgICAgICBpZiAoa2V5ID09PSAneCcgfHwga2V5ID09PSAneScgfHwga2V5ID09PSAneicpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChrZXkgPT09ICd4JyB8fCBrZXkgPT09ICd5Jykge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgb3V0W2tleV0gPSBjb29yZHNba2V5XTtcbiAgICB9KTtcbiAgICByZXR1cm4gb3V0O1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrUHJvaihpdGVtKSB7XG4gIGlmIChpdGVtIGluc3RhbmNlb2YgcHJvaikge1xuICAgIHJldHVybiBpdGVtO1xuICB9XG4gIGlmIChpdGVtLm9Qcm9qKSB7XG4gICAgcmV0dXJuIGl0ZW0ub1Byb2o7XG4gIH1cbiAgcmV0dXJuIHByb2ooaXRlbSk7XG59XG5cbmZ1bmN0aW9uIHByb2o0KGZyb21Qcm9qLCB0b1Byb2osIGNvb3JkKSB7XG4gIGZyb21Qcm9qID0gY2hlY2tQcm9qKGZyb21Qcm9qKTtcbiAgdmFyIHNpbmdsZSA9IGZhbHNlO1xuICB2YXIgb2JqO1xuICBpZiAodHlwZW9mIHRvUHJvaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB0b1Byb2ogPSBmcm9tUHJvajtcbiAgICBmcm9tUHJvaiA9IHdnczg0O1xuICAgIHNpbmdsZSA9IHRydWU7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHRvUHJvai54ICE9PSAndW5kZWZpbmVkJyB8fCBBcnJheS5pc0FycmF5KHRvUHJvaikpIHtcbiAgICBjb29yZCA9IHRvUHJvajtcbiAgICB0b1Byb2ogPSBmcm9tUHJvajtcbiAgICBmcm9tUHJvaiA9IHdnczg0O1xuICAgIHNpbmdsZSA9IHRydWU7XG4gIH1cbiAgdG9Qcm9qID0gY2hlY2tQcm9qKHRvUHJvaik7XG4gIGlmIChjb29yZCkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1lcihmcm9tUHJvaiwgdG9Qcm9qLCBjb29yZCk7XG4gIH0gZWxzZSB7XG4gICAgb2JqID0ge1xuICAgICAgZm9yd2FyZDogZnVuY3Rpb24gKGNvb3JkcywgZW5mb3JjZUF4aXMpIHtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWVyKGZyb21Qcm9qLCB0b1Byb2osIGNvb3JkcywgZW5mb3JjZUF4aXMpO1xuICAgICAgfSxcbiAgICAgIGludmVyc2U6IGZ1bmN0aW9uIChjb29yZHMsIGVuZm9yY2VBeGlzKSB7XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1lcih0b1Byb2osIGZyb21Qcm9qLCBjb29yZHMsIGVuZm9yY2VBeGlzKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGlmIChzaW5nbGUpIHtcbiAgICAgIG9iai5vUHJvaiA9IHRvUHJvajtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbiAgfVxufVxuZXhwb3J0IGRlZmF1bHQgcHJvajQ7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/core.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/datum.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/datum.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM;\n  } else {\n    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM;\n    }\n\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM;\n        out.datum_params[3] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;\n        out.datum_params[4] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;\n        out.datum_params[5] *= _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD;\n        out.datum_params[6] = out.datum_params[6] / 1000000.0 + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n\n  out.a = a; //datum object also uses these values\n\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (datum);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2RhdHVtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvZGF0dW0uanM/MTA0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BKRF8zUEFSQU0sIFBKRF83UEFSQU0sIFBKRF9HUklEU0hJRlQsIFBKRF9XR1M4NCwgUEpEX05PREFUVU0sIFNFQ19UT19SQUR9IGZyb20gJy4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cbmZ1bmN0aW9uIGRhdHVtKGRhdHVtQ29kZSwgZGF0dW1fcGFyYW1zLCBhLCBiLCBlcywgZXAyLCBuYWRncmlkcykge1xuICB2YXIgb3V0ID0ge307XG5cbiAgaWYgKGRhdHVtQ29kZSA9PT0gdW5kZWZpbmVkIHx8IGRhdHVtQ29kZSA9PT0gJ25vbmUnKSB7XG4gICAgb3V0LmRhdHVtX3R5cGUgPSBQSkRfTk9EQVRVTTtcbiAgfSBlbHNlIHtcbiAgICBvdXQuZGF0dW1fdHlwZSA9IFBKRF9XR1M4NDtcbiAgfVxuXG4gIGlmIChkYXR1bV9wYXJhbXMpIHtcbiAgICBvdXQuZGF0dW1fcGFyYW1zID0gZGF0dW1fcGFyYW1zLm1hcChwYXJzZUZsb2F0KTtcbiAgICBpZiAob3V0LmRhdHVtX3BhcmFtc1swXSAhPT0gMCB8fCBvdXQuZGF0dW1fcGFyYW1zWzFdICE9PSAwIHx8IG91dC5kYXR1bV9wYXJhbXNbMl0gIT09IDApIHtcbiAgICAgIG91dC5kYXR1bV90eXBlID0gUEpEXzNQQVJBTTtcbiAgICB9XG4gICAgaWYgKG91dC5kYXR1bV9wYXJhbXMubGVuZ3RoID4gMykge1xuICAgICAgaWYgKG91dC5kYXR1bV9wYXJhbXNbM10gIT09IDAgfHwgb3V0LmRhdHVtX3BhcmFtc1s0XSAhPT0gMCB8fCBvdXQuZGF0dW1fcGFyYW1zWzVdICE9PSAwIHx8IG91dC5kYXR1bV9wYXJhbXNbNl0gIT09IDApIHtcbiAgICAgICAgb3V0LmRhdHVtX3R5cGUgPSBQSkRfN1BBUkFNO1xuICAgICAgICBvdXQuZGF0dW1fcGFyYW1zWzNdICo9IFNFQ19UT19SQUQ7XG4gICAgICAgIG91dC5kYXR1bV9wYXJhbXNbNF0gKj0gU0VDX1RPX1JBRDtcbiAgICAgICAgb3V0LmRhdHVtX3BhcmFtc1s1XSAqPSBTRUNfVE9fUkFEO1xuICAgICAgICBvdXQuZGF0dW1fcGFyYW1zWzZdID0gKG91dC5kYXR1bV9wYXJhbXNbNl0gLyAxMDAwMDAwLjApICsgMS4wO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGlmIChuYWRncmlkcykge1xuICAgIG91dC5kYXR1bV90eXBlID0gUEpEX0dSSURTSElGVDtcbiAgICBvdXQuZ3JpZHMgPSBuYWRncmlkcztcbiAgfVxuICBvdXQuYSA9IGE7IC8vZGF0dW0gb2JqZWN0IGFsc28gdXNlcyB0aGVzZSB2YWx1ZXNcbiAgb3V0LmIgPSBiO1xuICBvdXQuZXMgPSBlcztcbiAgb3V0LmVwMiA9IGVwMjtcbiAgcmV0dXJuIG91dDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGF0dW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/datum.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/datumUtils.js":
/*!**********************************************!*\
  !*** ./node_modules/proj4/lib/datumUtils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"compareDatums\": () => (/* binding */ compareDatums),\n/* harmony export */   \"geocentricFromWgs84\": () => (/* binding */ geocentricFromWgs84),\n/* harmony export */   \"geocentricToGeodetic\": () => (/* binding */ geocentricToGeodetic),\n/* harmony export */   \"geocentricToWgs84\": () => (/* binding */ geocentricToWgs84),\n/* harmony export */   \"geodeticToGeocentric\": () => (/* binding */ geodeticToGeocentric)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\nfunction compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2];\n  } else if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {\n    return source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6];\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\n\nfunction geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn;\n  /*  Earth radius at location  */\n\n  var Sin_Lat;\n  /*  Math.sin(Latitude)  */\n\n  var Sin2_Lat;\n  /*  Square of Math.sin(Latitude)  */\n\n  var Cos_Lat;\n  /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n\n  if (Latitude < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI && Latitude > -1.001 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {\n    Latitude = -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  } else if (Latitude > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI && Latitude < 1.001 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {\n    Latitude = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  } else if (Latitude < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return {\n      x: -Infinity,\n      y: -Infinity,\n      z: p.z\n    };\n  } else if (Latitude > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) {\n    /* Latitude out of range */\n    return {\n      x: Infinity,\n      y: Infinity,\n      z: p.z\n    };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= 2 * Math.PI;\n  }\n\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / Math.sqrt(1.0e0 - es * Sin2_Lat);\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: (Rn * (1 - es) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nfunction geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = genau * genau;\n  var maxiter = 30;\n  var P;\n  /* distance between semi-minor axis and location */\n\n  var RR;\n  /* distance between center and location */\n\n  var CT;\n  /* sin of geocentric latitude */\n\n  var ST;\n  /* cos of geocentric latitude */\n\n  var RX;\n  var RK;\n  var RN;\n  /* Earth radius at location */\n\n  var CPHI0;\n  /* cos of start or old geodetic latitude in iterations */\n\n  var SPHI0;\n  /* sin of start or old geodetic latitude in iterations */\n\n  var CPHI;\n  /* cos of searched geodetic latitude */\n\n  var SPHI;\n  /* sin of searched geodetic latitude */\n\n  var SDPHI;\n  /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n\n  var iter;\n  /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n\n  var Longitude;\n  var Latitude;\n  var Height;\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n  /*      special cases for latitude and longitude */\n\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n\n    if (RR / a < genau) {\n      Latitude = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n\n\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n    /*  ellipsoidal (geodetic) height */\n\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  } while (SDPHI * SDPHI > genau2 && iter < maxiter);\n  /*      ellipsoidal (geodetic) latitude */\n\n\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\n\nfunction geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6]; // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\n\nfunction geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF; //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/datumUtils.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/datum_transform.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/datum_transform.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyGridShift\": () => (/* binding */ applyGridShift),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _datumUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datumUtils */ \"./node_modules/proj4/lib/datumUtils.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n\n\n\nfunction checkParams(type) {\n  return type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(source, dest, point) {\n  // Short cut if the datums are identical.\n  if ((0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.compareDatums)(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  } // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n\n\n  if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM || dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_NODATUM) {\n    return point;\n  } // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n\n  var source_a = source.a;\n  var source_es = source.es;\n\n  if (source.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n\n    source_a = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMAJOR;\n    source_es = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n\n  if (dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {\n    dest_a = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMAJOR;\n    dest_b = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_SEMIMINOR;\n    dest_es = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SRS_WGS84_ESQUARED;\n  } // Do we need to go through geocentric coordinates?\n\n\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  } // Convert to geocentric coordinates.\n\n\n  point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geodeticToGeocentric)(point, source_es, source_a); // Convert between datums\n\n  if (checkParams(source.datum_type)) {\n    point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricToWgs84)(point, source.datum_type, source.datum_params);\n  }\n\n  if (checkParams(dest.datum_type)) {\n    point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricFromWgs84)(point, dest.datum_type, dest.datum_params);\n  }\n\n  point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_1__.geocentricToGeodetic)(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\nfunction applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n\n  var input = {\n    x: -point.x,\n    y: point.y\n  };\n  var output = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n\n    onlyMandatoryGrids = grid.mandatory;\n\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n\n      continue;\n    }\n\n    var subgrid = grid.grid.subgrids[0]; // skip tables that don't match our point at all\n\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n      continue;\n    }\n\n    output = applySubgridShift(input, inverse, subgrid);\n\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\" + -input.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D + \" \" + input.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n\n  if (isNaN(pin.x)) {\n    return val;\n  }\n\n  var tb = {\n    x: pin.x,\n    y: pin.y\n  };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9,\n        tol = 1e-12;\n    var dif, del;\n\n    do {\n      del = nadInterpolate(t, ct);\n\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n\n      dif = {\n        x: tb.x - (del.x + t.x),\n        y: tb.y - (del.y + t.y)\n      };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n\n    val.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {\n    x: pin.x / ct.del[0],\n    y: pin.y / ct.del[1]\n  };\n  var indx = {\n    x: Math.floor(t.x),\n    y: Math.floor(t.y)\n  };\n  var frct = {\n    x: t.x - 1.0 * indx.x,\n    y: t.y - 1.0 * indx.y\n  };\n  var val = {\n    x: Number.NaN,\n    y: Number.NaN\n  };\n  var inx;\n\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n\n  inx = indx.y * ct.lim[0] + indx.x;\n  var f00 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx++;\n  var f10 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx += ct.lim[0];\n  var f11 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  inx--;\n  var f01 = {\n    x: ct.cvs[inx][0],\n    y: ct.cvs[inx][1]\n  };\n  var m11 = frct.x * frct.y,\n      m10 = frct.x * (1.0 - frct.y),\n      m00 = (1.0 - frct.x) * (1.0 - frct.y),\n      m01 = (1.0 - frct.x) * frct.y;\n  val.x = m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x;\n  val.y = m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y;\n  return val;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/datum_transform.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/defs.js":
/*!****************************************!*\
  !*** ./node_modules/proj4/lib/defs.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global */ \"./node_modules/proj4/lib/global.js\");\n/* harmony import */ var _projString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projString */ \"./node_modules/proj4/lib/projString.js\");\n/* harmony import */ var wkt_parser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! wkt-parser */ \"./node_modules/wkt-parser/index.js\");\n\n\n\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n\n  if (arguments.length === 2) {\n    var def = arguments[1];\n\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = (0,_projString__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arguments[1]);\n      } else {\n        defs[name] = (0,wkt_parser__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        } else {\n          defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n\n    return;\n  }\n}\n\n(0,_global__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(defs);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defs);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2RlZnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBR0E7O0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9kZWZzLmpzPzgxNjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdsb2JhbHMgZnJvbSAnLi9nbG9iYWwnO1xuaW1wb3J0IHBhcnNlUHJvaiBmcm9tICcuL3Byb2pTdHJpbmcnO1xuaW1wb3J0IHdrdCBmcm9tICd3a3QtcGFyc2VyJztcblxuZnVuY3Rpb24gZGVmcyhuYW1lKSB7XG4gIC8qZ2xvYmFsIGNvbnNvbGUqL1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyKSB7XG4gICAgdmFyIGRlZiA9IGFyZ3VtZW50c1sxXTtcbiAgICBpZiAodHlwZW9mIGRlZiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmIChkZWYuY2hhckF0KDApID09PSAnKycpIHtcbiAgICAgICAgZGVmc1tuYW1lXSA9IHBhcnNlUHJvaihhcmd1bWVudHNbMV0pO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGRlZnNbbmFtZV0gPSB3a3QoYXJndW1lbnRzWzFdKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZGVmc1tuYW1lXSA9IGRlZjtcbiAgICB9XG4gIH1cbiAgZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG5hbWUpKSB7XG4gICAgICByZXR1cm4gbmFtZS5tYXAoZnVuY3Rpb24odikge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2KSkge1xuICAgICAgICAgIGRlZnMuYXBwbHkodGhhdCwgdik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgZGVmcyh2KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBuYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgaWYgKG5hbWUgaW4gZGVmcykge1xuICAgICAgICByZXR1cm4gZGVmc1tuYW1lXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoJ0VQU0cnIGluIG5hbWUpIHtcbiAgICAgIGRlZnNbJ0VQU0c6JyArIG5hbWUuRVBTR10gPSBuYW1lO1xuICAgIH1cbiAgICBlbHNlIGlmICgnRVNSSScgaW4gbmFtZSkge1xuICAgICAgZGVmc1snRVNSSTonICsgbmFtZS5FU1JJXSA9IG5hbWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKCdJQVUyMDAwJyBpbiBuYW1lKSB7XG4gICAgICBkZWZzWydJQVUyMDAwOicgKyBuYW1lLklBVTIwMDBdID0gbmFtZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhuYW1lKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cblxufVxuZ2xvYmFscyhkZWZzKTtcbmV4cG9ydCBkZWZhdWx0IGRlZnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/defs.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/deriveConstants.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/deriveConstants.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eccentricity\": () => (/* binding */ eccentricity),\n/* harmony export */   \"sphere\": () => (/* binding */ sphere)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants/Ellipsoid */ \"./node_modules/proj4/lib/constants/Ellipsoid.js\");\n/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./match */ \"./node_modules/proj4/lib/match.js\");\n\n\n\nfunction eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n\n  var b2 = b * b; // used in geocentric\n\n  var es = (a2 - b2) / a2; // e ^ 2\n\n  var e = 0;\n\n  if (R_A) {\n    a *= 1 - es * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.SIXTH + es * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.RA4 + es * _constants_values__WEBPACK_IMPORTED_MODULE_0__.RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nfunction sphere(a, b, rf, ellps, sphere) {\n  if (!a) {\n    // do we have an ellipsoid?\n    var ellipse = (0,_match__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__[\"default\"], ellps);\n\n    if (!ellipse) {\n      ellipse = _constants_Ellipsoid__WEBPACK_IMPORTED_MODULE_1__.WGS84;\n    }\n\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n\n  if (rf === 0 || Math.abs(a - b) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    sphere = true;\n    b = a;\n  }\n\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2Rlcml2ZUNvbnN0YW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9kZXJpdmVDb25zdGFudHMuanM/MGNmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1NJWFRILCBSQTQsIFJBNiwgRVBTTE59IGZyb20gJy4vY29uc3RhbnRzL3ZhbHVlcyc7XG5pbXBvcnQge2RlZmF1bHQgYXMgRWxsaXBzb2lkLCBXR1M4NH0gZnJvbSAnLi9jb25zdGFudHMvRWxsaXBzb2lkJztcbmltcG9ydCBtYXRjaCBmcm9tICcuL21hdGNoJztcblxuZXhwb3J0IGZ1bmN0aW9uIGVjY2VudHJpY2l0eShhLCBiLCByZiwgUl9BKSB7XG4gIHZhciBhMiA9IGEgKiBhOyAvLyB1c2VkIGluIGdlb2NlbnRyaWNcbiAgdmFyIGIyID0gYiAqIGI7IC8vIHVzZWQgaW4gZ2VvY2VudHJpY1xuICB2YXIgZXMgPSAoYTIgLSBiMikgLyBhMjsgLy8gZSBeIDJcbiAgdmFyIGUgPSAwO1xuICBpZiAoUl9BKSB7XG4gICAgYSAqPSAxIC0gZXMgKiAoU0lYVEggKyBlcyAqIChSQTQgKyBlcyAqIFJBNikpO1xuICAgIGEyID0gYSAqIGE7XG4gICAgZXMgPSAwO1xuICB9IGVsc2Uge1xuICAgIGUgPSBNYXRoLnNxcnQoZXMpOyAvLyBlY2NlbnRyaWNpdHlcbiAgfVxuICB2YXIgZXAyID0gKGEyIC0gYjIpIC8gYjI7IC8vIHVzZWQgaW4gZ2VvY2VudHJpY1xuICByZXR1cm4ge1xuICAgIGVzOiBlcyxcbiAgICBlOiBlLFxuICAgIGVwMjogZXAyXG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc3BoZXJlKGEsIGIsIHJmLCBlbGxwcywgc3BoZXJlKSB7XG4gIGlmICghYSkgeyAvLyBkbyB3ZSBoYXZlIGFuIGVsbGlwc29pZD9cbiAgICB2YXIgZWxsaXBzZSA9IG1hdGNoKEVsbGlwc29pZCwgZWxscHMpO1xuICAgIGlmICghZWxsaXBzZSkge1xuICAgICAgZWxsaXBzZSA9IFdHUzg0O1xuICAgIH1cbiAgICBhID0gZWxsaXBzZS5hO1xuICAgIGIgPSBlbGxpcHNlLmI7XG4gICAgcmYgPSBlbGxpcHNlLnJmO1xuICB9XG5cbiAgaWYgKHJmICYmICFiKSB7XG4gICAgYiA9ICgxLjAgLSAxLjAgLyByZikgKiBhO1xuICB9XG4gIGlmIChyZiA9PT0gMCB8fCBNYXRoLmFicyhhIC0gYikgPCBFUFNMTikge1xuICAgIHNwaGVyZSA9IHRydWU7XG4gICAgYiA9IGE7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBhOiBhLFxuICAgIGI6IGIsXG4gICAgcmY6IHJmLFxuICAgIHNwaGVyZTogc3BoZXJlXG4gIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/deriveConstants.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/extend.js":
/*!******************************************!*\
  !*** ./node_modules/proj4/lib/extend.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(destination, source) {\n  destination = destination || {};\n  var value, property;\n\n  if (!source) {\n    return destination;\n  }\n\n  for (property in source) {\n    value = source[property];\n\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n\n  return destination;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2V4dGVuZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvZXh0ZW5kLmpzPzBiOTciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVzdGluYXRpb24sIHNvdXJjZSkge1xuICBkZXN0aW5hdGlvbiA9IGRlc3RpbmF0aW9uIHx8IHt9O1xuICB2YXIgdmFsdWUsIHByb3BlcnR5O1xuICBpZiAoIXNvdXJjZSkge1xuICAgIHJldHVybiBkZXN0aW5hdGlvbjtcbiAgfVxuICBmb3IgKHByb3BlcnR5IGluIHNvdXJjZSkge1xuICAgIHZhbHVlID0gc291cmNlW3Byb3BlcnR5XTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZGVzdGluYXRpb25bcHJvcGVydHldID0gdmFsdWU7XG4gICAgfVxuICB9XG4gIHJldHVybiBkZXN0aW5hdGlvbjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/extend.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/global.js":
/*!******************************************!*\
  !*** ./node_modules/proj4/lib/global.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2dsb2JhbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2dsb2JhbC5qcz80ZjkwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGRlZnMpIHtcbiAgZGVmcygnRVBTRzo0MzI2JywgXCIrdGl0bGU9V0dTIDg0IChsb25nL2xhdCkgK3Byb2o9bG9uZ2xhdCArZWxscHM9V0dTODQgK2RhdHVtPVdHUzg0ICt1bml0cz1kZWdyZWVzXCIpO1xuICBkZWZzKCdFUFNHOjQyNjknLCBcIit0aXRsZT1OQUQ4MyAobG9uZy9sYXQpICtwcm9qPWxvbmdsYXQgK2E9NjM3ODEzNy4wICtiPTYzNTY3NTIuMzE0MTQwMzYgK2VsbHBzPUdSUzgwICtkYXR1bT1OQUQ4MyArdW5pdHM9ZGVncmVlc1wiKTtcbiAgZGVmcygnRVBTRzozODU3JywgXCIrdGl0bGU9V0dTIDg0IC8gUHNldWRvLU1lcmNhdG9yICtwcm9qPW1lcmMgK2E9NjM3ODEzNyArYj02Mzc4MTM3ICtsYXRfdHM9MC4wICtsb25fMD0wLjAgK3hfMD0wLjAgK3lfMD0wICtrPTEuMCArdW5pdHM9bSArbmFkZ3JpZHM9QG51bGwgK25vX2RlZnNcIik7XG5cbiAgZGVmcy5XR1M4NCA9IGRlZnNbJ0VQU0c6NDMyNiddO1xuICBkZWZzWydFUFNHOjM3ODUnXSA9IGRlZnNbJ0VQU0c6Mzg1NyddOyAvLyBtYWludGFpbiBiYWNrd2FyZCBjb21wYXQsIG9mZmljaWFsIGNvZGUgaXMgMzg1N1xuICBkZWZzLkdPT0dMRSA9IGRlZnNbJ0VQU0c6Mzg1NyddO1xuICBkZWZzWydFUFNHOjkwMDkxMyddID0gZGVmc1snRVBTRzozODU3J107XG4gIGRlZnNbJ0VQU0c6MTAyMTEzJ10gPSBkZWZzWydFUFNHOjM4NTcnXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/global.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/index.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core */ \"./node_modules/proj4/lib/core.js\");\n/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Proj */ \"./node_modules/proj4/lib/Proj.js\");\n/* harmony import */ var _Point__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Point */ \"./node_modules/proj4/lib/Point.js\");\n/* harmony import */ var _common_toPoint__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/toPoint */ \"./node_modules/proj4/lib/common/toPoint.js\");\n/* harmony import */ var _defs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defs */ \"./node_modules/proj4/lib/defs.js\");\n/* harmony import */ var _nadgrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nadgrid */ \"./node_modules/proj4/lib/nadgrid.js\");\n/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./transform */ \"./node_modules/proj4/lib/transform.js\");\n/* harmony import */ var mgrs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! mgrs */ \"./node_modules/mgrs/mgrs.js\");\n/* harmony import */ var _projs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../projs */ \"./node_modules/proj4/projs.js\");\n\n\n\n\n\n\n\n\n\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defaultDatum = 'WGS84'; //default datum\n\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Proj = _Proj__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WGS84 = new _core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Proj('WGS84');\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Point = _Point__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toPoint = _common_toPoint__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].defs = _defs__WEBPACK_IMPORTED_MODULE_4__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].nadgrid = _nadgrid__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].transform = _transform__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].mgrs = mgrs__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\n_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"].version = '__VERSION__';\n(0,_projs__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_core__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL2luZGV4LmpzP2E3OWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHByb2o0IGZyb20gJy4vY29yZSc7XG5pbXBvcnQgUHJvaiBmcm9tIFwiLi9Qcm9qXCI7XG5pbXBvcnQgUG9pbnQgZnJvbSBcIi4vUG9pbnRcIjtcbmltcG9ydCBjb21tb24gZnJvbSBcIi4vY29tbW9uL3RvUG9pbnRcIjtcbmltcG9ydCBkZWZzIGZyb20gXCIuL2RlZnNcIjtcbmltcG9ydCBuYWRncmlkIGZyb20gXCIuL25hZGdyaWRcIjtcbmltcG9ydCB0cmFuc2Zvcm0gZnJvbSBcIi4vdHJhbnNmb3JtXCI7XG5pbXBvcnQgbWdycyBmcm9tIFwibWdyc1wiO1xuaW1wb3J0IGluY2x1ZGVkUHJvamVjdGlvbnMgZnJvbSBcIi4uL3Byb2pzXCI7XG5cbnByb2o0LmRlZmF1bHREYXR1bSA9ICdXR1M4NCc7IC8vZGVmYXVsdCBkYXR1bVxucHJvajQuUHJvaiA9IFByb2o7XG5wcm9qNC5XR1M4NCA9IG5ldyBwcm9qNC5Qcm9qKCdXR1M4NCcpO1xucHJvajQuUG9pbnQgPSBQb2ludDtcbnByb2o0LnRvUG9pbnQgPSBjb21tb247XG5wcm9qNC5kZWZzID0gZGVmcztcbnByb2o0Lm5hZGdyaWQgPSBuYWRncmlkO1xucHJvajQudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xucHJvajQubWdycyA9IG1ncnM7XG5wcm9qNC52ZXJzaW9uID0gJ19fVkVSU0lPTl9fJztcbmluY2x1ZGVkUHJvamVjdGlvbnMocHJvajQpO1xuZXhwb3J0IGRlZmF1bHQgcHJvajQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/index.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/match.js":
/*!*****************************************!*\
  !*** ./node_modules/proj4/lib/match.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ match)\n/* harmony export */ });\nvar ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL21hdGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL21hdGNoLmpzPzc5NzQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlnbm9yZWRDaGFyID0gL1tcXHNfXFwtXFwvXFwoXFwpXS9nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWF0Y2gob2JqLCBrZXkpIHtcbiAgaWYgKG9ialtrZXldKSB7XG4gICAgcmV0dXJuIG9ialtrZXldO1xuICB9XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgdmFyIGxrZXkgPSBrZXkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKGlnbm9yZWRDaGFyLCAnJyk7XG4gIHZhciBpID0gLTE7XG4gIHZhciB0ZXN0a2V5LCBwcm9jZXNzZWRLZXk7XG4gIHdoaWxlICgrK2kgPCBrZXlzLmxlbmd0aCkge1xuICAgIHRlc3RrZXkgPSBrZXlzW2ldO1xuICAgIHByb2Nlc3NlZEtleSA9IHRlc3RrZXkudG9Mb3dlckNhc2UoKS5yZXBsYWNlKGlnbm9yZWRDaGFyLCAnJyk7XG4gICAgaWYgKHByb2Nlc3NlZEtleSA9PT0gbGtleSkge1xuICAgICAgcmV0dXJuIG9ialt0ZXN0a2V5XTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/match.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/nadgrid.js":
/*!*******************************************!*\
  !*** ./node_modules/proj4/lib/nadgrid.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nadgrid),\n/* harmony export */   \"getNadgrids\": () => (/* binding */ getNadgrids)\n/* harmony export */ });\n/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\nvar loadedNadgrids = {};\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\n\nfunction nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {\n    header: header,\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\n\nfunction getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n\n  var optional = value[0] === '@';\n\n  if (optional) {\n    value = value.slice(1);\n  }\n\n  if (value === 'null') {\n    return {\n      name: 'null',\n      mandatory: !optional,\n      grid: null,\n      isNull: true\n    };\n  }\n\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return seconds / 3600 * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n\n  if (nFields === 11) {\n    return false;\n  }\n\n  nFields = view.getInt32(8, true);\n\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval); // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian)\n    };\n    gridShiftRecords.push(record);\n  }\n\n  return gridShiftRecords;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/nadgrid.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/parseCode.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/parseCode.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _defs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defs */ \"./node_modules/proj4/lib/defs.js\");\n/* harmony import */ var wkt_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wkt-parser */ \"./node_modules/wkt-parser/index.js\");\n/* harmony import */ var _projString__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projString */ \"./node_modules/proj4/lib/projString.js\");\n/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./match */ \"./node_modules/proj4/lib/match.js\");\n\n\n\n\n\nfunction testObj(code) {\n  return typeof code === 'string';\n}\n\nfunction testDef(code) {\n  return code in _defs__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n}\n\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction testWKT(code) {\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\n\nvar codes = ['3857', '900913', '3785', '102113'];\n\nfunction checkMercator(item) {\n  var auth = (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(item, 'authority');\n\n  if (!auth) {\n    return;\n  }\n\n  var code = (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\n\nfunction checkProjStr(item) {\n  var ext = (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(item, 'extension');\n\n  if (!ext) {\n    return;\n  }\n\n  return (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(ext, 'proj4');\n}\n\nfunction testProj(code) {\n  return code[0] === '+';\n}\n\nfunction parse(code) {\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return _defs__WEBPACK_IMPORTED_MODULE_0__[\"default\"][code];\n    }\n\n    if (testWKT(code)) {\n      var out = (0,wkt_parser__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(code); // test of spetial case, due to this being a very common and often malformed\n\n      if (checkMercator(out)) {\n        return _defs__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"EPSG:3857\"];\n      }\n\n      var maybeProjStr = checkProjStr(out);\n\n      if (maybeProjStr) {\n        return (0,_projString__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(maybeProjStr);\n      }\n\n      return out;\n    }\n\n    if (testProj(code)) {\n      return (0,_projString__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(code);\n    }\n  } else {\n    return code;\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3BhcnNlQ29kZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3BhcnNlQ29kZS5qcz9hNzZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZzIGZyb20gJy4vZGVmcyc7XG5pbXBvcnQgd2t0IGZyb20gJ3drdC1wYXJzZXInO1xuaW1wb3J0IHByb2pTdHIgZnJvbSAnLi9wcm9qU3RyaW5nJztcbmltcG9ydCBtYXRjaCBmcm9tICcuL21hdGNoJztcbmZ1bmN0aW9uIHRlc3RPYmooY29kZSl7XG4gIHJldHVybiB0eXBlb2YgY29kZSA9PT0gJ3N0cmluZyc7XG59XG5mdW5jdGlvbiB0ZXN0RGVmKGNvZGUpe1xuICByZXR1cm4gY29kZSBpbiBkZWZzO1xufVxudmFyIGNvZGVXb3JkcyA9IFsnUFJPSkVDVEVEQ1JTJywgJ1BST0pDUlMnLCAnR0VPR0NTJywnR0VPQ0NTJywnUFJPSkNTJywnTE9DQUxfQ1MnLCAnR0VPRENSUycsICdHRU9ERVRJQ0NSUycsICdHRU9ERVRJQ0RBVFVNJywgJ0VOR0NSUycsICdFTkdJTkVFUklOR0NSUyddO1xuZnVuY3Rpb24gdGVzdFdLVChjb2RlKXtcbiAgcmV0dXJuIGNvZGVXb3Jkcy5zb21lKGZ1bmN0aW9uICh3b3JkKSB7XG4gICAgcmV0dXJuIGNvZGUuaW5kZXhPZih3b3JkKSA+IC0xO1xuICB9KTtcbn1cbnZhciBjb2RlcyA9IFsnMzg1NycsICc5MDA5MTMnLCAnMzc4NScsICcxMDIxMTMnXTtcbmZ1bmN0aW9uIGNoZWNrTWVyY2F0b3IoaXRlbSkge1xuICB2YXIgYXV0aCA9IG1hdGNoKGl0ZW0sICdhdXRob3JpdHknKTtcbiAgaWYgKCFhdXRoKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBjb2RlID0gbWF0Y2goYXV0aCwgJ2Vwc2cnKTtcbiAgcmV0dXJuIGNvZGUgJiYgY29kZXMuaW5kZXhPZihjb2RlKSA+IC0xO1xufVxuZnVuY3Rpb24gY2hlY2tQcm9qU3RyKGl0ZW0pIHtcbiAgdmFyIGV4dCA9IG1hdGNoKGl0ZW0sICdleHRlbnNpb24nKTtcbiAgaWYgKCFleHQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgcmV0dXJuIG1hdGNoKGV4dCwgJ3Byb2o0Jyk7XG59XG5mdW5jdGlvbiB0ZXN0UHJvaihjb2RlKXtcbiAgcmV0dXJuIGNvZGVbMF0gPT09ICcrJztcbn1cbmZ1bmN0aW9uIHBhcnNlKGNvZGUpe1xuICBpZiAodGVzdE9iaihjb2RlKSkge1xuICAgIC8vY2hlY2sgdG8gc2VlIGlmIHRoaXMgaXMgYSBXS1Qgc3RyaW5nXG4gICAgaWYgKHRlc3REZWYoY29kZSkpIHtcbiAgICAgIHJldHVybiBkZWZzW2NvZGVdO1xuICAgIH1cbiAgICBpZiAodGVzdFdLVChjb2RlKSkge1xuICAgICAgdmFyIG91dCA9IHdrdChjb2RlKTtcbiAgICAgIC8vIHRlc3Qgb2Ygc3BldGlhbCBjYXNlLCBkdWUgdG8gdGhpcyBiZWluZyBhIHZlcnkgY29tbW9uIGFuZCBvZnRlbiBtYWxmb3JtZWRcbiAgICAgIGlmIChjaGVja01lcmNhdG9yKG91dCkpIHtcbiAgICAgICAgcmV0dXJuIGRlZnNbJ0VQU0c6Mzg1NyddO1xuICAgICAgfVxuICAgICAgdmFyIG1heWJlUHJvalN0ciA9IGNoZWNrUHJvalN0cihvdXQpO1xuICAgICAgaWYgKG1heWJlUHJvalN0cikge1xuICAgICAgICByZXR1cm4gcHJvalN0cihtYXliZVByb2pTdHIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG91dDtcbiAgICB9XG4gICAgaWYgKHRlc3RQcm9qKGNvZGUpKSB7XG4gICAgICByZXR1cm4gcHJvalN0cihjb2RlKTtcbiAgICB9XG4gIH1lbHNle1xuICAgIHJldHVybiBjb2RlO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/parseCode.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projString.js":
/*!**********************************************!*\
  !*** ./node_modules/proj4/lib/projString.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _constants_PrimeMeridian__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants/PrimeMeridian */ \"./node_modules/proj4/lib/constants/PrimeMeridian.js\");\n/* harmony import */ var _constants_units__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants/units */ \"./node_modules/proj4/lib/constants/units.js\");\n/* harmony import */ var _match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./match */ \"./node_modules/proj4/lib/match.js\");\n\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function (v) {\n      self.longc = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(\",\").map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_constants_units__WEBPACK_IMPORTED_MODULE_2__[\"default\"], v);\n\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    pm: function (v) {\n      var pm = (0,_match__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_constants_PrimeMeridian__WEBPACK_IMPORTED_MODULE_1__[\"default\"], v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = \"ewnsud\";\n\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n\n    if (paramName in params) {\n      paramOutname = params[paramName];\n\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n\n  if (typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\") {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n\n  return self;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2pTdHJpbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckdBOztBQXVHQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2pTdHJpbmcuanM/NTM5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0QyUn0gZnJvbSAnLi9jb25zdGFudHMvdmFsdWVzJztcbmltcG9ydCBQcmltZU1lcmlkaWFuIGZyb20gJy4vY29uc3RhbnRzL1ByaW1lTWVyaWRpYW4nO1xuaW1wb3J0IHVuaXRzIGZyb20gJy4vY29uc3RhbnRzL3VuaXRzJztcbmltcG9ydCBtYXRjaCBmcm9tICcuL21hdGNoJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oZGVmRGF0YSkge1xuICB2YXIgc2VsZiA9IHt9O1xuICB2YXIgcGFyYW1PYmogPSBkZWZEYXRhLnNwbGl0KCcrJykubWFwKGZ1bmN0aW9uKHYpIHtcbiAgICByZXR1cm4gdi50cmltKCk7XG4gIH0pLmZpbHRlcihmdW5jdGlvbihhKSB7XG4gICAgcmV0dXJuIGE7XG4gIH0pLnJlZHVjZShmdW5jdGlvbihwLCBhKSB7XG4gICAgdmFyIHNwbGl0ID0gYS5zcGxpdCgnPScpO1xuICAgIHNwbGl0LnB1c2godHJ1ZSk7XG4gICAgcFtzcGxpdFswXS50b0xvd2VyQ2FzZSgpXSA9IHNwbGl0WzFdO1xuICAgIHJldHVybiBwO1xuICB9LCB7fSk7XG4gIHZhciBwYXJhbU5hbWUsIHBhcmFtVmFsLCBwYXJhbU91dG5hbWU7XG4gIHZhciBwYXJhbXMgPSB7XG4gICAgcHJvajogJ3Byb2pOYW1lJyxcbiAgICBkYXR1bTogJ2RhdHVtQ29kZScsXG4gICAgcmY6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYucmYgPSBwYXJzZUZsb2F0KHYpO1xuICAgIH0sXG4gICAgbGF0XzA6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYubGF0MCA9IHYgKiBEMlI7XG4gICAgfSxcbiAgICBsYXRfMTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5sYXQxID0gdiAqIEQyUjtcbiAgICB9LFxuICAgIGxhdF8yOiBmdW5jdGlvbih2KSB7XG4gICAgICBzZWxmLmxhdDIgPSB2ICogRDJSO1xuICAgIH0sXG4gICAgbGF0X3RzOiBmdW5jdGlvbih2KSB7XG4gICAgICBzZWxmLmxhdF90cyA9IHYgKiBEMlI7XG4gICAgfSxcbiAgICBsb25fMDogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5sb25nMCA9IHYgKiBEMlI7XG4gICAgfSxcbiAgICBsb25fMTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5sb25nMSA9IHYgKiBEMlI7XG4gICAgfSxcbiAgICBsb25fMjogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5sb25nMiA9IHYgKiBEMlI7XG4gICAgfSxcbiAgICBhbHBoYTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5hbHBoYSA9IHBhcnNlRmxvYXQodikgKiBEMlI7XG4gICAgfSxcbiAgICBnYW1tYTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5yZWN0aWZpZWRfZ3JpZF9hbmdsZSA9IHBhcnNlRmxvYXQodik7XG4gICAgfSxcbiAgICBsb25jOiBmdW5jdGlvbih2KSB7XG4gICAgICBzZWxmLmxvbmdjID0gdiAqIEQyUjtcbiAgICB9LFxuICAgIHhfMDogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi54MCA9IHBhcnNlRmxvYXQodik7XG4gICAgfSxcbiAgICB5XzA6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYueTAgPSBwYXJzZUZsb2F0KHYpO1xuICAgIH0sXG4gICAga18wOiBmdW5jdGlvbih2KSB7XG4gICAgICBzZWxmLmswID0gcGFyc2VGbG9hdCh2KTtcbiAgICB9LFxuICAgIGs6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYuazAgPSBwYXJzZUZsb2F0KHYpO1xuICAgIH0sXG4gICAgYTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi5hID0gcGFyc2VGbG9hdCh2KTtcbiAgICB9LFxuICAgIGI6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYuYiA9IHBhcnNlRmxvYXQodik7XG4gICAgfSxcbiAgICByX2E6IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi5SX0EgPSB0cnVlO1xuICAgIH0sXG4gICAgem9uZTogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi56b25lID0gcGFyc2VJbnQodiwgMTApO1xuICAgIH0sXG4gICAgc291dGg6IGZ1bmN0aW9uKCkge1xuICAgICAgc2VsZi51dG1Tb3V0aCA9IHRydWU7XG4gICAgfSxcbiAgICB0b3dnczg0OiBmdW5jdGlvbih2KSB7XG4gICAgICBzZWxmLmRhdHVtX3BhcmFtcyA9IHYuc3BsaXQoXCIsXCIpLm1hcChmdW5jdGlvbihhKSB7XG4gICAgICAgIHJldHVybiBwYXJzZUZsb2F0KGEpO1xuICAgICAgfSk7XG4gICAgfSxcbiAgICB0b19tZXRlcjogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi50b19tZXRlciA9IHBhcnNlRmxvYXQodik7XG4gICAgfSxcbiAgICB1bml0czogZnVuY3Rpb24odikge1xuICAgICAgc2VsZi51bml0cyA9IHY7XG4gICAgICB2YXIgdW5pdCA9IG1hdGNoKHVuaXRzLCB2KTtcbiAgICAgIGlmICh1bml0KSB7XG4gICAgICAgIHNlbGYudG9fbWV0ZXIgPSB1bml0LnRvX21ldGVyO1xuICAgICAgfVxuICAgIH0sXG4gICAgZnJvbV9ncmVlbndpY2g6IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHNlbGYuZnJvbV9ncmVlbndpY2ggPSB2ICogRDJSO1xuICAgIH0sXG4gICAgcG06IGZ1bmN0aW9uKHYpIHtcbiAgICAgIHZhciBwbSA9IG1hdGNoKFByaW1lTWVyaWRpYW4sIHYpO1xuICAgICAgc2VsZi5mcm9tX2dyZWVud2ljaCA9IChwbSA/IHBtIDogcGFyc2VGbG9hdCh2KSkgKiBEMlI7XG4gICAgfSxcbiAgICBuYWRncmlkczogZnVuY3Rpb24odikge1xuICAgICAgaWYgKHYgPT09ICdAbnVsbCcpIHtcbiAgICAgICAgc2VsZi5kYXR1bUNvZGUgPSAnbm9uZSc7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgc2VsZi5uYWRncmlkcyA9IHY7XG4gICAgICB9XG4gICAgfSxcbiAgICBheGlzOiBmdW5jdGlvbih2KSB7XG4gICAgICB2YXIgbGVnYWxBeGlzID0gXCJld25zdWRcIjtcbiAgICAgIGlmICh2Lmxlbmd0aCA9PT0gMyAmJiBsZWdhbEF4aXMuaW5kZXhPZih2LnN1YnN0cigwLCAxKSkgIT09IC0xICYmIGxlZ2FsQXhpcy5pbmRleE9mKHYuc3Vic3RyKDEsIDEpKSAhPT0gLTEgJiYgbGVnYWxBeGlzLmluZGV4T2Yodi5zdWJzdHIoMiwgMSkpICE9PSAtMSkge1xuICAgICAgICBzZWxmLmF4aXMgPSB2O1xuICAgICAgfVxuICAgIH0sXG4gICAgYXBwcm94OiBmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYuYXBwcm94ID0gdHJ1ZTtcbiAgICB9XG4gIH07XG4gIGZvciAocGFyYW1OYW1lIGluIHBhcmFtT2JqKSB7XG4gICAgcGFyYW1WYWwgPSBwYXJhbU9ialtwYXJhbU5hbWVdO1xuICAgIGlmIChwYXJhbU5hbWUgaW4gcGFyYW1zKSB7XG4gICAgICBwYXJhbU91dG5hbWUgPSBwYXJhbXNbcGFyYW1OYW1lXTtcbiAgICAgIGlmICh0eXBlb2YgcGFyYW1PdXRuYW1lID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHBhcmFtT3V0bmFtZShwYXJhbVZhbCk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgc2VsZltwYXJhbU91dG5hbWVdID0gcGFyYW1WYWw7XG4gICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgc2VsZltwYXJhbU5hbWVdID0gcGFyYW1WYWw7XG4gICAgfVxuICB9XG4gIGlmKHR5cGVvZiBzZWxmLmRhdHVtQ29kZSA9PT0gJ3N0cmluZycgJiYgc2VsZi5kYXR1bUNvZGUgIT09IFwiV0dTODRcIil7XG4gICAgc2VsZi5kYXR1bUNvZGUgPSBzZWxmLmRhdHVtQ29kZS50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBzZWxmO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projString.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections.js":
/*!***********************************************!*\
  !*** ./node_modules/proj4/lib/projections.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"add\": () => (/* binding */ add),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"start\": () => (/* binding */ start)\n/* harmony export */ });\n/* harmony import */ var _projections_merc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projections/merc */ \"./node_modules/proj4/lib/projections/merc.js\");\n/* harmony import */ var _projections_longlat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projections/longlat */ \"./node_modules/proj4/lib/projections/longlat.js\");\n\n\nvar projs = [_projections_merc__WEBPACK_IMPORTED_MODULE_0__[\"default\"], _projections_longlat__WEBPACK_IMPORTED_MODULE_1__[\"default\"]];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\n\nfunction get(name) {\n  if (!name) {\n    return false;\n  }\n\n  var n = name.toLowerCase();\n\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\nfunction start() {\n  projs.forEach(add);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  start: start,\n  add: add,\n  get: get\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMuanM/YTA4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWVyYyBmcm9tIFwiLi9wcm9qZWN0aW9ucy9tZXJjXCI7XG5pbXBvcnQgbG9uZ2xhdCBmcm9tIFwiLi9wcm9qZWN0aW9ucy9sb25nbGF0XCI7XG52YXIgcHJvanMgPSBbbWVyYywgbG9uZ2xhdF07XG52YXIgbmFtZXMgPSB7fTtcbnZhciBwcm9qU3RvcmUgPSBbXTtcblxuZnVuY3Rpb24gYWRkKHByb2osIGkpIHtcbiAgdmFyIGxlbiA9IHByb2pTdG9yZS5sZW5ndGg7XG4gIGlmICghcHJvai5uYW1lcykge1xuICAgIGNvbnNvbGUubG9nKGkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHByb2pTdG9yZVtsZW5dID0gcHJvajtcbiAgcHJvai5uYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKG4pIHtcbiAgICBuYW1lc1tuLnRvTG93ZXJDYXNlKCldID0gbGVuO1xuICB9KTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbmV4cG9ydCB7YWRkfTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldChuYW1lKSB7XG4gIGlmICghbmFtZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgbiA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgaWYgKHR5cGVvZiBuYW1lc1tuXSAhPT0gJ3VuZGVmaW5lZCcgJiYgcHJvalN0b3JlW25hbWVzW25dXSkge1xuICAgIHJldHVybiBwcm9qU3RvcmVbbmFtZXNbbl1dO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdGFydCgpIHtcbiAgcHJvanMuZm9yRWFjaChhZGQpO1xufVxuZXhwb3J0IGRlZmF1bHQge1xuICBzdGFydDogc3RhcnQsXG4gIGFkZDogYWRkLFxuICBnZXQ6IGdldFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/aea.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/aea.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names),\n/* harmony export */   \"phi1z\": () => (/* binding */ phi1z)\n/* harmony export */ });\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ \"./node_modules/proj4/lib/common/qsfnz.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\n\nfunction init() {\n  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n    return;\n  }\n\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e3, this.sin_po, this.cos_po);\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n  var qs = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  con = rh1 * this.ns0 / this.a;\n\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\n\nfunction phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(0.5 * qs);\n\n  if (eccent < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n\n  return null;\n}\nvar names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2FlYS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFMQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy9hZWEuanM/ZGI0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXNmbnogZnJvbSAnLi4vY29tbW9uL21zZm56JztcbmltcG9ydCBxc2ZueiBmcm9tICcuLi9jb21tb24vcXNmbnonO1xuaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuaW1wb3J0IGFzaW56IGZyb20gJy4uL2NvbW1vbi9hc2lueic7XG5pbXBvcnQge0VQU0xOfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG5cbiAgaWYgKE1hdGguYWJzKHRoaXMubGF0MSArIHRoaXMubGF0MikgPCBFUFNMTikge1xuICAgIHJldHVybjtcbiAgfVxuICB0aGlzLnRlbXAgPSB0aGlzLmIgLyB0aGlzLmE7XG4gIHRoaXMuZXMgPSAxIC0gTWF0aC5wb3codGhpcy50ZW1wLCAyKTtcbiAgdGhpcy5lMyA9IE1hdGguc3FydCh0aGlzLmVzKTtcblxuICB0aGlzLnNpbl9wbyA9IE1hdGguc2luKHRoaXMubGF0MSk7XG4gIHRoaXMuY29zX3BvID0gTWF0aC5jb3ModGhpcy5sYXQxKTtcbiAgdGhpcy50MSA9IHRoaXMuc2luX3BvO1xuICB0aGlzLmNvbiA9IHRoaXMuc2luX3BvO1xuICB0aGlzLm1zMSA9IG1zZm56KHRoaXMuZTMsIHRoaXMuc2luX3BvLCB0aGlzLmNvc19wbyk7XG4gIHRoaXMucXMxID0gcXNmbnoodGhpcy5lMywgdGhpcy5zaW5fcG8sIHRoaXMuY29zX3BvKTtcblxuICB0aGlzLnNpbl9wbyA9IE1hdGguc2luKHRoaXMubGF0Mik7XG4gIHRoaXMuY29zX3BvID0gTWF0aC5jb3ModGhpcy5sYXQyKTtcbiAgdGhpcy50MiA9IHRoaXMuc2luX3BvO1xuICB0aGlzLm1zMiA9IG1zZm56KHRoaXMuZTMsIHRoaXMuc2luX3BvLCB0aGlzLmNvc19wbyk7XG4gIHRoaXMucXMyID0gcXNmbnoodGhpcy5lMywgdGhpcy5zaW5fcG8sIHRoaXMuY29zX3BvKTtcblxuICB0aGlzLnNpbl9wbyA9IE1hdGguc2luKHRoaXMubGF0MCk7XG4gIHRoaXMuY29zX3BvID0gTWF0aC5jb3ModGhpcy5sYXQwKTtcbiAgdGhpcy50MyA9IHRoaXMuc2luX3BvO1xuICB0aGlzLnFzMCA9IHFzZm56KHRoaXMuZTMsIHRoaXMuc2luX3BvLCB0aGlzLmNvc19wbyk7XG5cbiAgaWYgKE1hdGguYWJzKHRoaXMubGF0MSAtIHRoaXMubGF0MikgPiBFUFNMTikge1xuICAgIHRoaXMubnMwID0gKHRoaXMubXMxICogdGhpcy5tczEgLSB0aGlzLm1zMiAqIHRoaXMubXMyKSAvICh0aGlzLnFzMiAtIHRoaXMucXMxKTtcbiAgfVxuICBlbHNlIHtcbiAgICB0aGlzLm5zMCA9IHRoaXMuY29uO1xuICB9XG4gIHRoaXMuYyA9IHRoaXMubXMxICogdGhpcy5tczEgKyB0aGlzLm5zMCAqIHRoaXMucXMxO1xuICB0aGlzLnJoID0gdGhpcy5hICogTWF0aC5zcXJ0KHRoaXMuYyAtIHRoaXMubnMwICogdGhpcy5xczApIC8gdGhpcy5uczA7XG59XG5cbi8qIEFsYmVycyBDb25pY2FsIEVxdWFsIEFyZWEgZm9yd2FyZCBlcXVhdGlvbnMtLW1hcHBpbmcgbGF0LGxvbmcgdG8geCx5XG4gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuXG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG5cbiAgdGhpcy5zaW5fcGhpID0gTWF0aC5zaW4obGF0KTtcbiAgdGhpcy5jb3NfcGhpID0gTWF0aC5jb3MobGF0KTtcblxuICB2YXIgcXMgPSBxc2Zueih0aGlzLmUzLCB0aGlzLnNpbl9waGksIHRoaXMuY29zX3BoaSk7XG4gIHZhciByaDEgPSB0aGlzLmEgKiBNYXRoLnNxcnQodGhpcy5jIC0gdGhpcy5uczAgKiBxcykgLyB0aGlzLm5zMDtcbiAgdmFyIHRoZXRhID0gdGhpcy5uczAgKiBhZGp1c3RfbG9uKGxvbiAtIHRoaXMubG9uZzApO1xuICB2YXIgeCA9IHJoMSAqIE1hdGguc2luKHRoZXRhKSArIHRoaXMueDA7XG4gIHZhciB5ID0gdGhpcy5yaCAtIHJoMSAqIE1hdGguY29zKHRoZXRhKSArIHRoaXMueTA7XG5cbiAgcC54ID0geDtcbiAgcC55ID0geTtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgdmFyIHJoMSwgcXMsIGNvbiwgdGhldGEsIGxvbiwgbGF0O1xuXG4gIHAueCAtPSB0aGlzLngwO1xuICBwLnkgPSB0aGlzLnJoIC0gcC55ICsgdGhpcy55MDtcbiAgaWYgKHRoaXMubnMwID49IDApIHtcbiAgICByaDEgPSBNYXRoLnNxcnQocC54ICogcC54ICsgcC55ICogcC55KTtcbiAgICBjb24gPSAxO1xuICB9XG4gIGVsc2Uge1xuICAgIHJoMSA9IC1NYXRoLnNxcnQocC54ICogcC54ICsgcC55ICogcC55KTtcbiAgICBjb24gPSAtMTtcbiAgfVxuICB0aGV0YSA9IDA7XG4gIGlmIChyaDEgIT09IDApIHtcbiAgICB0aGV0YSA9IE1hdGguYXRhbjIoY29uICogcC54LCBjb24gKiBwLnkpO1xuICB9XG4gIGNvbiA9IHJoMSAqIHRoaXMubnMwIC8gdGhpcy5hO1xuICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICBsYXQgPSBNYXRoLmFzaW4oKHRoaXMuYyAtIGNvbiAqIGNvbikgLyAoMiAqIHRoaXMubnMwKSk7XG4gIH1cbiAgZWxzZSB7XG4gICAgcXMgPSAodGhpcy5jIC0gY29uICogY29uKSAvIHRoaXMubnMwO1xuICAgIGxhdCA9IHRoaXMucGhpMXoodGhpcy5lMywgcXMpO1xuICB9XG5cbiAgbG9uID0gYWRqdXN0X2xvbih0aGV0YSAvIHRoaXMubnMwICsgdGhpcy5sb25nMCk7XG4gIHAueCA9IGxvbjtcbiAgcC55ID0gbGF0O1xuICByZXR1cm4gcDtcbn1cblxuLyogRnVuY3Rpb24gdG8gY29tcHV0ZSBwaGkxLCB0aGUgbGF0aXR1ZGUgZm9yIHRoZSBpbnZlcnNlIG9mIHRoZVxuICAgQWxiZXJzIENvbmljYWwgRXF1YWwtQXJlYSBwcm9qZWN0aW9uLlxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gcGhpMXooZWNjZW50LCBxcykge1xuICB2YXIgc2lucGhpLCBjb3NwaGksIGNvbiwgY29tLCBkcGhpO1xuICB2YXIgcGhpID0gYXNpbnooMC41ICogcXMpO1xuICBpZiAoZWNjZW50IDwgRVBTTE4pIHtcbiAgICByZXR1cm4gcGhpO1xuICB9XG5cbiAgdmFyIGVjY250cyA9IGVjY2VudCAqIGVjY2VudDtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPD0gMjU7IGkrKykge1xuICAgIHNpbnBoaSA9IE1hdGguc2luKHBoaSk7XG4gICAgY29zcGhpID0gTWF0aC5jb3MocGhpKTtcbiAgICBjb24gPSBlY2NlbnQgKiBzaW5waGk7XG4gICAgY29tID0gMSAtIGNvbiAqIGNvbjtcbiAgICBkcGhpID0gMC41ICogY29tICogY29tIC8gY29zcGhpICogKHFzIC8gKDEgLSBlY2NudHMpIC0gc2lucGhpIC8gY29tICsgMC41IC8gZWNjZW50ICogTWF0aC5sb2coKDEgLSBjb24pIC8gKDEgKyBjb24pKSk7XG4gICAgcGhpID0gcGhpICsgZHBoaTtcbiAgICBpZiAoTWF0aC5hYnMoZHBoaSkgPD0gMWUtNykge1xuICAgICAgcmV0dXJuIHBoaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJBbGJlcnNfQ29uaWNfRXF1YWxfQXJlYVwiLCBcIkFsYmVyc1wiLCBcImFlYVwiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzLFxuICBwaGkxejogcGhpMXpcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/aea.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/aeqd.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/aeqd.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/mlfn */ \"./node_modules/proj4/lib/common/mlfn.js\");\n/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e0fn */ \"./node_modules/proj4/lib/common/e0fn.js\");\n/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/e1fn */ \"./node_modules/proj4/lib/common/e1fn.js\");\n/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/e2fn */ \"./node_modules/proj4/lib/common/e2fn.js\");\n/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/e3fn */ \"./node_modules/proj4/lib/common/e3fn.js\");\n/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/gN */ \"./node_modules/proj4/lib/common/gN.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/imlfn */ \"./node_modules/proj4/lib/common/imlfn.js\");\n\n\n\n\n\n\n\n\n\n\nfunction init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (_constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.es);\n    e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.es);\n    e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.es);\n    e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //North Pole case\n      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);\n      Ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //South Pole case\n      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);\n      Ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.a, this.e, this.sin_p12);\n      Nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else if (Math.abs(Math.abs(Az) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      } else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n}\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n    if (rh > 2 * _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI * this.a) {\n      return;\n    }\n\n    z = rh / this.a;\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n    lon = this.long0;\n\n    if (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(cosz * this.sin_p12 + p.y * sinz * this.cos_p12 / rh);\n      con = Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;\n\n      if (Math.abs(con) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.es);\n    e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.es);\n    e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.es);\n    e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.es);\n\n    if (Math.abs(this.sin_p12 - 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //North pole case\n      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(M / this.a, e0, e1, e2, e3);\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      //South pole case\n      Mlp = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(e0, e1, e2, e3, _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n      lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(M / this.a, e0, e1, e2, e3);\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n}\nvar names = [\"Azimuthal_Equidistant\", \"aeqd\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/aeqd.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/cass.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/cass.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/mlfn */ \"./node_modules/proj4/lib/common/mlfn.js\");\n/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e0fn */ \"./node_modules/proj4/lib/common/e0fn.js\");\n/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e1fn */ \"./node_modules/proj4/lib/common/e1fn.js\");\n/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e2fn */ \"./node_modules/proj4/lib/common/e2fn.js\");\n/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/e3fn */ \"./node_modules/proj4/lib/common/e3fn.js\");\n/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/gN */ \"./node_modules/proj4/lib/common/gN.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lat */ \"./node_modules/proj4/lib/common/adjust_lat.js\");\n/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/imlfn */ \"./node_modules/proj4/lib/common/imlfn.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\n\n\n\n\n\n\nfunction init() {\n  if (!this.sphere) {\n    this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.es);\n    this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.es);\n    this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.es);\n    this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.es);\n    this.ml0 = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nfunction forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e0, this.e1, this.e2, this.e3, phi);\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(ml1, this.e0, this.e1, this.e2, this.e3);\n\n    if (Math.abs(Math.abs(phi1) - _constants_values__WEBPACK_IMPORTED_MODULE_9__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {\n      p.x = this.long0;\n      p.y = _constants_values__WEBPACK_IMPORTED_MODULE_9__.HALF_PI;\n\n      if (y < 0) {\n        p.y *= -1;\n      }\n\n      return p;\n    }\n\n    var nl1 = (0,_common_gN__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.a, this.e, Math.sin(phi1));\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(lam + this.long0);\n  p.y = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(phi);\n  return p;\n}\nvar names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2Nhc3MuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2Nhc3MuanM/MmMxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWxmbiBmcm9tICcuLi9jb21tb24vbWxmbic7XG5pbXBvcnQgZTBmbiBmcm9tICcuLi9jb21tb24vZTBmbic7XG5pbXBvcnQgZTFmbiBmcm9tICcuLi9jb21tb24vZTFmbic7XG5pbXBvcnQgZTJmbiBmcm9tICcuLi9jb21tb24vZTJmbic7XG5pbXBvcnQgZTNmbiBmcm9tICcuLi9jb21tb24vZTNmbic7XG5pbXBvcnQgZ04gZnJvbSAnLi4vY29tbW9uL2dOJztcbmltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcbmltcG9ydCBhZGp1c3RfbGF0IGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbGF0JztcbmltcG9ydCBpbWxmbiBmcm9tICcuLi9jb21tb24vaW1sZm4nO1xuaW1wb3J0IHtIQUxGX1BJLCBFUFNMTn0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICBpZiAoIXRoaXMuc3BoZXJlKSB7XG4gICAgdGhpcy5lMCA9IGUwZm4odGhpcy5lcyk7XG4gICAgdGhpcy5lMSA9IGUxZm4odGhpcy5lcyk7XG4gICAgdGhpcy5lMiA9IGUyZm4odGhpcy5lcyk7XG4gICAgdGhpcy5lMyA9IGUzZm4odGhpcy5lcyk7XG4gICAgdGhpcy5tbDAgPSB0aGlzLmEgKiBtbGZuKHRoaXMuZTAsIHRoaXMuZTEsIHRoaXMuZTIsIHRoaXMuZTMsIHRoaXMubGF0MCk7XG4gIH1cbn1cblxuLyogQ2Fzc2luaSBmb3J3YXJkIGVxdWF0aW9ucy0tbWFwcGluZyBsYXQsbG9uZyB0byB4LHlcbiAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuXG4gIC8qIEZvcndhcmQgZXF1YXRpb25zXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIHZhciB4LCB5O1xuICB2YXIgbGFtID0gcC54O1xuICB2YXIgcGhpID0gcC55O1xuICBsYW0gPSBhZGp1c3RfbG9uKGxhbSAtIHRoaXMubG9uZzApO1xuXG4gIGlmICh0aGlzLnNwaGVyZSkge1xuICAgIHggPSB0aGlzLmEgKiBNYXRoLmFzaW4oTWF0aC5jb3MocGhpKSAqIE1hdGguc2luKGxhbSkpO1xuICAgIHkgPSB0aGlzLmEgKiAoTWF0aC5hdGFuMihNYXRoLnRhbihwaGkpLCBNYXRoLmNvcyhsYW0pKSAtIHRoaXMubGF0MCk7XG4gIH1cbiAgZWxzZSB7XG4gICAgLy9lbGxpcHNvaWRcbiAgICB2YXIgc2lucGhpID0gTWF0aC5zaW4ocGhpKTtcbiAgICB2YXIgY29zcGhpID0gTWF0aC5jb3MocGhpKTtcbiAgICB2YXIgbmwgPSBnTih0aGlzLmEsIHRoaXMuZSwgc2lucGhpKTtcbiAgICB2YXIgdGwgPSBNYXRoLnRhbihwaGkpICogTWF0aC50YW4ocGhpKTtcbiAgICB2YXIgYWwgPSBsYW0gKiBNYXRoLmNvcyhwaGkpO1xuICAgIHZhciBhc3EgPSBhbCAqIGFsO1xuICAgIHZhciBjbCA9IHRoaXMuZXMgKiBjb3NwaGkgKiBjb3NwaGkgLyAoMSAtIHRoaXMuZXMpO1xuICAgIHZhciBtbCA9IHRoaXMuYSAqIG1sZm4odGhpcy5lMCwgdGhpcy5lMSwgdGhpcy5lMiwgdGhpcy5lMywgcGhpKTtcblxuICAgIHggPSBubCAqIGFsICogKDEgLSBhc3EgKiB0bCAqICgxIC8gNiAtICg4IC0gdGwgKyA4ICogY2wpICogYXNxIC8gMTIwKSk7XG4gICAgeSA9IG1sIC0gdGhpcy5tbDAgKyBubCAqIHNpbnBoaSAvIGNvc3BoaSAqIGFzcSAqICgwLjUgKyAoNSAtIHRsICsgNiAqIGNsKSAqIGFzcSAvIDI0KTtcblxuXG4gIH1cblxuICBwLnggPSB4ICsgdGhpcy54MDtcbiAgcC55ID0geSArIHRoaXMueTA7XG4gIHJldHVybiBwO1xufVxuXG4vKiBJbnZlcnNlIGVxdWF0aW9uc1xuICAtLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHAueCAtPSB0aGlzLngwO1xuICBwLnkgLT0gdGhpcy55MDtcbiAgdmFyIHggPSBwLnggLyB0aGlzLmE7XG4gIHZhciB5ID0gcC55IC8gdGhpcy5hO1xuICB2YXIgcGhpLCBsYW07XG5cbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgdmFyIGRkID0geSArIHRoaXMubGF0MDtcbiAgICBwaGkgPSBNYXRoLmFzaW4oTWF0aC5zaW4oZGQpICogTWF0aC5jb3MoeCkpO1xuICAgIGxhbSA9IE1hdGguYXRhbjIoTWF0aC50YW4oeCksIE1hdGguY29zKGRkKSk7XG4gIH1cbiAgZWxzZSB7XG4gICAgLyogZWxsaXBzb2lkICovXG4gICAgdmFyIG1sMSA9IHRoaXMubWwwIC8gdGhpcy5hICsgeTtcbiAgICB2YXIgcGhpMSA9IGltbGZuKG1sMSwgdGhpcy5lMCwgdGhpcy5lMSwgdGhpcy5lMiwgdGhpcy5lMyk7XG4gICAgaWYgKE1hdGguYWJzKE1hdGguYWJzKHBoaTEpIC0gSEFMRl9QSSkgPD0gRVBTTE4pIHtcbiAgICAgIHAueCA9IHRoaXMubG9uZzA7XG4gICAgICBwLnkgPSBIQUxGX1BJO1xuICAgICAgaWYgKHkgPCAwKSB7XG4gICAgICAgIHAueSAqPSAtMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBwO1xuICAgIH1cbiAgICB2YXIgbmwxID0gZ04odGhpcy5hLCB0aGlzLmUsIE1hdGguc2luKHBoaTEpKTtcblxuICAgIHZhciBybDEgPSBubDEgKiBubDEgKiBubDEgLyB0aGlzLmEgLyB0aGlzLmEgKiAoMSAtIHRoaXMuZXMpO1xuICAgIHZhciB0bDEgPSBNYXRoLnBvdyhNYXRoLnRhbihwaGkxKSwgMik7XG4gICAgdmFyIGRsID0geCAqIHRoaXMuYSAvIG5sMTtcbiAgICB2YXIgZHNxID0gZGwgKiBkbDtcbiAgICBwaGkgPSBwaGkxIC0gbmwxICogTWF0aC50YW4ocGhpMSkgLyBybDEgKiBkbCAqIGRsICogKDAuNSAtICgxICsgMyAqIHRsMSkgKiBkbCAqIGRsIC8gMjQpO1xuICAgIGxhbSA9IGRsICogKDEgLSBkc3EgKiAodGwxIC8gMyArICgxICsgMyAqIHRsMSkgKiB0bDEgKiBkc3EgLyAxNSkpIC8gTWF0aC5jb3MocGhpMSk7XG5cbiAgfVxuXG4gIHAueCA9IGFkanVzdF9sb24obGFtICsgdGhpcy5sb25nMCk7XG4gIHAueSA9IGFkanVzdF9sYXQocGhpKTtcbiAgcmV0dXJuIHA7XG5cbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIkNhc3NpbmlcIiwgXCJDYXNzaW5pX1NvbGRuZXJcIiwgXCJjYXNzXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/cass.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/cea.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/cea.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ \"./node_modules/proj4/lib/common/qsfnz.js\");\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_iqsfnz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/iqsfnz */ \"./node_modules/proj4/lib/common/iqsfnz.js\");\n\n\n\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\n\nfunction init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + p.x / this.a / Math.cos(this.lat_ts));\n    lat = Math.asin(p.y / this.a * Math.cos(this.lat_ts));\n  } else {\n    lat = (0,_common_iqsfnz__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.e, 2 * p.y * this.k0 / this.a);\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"cea\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2NlYS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2NlYS5qcz9kNjE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcbmltcG9ydCBxc2ZueiBmcm9tICcuLi9jb21tb24vcXNmbnonO1xuaW1wb3J0IG1zZm56IGZyb20gJy4uL2NvbW1vbi9tc2Zueic7XG5pbXBvcnQgaXFzZm56IGZyb20gJy4uL2NvbW1vbi9pcXNmbnonO1xuXG4vKlxuICByZWZlcmVuY2U6XG4gICAgXCJDYXJ0b2dyYXBoaWMgUHJvamVjdGlvbiBQcm9jZWR1cmVzIGZvciB0aGUgVU5JWCBFbnZpcm9ubWVudC1cbiAgICBBIFVzZXIncyBNYW51YWxcIiBieSBHZXJhbGQgSS4gRXZlbmRlbixcbiAgICBVU0dTIE9wZW4gRmlsZSBSZXBvcnQgOTAtMjg0YW5kIFJlbGVhc2UgNCBJbnRlcmltIFJlcG9ydHMgKDIwMDMpXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gIC8vbm8tb3BcbiAgaWYgKCF0aGlzLnNwaGVyZSkge1xuICAgIHRoaXMuazAgPSBtc2Zueih0aGlzLmUsIE1hdGguc2luKHRoaXMubGF0X3RzKSwgTWF0aC5jb3ModGhpcy5sYXRfdHMpKTtcbiAgfVxufVxuXG4vKiBDeWxpbmRyaWNhbCBFcXVhbCBBcmVhIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG4gIHZhciB4LCB5O1xuICAvKiBGb3J3YXJkIGVxdWF0aW9uc1xuICAgICAgLS0tLS0tLS0tLS0tLS0tLS0qL1xuICB2YXIgZGxvbiA9IGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIGlmICh0aGlzLnNwaGVyZSkge1xuICAgIHggPSB0aGlzLngwICsgdGhpcy5hICogZGxvbiAqIE1hdGguY29zKHRoaXMubGF0X3RzKTtcbiAgICB5ID0gdGhpcy55MCArIHRoaXMuYSAqIE1hdGguc2luKGxhdCkgLyBNYXRoLmNvcyh0aGlzLmxhdF90cyk7XG4gIH1cbiAgZWxzZSB7XG4gICAgdmFyIHFzID0gcXNmbnoodGhpcy5lLCBNYXRoLnNpbihsYXQpKTtcbiAgICB4ID0gdGhpcy54MCArIHRoaXMuYSAqIHRoaXMuazAgKiBkbG9uO1xuICAgIHkgPSB0aGlzLnkwICsgdGhpcy5hICogcXMgKiAwLjUgLyB0aGlzLmswO1xuICB9XG5cbiAgcC54ID0geDtcbiAgcC55ID0geTtcbiAgcmV0dXJuIHA7XG59XG5cbi8qIEN5bGluZHJpY2FsIEVxdWFsIEFyZWEgaW52ZXJzZSBlcXVhdGlvbnMtLW1hcHBpbmcgeCx5IHRvIGxhdC9sb25nXG4gICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgcC54IC09IHRoaXMueDA7XG4gIHAueSAtPSB0aGlzLnkwO1xuICB2YXIgbG9uLCBsYXQ7XG5cbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgKHAueCAvIHRoaXMuYSkgLyBNYXRoLmNvcyh0aGlzLmxhdF90cykpO1xuICAgIGxhdCA9IE1hdGguYXNpbigocC55IC8gdGhpcy5hKSAqIE1hdGguY29zKHRoaXMubGF0X3RzKSk7XG4gIH1cbiAgZWxzZSB7XG4gICAgbGF0ID0gaXFzZm56KHRoaXMuZSwgMiAqIHAueSAqIHRoaXMuazAgLyB0aGlzLmEpO1xuICAgIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCArIHAueCAvICh0aGlzLmEgKiB0aGlzLmswKSk7XG4gIH1cblxuICBwLnggPSBsb247XG4gIHAueSA9IGxhdDtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJjZWFcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/cea.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/eqc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/eqc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lat */ \"./node_modules/proj4/lib/common/adjust_lat.js\");\n\n\nfunction init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n  this.rc = Math.cos(this.lat_ts);\n} // forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  var dlat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lat - this.lat0);\n  p.x = this.x0 + this.a * dlon * this.rc;\n  p.y = this.y0 + this.a * dlat;\n  return p;\n} // inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nfunction inverse(p) {\n  var x = p.x;\n  var y = p.y;\n  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + (x - this.x0) / (this.a * this.rc));\n  p.y = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.lat0 + (y - this.y0) / this.a);\n  return p;\n}\nvar names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2VxYy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBOztBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBOztBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvZXFjLmpzPzBmOGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuaW1wb3J0IGFkanVzdF9sYXQgZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sYXQnO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcblxuICB0aGlzLngwID0gdGhpcy54MCB8fCAwO1xuICB0aGlzLnkwID0gdGhpcy55MCB8fCAwO1xuICB0aGlzLmxhdDAgPSB0aGlzLmxhdDAgfHwgMDtcbiAgdGhpcy5sb25nMCA9IHRoaXMubG9uZzAgfHwgMDtcbiAgdGhpcy5sYXRfdHMgPSB0aGlzLmxhdF90cyB8fCAwO1xuICB0aGlzLnRpdGxlID0gdGhpcy50aXRsZSB8fCBcIkVxdWlkaXN0YW50IEN5bGluZHJpY2FsIChQbGF0ZSBDYXJyZSlcIjtcblxuICB0aGlzLnJjID0gTWF0aC5jb3ModGhpcy5sYXRfdHMpO1xufVxuXG4vLyBmb3J3YXJkIGVxdWF0aW9ucy0tbWFwcGluZyBsYXQsbG9uZyB0byB4LHlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG5cbiAgdmFyIGxvbiA9IHAueDtcbiAgdmFyIGxhdCA9IHAueTtcblxuICB2YXIgZGxvbiA9IGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIHZhciBkbGF0ID0gYWRqdXN0X2xhdChsYXQgLSB0aGlzLmxhdDApO1xuICBwLnggPSB0aGlzLngwICsgKHRoaXMuYSAqIGRsb24gKiB0aGlzLnJjKTtcbiAgcC55ID0gdGhpcy55MCArICh0aGlzLmEgKiBkbGF0KTtcbiAgcmV0dXJuIHA7XG59XG5cbi8vIGludmVyc2UgZXF1YXRpb25zLS1tYXBwaW5nIHgseSB0byBsYXQvbG9uZ1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcblxuICB2YXIgeCA9IHAueDtcbiAgdmFyIHkgPSBwLnk7XG5cbiAgcC54ID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgKCh4IC0gdGhpcy54MCkgLyAodGhpcy5hICogdGhpcy5yYykpKTtcbiAgcC55ID0gYWRqdXN0X2xhdCh0aGlzLmxhdDAgKyAoKHkgLSB0aGlzLnkwKSAvICh0aGlzLmEpKSk7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiRXF1aXJlY3Rhbmd1bGFyXCIsIFwiRXF1aWRpc3RhbnRfQ3lsaW5kcmljYWxcIiwgXCJlcWNcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/eqc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/eqdc.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/eqdc.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/e0fn */ \"./node_modules/proj4/lib/common/e0fn.js\");\n/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e1fn */ \"./node_modules/proj4/lib/common/e1fn.js\");\n/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e2fn */ \"./node_modules/proj4/lib/common/e2fn.js\");\n/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e3fn */ \"./node_modules/proj4/lib/common/e3fn.js\");\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/mlfn */ \"./node_modules/proj4/lib/common/mlfn.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lat */ \"./node_modules/proj4/lib/common/adjust_lat.js\");\n/* harmony import */ var _common_imlfn__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/imlfn */ \"./node_modules/proj4/lib/common/imlfn.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\n\n\n\n\n\n\nfunction init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {\n    return;\n  }\n\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.es);\n  this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.es);\n  this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.es);\n  this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.es);\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n  this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.e, this.sinphi, this.cosphi);\n  this.ml1 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_9__.EPSLN) {\n    this.ns = this.sinphi;\n  } else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.e, this.sinphi, this.cosphi);\n    this.ml2 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n  /* Forward equations\n      -----------------*/\n\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n\n  var theta = this.ns * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.long0 + theta / this.ns);\n    lat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = (0,_common_imlfn__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\nvar names = [\"Equidistant_Conic\", \"eqdc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2VxZGMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvZXFkYy5qcz80NTc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlMGZuIGZyb20gJy4uL2NvbW1vbi9lMGZuJztcbmltcG9ydCBlMWZuIGZyb20gJy4uL2NvbW1vbi9lMWZuJztcbmltcG9ydCBlMmZuIGZyb20gJy4uL2NvbW1vbi9lMmZuJztcbmltcG9ydCBlM2ZuIGZyb20gJy4uL2NvbW1vbi9lM2ZuJztcbmltcG9ydCBtc2ZueiBmcm9tICcuLi9jb21tb24vbXNmbnonO1xuaW1wb3J0IG1sZm4gZnJvbSAnLi4vY29tbW9uL21sZm4nO1xuaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuaW1wb3J0IGFkanVzdF9sYXQgZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sYXQnO1xuaW1wb3J0IGltbGZuIGZyb20gJy4uL2NvbW1vbi9pbWxmbic7XG5pbXBvcnQge0VQU0xOfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG5cbiAgLyogUGxhY2UgcGFyYW1ldGVycyBpbiBzdGF0aWMgc3RvcmFnZSBmb3IgY29tbW9uIHVzZVxuICAgICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIC8vIFN0YW5kYXJkIFBhcmFsbGVscyBjYW5ub3QgYmUgZXF1YWwgYW5kIG9uIG9wcG9zaXRlIHNpZGVzIG9mIHRoZSBlcXVhdG9yXG4gIGlmIChNYXRoLmFicyh0aGlzLmxhdDEgKyB0aGlzLmxhdDIpIDwgRVBTTE4pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy5sYXQyID0gdGhpcy5sYXQyIHx8IHRoaXMubGF0MTtcbiAgdGhpcy50ZW1wID0gdGhpcy5iIC8gdGhpcy5hO1xuICB0aGlzLmVzID0gMSAtIE1hdGgucG93KHRoaXMudGVtcCwgMik7XG4gIHRoaXMuZSA9IE1hdGguc3FydCh0aGlzLmVzKTtcbiAgdGhpcy5lMCA9IGUwZm4odGhpcy5lcyk7XG4gIHRoaXMuZTEgPSBlMWZuKHRoaXMuZXMpO1xuICB0aGlzLmUyID0gZTJmbih0aGlzLmVzKTtcbiAgdGhpcy5lMyA9IGUzZm4odGhpcy5lcyk7XG5cbiAgdGhpcy5zaW5waGkgPSBNYXRoLnNpbih0aGlzLmxhdDEpO1xuICB0aGlzLmNvc3BoaSA9IE1hdGguY29zKHRoaXMubGF0MSk7XG5cbiAgdGhpcy5tczEgPSBtc2Zueih0aGlzLmUsIHRoaXMuc2lucGhpLCB0aGlzLmNvc3BoaSk7XG4gIHRoaXMubWwxID0gbWxmbih0aGlzLmUwLCB0aGlzLmUxLCB0aGlzLmUyLCB0aGlzLmUzLCB0aGlzLmxhdDEpO1xuXG4gIGlmIChNYXRoLmFicyh0aGlzLmxhdDEgLSB0aGlzLmxhdDIpIDwgRVBTTE4pIHtcbiAgICB0aGlzLm5zID0gdGhpcy5zaW5waGk7XG4gIH1cbiAgZWxzZSB7XG4gICAgdGhpcy5zaW5waGkgPSBNYXRoLnNpbih0aGlzLmxhdDIpO1xuICAgIHRoaXMuY29zcGhpID0gTWF0aC5jb3ModGhpcy5sYXQyKTtcbiAgICB0aGlzLm1zMiA9IG1zZm56KHRoaXMuZSwgdGhpcy5zaW5waGksIHRoaXMuY29zcGhpKTtcbiAgICB0aGlzLm1sMiA9IG1sZm4odGhpcy5lMCwgdGhpcy5lMSwgdGhpcy5lMiwgdGhpcy5lMywgdGhpcy5sYXQyKTtcbiAgICB0aGlzLm5zID0gKHRoaXMubXMxIC0gdGhpcy5tczIpIC8gKHRoaXMubWwyIC0gdGhpcy5tbDEpO1xuICB9XG4gIHRoaXMuZyA9IHRoaXMubWwxICsgdGhpcy5tczEgLyB0aGlzLm5zO1xuICB0aGlzLm1sMCA9IG1sZm4odGhpcy5lMCwgdGhpcy5lMSwgdGhpcy5lMiwgdGhpcy5lMywgdGhpcy5sYXQwKTtcbiAgdGhpcy5yaCA9IHRoaXMuYSAqICh0aGlzLmcgLSB0aGlzLm1sMCk7XG59XG5cbi8qIEVxdWlkaXN0YW50IENvbmljIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG4gIHZhciByaDE7XG5cbiAgLyogRm9yd2FyZCBlcXVhdGlvbnNcbiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgcmgxID0gdGhpcy5hICogKHRoaXMuZyAtIGxhdCk7XG4gIH1cbiAgZWxzZSB7XG4gICAgdmFyIG1sID0gbWxmbih0aGlzLmUwLCB0aGlzLmUxLCB0aGlzLmUyLCB0aGlzLmUzLCBsYXQpO1xuICAgIHJoMSA9IHRoaXMuYSAqICh0aGlzLmcgLSBtbCk7XG4gIH1cbiAgdmFyIHRoZXRhID0gdGhpcy5ucyAqIGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIHZhciB4ID0gdGhpcy54MCArIHJoMSAqIE1hdGguc2luKHRoZXRhKTtcbiAgdmFyIHkgPSB0aGlzLnkwICsgdGhpcy5yaCAtIHJoMSAqIE1hdGguY29zKHRoZXRhKTtcbiAgcC54ID0geDtcbiAgcC55ID0geTtcbiAgcmV0dXJuIHA7XG59XG5cbi8qIEludmVyc2UgZXF1YXRpb25zXG4gIC0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgcC54IC09IHRoaXMueDA7XG4gIHAueSA9IHRoaXMucmggLSBwLnkgKyB0aGlzLnkwO1xuICB2YXIgY29uLCByaDEsIGxhdCwgbG9uO1xuICBpZiAodGhpcy5ucyA+PSAwKSB7XG4gICAgcmgxID0gTWF0aC5zcXJ0KHAueCAqIHAueCArIHAueSAqIHAueSk7XG4gICAgY29uID0gMTtcbiAgfVxuICBlbHNlIHtcbiAgICByaDEgPSAtTWF0aC5zcXJ0KHAueCAqIHAueCArIHAueSAqIHAueSk7XG4gICAgY29uID0gLTE7XG4gIH1cbiAgdmFyIHRoZXRhID0gMDtcbiAgaWYgKHJoMSAhPT0gMCkge1xuICAgIHRoZXRhID0gTWF0aC5hdGFuMihjb24gKiBwLngsIGNvbiAqIHAueSk7XG4gIH1cblxuICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICBsb24gPSBhZGp1c3RfbG9uKHRoaXMubG9uZzAgKyB0aGV0YSAvIHRoaXMubnMpO1xuICAgIGxhdCA9IGFkanVzdF9sYXQodGhpcy5nIC0gcmgxIC8gdGhpcy5hKTtcbiAgICBwLnggPSBsb247XG4gICAgcC55ID0gbGF0O1xuICAgIHJldHVybiBwO1xuICB9XG4gIGVsc2Uge1xuICAgIHZhciBtbCA9IHRoaXMuZyAtIHJoMSAvIHRoaXMuYTtcbiAgICBsYXQgPSBpbWxmbihtbCwgdGhpcy5lMCwgdGhpcy5lMSwgdGhpcy5lMiwgdGhpcy5lMyk7XG4gICAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgdGhldGEgLyB0aGlzLm5zKTtcbiAgICBwLnggPSBsb247XG4gICAgcC55ID0gbGF0O1xuICAgIHJldHVybiBwO1xuICB9XG5cbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIkVxdWlkaXN0YW50X0NvbmljXCIsIFwiZXFkY1wiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/eqdc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/etmerc.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/etmerc.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../projections/tmerc */ \"./node_modules/proj4/lib/projections/tmerc.js\");\n/* harmony import */ var _common_sinh__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/sinh */ \"./node_modules/proj4/lib/common/sinh.js\");\n/* harmony import */ var _common_hypot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/hypot */ \"./node_modules/proj4/lib/common/hypot.js\");\n/* harmony import */ var _common_asinhy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/asinhy */ \"./node_modules/proj4/lib/common/asinhy.js\");\n/* harmony import */ var _common_gatg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/gatg */ \"./node_modules/proj4/lib/common/gatg.js\");\n/* harmony import */ var _common_clens__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/clens */ \"./node_modules/proj4/lib/common/clens.js\");\n/* harmony import */ var _common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/clens_cmplx */ \"./node_modules/proj4/lib/common/clens_cmplx.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\n\n\n\n\n\n\n\nfunction init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__[\"default\"].init.apply(this);\n    this.forward = _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forward;\n    this.inverse = _projections_tmerc__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n  var Z = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + (0,_common_clens__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.gtu, 2 * Z));\n}\nfunction forward(p) {\n  var Ce = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(p.x - this.long0);\n  var Cn = p.y;\n  Cn = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, (0,_common_hypot__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(sin_Cn, cos_Cn * cos_Ce));\n  Ce = (0,_common_asinhy__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Math.tan(Ce));\n  var tmp = (0,_common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.gtu, 2 * Cn, 2 * Ce);\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = (0,_common_clens_cmplx__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.utg, 2 * Cn, 2 * Ce);\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan((0,_common_sinh__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Ce));\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n    Cn = Math.atan2(sin_Cn * cos_Ce, (0,_common_hypot__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(Ce + this.long0);\n    lat = (0,_common_gatg__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/etmerc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/gauss.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/gauss.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_srat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/srat */ \"./node_modules/proj4/lib/common/srat.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\nvar MAX_ITER = 20;\n\nfunction init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI), this.C) * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e * sphi, this.ratexp));\n}\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI), this.C) * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e * Math.sin(lat), this.ratexp)) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\nfunction inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + _constants_values__WEBPACK_IMPORTED_MODULE_1__.FORTPI) / this.K, 1 / this.C);\n\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * (0,_common_srat__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e * Math.sin(p.y), -0.5 * this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI;\n\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n\n    p.y = lat;\n  }\n  /* convergence failed */\n\n\n  if (!i) {\n    return null;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"gauss\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dhdXNzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dhdXNzLmpzP2VhZGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNyYXQgZnJvbSAnLi4vY29tbW9uL3NyYXQnO1xudmFyIE1BWF9JVEVSID0gMjA7XG5pbXBvcnQge0hBTEZfUEksIEZPUlRQSX0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICB2YXIgc3BoaSA9IE1hdGguc2luKHRoaXMubGF0MCk7XG4gIHZhciBjcGhpID0gTWF0aC5jb3ModGhpcy5sYXQwKTtcbiAgY3BoaSAqPSBjcGhpO1xuICB0aGlzLnJjID0gTWF0aC5zcXJ0KDEgLSB0aGlzLmVzKSAvICgxIC0gdGhpcy5lcyAqIHNwaGkgKiBzcGhpKTtcbiAgdGhpcy5DID0gTWF0aC5zcXJ0KDEgKyB0aGlzLmVzICogY3BoaSAqIGNwaGkgLyAoMSAtIHRoaXMuZXMpKTtcbiAgdGhpcy5waGljMCA9IE1hdGguYXNpbihzcGhpIC8gdGhpcy5DKTtcbiAgdGhpcy5yYXRleHAgPSAwLjUgKiB0aGlzLkMgKiB0aGlzLmU7XG4gIHRoaXMuSyA9IE1hdGgudGFuKDAuNSAqIHRoaXMucGhpYzAgKyBGT1JUUEkpIC8gKE1hdGgucG93KE1hdGgudGFuKDAuNSAqIHRoaXMubGF0MCArIEZPUlRQSSksIHRoaXMuQykgKiBzcmF0KHRoaXMuZSAqIHNwaGksIHRoaXMucmF0ZXhwKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3J3YXJkKHApIHtcbiAgdmFyIGxvbiA9IHAueDtcbiAgdmFyIGxhdCA9IHAueTtcblxuICBwLnkgPSAyICogTWF0aC5hdGFuKHRoaXMuSyAqIE1hdGgucG93KE1hdGgudGFuKDAuNSAqIGxhdCArIEZPUlRQSSksIHRoaXMuQykgKiBzcmF0KHRoaXMuZSAqIE1hdGguc2luKGxhdCksIHRoaXMucmF0ZXhwKSkgLSBIQUxGX1BJO1xuICBwLnggPSB0aGlzLkMgKiBsb247XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciBERUxfVE9MID0gMWUtMTQ7XG4gIHZhciBsb24gPSBwLnggLyB0aGlzLkM7XG4gIHZhciBsYXQgPSBwLnk7XG4gIHZhciBudW0gPSBNYXRoLnBvdyhNYXRoLnRhbigwLjUgKiBsYXQgKyBGT1JUUEkpIC8gdGhpcy5LLCAxIC8gdGhpcy5DKTtcbiAgZm9yICh2YXIgaSA9IE1BWF9JVEVSOyBpID4gMDsgLS1pKSB7XG4gICAgbGF0ID0gMiAqIE1hdGguYXRhbihudW0gKiBzcmF0KHRoaXMuZSAqIE1hdGguc2luKHAueSksIC0gMC41ICogdGhpcy5lKSkgLSBIQUxGX1BJO1xuICAgIGlmIChNYXRoLmFicyhsYXQgLSBwLnkpIDwgREVMX1RPTCkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHAueSA9IGxhdDtcbiAgfVxuICAvKiBjb252ZXJnZW5jZSBmYWlsZWQgKi9cbiAgaWYgKCFpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgcC54ID0gbG9uO1xuICBwLnkgPSBsYXQ7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiZ2F1c3NcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/gauss.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/geocent.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/geocent.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _datumUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../datumUtils */ \"./node_modules/proj4/lib/datumUtils.js\");\n\nfunction init() {\n  this.name = 'geocent';\n}\nfunction forward(p) {\n  var point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_0__.geodeticToGeocentric)(p, this.es, this.a);\n  return point;\n}\nfunction inverse(p) {\n  var point = (0,_datumUtils__WEBPACK_IMPORTED_MODULE_0__.geocentricToGeodetic)(p, this.es, this.a, this.b);\n  return point;\n}\nvar names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dlb2NlbnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFLQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvZ2VvY2VudC5qcz80NWNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgZ2VvZGV0aWNUb0dlb2NlbnRyaWMsXG4gICAgZ2VvY2VudHJpY1RvR2VvZGV0aWNcbn0gZnJvbSAnLi4vZGF0dW1VdGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICAgIHRoaXMubmFtZSA9ICdnZW9jZW50JztcblxufVxuXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gICAgdmFyIHBvaW50ID0gZ2VvZGV0aWNUb0dlb2NlbnRyaWMocCwgdGhpcy5lcywgdGhpcy5hKTtcbiAgICByZXR1cm4gcG9pbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgICB2YXIgcG9pbnQgPSBnZW9jZW50cmljVG9HZW9kZXRpYyhwLCB0aGlzLmVzLCB0aGlzLmEsIHRoaXMuYik7XG4gICAgcmV0dXJuIHBvaW50O1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiR2VvY2VudHJpY1wiLCAnZ2VvY2VudHJpYycsIFwiZ2VvY2VudFwiLCBcIkdlb2NlbnRcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaW5pdDogaW5pdCxcbiAgICBmb3J3YXJkOiBmb3J3YXJkLFxuICAgIGludmVyc2U6IGludmVyc2UsXG4gICAgbmFtZXM6IG5hbWVzXG59OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/geocent.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/geos.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/geos.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_hypot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/hypot */ \"./node_modules/proj4/lib/common/hypot.js\");\n\nfunction init() {\n  this.flip_axis = this.sweep === 'x' ? 1 : 0;\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = \"Geostationary Satellite View\";\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.radius_p * Math.cos(lat), Math.sin(lat));\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if ((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2 < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(v_y, tmp));\n    }\n  }\n\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * (0,_common_hypot__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = b * b - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = b * b - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n\n  p.x = p.x + this.long0;\n  return p;\n}\n\nvar names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dlb3MuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dlb3MuanM/OTViNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgaHlwb3QgZnJvbSAnLi4vY29tbW9uL2h5cG90JztcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgdGhpcy5mbGlwX2F4aXMgPSAodGhpcy5zd2VlcCA9PT0gJ3gnID8gMSA6IDApO1xuICAgIHRoaXMuaCA9IE51bWJlcih0aGlzLmgpO1xuICAgIHRoaXMucmFkaXVzX2dfMSA9IHRoaXMuaCAvIHRoaXMuYTtcblxuICAgIGlmICh0aGlzLnJhZGl1c19nXzEgPD0gMCB8fCB0aGlzLnJhZGl1c19nXzEgPiAxZTEwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgIH1cblxuICAgIHRoaXMucmFkaXVzX2cgPSAxLjAgKyB0aGlzLnJhZGl1c19nXzE7XG4gICAgdGhpcy5DID0gdGhpcy5yYWRpdXNfZyAqIHRoaXMucmFkaXVzX2cgLSAxLjA7XG5cbiAgICBpZiAodGhpcy5lcyAhPT0gMC4wKSB7XG4gICAgICAgIHZhciBvbmVfZXMgPSAxLjAgLSB0aGlzLmVzO1xuICAgICAgICB2YXIgcm9uZV9lcyA9IDEgLyBvbmVfZXM7XG5cbiAgICAgICAgdGhpcy5yYWRpdXNfcCA9IE1hdGguc3FydChvbmVfZXMpO1xuICAgICAgICB0aGlzLnJhZGl1c19wMiA9IG9uZV9lcztcbiAgICAgICAgdGhpcy5yYWRpdXNfcF9pbnYyID0gcm9uZV9lcztcblxuICAgICAgICB0aGlzLnNoYXBlID0gJ2VsbGlwc2UnOyAvLyBVc2UgYXMgYSBjb25kaXRpb24gaW4gdGhlIGZvcndhcmQgYW5kIGludmVyc2UgZnVuY3Rpb25zLlxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucmFkaXVzX3AgPSAxLjA7XG4gICAgICAgIHRoaXMucmFkaXVzX3AyID0gMS4wO1xuICAgICAgICB0aGlzLnJhZGl1c19wX2ludjIgPSAxLjA7XG5cbiAgICAgICAgdGhpcy5zaGFwZSA9ICdzcGhlcmUnOyAgLy8gVXNlIGFzIGEgY29uZGl0aW9uIGluIHRoZSBmb3J3YXJkIGFuZCBpbnZlcnNlIGZ1bmN0aW9ucy5cbiAgICB9XG5cbiAgICBpZiAoIXRoaXMudGl0bGUpIHtcbiAgICAgICAgdGhpcy50aXRsZSA9IFwiR2Vvc3RhdGlvbmFyeSBTYXRlbGxpdGUgVmlld1wiO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gICAgdmFyIGxvbiA9IHAueDtcbiAgICB2YXIgbGF0ID0gcC55O1xuICAgIHZhciB0bXAsIHZfeCwgdl95LCB2X3o7XG4gICAgbG9uID0gbG9uIC0gdGhpcy5sb25nMDtcblxuICAgIGlmICh0aGlzLnNoYXBlID09PSAnZWxsaXBzZScpIHtcbiAgICAgICAgbGF0ID0gTWF0aC5hdGFuKHRoaXMucmFkaXVzX3AyICogTWF0aC50YW4obGF0KSk7XG4gICAgICAgIHZhciByID0gdGhpcy5yYWRpdXNfcCAvIGh5cG90KHRoaXMucmFkaXVzX3AgKiBNYXRoLmNvcyhsYXQpLCBNYXRoLnNpbihsYXQpKTtcblxuICAgICAgICB2X3ggPSByICogTWF0aC5jb3MobG9uKSAqIE1hdGguY29zKGxhdCk7XG4gICAgICAgIHZfeSA9IHIgKiBNYXRoLnNpbihsb24pICogTWF0aC5jb3MobGF0KTtcbiAgICAgICAgdl96ID0gciAqIE1hdGguc2luKGxhdCk7XG5cbiAgICAgICAgaWYgKCgodGhpcy5yYWRpdXNfZyAtIHZfeCkgKiB2X3ggLSB2X3kgKiB2X3kgLSB2X3ogKiB2X3ogKiB0aGlzLnJhZGl1c19wX2ludjIpIDwgMC4wKSB7XG4gICAgICAgICAgICBwLnggPSBOdW1iZXIuTmFOO1xuICAgICAgICAgICAgcC55ID0gTnVtYmVyLk5hTjtcbiAgICAgICAgICAgIHJldHVybiBwO1xuICAgICAgICB9XG5cbiAgICAgICAgdG1wID0gdGhpcy5yYWRpdXNfZyAtIHZfeDtcbiAgICAgICAgaWYgKHRoaXMuZmxpcF9heGlzKSB7XG4gICAgICAgICAgICBwLnggPSB0aGlzLnJhZGl1c19nXzEgKiBNYXRoLmF0YW4odl95IC8gaHlwb3Qodl96LCB0bXApKTtcbiAgICAgICAgICAgIHAueSA9IHRoaXMucmFkaXVzX2dfMSAqIE1hdGguYXRhbih2X3ogLyB0bXApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcC54ID0gdGhpcy5yYWRpdXNfZ18xICogTWF0aC5hdGFuKHZfeSAvIHRtcCk7XG4gICAgICAgICAgICBwLnkgPSB0aGlzLnJhZGl1c19nXzEgKiBNYXRoLmF0YW4odl96IC8gaHlwb3Qodl95LCB0bXApKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAodGhpcy5zaGFwZSA9PT0gJ3NwaGVyZScpIHtcbiAgICAgICAgdG1wID0gTWF0aC5jb3MobGF0KTtcbiAgICAgICAgdl94ID0gTWF0aC5jb3MobG9uKSAqIHRtcDtcbiAgICAgICAgdl95ID0gTWF0aC5zaW4obG9uKSAqIHRtcDtcbiAgICAgICAgdl96ID0gTWF0aC5zaW4obGF0KTtcbiAgICAgICAgdG1wID0gdGhpcy5yYWRpdXNfZyAtIHZfeDtcblxuICAgICAgICBpZiAodGhpcy5mbGlwX2F4aXMpIHtcbiAgICAgICAgICAgIHAueCA9IHRoaXMucmFkaXVzX2dfMSAqIE1hdGguYXRhbih2X3kgLyBoeXBvdCh2X3osIHRtcCkpO1xuICAgICAgICAgICAgcC55ID0gdGhpcy5yYWRpdXNfZ18xICogTWF0aC5hdGFuKHZfeiAvIHRtcCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwLnggPSB0aGlzLnJhZGl1c19nXzEgKiBNYXRoLmF0YW4odl95IC8gdG1wKTtcbiAgICAgICAgICAgIHAueSA9IHRoaXMucmFkaXVzX2dfMSAqIE1hdGguYXRhbih2X3ogLyBoeXBvdCh2X3ksIHRtcCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHAueCA9IHAueCAqIHRoaXMuYTtcbiAgICBwLnkgPSBwLnkgKiB0aGlzLmE7XG4gICAgcmV0dXJuIHA7XG59XG5cbmZ1bmN0aW9uIGludmVyc2UocCkge1xuICAgIHZhciB2X3ggPSAtMS4wO1xuICAgIHZhciB2X3kgPSAwLjA7XG4gICAgdmFyIHZfeiA9IDAuMDtcbiAgICB2YXIgYSwgYiwgZGV0LCBrO1xuXG4gICAgcC54ID0gcC54IC8gdGhpcy5hO1xuICAgIHAueSA9IHAueSAvIHRoaXMuYTtcblxuICAgIGlmICh0aGlzLnNoYXBlID09PSAnZWxsaXBzZScpIHtcbiAgICAgICAgaWYgKHRoaXMuZmxpcF9heGlzKSB7XG4gICAgICAgICAgICB2X3ogPSBNYXRoLnRhbihwLnkgLyB0aGlzLnJhZGl1c19nXzEpO1xuICAgICAgICAgICAgdl95ID0gTWF0aC50YW4ocC54IC8gdGhpcy5yYWRpdXNfZ18xKSAqIGh5cG90KDEuMCwgdl96KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZfeSA9IE1hdGgudGFuKHAueCAvIHRoaXMucmFkaXVzX2dfMSk7XG4gICAgICAgICAgICB2X3ogPSBNYXRoLnRhbihwLnkgLyB0aGlzLnJhZGl1c19nXzEpICogaHlwb3QoMS4wLCB2X3kpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHZfenAgPSB2X3ogLyB0aGlzLnJhZGl1c19wO1xuICAgICAgICBhID0gdl95ICogdl95ICsgdl96cCAqIHZfenAgKyB2X3ggKiB2X3g7XG4gICAgICAgIGIgPSAyICogdGhpcy5yYWRpdXNfZyAqIHZfeDtcbiAgICAgICAgZGV0ID0gKGIgKiBiKSAtIDQgKiBhICogdGhpcy5DO1xuXG4gICAgICAgIGlmIChkZXQgPCAwLjApIHtcbiAgICAgICAgICAgIHAueCA9IE51bWJlci5OYU47XG4gICAgICAgICAgICBwLnkgPSBOdW1iZXIuTmFOO1xuICAgICAgICAgICAgcmV0dXJuIHA7XG4gICAgICAgIH1cblxuICAgICAgICBrID0gKC1iIC0gTWF0aC5zcXJ0KGRldCkpIC8gKDIuMCAqIGEpO1xuICAgICAgICB2X3ggPSB0aGlzLnJhZGl1c19nICsgayAqIHZfeDtcbiAgICAgICAgdl95ICo9IGs7XG4gICAgICAgIHZfeiAqPSBrO1xuXG4gICAgICAgIHAueCA9IE1hdGguYXRhbjIodl95LCB2X3gpO1xuICAgICAgICBwLnkgPSBNYXRoLmF0YW4odl96ICogTWF0aC5jb3MocC54KSAvIHZfeCk7XG4gICAgICAgIHAueSA9IE1hdGguYXRhbih0aGlzLnJhZGl1c19wX2ludjIgKiBNYXRoLnRhbihwLnkpKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuc2hhcGUgPT09ICdzcGhlcmUnKSB7XG4gICAgICAgIGlmICh0aGlzLmZsaXBfYXhpcykge1xuICAgICAgICAgICAgdl96ID0gTWF0aC50YW4ocC55IC8gdGhpcy5yYWRpdXNfZ18xKTtcbiAgICAgICAgICAgIHZfeSA9IE1hdGgudGFuKHAueCAvIHRoaXMucmFkaXVzX2dfMSkgKiBNYXRoLnNxcnQoMS4wICsgdl96ICogdl96KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZfeSA9IE1hdGgudGFuKHAueCAvIHRoaXMucmFkaXVzX2dfMSk7XG4gICAgICAgICAgICB2X3ogPSBNYXRoLnRhbihwLnkgLyB0aGlzLnJhZGl1c19nXzEpICogTWF0aC5zcXJ0KDEuMCArIHZfeSAqIHZfeSk7XG4gICAgICAgIH1cblxuICAgICAgICBhID0gdl95ICogdl95ICsgdl96ICogdl96ICsgdl94ICogdl94O1xuICAgICAgICBiID0gMiAqIHRoaXMucmFkaXVzX2cgKiB2X3g7XG4gICAgICAgIGRldCA9IChiICogYikgLSA0ICogYSAqIHRoaXMuQztcbiAgICAgICAgaWYgKGRldCA8IDAuMCkge1xuICAgICAgICAgICAgcC54ID0gTnVtYmVyLk5hTjtcbiAgICAgICAgICAgIHAueSA9IE51bWJlci5OYU47XG4gICAgICAgICAgICByZXR1cm4gcDtcbiAgICAgICAgfVxuXG4gICAgICAgIGsgPSAoLWIgLSBNYXRoLnNxcnQoZGV0KSkgLyAoMi4wICogYSk7XG4gICAgICAgIHZfeCA9IHRoaXMucmFkaXVzX2cgKyBrICogdl94O1xuICAgICAgICB2X3kgKj0gaztcbiAgICAgICAgdl96ICo9IGs7XG5cbiAgICAgICAgcC54ID0gTWF0aC5hdGFuMih2X3ksIHZfeCk7XG4gICAgICAgIHAueSA9IE1hdGguYXRhbih2X3ogKiBNYXRoLmNvcyhwLngpIC8gdl94KTtcbiAgICB9XG4gICAgcC54ID0gcC54ICsgdGhpcy5sb25nMDtcbiAgICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIkdlb3N0YXRpb25hcnkgU2F0ZWxsaXRlIFZpZXdcIiwgXCJHZW9zdGF0aW9uYXJ5X1NhdGVsbGl0ZVwiLCBcImdlb3NcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgaW5pdDogaW5pdCxcbiAgICBmb3J3YXJkOiBmb3J3YXJkLFxuICAgIGludmVyc2U6IGludmVyc2UsXG4gICAgbmFtZXM6IG5hbWVzLFxufTtcblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/geos.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/gnom.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/gnom.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\n\nfunction init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0); // Approximation for projecting points to the horizon (infinity)\n\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nfunction forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var rh;\n  /* Rho */\n\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rh = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cosc * this.sin_p14 + p.y * sinc * this.cos_p14 / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"gnom\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dub20uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFBQTs7QUFDQTtBQUFBOztBQUNBO0FBQUE7O0FBQ0E7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2dub20uanM/OGMzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWRqdXN0X2xvbiBmcm9tICcuLi9jb21tb24vYWRqdXN0X2xvbic7XG5pbXBvcnQgYXNpbnogZnJvbSAnLi4vY29tbW9uL2FzaW56JztcbmltcG9ydCB7RVBTTE59IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuXG4vKlxuICByZWZlcmVuY2U6XG4gICAgV29sZnJhbSBNYXRod29ybGQgXCJHbm9tb25pYyBQcm9qZWN0aW9uXCJcbiAgICBodHRwOi8vbWF0aHdvcmxkLndvbGZyYW0uY29tL0dub21vbmljUHJvamVjdGlvbi5odG1sXG4gICAgQWNjZXNzZWQ6IDEydGggTm92ZW1iZXIgMjAwOVxuICAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG5cbiAgLyogUGxhY2UgcGFyYW1ldGVycyBpbiBzdGF0aWMgc3RvcmFnZSBmb3IgY29tbW9uIHVzZVxuICAgICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIHRoaXMuc2luX3AxNCA9IE1hdGguc2luKHRoaXMubGF0MCk7XG4gIHRoaXMuY29zX3AxNCA9IE1hdGguY29zKHRoaXMubGF0MCk7XG4gIC8vIEFwcHJveGltYXRpb24gZm9yIHByb2plY3RpbmcgcG9pbnRzIHRvIHRoZSBob3Jpem9uIChpbmZpbml0eSlcbiAgdGhpcy5pbmZpbml0eV9kaXN0ID0gMTAwMCAqIHRoaXMuYTtcbiAgdGhpcy5yYyA9IDE7XG59XG5cbi8qIEdub21vbmljIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciBzaW5waGksIGNvc3BoaTsgLyogc2luIGFuZCBjb3MgdmFsdWUgICAgICAgICovXG4gIHZhciBkbG9uOyAvKiBkZWx0YSBsb25naXR1ZGUgdmFsdWUgICAgICAqL1xuICB2YXIgY29zbG9uOyAvKiBjb3Mgb2YgbG9uZ2l0dWRlICAgICAgICAqL1xuICB2YXIga3NwOyAvKiBzY2FsZSBmYWN0b3IgICAgICAgICAgKi9cbiAgdmFyIGc7XG4gIHZhciB4LCB5O1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuICAvKiBGb3J3YXJkIGVxdWF0aW9uc1xuICAgICAgLS0tLS0tLS0tLS0tLS0tLS0qL1xuICBkbG9uID0gYWRqdXN0X2xvbihsb24gLSB0aGlzLmxvbmcwKTtcblxuICBzaW5waGkgPSBNYXRoLnNpbihsYXQpO1xuICBjb3NwaGkgPSBNYXRoLmNvcyhsYXQpO1xuXG4gIGNvc2xvbiA9IE1hdGguY29zKGRsb24pO1xuICBnID0gdGhpcy5zaW5fcDE0ICogc2lucGhpICsgdGhpcy5jb3NfcDE0ICogY29zcGhpICogY29zbG9uO1xuICBrc3AgPSAxO1xuICBpZiAoKGcgPiAwKSB8fCAoTWF0aC5hYnMoZykgPD0gRVBTTE4pKSB7XG4gICAgeCA9IHRoaXMueDAgKyB0aGlzLmEgKiBrc3AgKiBjb3NwaGkgKiBNYXRoLnNpbihkbG9uKSAvIGc7XG4gICAgeSA9IHRoaXMueTAgKyB0aGlzLmEgKiBrc3AgKiAodGhpcy5jb3NfcDE0ICogc2lucGhpIC0gdGhpcy5zaW5fcDE0ICogY29zcGhpICogY29zbG9uKSAvIGc7XG4gIH1cbiAgZWxzZSB7XG5cbiAgICAvLyBQb2ludCBpcyBpbiB0aGUgb3Bwb3NpbmcgaGVtaXNwaGVyZSBhbmQgaXMgdW5wcm9qZWN0YWJsZVxuICAgIC8vIFdlIHN0aWxsIG5lZWQgdG8gcmV0dXJuIGEgcmVhc29uYWJsZSBwb2ludCwgc28gd2UgcHJvamVjdFxuICAgIC8vIHRvIGluZmluaXR5LCBvbiBhIGJlYXJpbmdcbiAgICAvLyBlcXVpdmFsZW50IHRvIHRoZSBub3J0aGVybiBoZW1pc3BoZXJlIGVxdWl2YWxlbnRcbiAgICAvLyBUaGlzIGlzIGEgcmVhc29uYWJsZSBhcHByb3hpbWF0aW9uIGZvciBzaG9ydCBzaGFwZXMgYW5kIGxpbmVzIHRoYXRcbiAgICAvLyBzdHJhZGRsZSB0aGUgaG9yaXpvbi5cblxuICAgIHggPSB0aGlzLngwICsgdGhpcy5pbmZpbml0eV9kaXN0ICogY29zcGhpICogTWF0aC5zaW4oZGxvbik7XG4gICAgeSA9IHRoaXMueTAgKyB0aGlzLmluZmluaXR5X2Rpc3QgKiAodGhpcy5jb3NfcDE0ICogc2lucGhpIC0gdGhpcy5zaW5fcDE0ICogY29zcGhpICogY29zbG9uKTtcblxuICB9XG4gIHAueCA9IHg7XG4gIHAueSA9IHk7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciByaDsgLyogUmhvICovXG4gIHZhciBzaW5jLCBjb3NjO1xuICB2YXIgYztcbiAgdmFyIGxvbiwgbGF0O1xuXG4gIC8qIEludmVyc2UgZXF1YXRpb25zXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIHAueCA9IChwLnggLSB0aGlzLngwKSAvIHRoaXMuYTtcbiAgcC55ID0gKHAueSAtIHRoaXMueTApIC8gdGhpcy5hO1xuXG4gIHAueCAvPSB0aGlzLmswO1xuICBwLnkgLz0gdGhpcy5rMDtcblxuICBpZiAoKHJoID0gTWF0aC5zcXJ0KHAueCAqIHAueCArIHAueSAqIHAueSkpKSB7XG4gICAgYyA9IE1hdGguYXRhbjIocmgsIHRoaXMucmMpO1xuICAgIHNpbmMgPSBNYXRoLnNpbihjKTtcbiAgICBjb3NjID0gTWF0aC5jb3MoYyk7XG5cbiAgICBsYXQgPSBhc2lueihjb3NjICogdGhpcy5zaW5fcDE0ICsgKHAueSAqIHNpbmMgKiB0aGlzLmNvc19wMTQpIC8gcmgpO1xuICAgIGxvbiA9IE1hdGguYXRhbjIocC54ICogc2luYywgcmggKiB0aGlzLmNvc19wMTQgKiBjb3NjIC0gcC55ICogdGhpcy5zaW5fcDE0ICogc2luYyk7XG4gICAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgbG9uKTtcbiAgfVxuICBlbHNlIHtcbiAgICBsYXQgPSB0aGlzLnBoaWMwO1xuICAgIGxvbiA9IDA7XG4gIH1cblxuICBwLnggPSBsb247XG4gIHAueSA9IGxhdDtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJnbm9tXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/gnom.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/krovak.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/krovak.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\nfunction init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n\n\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n\n  this.s45 = 0.785398163397448;\n  /* 45 */\n\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + this.e2 * Math.pow(Math.cos(this.fi0), 4) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n/* ellipsoid */\n\n/* calculate xy from lat/lon */\n\n/* Constants, identical to inverse transform function */\n\nfunction forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  /* Transformation */\n\n  gfi = Math.pow((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat)), this.alfa * this.e / 2);\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  return p;\n}\n/* calculate lat/lon from xy */\n\nfunction inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n  /* Transformation */\n\n  /* revert y, x*/\n\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n\n  if (iter >= 15) {\n    return null;\n  }\n\n  return p;\n}\nvar names = [\"Krovak\", \"krovak\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2tyb3Zhay5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMva3JvdmFrLmpzP2YwZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgdGhpcy5hID0gNjM3NzM5Ny4xNTU7XG4gIHRoaXMuZXMgPSAwLjAwNjY3NDM3MjIzMDYxNDtcbiAgdGhpcy5lID0gTWF0aC5zcXJ0KHRoaXMuZXMpO1xuICBpZiAoIXRoaXMubGF0MCkge1xuICAgIHRoaXMubGF0MCA9IDAuODYzOTM3OTc5NzM3MTkzO1xuICB9XG4gIGlmICghdGhpcy5sb25nMCkge1xuICAgIHRoaXMubG9uZzAgPSAwLjc0MTc2NDkzMjA5NzU5MDEgLSAwLjMwODM0MTUwMTE4NTY2NTtcbiAgfVxuICAvKiBpZiBzY2FsZSBub3Qgc2V0IGRlZmF1bHQgdG8gMC45OTk5ICovXG4gIGlmICghdGhpcy5rMCkge1xuICAgIHRoaXMuazAgPSAwLjk5OTk7XG4gIH1cbiAgdGhpcy5zNDUgPSAwLjc4NTM5ODE2MzM5NzQ0ODsgLyogNDUgKi9cbiAgdGhpcy5zOTAgPSAyICogdGhpcy5zNDU7XG4gIHRoaXMuZmkwID0gdGhpcy5sYXQwO1xuICB0aGlzLmUyID0gdGhpcy5lcztcbiAgdGhpcy5lID0gTWF0aC5zcXJ0KHRoaXMuZTIpO1xuICB0aGlzLmFsZmEgPSBNYXRoLnNxcnQoMSArICh0aGlzLmUyICogTWF0aC5wb3coTWF0aC5jb3ModGhpcy5maTApLCA0KSkgLyAoMSAtIHRoaXMuZTIpKTtcbiAgdGhpcy51cSA9IDEuMDQyMTY4NTYzODA0NzQ7XG4gIHRoaXMudTAgPSBNYXRoLmFzaW4oTWF0aC5zaW4odGhpcy5maTApIC8gdGhpcy5hbGZhKTtcbiAgdGhpcy5nID0gTWF0aC5wb3coKDEgKyB0aGlzLmUgKiBNYXRoLnNpbih0aGlzLmZpMCkpIC8gKDEgLSB0aGlzLmUgKiBNYXRoLnNpbih0aGlzLmZpMCkpLCB0aGlzLmFsZmEgKiB0aGlzLmUgLyAyKTtcbiAgdGhpcy5rID0gTWF0aC50YW4odGhpcy51MCAvIDIgKyB0aGlzLnM0NSkgLyBNYXRoLnBvdyhNYXRoLnRhbih0aGlzLmZpMCAvIDIgKyB0aGlzLnM0NSksIHRoaXMuYWxmYSkgKiB0aGlzLmc7XG4gIHRoaXMuazEgPSB0aGlzLmswO1xuICB0aGlzLm4wID0gdGhpcy5hICogTWF0aC5zcXJ0KDEgLSB0aGlzLmUyKSAvICgxIC0gdGhpcy5lMiAqIE1hdGgucG93KE1hdGguc2luKHRoaXMuZmkwKSwgMikpO1xuICB0aGlzLnMwID0gMS4zNzAwODM0NjI4MTU1NTtcbiAgdGhpcy5uID0gTWF0aC5zaW4odGhpcy5zMCk7XG4gIHRoaXMucm8wID0gdGhpcy5rMSAqIHRoaXMubjAgLyBNYXRoLnRhbih0aGlzLnMwKTtcbiAgdGhpcy5hZCA9IHRoaXMuczkwIC0gdGhpcy51cTtcbn1cblxuLyogZWxsaXBzb2lkICovXG4vKiBjYWxjdWxhdGUgeHkgZnJvbSBsYXQvbG9uICovXG4vKiBDb25zdGFudHMsIGlkZW50aWNhbCB0byBpbnZlcnNlIHRyYW5zZm9ybSBmdW5jdGlvbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICB2YXIgZ2ZpLCB1LCBkZWx0YXYsIHMsIGQsIGVwcywgcm87XG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG4gIHZhciBkZWx0YV9sb24gPSBhZGp1c3RfbG9uKGxvbiAtIHRoaXMubG9uZzApO1xuICAvKiBUcmFuc2Zvcm1hdGlvbiAqL1xuICBnZmkgPSBNYXRoLnBvdygoKDEgKyB0aGlzLmUgKiBNYXRoLnNpbihsYXQpKSAvICgxIC0gdGhpcy5lICogTWF0aC5zaW4obGF0KSkpLCAodGhpcy5hbGZhICogdGhpcy5lIC8gMikpO1xuICB1ID0gMiAqIChNYXRoLmF0YW4odGhpcy5rICogTWF0aC5wb3coTWF0aC50YW4obGF0IC8gMiArIHRoaXMuczQ1KSwgdGhpcy5hbGZhKSAvIGdmaSkgLSB0aGlzLnM0NSk7XG4gIGRlbHRhdiA9IC1kZWx0YV9sb24gKiB0aGlzLmFsZmE7XG4gIHMgPSBNYXRoLmFzaW4oTWF0aC5jb3ModGhpcy5hZCkgKiBNYXRoLnNpbih1KSArIE1hdGguc2luKHRoaXMuYWQpICogTWF0aC5jb3ModSkgKiBNYXRoLmNvcyhkZWx0YXYpKTtcbiAgZCA9IE1hdGguYXNpbihNYXRoLmNvcyh1KSAqIE1hdGguc2luKGRlbHRhdikgLyBNYXRoLmNvcyhzKSk7XG4gIGVwcyA9IHRoaXMubiAqIGQ7XG4gIHJvID0gdGhpcy5ybzAgKiBNYXRoLnBvdyhNYXRoLnRhbih0aGlzLnMwIC8gMiArIHRoaXMuczQ1KSwgdGhpcy5uKSAvIE1hdGgucG93KE1hdGgudGFuKHMgLyAyICsgdGhpcy5zNDUpLCB0aGlzLm4pO1xuICBwLnkgPSBybyAqIE1hdGguY29zKGVwcykgLyAxO1xuICBwLnggPSBybyAqIE1hdGguc2luKGVwcykgLyAxO1xuXG4gIGlmICghdGhpcy5jemVjaCkge1xuICAgIHAueSAqPSAtMTtcbiAgICBwLnggKj0gLTE7XG4gIH1cbiAgcmV0dXJuIChwKTtcbn1cblxuLyogY2FsY3VsYXRlIGxhdC9sb24gZnJvbSB4eSAqL1xuZXhwb3J0IGZ1bmN0aW9uIGludmVyc2UocCkge1xuICB2YXIgdSwgZGVsdGF2LCBzLCBkLCBlcHMsIHJvLCBmaTE7XG4gIHZhciBvaztcblxuICAvKiBUcmFuc2Zvcm1hdGlvbiAqL1xuICAvKiByZXZlcnQgeSwgeCovXG4gIHZhciB0bXAgPSBwLng7XG4gIHAueCA9IHAueTtcbiAgcC55ID0gdG1wO1xuICBpZiAoIXRoaXMuY3plY2gpIHtcbiAgICBwLnkgKj0gLTE7XG4gICAgcC54ICo9IC0xO1xuICB9XG4gIHJvID0gTWF0aC5zcXJ0KHAueCAqIHAueCArIHAueSAqIHAueSk7XG4gIGVwcyA9IE1hdGguYXRhbjIocC55LCBwLngpO1xuICBkID0gZXBzIC8gTWF0aC5zaW4odGhpcy5zMCk7XG4gIHMgPSAyICogKE1hdGguYXRhbihNYXRoLnBvdyh0aGlzLnJvMCAvIHJvLCAxIC8gdGhpcy5uKSAqIE1hdGgudGFuKHRoaXMuczAgLyAyICsgdGhpcy5zNDUpKSAtIHRoaXMuczQ1KTtcbiAgdSA9IE1hdGguYXNpbihNYXRoLmNvcyh0aGlzLmFkKSAqIE1hdGguc2luKHMpIC0gTWF0aC5zaW4odGhpcy5hZCkgKiBNYXRoLmNvcyhzKSAqIE1hdGguY29zKGQpKTtcbiAgZGVsdGF2ID0gTWF0aC5hc2luKE1hdGguY29zKHMpICogTWF0aC5zaW4oZCkgLyBNYXRoLmNvcyh1KSk7XG4gIHAueCA9IHRoaXMubG9uZzAgLSBkZWx0YXYgLyB0aGlzLmFsZmE7XG4gIGZpMSA9IHU7XG4gIG9rID0gMDtcbiAgdmFyIGl0ZXIgPSAwO1xuICBkbyB7XG4gICAgcC55ID0gMiAqIChNYXRoLmF0YW4oTWF0aC5wb3codGhpcy5rLCAtIDEgLyB0aGlzLmFsZmEpICogTWF0aC5wb3coTWF0aC50YW4odSAvIDIgKyB0aGlzLnM0NSksIDEgLyB0aGlzLmFsZmEpICogTWF0aC5wb3coKDEgKyB0aGlzLmUgKiBNYXRoLnNpbihmaTEpKSAvICgxIC0gdGhpcy5lICogTWF0aC5zaW4oZmkxKSksIHRoaXMuZSAvIDIpKSAtIHRoaXMuczQ1KTtcbiAgICBpZiAoTWF0aC5hYnMoZmkxIC0gcC55KSA8IDAuMDAwMDAwMDAwMSkge1xuICAgICAgb2sgPSAxO1xuICAgIH1cbiAgICBmaTEgPSBwLnk7XG4gICAgaXRlciArPSAxO1xuICB9IHdoaWxlIChvayA9PT0gMCAmJiBpdGVyIDwgMTUpO1xuICBpZiAoaXRlciA+PSAxNSkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIChwKTtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIktyb3Zha1wiLCBcImtyb3Zha1wiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/krovak.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/laea.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/laea.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EQUIT\": () => (/* binding */ EQUIT),\n/* harmony export */   \"N_POLE\": () => (/* binding */ N_POLE),\n/* harmony export */   \"OBLIQ\": () => (/* binding */ OBLIQ),\n/* harmony export */   \"S_POLE\": () => (/* binding */ S_POLE),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_qsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/qsfnz */ \"./node_modules/proj4/lib/common/qsfnz.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nvar S_POLE = 1;\nvar N_POLE = 2;\nvar EQUIT = 3;\nvar OBLIQ = 4;\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\n\nfunction init() {\n  var t = Math.abs(this.lat0);\n\n  if (Math.abs(t - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  } else if (Math.abs(t) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    this.mode = this.EQUIT;\n  } else {\n    this.mode = this.OBLIQ;\n  }\n\n  if (this.es > 0) {\n    var sinphi;\n    this.qp = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n\n    switch (this.mode) {\n      case this.N_POLE:\n        this.dd = 1;\n        break;\n\n      case this.S_POLE:\n        this.dd = 1;\n        break;\n\n      case this.EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n\n      case this.OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\n\nfunction forward(p) {\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n  lam = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(lam - this.long0);\n\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = this.mode === this.EQUIT ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n\n      if (y <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n        return null;\n      }\n\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= this.mode === this.EQUIT ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n\n      if (Math.abs(phi + this.lat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n        return null;\n      }\n\n      y = _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI - phi * 0.5;\n      y = 2 * (this.mode === this.S_POLE ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = (0,_common_qsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, sinphi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n\n      case this.N_POLE:\n        b = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + phi;\n        q = this.qp - q;\n        break;\n\n      case this.S_POLE:\n        b = phi - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n\n    if (Math.abs(b) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      return null;\n    }\n\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n\n        x = this.xmf * b * cosb * sinlam;\n        break;\n\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * (this.mode === this.S_POLE ? b : -b);\n        } else {\n          x = y = 0;\n        }\n\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n\n  if (this.sphere) {\n    var cosz = 0,\n        rh,\n        sinz = 0;\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n\n    if (phi > 1) {\n      return null;\n    }\n\n    phi = 2 * Math.asin(phi);\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n\n      case this.OBLIQ:\n        phi = Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n\n      case this.N_POLE:\n        y = -y;\n        phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi;\n        break;\n\n      case this.S_POLE:\n        phi -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n        break;\n    }\n\n    lam = y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n\n      if (rho < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= sCe = Math.sin(sCe);\n\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n\n      q = x * x + y * y;\n\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n\n      ab = 1 - q / this.qp;\n\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n/* determine latitude from authalic latitude */\n\nvar P00 = 0.33333333333333333333;\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t);\n}\n\nvar names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/laea.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/lcc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/lcc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/tsfnz */ \"./node_modules/proj4/lib/common/tsfnz.js\");\n/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/sign */ \"./node_modules/proj4/lib/common/sign.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/phi2z */ \"./node_modules/proj4/lib/common/phi2z.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\n\n\nfunction init() {\n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n\n\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0; // Standard Parallels cannot be equal and on opposite sides of the equator\n\n  if (Math.abs(this.lat1 + this.lat2) < _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, sin1, cos1);\n  var ts1 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, this.lat1, sin1);\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, sin2, cos2);\n  var ts2 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, this.lat2, sin2);\n  var ts0 = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n} // Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y; // singular cases :\n\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {\n    lat = (0,_common_sign__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(lat) * (_constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI - 2 * _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI);\n  var ts, rh1;\n\n  if (con > _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {\n    ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n\n    if (con <= 0) {\n      return null;\n    }\n\n    rh1 = 0;\n  }\n\n  var theta = this.ns * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n  return p;\n} // Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nfunction inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = this.rh - (p.y - this.y0) / this.k0;\n\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n\n  var theta = 0;\n\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * x, con * y);\n  }\n\n  if (rh1 !== 0 || this.ns > 0) {\n    con = 1 / this.ns;\n    ts = Math.pow(rh1 / (this.a * this.f0), con);\n    lat = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -_constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI;\n  }\n\n  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(theta / this.ns + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_1SP\", \"Lambert_Conformal_Conic_2SP\", \"lcc\", \"Lambert Conic Conformal (1SP)\", \"Lambert Conic Conformal (2SP)\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2xjYy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7OztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTs7QUFDQTtBQUVBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy9sY2MuanM/ODg1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbXNmbnogZnJvbSAnLi4vY29tbW9uL21zZm56JztcbmltcG9ydCB0c2ZueiBmcm9tICcuLi9jb21tb24vdHNmbnonO1xuaW1wb3J0IHNpZ24gZnJvbSAnLi4vY29tbW9uL3NpZ24nO1xuaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuaW1wb3J0IHBoaTJ6IGZyb20gJy4uL2NvbW1vbi9waGkyeic7XG5pbXBvcnQge0hBTEZfUEksIEVQU0xOfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICBcbiAgLy9kb3VibGUgbGF0MDsgICAgICAgICAgICAgICAgICAgIC8qIHRoZSByZWZlcmVuY2UgbGF0aXR1ZGUgICAgICAgICAgICAgICAqL1xuICAvL2RvdWJsZSBsb25nMDsgICAgICAgICAgICAgICAgICAgLyogdGhlIHJlZmVyZW5jZSBsb25naXR1ZGUgICAgICAgICAgICAgICovXG4gIC8vZG91YmxlIGxhdDE7ICAgICAgICAgICAgICAgICAgICAvKiBmaXJzdCBzdGFuZGFyZCBwYXJhbGxlbCAgICAgICAgICAgICAgKi9cbiAgLy9kb3VibGUgbGF0MjsgICAgICAgICAgICAgICAgICAgIC8qIHNlY29uZCBzdGFuZGFyZCBwYXJhbGxlbCAgICAgICAgICAgICAqL1xuICAvL2RvdWJsZSByX21hajsgICAgICAgICAgICAgICAgICAgLyogbWFqb3IgYXhpcyAgICAgICAgICAgICAgICAgICAgICAgICAgICovXG4gIC8vZG91YmxlIHJfbWluOyAgICAgICAgICAgICAgICAgICAvKiBtaW5vciBheGlzICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgLy9kb3VibGUgZmFsc2VfZWFzdDsgICAgICAgICAgICAgIC8qIHggb2Zmc2V0IGluIG1ldGVycyAgICAgICAgICAgICAgICAgICAqL1xuICAvL2RvdWJsZSBmYWxzZV9ub3J0aDsgICAgICAgICAgICAgLyogeSBvZmZzZXQgaW4gbWV0ZXJzICAgICAgICAgICAgICAgICAgICovXG4gIFxuICAvL3RoZSBhYm92ZSB2YWx1ZSBjYW4gYmUgc2V0IHdpdGggcHJvajQuZGVmc1xuICAvL2V4YW1wbGU6IHByb2o0LmRlZnMoXCJFUFNHOjIxNTRcIixcIitwcm9qPWxjYyArbGF0XzE9NDkgK2xhdF8yPTQ0ICtsYXRfMD00Ni41ICtsb25fMD0zICt4XzA9NzAwMDAwICt5XzA9NjYwMDAwMCArZWxscHM9R1JTODAgK3Rvd2dzODQ9MCwwLDAsMCwwLDAsMCArdW5pdHM9bSArbm9fZGVmc1wiKTtcblxuICBpZiAoIXRoaXMubGF0Mikge1xuICAgIHRoaXMubGF0MiA9IHRoaXMubGF0MTtcbiAgfSAvL2lmIGxhdDIgaXMgbm90IGRlZmluZWRcbiAgaWYgKCF0aGlzLmswKSB7XG4gICAgdGhpcy5rMCA9IDE7XG4gIH1cbiAgdGhpcy54MCA9IHRoaXMueDAgfHwgMDtcbiAgdGhpcy55MCA9IHRoaXMueTAgfHwgMDtcbiAgLy8gU3RhbmRhcmQgUGFyYWxsZWxzIGNhbm5vdCBiZSBlcXVhbCBhbmQgb24gb3Bwb3NpdGUgc2lkZXMgb2YgdGhlIGVxdWF0b3JcbiAgaWYgKE1hdGguYWJzKHRoaXMubGF0MSArIHRoaXMubGF0MikgPCBFUFNMTikge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciB0ZW1wID0gdGhpcy5iIC8gdGhpcy5hO1xuICB0aGlzLmUgPSBNYXRoLnNxcnQoMSAtIHRlbXAgKiB0ZW1wKTtcblxuICB2YXIgc2luMSA9IE1hdGguc2luKHRoaXMubGF0MSk7XG4gIHZhciBjb3MxID0gTWF0aC5jb3ModGhpcy5sYXQxKTtcbiAgdmFyIG1zMSA9IG1zZm56KHRoaXMuZSwgc2luMSwgY29zMSk7XG4gIHZhciB0czEgPSB0c2Zueih0aGlzLmUsIHRoaXMubGF0MSwgc2luMSk7XG5cbiAgdmFyIHNpbjIgPSBNYXRoLnNpbih0aGlzLmxhdDIpO1xuICB2YXIgY29zMiA9IE1hdGguY29zKHRoaXMubGF0Mik7XG4gIHZhciBtczIgPSBtc2Zueih0aGlzLmUsIHNpbjIsIGNvczIpO1xuICB2YXIgdHMyID0gdHNmbnoodGhpcy5lLCB0aGlzLmxhdDIsIHNpbjIpO1xuXG4gIHZhciB0czAgPSB0c2Zueih0aGlzLmUsIHRoaXMubGF0MCwgTWF0aC5zaW4odGhpcy5sYXQwKSk7XG5cbiAgaWYgKE1hdGguYWJzKHRoaXMubGF0MSAtIHRoaXMubGF0MikgPiBFUFNMTikge1xuICAgIHRoaXMubnMgPSBNYXRoLmxvZyhtczEgLyBtczIpIC8gTWF0aC5sb2codHMxIC8gdHMyKTtcbiAgfVxuICBlbHNlIHtcbiAgICB0aGlzLm5zID0gc2luMTtcbiAgfVxuICBpZiAoaXNOYU4odGhpcy5ucykpIHtcbiAgICB0aGlzLm5zID0gc2luMTtcbiAgfVxuICB0aGlzLmYwID0gbXMxIC8gKHRoaXMubnMgKiBNYXRoLnBvdyh0czEsIHRoaXMubnMpKTtcbiAgdGhpcy5yaCA9IHRoaXMuYSAqIHRoaXMuZjAgKiBNYXRoLnBvdyh0czAsIHRoaXMubnMpO1xuICBpZiAoIXRoaXMudGl0bGUpIHtcbiAgICB0aGlzLnRpdGxlID0gXCJMYW1iZXJ0IENvbmZvcm1hbCBDb25pY1wiO1xuICB9XG59XG5cbi8vIExhbWJlcnQgQ29uZm9ybWFsIGNvbmljIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCBmdW5jdGlvbiBmb3J3YXJkKHApIHtcblxuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuXG4gIC8vIHNpbmd1bGFyIGNhc2VzIDpcbiAgaWYgKE1hdGguYWJzKDIgKiBNYXRoLmFicyhsYXQpIC0gTWF0aC5QSSkgPD0gRVBTTE4pIHtcbiAgICBsYXQgPSBzaWduKGxhdCkgKiAoSEFMRl9QSSAtIDIgKiBFUFNMTik7XG4gIH1cblxuICB2YXIgY29uID0gTWF0aC5hYnMoTWF0aC5hYnMobGF0KSAtIEhBTEZfUEkpO1xuICB2YXIgdHMsIHJoMTtcbiAgaWYgKGNvbiA+IEVQU0xOKSB7XG4gICAgdHMgPSB0c2Zueih0aGlzLmUsIGxhdCwgTWF0aC5zaW4obGF0KSk7XG4gICAgcmgxID0gdGhpcy5hICogdGhpcy5mMCAqIE1hdGgucG93KHRzLCB0aGlzLm5zKTtcbiAgfVxuICBlbHNlIHtcbiAgICBjb24gPSBsYXQgKiB0aGlzLm5zO1xuICAgIGlmIChjb24gPD0gMCkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJoMSA9IDA7XG4gIH1cbiAgdmFyIHRoZXRhID0gdGhpcy5ucyAqIGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIHAueCA9IHRoaXMuazAgKiAocmgxICogTWF0aC5zaW4odGhldGEpKSArIHRoaXMueDA7XG4gIHAueSA9IHRoaXMuazAgKiAodGhpcy5yaCAtIHJoMSAqIE1hdGguY29zKHRoZXRhKSkgKyB0aGlzLnkwO1xuXG4gIHJldHVybiBwO1xufVxuXG4vLyBMYW1iZXJ0IENvbmZvcm1hbCBDb25pYyBpbnZlcnNlIGVxdWF0aW9ucy0tbWFwcGluZyB4LHkgdG8gbGF0L2xvbmdcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG5cbiAgdmFyIHJoMSwgY29uLCB0cztcbiAgdmFyIGxhdCwgbG9uO1xuICB2YXIgeCA9IChwLnggLSB0aGlzLngwKSAvIHRoaXMuazA7XG4gIHZhciB5ID0gKHRoaXMucmggLSAocC55IC0gdGhpcy55MCkgLyB0aGlzLmswKTtcbiAgaWYgKHRoaXMubnMgPiAwKSB7XG4gICAgcmgxID0gTWF0aC5zcXJ0KHggKiB4ICsgeSAqIHkpO1xuICAgIGNvbiA9IDE7XG4gIH1cbiAgZWxzZSB7XG4gICAgcmgxID0gLU1hdGguc3FydCh4ICogeCArIHkgKiB5KTtcbiAgICBjb24gPSAtMTtcbiAgfVxuICB2YXIgdGhldGEgPSAwO1xuICBpZiAocmgxICE9PSAwKSB7XG4gICAgdGhldGEgPSBNYXRoLmF0YW4yKChjb24gKiB4KSwgKGNvbiAqIHkpKTtcbiAgfVxuICBpZiAoKHJoMSAhPT0gMCkgfHwgKHRoaXMubnMgPiAwKSkge1xuICAgIGNvbiA9IDEgLyB0aGlzLm5zO1xuICAgIHRzID0gTWF0aC5wb3coKHJoMSAvICh0aGlzLmEgKiB0aGlzLmYwKSksIGNvbik7XG4gICAgbGF0ID0gcGhpMnoodGhpcy5lLCB0cyk7XG4gICAgaWYgKGxhdCA9PT0gLTk5OTkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuICBlbHNlIHtcbiAgICBsYXQgPSAtSEFMRl9QSTtcbiAgfVxuICBsb24gPSBhZGp1c3RfbG9uKHRoZXRhIC8gdGhpcy5ucyArIHRoaXMubG9uZzApO1xuXG4gIHAueCA9IGxvbjtcbiAgcC55ID0gbGF0O1xuICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcbiAgXCJMYW1iZXJ0IFRhbmdlbnRpYWwgQ29uZm9ybWFsIENvbmljIFByb2plY3Rpb25cIixcbiAgXCJMYW1iZXJ0X0NvbmZvcm1hbF9Db25pY1wiLFxuICBcIkxhbWJlcnRfQ29uZm9ybWFsX0NvbmljXzFTUFwiLFxuICBcIkxhbWJlcnRfQ29uZm9ybWFsX0NvbmljXzJTUFwiLFxuICBcImxjY1wiLFxuICBcIkxhbWJlcnQgQ29uaWMgQ29uZm9ybWFsICgxU1ApXCIsXG4gIFwiTGFtYmVydCBDb25pYyBDb25mb3JtYWwgKDJTUClcIlxuXTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/lcc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/longlat.js":
/*!*******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/longlat.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ identity),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ identity),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\nfunction init() {//no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\n\n\n\nvar names = [\"longlat\", \"identity\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL2xvbmdsYXQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvbG9uZ2xhdC5qcz82NzQxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICAvL25vLW9wIGZvciBsb25nbGF0XG59XG5cbmZ1bmN0aW9uIGlkZW50aXR5KHB0KSB7XG4gIHJldHVybiBwdDtcbn1cbmV4cG9ydCB7aWRlbnRpdHkgYXMgZm9yd2FyZH07XG5leHBvcnQge2lkZW50aXR5IGFzIGludmVyc2V9O1xuZXhwb3J0IHZhciBuYW1lcyA9IFtcImxvbmdsYXRcIiwgXCJpZGVudGl0eVwiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogaWRlbnRpdHksXG4gIGludmVyc2U6IGlkZW50aXR5LFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/longlat.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/merc.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/merc.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/tsfnz */ \"./node_modules/proj4/lib/common/tsfnz.js\");\n/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/phi2z */ \"./node_modules/proj4/lib/common/phi2z.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\n\nfunction init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n\n  this.e = Math.sqrt(this.es);\n\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y; // convert to radians\n\n  if (lat * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D > 90 && lat * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D < -90 && lon * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D > 180 && lon * _constants_values__WEBPACK_IMPORTED_MODULE_4__.R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n\n  if (Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_4__.FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\n\nfunction inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.e, ts);\n\n    if (lat === -9999) {\n      return null;\n    }\n  }\n\n  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.long0 + x / (this.a * this.k0));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL21lcmMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvbWVyYy5qcz83NjkwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtc2ZueiBmcm9tICcuLi9jb21tb24vbXNmbnonO1xuXG5pbXBvcnQgYWRqdXN0X2xvbiBmcm9tICcuLi9jb21tb24vYWRqdXN0X2xvbic7XG5pbXBvcnQgdHNmbnogZnJvbSAnLi4vY29tbW9uL3RzZm56JztcbmltcG9ydCBwaGkyeiBmcm9tICcuLi9jb21tb24vcGhpMnonO1xuaW1wb3J0IHtGT1JUUEksIFIyRCwgRVBTTE4sIEhBTEZfUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gIHZhciBjb24gPSB0aGlzLmIgLyB0aGlzLmE7XG4gIHRoaXMuZXMgPSAxIC0gY29uICogY29uO1xuICBpZighKCd4MCcgaW4gdGhpcykpe1xuICAgIHRoaXMueDAgPSAwO1xuICB9XG4gIGlmKCEoJ3kwJyBpbiB0aGlzKSl7XG4gICAgdGhpcy55MCA9IDA7XG4gIH1cbiAgdGhpcy5lID0gTWF0aC5zcXJ0KHRoaXMuZXMpO1xuICBpZiAodGhpcy5sYXRfdHMpIHtcbiAgICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICAgIHRoaXMuazAgPSBNYXRoLmNvcyh0aGlzLmxhdF90cyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5rMCA9IG1zZm56KHRoaXMuZSwgTWF0aC5zaW4odGhpcy5sYXRfdHMpLCBNYXRoLmNvcyh0aGlzLmxhdF90cykpO1xuICAgIH1cbiAgfVxuICBlbHNlIHtcbiAgICBpZiAoIXRoaXMuazApIHtcbiAgICAgIGlmICh0aGlzLmspIHtcbiAgICAgICAgdGhpcy5rMCA9IHRoaXMuaztcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLmswID0gMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyogTWVyY2F0b3IgZm9yd2FyZCBlcXVhdGlvbnMtLW1hcHBpbmcgbGF0LGxvbmcgdG8geCx5XG4gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuICAvLyBjb252ZXJ0IHRvIHJhZGlhbnNcbiAgaWYgKGxhdCAqIFIyRCA+IDkwICYmIGxhdCAqIFIyRCA8IC05MCAmJiBsb24gKiBSMkQgPiAxODAgJiYgbG9uICogUjJEIDwgLTE4MCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIHgsIHk7XG4gIGlmIChNYXRoLmFicyhNYXRoLmFicyhsYXQpIC0gSEFMRl9QSSkgPD0gRVBTTE4pIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBlbHNlIHtcbiAgICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICAgIHggPSB0aGlzLngwICsgdGhpcy5hICogdGhpcy5rMCAqIGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gICAgICB5ID0gdGhpcy55MCArIHRoaXMuYSAqIHRoaXMuazAgKiBNYXRoLmxvZyhNYXRoLnRhbihGT1JUUEkgKyAwLjUgKiBsYXQpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB2YXIgc2lucGhpID0gTWF0aC5zaW4obGF0KTtcbiAgICAgIHZhciB0cyA9IHRzZm56KHRoaXMuZSwgbGF0LCBzaW5waGkpO1xuICAgICAgeCA9IHRoaXMueDAgKyB0aGlzLmEgKiB0aGlzLmswICogYWRqdXN0X2xvbihsb24gLSB0aGlzLmxvbmcwKTtcbiAgICAgIHkgPSB0aGlzLnkwIC0gdGhpcy5hICogdGhpcy5rMCAqIE1hdGgubG9nKHRzKTtcbiAgICB9XG4gICAgcC54ID0geDtcbiAgICBwLnkgPSB5O1xuICAgIHJldHVybiBwO1xuICB9XG59XG5cbi8qIE1lcmNhdG9yIGludmVyc2UgZXF1YXRpb25zLS1tYXBwaW5nIHgseSB0byBsYXQvbG9uZ1xuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG5cbiAgdmFyIHggPSBwLnggLSB0aGlzLngwO1xuICB2YXIgeSA9IHAueSAtIHRoaXMueTA7XG4gIHZhciBsb24sIGxhdDtcblxuICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICBsYXQgPSBIQUxGX1BJIC0gMiAqIE1hdGguYXRhbihNYXRoLmV4cCgteSAvICh0aGlzLmEgKiB0aGlzLmswKSkpO1xuICB9XG4gIGVsc2Uge1xuICAgIHZhciB0cyA9IE1hdGguZXhwKC15IC8gKHRoaXMuYSAqIHRoaXMuazApKTtcbiAgICBsYXQgPSBwaGkyeih0aGlzLmUsIHRzKTtcbiAgICBpZiAobGF0ID09PSAtOTk5OSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG4gIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCArIHggLyAodGhpcy5hICogdGhpcy5rMCkpO1xuXG4gIHAueCA9IGxvbjtcbiAgcC55ID0gbGF0O1xuICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIk1lcmNhdG9yXCIsIFwiUG9wdWxhciBWaXN1YWxpc2F0aW9uIFBzZXVkbyBNZXJjYXRvclwiLCBcIk1lcmNhdG9yXzFTUFwiLCBcIk1lcmNhdG9yX0F1eGlsaWFyeV9TcGhlcmVcIiwgXCJtZXJjXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/merc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/mill.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/mill.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\n\nfunction init() {//no-op\n}\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan(Math.PI / 4 + lat / 2.5)) * 1.25;\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Miller_Cylindrical\", \"mill\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL21pbGwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7O0FBQ0E7QUFFQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvbWlsbC5qcz85YWE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcblxuLypcbiAgcmVmZXJlbmNlXG4gICAgXCJOZXcgRXF1YWwtQXJlYSBNYXAgUHJvamVjdGlvbnMgZm9yIE5vbmNpcmN1bGFyIFJlZ2lvbnNcIiwgSm9obiBQLiBTbnlkZXIsXG4gICAgVGhlIEFtZXJpY2FuIENhcnRvZ3JhcGhlciwgVm9sIDE1LCBOby4gNCwgT2N0b2JlciAxOTg4LCBwcC4gMzQxLTM1NS5cbiAgKi9cblxuXG4vKiBJbml0aWFsaXplIHRoZSBNaWxsZXIgQ3lsaW5kcmljYWwgcHJvamVjdGlvblxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICAvL25vLW9wXG59XG5cbi8qIE1pbGxlciBDeWxpbmRyaWNhbCBmb3J3YXJkIGVxdWF0aW9ucy0tbWFwcGluZyBsYXQsbG9uZyB0byB4LHlcbiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuICAvKiBGb3J3YXJkIGVxdWF0aW9uc1xuICAgICAgLS0tLS0tLS0tLS0tLS0tLS0qL1xuICB2YXIgZGxvbiA9IGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIHZhciB4ID0gdGhpcy54MCArIHRoaXMuYSAqIGRsb247XG4gIHZhciB5ID0gdGhpcy55MCArIHRoaXMuYSAqIE1hdGgubG9nKE1hdGgudGFuKChNYXRoLlBJIC8gNCkgKyAobGF0IC8gMi41KSkpICogMS4yNTtcblxuICBwLnggPSB4O1xuICBwLnkgPSB5O1xuICByZXR1cm4gcDtcbn1cblxuLyogTWlsbGVyIEN5bGluZHJpY2FsIGludmVyc2UgZXF1YXRpb25zLS1tYXBwaW5nIHgseSB0byBsYXQvbG9uZ1xuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHAueCAtPSB0aGlzLngwO1xuICBwLnkgLT0gdGhpcy55MDtcblxuICB2YXIgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgcC54IC8gdGhpcy5hKTtcbiAgdmFyIGxhdCA9IDIuNSAqIChNYXRoLmF0YW4oTWF0aC5leHAoMC44ICogcC55IC8gdGhpcy5hKSkgLSBNYXRoLlBJIC8gNCk7XG5cbiAgcC54ID0gbG9uO1xuICBwLnkgPSBsYXQ7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiTWlsbGVyX0N5bGluZHJpY2FsXCIsIFwibWlsbFwiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/mill.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/moll.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/moll.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\nfunction init() {}\n\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\n\nfunction forward(p) {\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n\n    if (Math.abs(delta_theta) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n      break;\n    }\n  }\n\n  theta /= 2;\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n\n  if (Math.PI / 2 - Math.abs(lat) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n    delta_lon = 0;\n  }\n\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var theta;\n  var arg;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n\n  theta = Math.asin(arg);\n  var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + p.x / (0.900316316158 * this.a * Math.cos(theta)));\n\n  if (lon < -Math.PI) {\n    lon = -Math.PI;\n  }\n\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n\n  var lat = Math.asin(arg);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Mollweide\", \"moll\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL21vbGwuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvbW9sbC5qcz8yNTA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge31cbmltcG9ydCB7RVBTTE59IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuLyogTW9sbHdlaWRlIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuXG4gIC8qIEZvcndhcmQgZXF1YXRpb25zXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG5cbiAgdmFyIGRlbHRhX2xvbiA9IGFkanVzdF9sb24obG9uIC0gdGhpcy5sb25nMCk7XG4gIHZhciB0aGV0YSA9IGxhdDtcbiAgdmFyIGNvbiA9IE1hdGguUEkgKiBNYXRoLnNpbihsYXQpO1xuXG4gIC8qIEl0ZXJhdGUgdXNpbmcgdGhlIE5ld3Rvbi1SYXBoc29uIG1ldGhvZCB0byBmaW5kIHRoZXRhXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIHdoaWxlICh0cnVlKSB7XG4gICAgdmFyIGRlbHRhX3RoZXRhID0gLSh0aGV0YSArIE1hdGguc2luKHRoZXRhKSAtIGNvbikgLyAoMSArIE1hdGguY29zKHRoZXRhKSk7XG4gICAgdGhldGEgKz0gZGVsdGFfdGhldGE7XG4gICAgaWYgKE1hdGguYWJzKGRlbHRhX3RoZXRhKSA8IEVQU0xOKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgdGhldGEgLz0gMjtcblxuICAvKiBJZiB0aGUgbGF0aXR1ZGUgaXMgOTAgZGVnLCBmb3JjZSB0aGUgeCBjb29yZGluYXRlIHRvIGJlIFwiMCArIGZhbHNlIGVhc3RpbmdcIlxuICAgICAgIHRoaXMgaXMgZG9uZSBoZXJlIGJlY2F1c2Ugb2YgcHJlY2lzaW9uIHByb2JsZW1zIHdpdGggXCJjb3ModGhldGEpXCJcbiAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4gIGlmIChNYXRoLlBJIC8gMiAtIE1hdGguYWJzKGxhdCkgPCBFUFNMTikge1xuICAgIGRlbHRhX2xvbiA9IDA7XG4gIH1cbiAgdmFyIHggPSAwLjkwMDMxNjMxNjE1OCAqIHRoaXMuYSAqIGRlbHRhX2xvbiAqIE1hdGguY29zKHRoZXRhKSArIHRoaXMueDA7XG4gIHZhciB5ID0gMS40MTQyMTM1NjIzNzMxICogdGhpcy5hICogTWF0aC5zaW4odGhldGEpICsgdGhpcy55MDtcblxuICBwLnggPSB4O1xuICBwLnkgPSB5O1xuICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludmVyc2UocCkge1xuICB2YXIgdGhldGE7XG4gIHZhciBhcmc7XG5cbiAgLyogSW52ZXJzZSBlcXVhdGlvbnNcbiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgcC54IC09IHRoaXMueDA7XG4gIHAueSAtPSB0aGlzLnkwO1xuICBhcmcgPSBwLnkgLyAoMS40MTQyMTM1NjIzNzMxICogdGhpcy5hKTtcblxuICAvKiBCZWNhdXNlIG9mIGRpdmlzaW9uIGJ5IHplcm8gcHJvYmxlbXMsICdhcmcnIGNhbiBub3QgYmUgMS4gIFRoZXJlZm9yZVxuICAgICAgIGEgbnVtYmVyIHZlcnkgY2xvc2UgdG8gb25lIGlzIHVzZWQgaW5zdGVhZC5cbiAgICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgaWYgKE1hdGguYWJzKGFyZykgPiAwLjk5OTk5OTk5OTk5OSkge1xuICAgIGFyZyA9IDAuOTk5OTk5OTk5OTk5O1xuICB9XG4gIHRoZXRhID0gTWF0aC5hc2luKGFyZyk7XG4gIHZhciBsb24gPSBhZGp1c3RfbG9uKHRoaXMubG9uZzAgKyAocC54IC8gKDAuOTAwMzE2MzE2MTU4ICogdGhpcy5hICogTWF0aC5jb3ModGhldGEpKSkpO1xuICBpZiAobG9uIDwgKC1NYXRoLlBJKSkge1xuICAgIGxvbiA9IC1NYXRoLlBJO1xuICB9XG4gIGlmIChsb24gPiBNYXRoLlBJKSB7XG4gICAgbG9uID0gTWF0aC5QSTtcbiAgfVxuICBhcmcgPSAoMiAqIHRoZXRhICsgTWF0aC5zaW4oMiAqIHRoZXRhKSkgLyBNYXRoLlBJO1xuICBpZiAoTWF0aC5hYnMoYXJnKSA+IDEpIHtcbiAgICBhcmcgPSAxO1xuICB9XG4gIHZhciBsYXQgPSBNYXRoLmFzaW4oYXJnKTtcblxuICBwLnggPSBsb247XG4gIHAueSA9IGxhdDtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJNb2xsd2VpZGVcIiwgXCJtb2xsXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/moll.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/nzmg.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/nzmg.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"iterations\": () => (/* binding */ iterations),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\n\nvar iterations = 1;\nfunction init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nfunction forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0; // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n\n  var d_phi = delta_lat / _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  } // 2. Calculate theta\n\n\n  var th_re = d_psi;\n  var th_im = d_lambda; // 3. Calculate z\n\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n\n  var th_n_re1;\n  var th_n_im1;\n  var z_re = 0;\n  var z_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  } // 4. Calculate easting and northing\n\n\n  p.x = z_im * this.a + this.x0;\n  p.y = z_re * this.a + this.y0;\n  return p;\n}\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\n\nfunction inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0; // 1. Calculate z\n\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a; // 2a. Calculate theta - first approximation gives km accuracy\n\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n\n  var z_n_re1;\n  var z_n_im1;\n  var th_re = 0;\n  var th_im = 0;\n\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  } // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n\n\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n    var num_re = z_re;\n    var num_im = z_im;\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    } // Complex division\n\n\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  } // 3. Calculate d_phi              ...                                    // and d_lambda\n\n\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  } // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n\n\n  var lat = this.lat0 + d_phi * _constants_values__WEBPACK_IMPORTED_MODULE_0__.SEC_TO_RAD * 1E5;\n  var lon = this.long0 + d_lambda;\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/nzmg.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/omerc.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/omerc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/tsfnz */ \"./node_modules/proj4/lib/common/tsfnz.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/phi2z */ \"./node_modules/proj4/lib/common/phi2z.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\n\n\nfunction init() {\n  var con,\n      com,\n      cosph0,\n      D,\n      F,\n      H,\n      L,\n      sinph0,\n      p,\n      J,\n      gamma = 0,\n      gamma0,\n      lamc = 0,\n      lam1 = 0,\n      lam2 = 0,\n      phi1 = 0,\n      phi2 = 0,\n      alpha_c = 0,\n      AB; // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  var alp = false;\n\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle * _constants_values__WEBPACK_IMPORTED_MODULE_3__.D2R;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL || Math.abs(con - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL || Math.abs(Math.abs(phi2) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.pi) {\n      lam2 -= _constants_values__WEBPACK_IMPORTED_MODULE_3__.TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += _constants_values__WEBPACK_IMPORTED_MODULE_3__.TWO_PI;\n    }\n\n    this.lam0 = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_3__.FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(_constants_values__WEBPACK_IMPORTED_MODULE_3__.FORTPI + F));\n}\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\n\nfunction forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI) > _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {\n    W = this.E / Math.pow((0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.e, p.y, Math.sin(p.y)), this.B);\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2(S * this.cosgam + V * this.singam, temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = this.a * coords.x + this.x0;\n  coords.y = this.a * coords.y + this.y0;\n  return coords;\n}\nfunction inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < _constants_values__WEBPACK_IMPORTED_MODULE_3__.EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -_constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI : _constants_values__WEBPACK_IMPORTED_MODULE_3__.HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2(Sp * this.cosgam - Vp * this.singam, Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n  return coords;\n}\nvar names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL29tZXJjLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7OztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQTs7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvb21lcmMuanM/ZjNiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHNmbnogZnJvbSAnLi4vY29tbW9uL3RzZm56JztcbmltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcbmltcG9ydCBwaGkyeiBmcm9tICcuLi9jb21tb24vcGhpMnonO1xuaW1wb3J0IHsgRDJSLCBFUFNMTiwgSEFMRl9QSSwgVFdPX1BJLCBGT1JUUEkgfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcblxudmFyIFRPTCA9IDFlLTc7XG5cbmZ1bmN0aW9uIGlzVHlwZUEoUCkge1xuICB2YXIgdHlwZUFQcm9qZWN0aW9ucyA9IFsnSG90aW5lX09ibGlxdWVfTWVyY2F0b3InLCdIb3RpbmVfT2JsaXF1ZV9NZXJjYXRvcl9BemltdXRoX05hdHVyYWxfT3JpZ2luJ107XG4gIHZhciBwcm9qZWN0aW9uTmFtZSA9IHR5cGVvZiBQLlBST0pFQ1RJT04gPT09IFwib2JqZWN0XCIgPyBPYmplY3Qua2V5cyhQLlBST0pFQ1RJT04pWzBdIDogUC5QUk9KRUNUSU9OO1xuICBcbiAgcmV0dXJuICdub191b2ZmJyBpbiBQIHx8ICdub19vZmYnIGluIFAgfHwgdHlwZUFQcm9qZWN0aW9ucy5pbmRleE9mKHByb2plY3Rpb25OYW1lKSAhPT0gLTE7XG59XG5cblxuLyogSW5pdGlhbGl6ZSB0aGUgT2JsaXF1ZSBNZXJjYXRvciAgcHJvamVjdGlvblxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHsgIFxuICB2YXIgY29uLCBjb20sIGNvc3BoMCwgRCwgRiwgSCwgTCwgc2lucGgwLCBwLCBKLCBnYW1tYSA9IDAsXG4gICAgZ2FtbWEwLCBsYW1jID0gMCwgbGFtMSA9IDAsIGxhbTIgPSAwLCBwaGkxID0gMCwgcGhpMiA9IDAsIGFscGhhX2MgPSAwLCBBQjtcbiAgXG4gIC8vIG9ubHkgVHlwZSBBIHVzZXMgdGhlIG5vX29mZiBvciBub191b2ZmIHByb3BlcnR5XG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9PU0dlby9wcm9qLjQvaXNzdWVzLzEwNFxuICB0aGlzLm5vX29mZiA9IGlzVHlwZUEodGhpcyk7XG4gIHRoaXMubm9fcm90ID0gJ25vX3JvdCcgaW4gdGhpcztcbiAgXG4gIHZhciBhbHAgPSBmYWxzZTtcbiAgaWYgKFwiYWxwaGFcIiBpbiB0aGlzKSB7XG4gICAgYWxwID0gdHJ1ZTtcbiAgfVxuXG4gIHZhciBnYW0gPSBmYWxzZTtcbiAgaWYgKFwicmVjdGlmaWVkX2dyaWRfYW5nbGVcIiBpbiB0aGlzKSB7XG4gICAgZ2FtID0gdHJ1ZTtcbiAgfVxuXG4gIGlmIChhbHApIHtcbiAgICBhbHBoYV9jID0gdGhpcy5hbHBoYTtcbiAgfVxuICBcbiAgaWYgKGdhbSkge1xuICAgIGdhbW1hID0gKHRoaXMucmVjdGlmaWVkX2dyaWRfYW5nbGUgKiBEMlIpO1xuICB9XG4gIFxuICBpZiAoYWxwIHx8IGdhbSkge1xuICAgIGxhbWMgPSB0aGlzLmxvbmdjO1xuICB9IGVsc2Uge1xuICAgIGxhbTEgPSB0aGlzLmxvbmcxO1xuICAgIHBoaTEgPSB0aGlzLmxhdDE7XG4gICAgbGFtMiA9IHRoaXMubG9uZzI7XG4gICAgcGhpMiA9IHRoaXMubGF0MjtcbiAgICBcbiAgICBpZiAoTWF0aC5hYnMocGhpMSAtIHBoaTIpIDw9IFRPTCB8fCAoY29uID0gTWF0aC5hYnMocGhpMSkpIDw9IFRPTCB8fFxuICAgICAgICBNYXRoLmFicyhjb24gLSBIQUxGX1BJKSA8PSBUT0wgfHwgTWF0aC5hYnMoTWF0aC5hYnModGhpcy5sYXQwKSAtIEhBTEZfUEkpIDw9IFRPTCB8fFxuICAgICAgICBNYXRoLmFicyhNYXRoLmFicyhwaGkyKSAtIEhBTEZfUEkpIDw9IFRPTCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuICB9XG4gIFxuICB2YXIgb25lX2VzID0gMS4wIC0gdGhpcy5lcztcbiAgY29tID0gTWF0aC5zcXJ0KG9uZV9lcyk7XG4gIFxuICBpZiAoTWF0aC5hYnModGhpcy5sYXQwKSA+IEVQU0xOKSB7XG4gICAgc2lucGgwID0gTWF0aC5zaW4odGhpcy5sYXQwKTtcbiAgICBjb3NwaDAgPSBNYXRoLmNvcyh0aGlzLmxhdDApO1xuICAgIGNvbiA9IDEgLSB0aGlzLmVzICogc2lucGgwICogc2lucGgwO1xuICAgIHRoaXMuQiA9IGNvc3BoMCAqIGNvc3BoMDtcbiAgICB0aGlzLkIgPSBNYXRoLnNxcnQoMSArIHRoaXMuZXMgKiB0aGlzLkIgKiB0aGlzLkIgLyBvbmVfZXMpO1xuICAgIHRoaXMuQSA9IHRoaXMuQiAqIHRoaXMuazAgKiBjb20gLyBjb247XG4gICAgRCA9IHRoaXMuQiAqIGNvbSAvIChjb3NwaDAgKiBNYXRoLnNxcnQoY29uKSk7XG4gICAgRiA9IEQgKiBEIC0xO1xuICAgIFxuICAgIGlmIChGIDw9IDApIHtcbiAgICAgIEYgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBGID0gTWF0aC5zcXJ0KEYpO1xuICAgICAgaWYgKHRoaXMubGF0MCA8IDApIHtcbiAgICAgICAgRiA9IC1GO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICB0aGlzLkUgPSBGICs9IEQ7XG4gICAgdGhpcy5FICo9IE1hdGgucG93KHRzZm56KHRoaXMuZSwgdGhpcy5sYXQwLCBzaW5waDApLCB0aGlzLkIpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMuQiA9IDEgLyBjb207XG4gICAgdGhpcy5BID0gdGhpcy5rMDtcbiAgICB0aGlzLkUgPSBEID0gRiA9IDE7XG4gIH1cbiAgXG4gIGlmIChhbHAgfHwgZ2FtKSB7XG4gICAgaWYgKGFscCkge1xuICAgICAgZ2FtbWEwID0gTWF0aC5hc2luKE1hdGguc2luKGFscGhhX2MpIC8gRCk7XG4gICAgICBpZiAoIWdhbSkge1xuICAgICAgICBnYW1tYSA9IGFscGhhX2M7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGdhbW1hMCA9IGdhbW1hO1xuICAgICAgYWxwaGFfYyA9IE1hdGguYXNpbihEICogTWF0aC5zaW4oZ2FtbWEwKSk7XG4gICAgfVxuICAgIHRoaXMubGFtMCA9IGxhbWMgLSBNYXRoLmFzaW4oMC41ICogKEYgLSAxIC8gRikgKiBNYXRoLnRhbihnYW1tYTApKSAvIHRoaXMuQjtcbiAgfSBlbHNlIHtcbiAgICBIID0gTWF0aC5wb3codHNmbnoodGhpcy5lLCBwaGkxLCBNYXRoLnNpbihwaGkxKSksIHRoaXMuQik7XG4gICAgTCA9IE1hdGgucG93KHRzZm56KHRoaXMuZSwgcGhpMiwgTWF0aC5zaW4ocGhpMikpLCB0aGlzLkIpO1xuICAgIEYgPSB0aGlzLkUgLyBIO1xuICAgIHAgPSAoTCAtIEgpIC8gKEwgKyBIKTtcbiAgICBKID0gdGhpcy5FICogdGhpcy5FO1xuICAgIEogPSAoSiAtIEwgKiBIKSAvIChKICsgTCAqIEgpO1xuICAgIGNvbiA9IGxhbTEgLSBsYW0yO1xuICAgIFxuICAgIGlmIChjb24gPCAtTWF0aC5waSkge1xuICAgICAgbGFtMiAtPVRXT19QSTtcbiAgICB9IGVsc2UgaWYgKGNvbiA+IE1hdGgucGkpIHtcbiAgICAgIGxhbTIgKz0gVFdPX1BJO1xuICAgIH1cbiAgICBcbiAgICB0aGlzLmxhbTAgPSBhZGp1c3RfbG9uKDAuNSAqIChsYW0xICsgbGFtMikgLSBNYXRoLmF0YW4oSiAqIE1hdGgudGFuKDAuNSAqIHRoaXMuQiAqIChsYW0xIC0gbGFtMikpIC8gcCkgLyB0aGlzLkIpO1xuICAgIGdhbW1hMCA9IE1hdGguYXRhbigyICogTWF0aC5zaW4odGhpcy5CICogYWRqdXN0X2xvbihsYW0xIC0gdGhpcy5sYW0wKSkgLyAoRiAtIDEgLyBGKSk7XG4gICAgZ2FtbWEgPSBhbHBoYV9jID0gTWF0aC5hc2luKEQgKiBNYXRoLnNpbihnYW1tYTApKTtcbiAgfVxuICBcbiAgdGhpcy5zaW5nYW0gPSBNYXRoLnNpbihnYW1tYTApO1xuICB0aGlzLmNvc2dhbSA9IE1hdGguY29zKGdhbW1hMCk7XG4gIHRoaXMuc2lucm90ID0gTWF0aC5zaW4oZ2FtbWEpO1xuICB0aGlzLmNvc3JvdCA9IE1hdGguY29zKGdhbW1hKTtcbiAgXG4gIHRoaXMuckIgPSAxIC8gdGhpcy5CO1xuICB0aGlzLkFyQiA9IHRoaXMuQSAqIHRoaXMuckI7XG4gIHRoaXMuQnJBID0gMSAvIHRoaXMuQXJCO1xuICBBQiA9IHRoaXMuQSAqIHRoaXMuQjtcbiAgXG4gIGlmICh0aGlzLm5vX29mZikge1xuICAgIHRoaXMudV8wID0gMDtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnVfMCA9IE1hdGguYWJzKHRoaXMuQXJCICogTWF0aC5hdGFuKE1hdGguc3FydChEICogRCAtIDEpIC8gTWF0aC5jb3MoYWxwaGFfYykpKTtcbiAgICBcbiAgICBpZiAodGhpcy5sYXQwIDwgMCkge1xuICAgICAgdGhpcy51XzAgPSAtIHRoaXMudV8wO1xuICAgIH0gIFxuICB9XG4gICAgXG4gIEYgPSAwLjUgKiBnYW1tYTA7XG4gIHRoaXMudl9wb2xlX24gPSB0aGlzLkFyQiAqIE1hdGgubG9nKE1hdGgudGFuKEZPUlRQSSAtIEYpKTtcbiAgdGhpcy52X3BvbGVfcyA9IHRoaXMuQXJCICogTWF0aC5sb2coTWF0aC50YW4oRk9SVFBJICsgRikpO1xufVxuXG5cbi8qIE9ibGlxdWUgTWVyY2F0b3IgZm9yd2FyZCBlcXVhdGlvbnMtLW1hcHBpbmcgbGF0LGxvbmcgdG8geCx5XG4gICAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciBjb29yZHMgPSB7fTtcbiAgdmFyIFMsIFQsIFUsIFYsIFcsIHRlbXAsIHUsIHY7XG4gIHAueCA9IHAueCAtIHRoaXMubGFtMDtcbiAgXG4gIGlmIChNYXRoLmFicyhNYXRoLmFicyhwLnkpIC0gSEFMRl9QSSkgPiBFUFNMTikge1xuICAgIFcgPSB0aGlzLkUgLyBNYXRoLnBvdyh0c2Zueih0aGlzLmUsIHAueSwgTWF0aC5zaW4ocC55KSksIHRoaXMuQik7XG4gICAgXG4gICAgdGVtcCA9IDEgLyBXO1xuICAgIFMgPSAwLjUgKiAoVyAtIHRlbXApO1xuICAgIFQgPSAwLjUgKiAoVyArIHRlbXApO1xuICAgIFYgPSBNYXRoLnNpbih0aGlzLkIgKiBwLngpO1xuICAgIFUgPSAoUyAqIHRoaXMuc2luZ2FtIC0gViAqIHRoaXMuY29zZ2FtKSAvIFQ7XG4gICAgICAgIFxuICAgIGlmIChNYXRoLmFicyhNYXRoLmFicyhVKSAtIDEuMCkgPCBFUFNMTikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuICAgIFxuICAgIHYgPSAwLjUgKiB0aGlzLkFyQiAqIE1hdGgubG9nKCgxIC0gVSkvKDEgKyBVKSk7XG4gICAgdGVtcCA9IE1hdGguY29zKHRoaXMuQiAqIHAueCk7XG4gICAgXG4gICAgaWYgKE1hdGguYWJzKHRlbXApIDwgVE9MKSB7XG4gICAgICB1ID0gdGhpcy5BICogcC54O1xuICAgIH0gZWxzZSB7XG4gICAgICB1ID0gdGhpcy5BckIgKiBNYXRoLmF0YW4yKChTICogdGhpcy5jb3NnYW0gKyBWICogdGhpcy5zaW5nYW0pLCB0ZW1wKTtcbiAgICB9ICAgIFxuICB9IGVsc2Uge1xuICAgIHYgPSBwLnkgPiAwID8gdGhpcy52X3BvbGVfbiA6IHRoaXMudl9wb2xlX3M7XG4gICAgdSA9IHRoaXMuQXJCICogcC55O1xuICB9XG4gICAgIFxuICBpZiAodGhpcy5ub19yb3QpIHtcbiAgICBjb29yZHMueCA9IHU7XG4gICAgY29vcmRzLnkgPSB2O1xuICB9IGVsc2Uge1xuICAgIHUgLT0gdGhpcy51XzA7XG4gICAgY29vcmRzLnggPSB2ICogdGhpcy5jb3Nyb3QgKyB1ICogdGhpcy5zaW5yb3Q7XG4gICAgY29vcmRzLnkgPSB1ICogdGhpcy5jb3Nyb3QgLSB2ICogdGhpcy5zaW5yb3Q7XG4gIH1cbiAgXG4gIGNvb3Jkcy54ID0gKHRoaXMuYSAqIGNvb3Jkcy54ICsgdGhpcy54MCk7XG4gIGNvb3Jkcy55ID0gKHRoaXMuYSAqIGNvb3Jkcy55ICsgdGhpcy55MCk7XG4gIFxuICByZXR1cm4gY29vcmRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciB1LCB2LCBRcCwgU3AsIFRwLCBWcCwgVXA7XG4gIHZhciBjb29yZHMgPSB7fTtcbiAgXG4gIHAueCA9IChwLnggLSB0aGlzLngwKSAqICgxLjAgLyB0aGlzLmEpO1xuICBwLnkgPSAocC55IC0gdGhpcy55MCkgKiAoMS4wIC8gdGhpcy5hKTtcblxuICBpZiAodGhpcy5ub19yb3QpIHtcbiAgICB2ID0gcC55O1xuICAgIHUgPSBwLng7XG4gIH0gZWxzZSB7XG4gICAgdiA9IHAueCAqIHRoaXMuY29zcm90IC0gcC55ICogdGhpcy5zaW5yb3Q7XG4gICAgdSA9IHAueSAqIHRoaXMuY29zcm90ICsgcC54ICogdGhpcy5zaW5yb3QgKyB0aGlzLnVfMDtcbiAgfVxuICBcbiAgUXAgPSBNYXRoLmV4cCgtdGhpcy5CckEgKiB2KTtcbiAgU3AgPSAwLjUgKiAoUXAgLSAxIC8gUXApO1xuICBUcCA9IDAuNSAqIChRcCArIDEgLyBRcCk7XG4gIFZwID0gTWF0aC5zaW4odGhpcy5CckEgKiB1KTtcbiAgVXAgPSAoVnAgKiB0aGlzLmNvc2dhbSArIFNwICogdGhpcy5zaW5nYW0pIC8gVHA7XG4gIFxuICBpZiAoTWF0aC5hYnMoTWF0aC5hYnMoVXApIC0gMSkgPCBFUFNMTikge1xuICAgIGNvb3Jkcy54ID0gMDtcbiAgICBjb29yZHMueSA9IFVwIDwgMCA/IC1IQUxGX1BJIDogSEFMRl9QSTtcbiAgfSBlbHNlIHtcbiAgICBjb29yZHMueSA9IHRoaXMuRSAvIE1hdGguc3FydCgoMSArIFVwKSAvICgxIC0gVXApKTtcbiAgICBjb29yZHMueSA9IHBoaTJ6KHRoaXMuZSwgTWF0aC5wb3coY29vcmRzLnksIDEgLyB0aGlzLkIpKTtcbiAgICBcbiAgICBpZiAoY29vcmRzLnkgPT09IEluZmluaXR5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG4gICAgICAgIFxuICAgIGNvb3Jkcy54ID0gLXRoaXMuckIgKiBNYXRoLmF0YW4yKChTcCAqIHRoaXMuY29zZ2FtIC0gVnAgKiB0aGlzLnNpbmdhbSksIE1hdGguY29zKHRoaXMuQnJBICogdSkpO1xuICB9XG4gIFxuICBjb29yZHMueCArPSB0aGlzLmxhbTA7XG4gIFxuICByZXR1cm4gY29vcmRzO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiSG90aW5lX09ibGlxdWVfTWVyY2F0b3JcIiwgXCJIb3RpbmUgT2JsaXF1ZSBNZXJjYXRvclwiLCBcIkhvdGluZV9PYmxpcXVlX01lcmNhdG9yX0F6aW11dGhfTmF0dXJhbF9PcmlnaW5cIiwgXCJIb3RpbmVfT2JsaXF1ZV9NZXJjYXRvcl9Ud29fUG9pbnRfTmF0dXJhbF9PcmlnaW5cIiwgXCJIb3RpbmVfT2JsaXF1ZV9NZXJjYXRvcl9BemltdXRoX0NlbnRlclwiLCBcIk9ibGlxdWVfTWVyY2F0b3JcIiwgXCJvbWVyY1wiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/omerc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/ortho.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/ortho.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\n\nfunction init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nfunction forward(p) {\n  var sinphi, cosphi;\n  /* sin and cos value        */\n\n  var dlon;\n  /* delta longitude value      */\n\n  var coslon;\n  /* cos of longitude        */\n\n  var ksp;\n  /* scale factor          */\n\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n\n  dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n\n  if (g > 0 || Math.abs(g) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var rh;\n  /* height above ellipsoid      */\n\n  var z;\n  /* angle          */\n\n  var sinz, cosz;\n  /* sin of z and cos of z      */\n\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rh / this.a);\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n  lon = this.long0;\n\n  if (Math.abs(rh) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(cosz * this.sin_p14 + p.y * sinz * this.cos_p14 / rh);\n  con = Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_2__.HALF_PI;\n\n  if (Math.abs(con) <= _constants_values__WEBPACK_IMPORTED_MODULE_2__.EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 - Math.atan2(-p.x, p.y));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"ortho\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL29ydGhvLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQUE7O0FBQ0E7QUFBQTs7QUFDQTtBQUFBOztBQUNBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7O0FBQ0E7QUFBQTs7QUFDQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvb3J0aG8uanM/ZDNjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYWRqdXN0X2xvbiBmcm9tICcuLi9jb21tb24vYWRqdXN0X2xvbic7XG5pbXBvcnQgYXNpbnogZnJvbSAnLi4vY29tbW9uL2FzaW56JztcbmltcG9ydCB7RVBTTE4sIEhBTEZfUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgLy9kb3VibGUgdGVtcDsgICAgICAvKiB0ZW1wb3JhcnkgdmFyaWFibGUgICAgKi9cblxuICAvKiBQbGFjZSBwYXJhbWV0ZXJzIGluIHN0YXRpYyBzdG9yYWdlIGZvciBjb21tb24gdXNlXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgdGhpcy5zaW5fcDE0ID0gTWF0aC5zaW4odGhpcy5sYXQwKTtcbiAgdGhpcy5jb3NfcDE0ID0gTWF0aC5jb3ModGhpcy5sYXQwKTtcbn1cblxuLyogT3J0aG9ncmFwaGljIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciBzaW5waGksIGNvc3BoaTsgLyogc2luIGFuZCBjb3MgdmFsdWUgICAgICAgICovXG4gIHZhciBkbG9uOyAvKiBkZWx0YSBsb25naXR1ZGUgdmFsdWUgICAgICAqL1xuICB2YXIgY29zbG9uOyAvKiBjb3Mgb2YgbG9uZ2l0dWRlICAgICAgICAqL1xuICB2YXIga3NwOyAvKiBzY2FsZSBmYWN0b3IgICAgICAgICAgKi9cbiAgdmFyIGcsIHgsIHk7XG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG4gIC8qIEZvcndhcmQgZXF1YXRpb25zXG4gICAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIGRsb24gPSBhZGp1c3RfbG9uKGxvbiAtIHRoaXMubG9uZzApO1xuXG4gIHNpbnBoaSA9IE1hdGguc2luKGxhdCk7XG4gIGNvc3BoaSA9IE1hdGguY29zKGxhdCk7XG5cbiAgY29zbG9uID0gTWF0aC5jb3MoZGxvbik7XG4gIGcgPSB0aGlzLnNpbl9wMTQgKiBzaW5waGkgKyB0aGlzLmNvc19wMTQgKiBjb3NwaGkgKiBjb3Nsb247XG4gIGtzcCA9IDE7XG4gIGlmICgoZyA+IDApIHx8IChNYXRoLmFicyhnKSA8PSBFUFNMTikpIHtcbiAgICB4ID0gdGhpcy5hICoga3NwICogY29zcGhpICogTWF0aC5zaW4oZGxvbik7XG4gICAgeSA9IHRoaXMueTAgKyB0aGlzLmEgKiBrc3AgKiAodGhpcy5jb3NfcDE0ICogc2lucGhpIC0gdGhpcy5zaW5fcDE0ICogY29zcGhpICogY29zbG9uKTtcbiAgfVxuICBwLnggPSB4O1xuICBwLnkgPSB5O1xuICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludmVyc2UocCkge1xuICB2YXIgcmg7IC8qIGhlaWdodCBhYm92ZSBlbGxpcHNvaWQgICAgICAqL1xuICB2YXIgejsgLyogYW5nbGUgICAgICAgICAgKi9cbiAgdmFyIHNpbnosIGNvc3o7IC8qIHNpbiBvZiB6IGFuZCBjb3Mgb2YgeiAgICAgICovXG4gIHZhciBjb247XG4gIHZhciBsb24sIGxhdDtcbiAgLyogSW52ZXJzZSBlcXVhdGlvbnNcbiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgcC54IC09IHRoaXMueDA7XG4gIHAueSAtPSB0aGlzLnkwO1xuICByaCA9IE1hdGguc3FydChwLnggKiBwLnggKyBwLnkgKiBwLnkpO1xuICB6ID0gYXNpbnoocmggLyB0aGlzLmEpO1xuXG4gIHNpbnogPSBNYXRoLnNpbih6KTtcbiAgY29zeiA9IE1hdGguY29zKHopO1xuXG4gIGxvbiA9IHRoaXMubG9uZzA7XG4gIGlmIChNYXRoLmFicyhyaCkgPD0gRVBTTE4pIHtcbiAgICBsYXQgPSB0aGlzLmxhdDA7XG4gICAgcC54ID0gbG9uO1xuICAgIHAueSA9IGxhdDtcbiAgICByZXR1cm4gcDtcbiAgfVxuICBsYXQgPSBhc2lueihjb3N6ICogdGhpcy5zaW5fcDE0ICsgKHAueSAqIHNpbnogKiB0aGlzLmNvc19wMTQpIC8gcmgpO1xuICBjb24gPSBNYXRoLmFicyh0aGlzLmxhdDApIC0gSEFMRl9QSTtcbiAgaWYgKE1hdGguYWJzKGNvbikgPD0gRVBTTE4pIHtcbiAgICBpZiAodGhpcy5sYXQwID49IDApIHtcbiAgICAgIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCArIE1hdGguYXRhbjIocC54LCAtIHAueSkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCAtIE1hdGguYXRhbjIoLXAueCwgcC55KSk7XG4gICAgfVxuICAgIHAueCA9IGxvbjtcbiAgICBwLnkgPSBsYXQ7XG4gICAgcmV0dXJuIHA7XG4gIH1cbiAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgTWF0aC5hdGFuMigocC54ICogc2lueiksIHJoICogdGhpcy5jb3NfcDE0ICogY29zeiAtIHAueSAqIHRoaXMuc2luX3AxNCAqIHNpbnopKTtcbiAgcC54ID0gbG9uO1xuICBwLnkgPSBsYXQ7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wib3J0aG9cIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/ortho.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/poly.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/poly.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_e0fn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/e0fn */ \"./node_modules/proj4/lib/common/e0fn.js\");\n/* harmony import */ var _common_e1fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/e1fn */ \"./node_modules/proj4/lib/common/e1fn.js\");\n/* harmony import */ var _common_e2fn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/e2fn */ \"./node_modules/proj4/lib/common/e2fn.js\");\n/* harmony import */ var _common_e3fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/e3fn */ \"./node_modules/proj4/lib/common/e3fn.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/adjust_lat */ \"./node_modules/proj4/lib/common/adjust_lat.js\");\n/* harmony import */ var _common_mlfn__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/mlfn */ \"./node_modules/proj4/lib/common/mlfn.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_gN__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/gN */ \"./node_modules/proj4/lib/common/gN.js\");\n\n\n\n\n\n\n\n\n\nvar MAX_ITER = 20;\nfunction init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n\n  this.e = Math.sqrt(this.es);\n  this.e0 = (0,_common_e0fn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.es);\n  this.e1 = (0,_common_e1fn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.es);\n  this.e2 = (0,_common_e2fn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.es);\n  this.e3 = (0,_common_e3fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.es);\n  this.ml0 = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(lon - this.long0);\n  el = dlon * Math.sin(lat);\n\n  if (this.sphere) {\n    if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * ((0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = (0,_common_gN__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n/* Inverse equations\n  -----------------*/\n\nfunction inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n\n        if (Math.abs(dphi) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.long0 + Math.asin(x * Math.tan(phi) / this.a) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n      lat = 0;\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * (0,_common_mlfn__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n\n        if (Math.abs(dphi) <= _constants_values__WEBPACK_IMPORTED_MODULE_7__.EPSLN) {\n          lat = phi;\n          break;\n        }\n      } //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n\n\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Polyconic\", \"poly\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3BvbHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3BvbHkuanM/OGE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZTBmbiBmcm9tICcuLi9jb21tb24vZTBmbic7XG5pbXBvcnQgZTFmbiBmcm9tICcuLi9jb21tb24vZTFmbic7XG5pbXBvcnQgZTJmbiBmcm9tICcuLi9jb21tb24vZTJmbic7XG5pbXBvcnQgZTNmbiBmcm9tICcuLi9jb21tb24vZTNmbic7XG5pbXBvcnQgYWRqdXN0X2xvbiBmcm9tICcuLi9jb21tb24vYWRqdXN0X2xvbic7XG5pbXBvcnQgYWRqdXN0X2xhdCBmcm9tICcuLi9jb21tb24vYWRqdXN0X2xhdCc7XG5pbXBvcnQgbWxmbiBmcm9tICcuLi9jb21tb24vbWxmbic7XG5pbXBvcnQge0VQU0xOfSBmcm9tICcuLi9jb25zdGFudHMvdmFsdWVzJztcblxuaW1wb3J0IGdOIGZyb20gJy4uL2NvbW1vbi9nTic7XG52YXIgTUFYX0lURVIgPSAyMDtcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gIC8qIFBsYWNlIHBhcmFtZXRlcnMgaW4gc3RhdGljIHN0b3JhZ2UgZm9yIGNvbW1vbiB1c2VcbiAgICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuICB0aGlzLnRlbXAgPSB0aGlzLmIgLyB0aGlzLmE7XG4gIHRoaXMuZXMgPSAxIC0gTWF0aC5wb3codGhpcy50ZW1wLCAyKTsgLy8gZGV2YWl0IGV0cmUgZGFucyB0bWVyYy5qcyBtYWlzIG4geSBlc3QgcGFzIGRvbmMgamUgY29tbWVudGUgc2lub24gcmV0b3VyIGRlIHZhbGV1cnMgbnVsbGVzXG4gIHRoaXMuZSA9IE1hdGguc3FydCh0aGlzLmVzKTtcbiAgdGhpcy5lMCA9IGUwZm4odGhpcy5lcyk7XG4gIHRoaXMuZTEgPSBlMWZuKHRoaXMuZXMpO1xuICB0aGlzLmUyID0gZTJmbih0aGlzLmVzKTtcbiAgdGhpcy5lMyA9IGUzZm4odGhpcy5lcyk7XG4gIHRoaXMubWwwID0gdGhpcy5hICogbWxmbih0aGlzLmUwLCB0aGlzLmUxLCB0aGlzLmUyLCB0aGlzLmUzLCB0aGlzLmxhdDApOyAvL3NpIHF1ZSBkZXMgemVyb3MgbGUgY2FsY3VsIG5lIHNlIGZhaXQgcGFzXG59XG5cbi8qIFBvbHljb25pYyBmb3J3YXJkIGVxdWF0aW9ucy0tbWFwcGluZyBsYXQsbG9uZyB0byB4LHlcbiAgICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuICB2YXIgeCwgeSwgZWw7XG4gIHZhciBkbG9uID0gYWRqdXN0X2xvbihsb24gLSB0aGlzLmxvbmcwKTtcbiAgZWwgPSBkbG9uICogTWF0aC5zaW4obGF0KTtcbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgaWYgKE1hdGguYWJzKGxhdCkgPD0gRVBTTE4pIHtcbiAgICAgIHggPSB0aGlzLmEgKiBkbG9uO1xuICAgICAgeSA9IC0xICogdGhpcy5hICogdGhpcy5sYXQwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHggPSB0aGlzLmEgKiBNYXRoLnNpbihlbCkgLyBNYXRoLnRhbihsYXQpO1xuICAgICAgeSA9IHRoaXMuYSAqIChhZGp1c3RfbGF0KGxhdCAtIHRoaXMubGF0MCkgKyAoMSAtIE1hdGguY29zKGVsKSkgLyBNYXRoLnRhbihsYXQpKTtcbiAgICB9XG4gIH1cbiAgZWxzZSB7XG4gICAgaWYgKE1hdGguYWJzKGxhdCkgPD0gRVBTTE4pIHtcbiAgICAgIHggPSB0aGlzLmEgKiBkbG9uO1xuICAgICAgeSA9IC0xICogdGhpcy5tbDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdmFyIG5sID0gZ04odGhpcy5hLCB0aGlzLmUsIE1hdGguc2luKGxhdCkpIC8gTWF0aC50YW4obGF0KTtcbiAgICAgIHggPSBubCAqIE1hdGguc2luKGVsKTtcbiAgICAgIHkgPSB0aGlzLmEgKiBtbGZuKHRoaXMuZTAsIHRoaXMuZTEsIHRoaXMuZTIsIHRoaXMuZTMsIGxhdCkgLSB0aGlzLm1sMCArIG5sICogKDEgLSBNYXRoLmNvcyhlbCkpO1xuICAgIH1cblxuICB9XG4gIHAueCA9IHggKyB0aGlzLngwO1xuICBwLnkgPSB5ICsgdGhpcy55MDtcbiAgcmV0dXJuIHA7XG59XG5cbi8qIEludmVyc2UgZXF1YXRpb25zXG4gIC0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgdmFyIGxvbiwgbGF0LCB4LCB5LCBpO1xuICB2YXIgYWwsIGJsO1xuICB2YXIgcGhpLCBkcGhpO1xuICB4ID0gcC54IC0gdGhpcy54MDtcbiAgeSA9IHAueSAtIHRoaXMueTA7XG5cbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgaWYgKE1hdGguYWJzKHkgKyB0aGlzLmEgKiB0aGlzLmxhdDApIDw9IEVQU0xOKSB7XG4gICAgICBsb24gPSBhZGp1c3RfbG9uKHggLyB0aGlzLmEgKyB0aGlzLmxvbmcwKTtcbiAgICAgIGxhdCA9IDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgYWwgPSB0aGlzLmxhdDAgKyB5IC8gdGhpcy5hO1xuICAgICAgYmwgPSB4ICogeCAvIHRoaXMuYSAvIHRoaXMuYSArIGFsICogYWw7XG4gICAgICBwaGkgPSBhbDtcbiAgICAgIHZhciB0YW5waGk7XG4gICAgICBmb3IgKGkgPSBNQVhfSVRFUjsgaTsgLS1pKSB7XG4gICAgICAgIHRhbnBoaSA9IE1hdGgudGFuKHBoaSk7XG4gICAgICAgIGRwaGkgPSAtMSAqIChhbCAqIChwaGkgKiB0YW5waGkgKyAxKSAtIHBoaSAtIDAuNSAqIChwaGkgKiBwaGkgKyBibCkgKiB0YW5waGkpIC8gKChwaGkgLSBhbCkgLyB0YW5waGkgLSAxKTtcbiAgICAgICAgcGhpICs9IGRwaGk7XG4gICAgICAgIGlmIChNYXRoLmFicyhkcGhpKSA8PSBFUFNMTikge1xuICAgICAgICAgIGxhdCA9IHBoaTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgKE1hdGguYXNpbih4ICogTWF0aC50YW4ocGhpKSAvIHRoaXMuYSkpIC8gTWF0aC5zaW4obGF0KSk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIGlmIChNYXRoLmFicyh5ICsgdGhpcy5tbDApIDw9IEVQU0xOKSB7XG4gICAgICBsYXQgPSAwO1xuICAgICAgbG9uID0gYWRqdXN0X2xvbih0aGlzLmxvbmcwICsgeCAvIHRoaXMuYSk7XG4gICAgfVxuICAgIGVsc2Uge1xuXG4gICAgICBhbCA9ICh0aGlzLm1sMCArIHkpIC8gdGhpcy5hO1xuICAgICAgYmwgPSB4ICogeCAvIHRoaXMuYSAvIHRoaXMuYSArIGFsICogYWw7XG4gICAgICBwaGkgPSBhbDtcbiAgICAgIHZhciBjbCwgbWxuLCBtbG5wLCBtYTtcbiAgICAgIHZhciBjb247XG4gICAgICBmb3IgKGkgPSBNQVhfSVRFUjsgaTsgLS1pKSB7XG4gICAgICAgIGNvbiA9IHRoaXMuZSAqIE1hdGguc2luKHBoaSk7XG4gICAgICAgIGNsID0gTWF0aC5zcXJ0KDEgLSBjb24gKiBjb24pICogTWF0aC50YW4ocGhpKTtcbiAgICAgICAgbWxuID0gdGhpcy5hICogbWxmbih0aGlzLmUwLCB0aGlzLmUxLCB0aGlzLmUyLCB0aGlzLmUzLCBwaGkpO1xuICAgICAgICBtbG5wID0gdGhpcy5lMCAtIDIgKiB0aGlzLmUxICogTWF0aC5jb3MoMiAqIHBoaSkgKyA0ICogdGhpcy5lMiAqIE1hdGguY29zKDQgKiBwaGkpIC0gNiAqIHRoaXMuZTMgKiBNYXRoLmNvcyg2ICogcGhpKTtcbiAgICAgICAgbWEgPSBtbG4gLyB0aGlzLmE7XG4gICAgICAgIGRwaGkgPSAoYWwgKiAoY2wgKiBtYSArIDEpIC0gbWEgLSAwLjUgKiBjbCAqIChtYSAqIG1hICsgYmwpKSAvICh0aGlzLmVzICogTWF0aC5zaW4oMiAqIHBoaSkgKiAobWEgKiBtYSArIGJsIC0gMiAqIGFsICogbWEpIC8gKDQgKiBjbCkgKyAoYWwgLSBtYSkgKiAoY2wgKiBtbG5wIC0gMiAvIE1hdGguc2luKDIgKiBwaGkpKSAtIG1sbnApO1xuICAgICAgICBwaGkgLT0gZHBoaTtcbiAgICAgICAgaWYgKE1hdGguYWJzKGRwaGkpIDw9IEVQU0xOKSB7XG4gICAgICAgICAgbGF0ID0gcGhpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vbGF0PXBoaTR6KHRoaXMuZSx0aGlzLmUwLHRoaXMuZTEsdGhpcy5lMix0aGlzLmUzLGFsLGJsLDAsMCk7XG4gICAgICBjbCA9IE1hdGguc3FydCgxIC0gdGhpcy5lcyAqIE1hdGgucG93KE1hdGguc2luKGxhdCksIDIpKSAqIE1hdGgudGFuKGxhdCk7XG4gICAgICBsb24gPSBhZGp1c3RfbG9uKHRoaXMubG9uZzAgKyBNYXRoLmFzaW4oeCAqIGNsIC8gdGhpcy5hKSAvIE1hdGguc2luKGxhdCkpO1xuICAgIH1cbiAgfVxuXG4gIHAueCA9IGxvbjtcbiAgcC55ID0gbGF0O1xuICByZXR1cm4gcDtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIlBvbHljb25pY1wiLCBcInBvbHlcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/poly.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/qsc.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/qsc.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\n/* constants */\n\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\nfunction init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n  /* Determine the cube face from the center of projection. */\n\n  if (this.lat0 >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n\n\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n} // QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\n\nfunction forward(p) {\n  var xy = {\n    x: 0,\n    y: 0\n  };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n\n  var area = {\n    value: 0\n  }; // move lon according to projection's lon\n\n  p.x -= this.long0;\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n\n  if (this.es !== 0) {\n    //if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n\n\n  lon = p.x; //lon = lp.lam;\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - lat;\n\n    if (lon >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else if (lon > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI || lon <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = lon > 0.0 ? lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n    } else if (lon > -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) && lon <= -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + lat;\n\n    if (lon >= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else if (lon < _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon >= -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && lon >= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon > 0.0 ? -lon + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : -lon - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);\n    }\n\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n\n\n  mu = Math.atan(12 / _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI * (theta + Math.acos(Math.sin(theta) * Math.cos(_constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n  /* Apply the result to the real area. */\n\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n  }\n  /* Now compute x, y from mu and nu */\n\n\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n} // QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\n\nfunction inverse(p) {\n  var lp = {\n    lam: 0,\n    phi: 0\n  };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {\n    value: 0\n  };\n  /* de-offset */\n\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = mu < 0.0 ? mu + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : mu - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  }\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n\n\n  t = _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI / 12 * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - 1 / Math.sqrt(2));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n\n\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI - phi;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = theta < 0.0 ? theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta;\n      }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else\n      /* area.value == AREA_ENUM.AREA_3 */\n      {\n        lp.lam = theta < 0.0 ? -theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : -theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n      }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n\n    t += s * s;\n\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n\n\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n\n\n    lp.phi = Math.acos(-s) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    lp.lam = Math.atan2(r, q);\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI);\n    }\n  }\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n\n\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = lp.phi < 0 ? 1 : 0;\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\n\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n\n  if (phi < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n\n    if (Math.abs(theta) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI && theta <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    } else if (theta > _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI || theta <= -(_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + _constants_values__WEBPACK_IMPORTED_MODULE_0__.FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = theta >= 0.0 ? theta - _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI : theta + _constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    }\n  }\n\n  return theta;\n}\n/* Helper function: shift the longitude. */\n\n\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n\n  if (slon < -_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) {\n    slon += _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI;\n  } else if (slon > +_constants_values__WEBPACK_IMPORTED_MODULE_0__.SPI) {\n    slon -= _constants_values__WEBPACK_IMPORTED_MODULE_0__.TWO_PI;\n  }\n\n  return slon;\n}\n\nvar names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/qsc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/robin.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/robin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\n\nvar COEFS_X = [[1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06], [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06], [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07], [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06], [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06], [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08], [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06], [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06], [0.9216, -0.00467746, -0.00010457, 4.81243e-06], [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06], [0.8679, -0.00609363, -0.000113898, 3.32484e-06], [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07], [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07], [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06], [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06], [0.6732, -0.00986209, -0.000199569, 1.91974e-05], [0.6213, -0.010418, 8.83923e-05, 6.24051e-06], [0.5722, -0.00906601, 0.000182, 6.24051e-06], [0.5322, -0.00677797, 0.000275608, 6.24051e-06]];\nvar COEFS_Y = [[-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11], [0.0620, 0.0124, -1.26793e-09, 4.22642e-10], [0.1240, 0.0124, 5.07171e-09, -1.60604e-09], [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09], [0.2480, 0.0124002, 7.10039e-08, -2.24e-08], [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08], [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07], [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07], [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07], [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07], [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07], [0.6769, 0.011713, -3.20223e-05, -5.16405e-07], [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07], [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06], [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09], [0.8936, 0.00969686, -6.4636e-05, -8.547e-06], [0.9394, 0.00840947, -0.000192841, -4.2106e-06], [0.9761, 0.00616527, -0.000256, -4.2106e-06], [1.0000, 0.00328947, -0.000319159, -4.2106e-06]];\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D / 5; // rad to 5-degree interval\n\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n\n  return x;\n}\n\nfunction init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || \"Robinson\";\n}\nfunction forward(ll) {\n  var lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ll.x - this.long0);\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n\n  dphi = _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\nfunction inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) {\n    // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI : _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    } // linear interpolation in 5 degree interval\n\n\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]); // find t so that poly3_val(coefs, t) = ll.y\n\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN, 100);\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ll.x + this.long0);\n  return ll;\n}\nvar names = [\"Robinson\", \"robin\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3JvYmluLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFzQkE7QUFzQkE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBOztBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7O0FBS0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy9yb2Jpbi5qcz9jMGQ3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFJvYmluc29uIHByb2plY3Rpb25cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9PU0dlby9wcm9qLjQvYmxvYi9tYXN0ZXIvc3JjL1BKX3JvYmluLmNcbi8vIFBvbHlub21pYWwgY29lZmljaWVudHMgZnJvbSBodHRwOi8vYXJ0aWNsZS5nbWFuZS5vcmcvZ21hbmUuY29tcC5naXMucHJvai00LmRldmVsLzYwMzlcblxuaW1wb3J0IHtIQUxGX1BJLCBEMlIsIFIyRCwgRVBTTE59IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuXG52YXIgQ09FRlNfWCA9IFtcbiAgICBbMS4wMDAwLCAyLjIxOTllLTE3LCAtNy4xNTUxNWUtMDUsIDMuMTEwM2UtMDZdLFxuICAgIFswLjk5ODYsIC0wLjAwMDQ4MjI0MywgLTIuNDg5N2UtMDUsIC0xLjMzMDllLTA2XSxcbiAgICBbMC45OTU0LCAtMC4wMDA4MzEwMywgLTQuNDg2MDVlLTA1LCAtOS44NjcwMWUtMDddLFxuICAgIFswLjk5MDAsIC0wLjAwMTM1MzY0LCAtNS45NjYxZS0wNSwgMy42Nzc3ZS0wNl0sXG4gICAgWzAuOTgyMiwgLTAuMDAxNjc0NDIsIC00LjQ5NTQ3ZS0wNiwgLTUuNzI0MTFlLTA2XSxcbiAgICBbMC45NzMwLCAtMC4wMDIxNDg2OCwgLTkuMDM1NzFlLTA1LCAxLjg3MzZlLTA4XSxcbiAgICBbMC45NjAwLCAtMC4wMDMwNTA4NSwgLTkuMDA3NjFlLTA1LCAxLjY0OTE3ZS0wNl0sXG4gICAgWzAuOTQyNywgLTAuMDAzODI3OTIsIC02LjUzMzg2ZS0wNSwgLTIuNjE1NGUtMDZdLFxuICAgIFswLjkyMTYsIC0wLjAwNDY3NzQ2LCAtMC4wMDAxMDQ1NywgNC44MTI0M2UtMDZdLFxuICAgIFswLjg5NjIsIC0wLjAwNTM2MjIzLCAtMy4yMzgzMWUtMDUsIC01LjQzNDMyZS0wNl0sXG4gICAgWzAuODY3OSwgLTAuMDA2MDkzNjMsIC0wLjAwMDExMzg5OCwgMy4zMjQ4NGUtMDZdLFxuICAgIFswLjgzNTAsIC0wLjAwNjk4MzI1LCAtNi40MDI1M2UtMDUsIDkuMzQ5NTllLTA3XSxcbiAgICBbMC43OTg2LCAtMC4wMDc1NTMzOCwgLTUuMDAwMDllLTA1LCA5LjM1MzI0ZS0wN10sXG4gICAgWzAuNzU5NywgLTAuMDA3OTgzMjQsIC0zLjU5NzFlLTA1LCAtMi4yNzYyNmUtMDZdLFxuICAgIFswLjcxODYsIC0wLjAwODUxMzY3LCAtNy4wMTE0OWUtMDUsIC04LjYzMDNlLTA2XSxcbiAgICBbMC42NzMyLCAtMC4wMDk4NjIwOSwgLTAuMDAwMTk5NTY5LCAxLjkxOTc0ZS0wNV0sXG4gICAgWzAuNjIxMywgLTAuMDEwNDE4LCA4LjgzOTIzZS0wNSwgNi4yNDA1MWUtMDZdLFxuICAgIFswLjU3MjIsIC0wLjAwOTA2NjAxLCAwLjAwMDE4MiwgNi4yNDA1MWUtMDZdLFxuICAgIFswLjUzMjIsIC0wLjAwNjc3Nzk3LCAwLjAwMDI3NTYwOCwgNi4yNDA1MWUtMDZdXG5dO1xuXG52YXIgQ09FRlNfWSA9IFtcbiAgICBbLTUuMjA0MTdlLTE4LCAwLjAxMjQsIDEuMjE0MzFlLTE4LCAtOC40NTI4NGUtMTFdLFxuICAgIFswLjA2MjAsIDAuMDEyNCwgLTEuMjY3OTNlLTA5LCA0LjIyNjQyZS0xMF0sXG4gICAgWzAuMTI0MCwgMC4wMTI0LCA1LjA3MTcxZS0wOSwgLTEuNjA2MDRlLTA5XSxcbiAgICBbMC4xODYwLCAwLjAxMjM5OTksIC0xLjkwMTg5ZS0wOCwgNi4wMDE1MmUtMDldLFxuICAgIFswLjI0ODAsIDAuMDEyNDAwMiwgNy4xMDAzOWUtMDgsIC0yLjI0ZS0wOF0sXG4gICAgWzAuMzEwMCwgMC4wMTIzOTkyLCAtMi42NDk5N2UtMDcsIDguMzU5ODZlLTA4XSxcbiAgICBbMC4zNzIwLCAwLjAxMjQwMjksIDkuODg5ODNlLTA3LCAtMy4xMTk5NGUtMDddLFxuICAgIFswLjQzNDAsIDAuMDEyMzg5MywgLTMuNjkwOTNlLTA2LCAtNC4zNTYyMWUtMDddLFxuICAgIFswLjQ5NTgsIDAuMDEyMzE5OCwgLTEuMDIyNTJlLTA1LCAtMy40NTUyM2UtMDddLFxuICAgIFswLjU1NzEsIDAuMDEyMTkxNiwgLTEuNTQwODFlLTA1LCAtNS44MjI4OGUtMDddLFxuICAgIFswLjYxNzYsIDAuMDExOTkzOCwgLTIuNDE0MjRlLTA1LCAtNS4yNTMyN2UtMDddLFxuICAgIFswLjY3NjksIDAuMDExNzEzLCAtMy4yMDIyM2UtMDUsIC01LjE2NDA1ZS0wN10sXG4gICAgWzAuNzM0NiwgMC4wMTEzNTQxLCAtMy45NzY4NGUtMDUsIC02LjA5MDUyZS0wN10sXG4gICAgWzAuNzkwMywgMC4wMTA5MTA3LCAtNC44OTA0MmUtMDUsIC0xLjA0NzM5ZS0wNl0sXG4gICAgWzAuODQzNSwgMC4wMTAzNDMxLCAtNi40NjE1ZS0wNSwgLTEuNDAzNzRlLTA5XSxcbiAgICBbMC44OTM2LCAwLjAwOTY5Njg2LCAtNi40NjM2ZS0wNSwgLTguNTQ3ZS0wNl0sXG4gICAgWzAuOTM5NCwgMC4wMDg0MDk0NywgLTAuMDAwMTkyODQxLCAtNC4yMTA2ZS0wNl0sXG4gICAgWzAuOTc2MSwgMC4wMDYxNjUyNywgLTAuMDAwMjU2LCAtNC4yMTA2ZS0wNl0sXG4gICAgWzEuMDAwMCwgMC4wMDMyODk0NywgLTAuMDAwMzE5MTU5LCAtNC4yMTA2ZS0wNl1cbl07XG5cbnZhciBGWEMgPSAwLjg0ODc7XG52YXIgRllDID0gMS4zNTIzO1xudmFyIEMxID0gUjJELzU7IC8vIHJhZCB0byA1LWRlZ3JlZSBpbnRlcnZhbFxudmFyIFJDMSA9IDEvQzE7XG52YXIgTk9ERVMgPSAxODtcblxudmFyIHBvbHkzX3ZhbCA9IGZ1bmN0aW9uKGNvZWZzLCB4KSB7XG4gICAgcmV0dXJuIGNvZWZzWzBdICsgeCAqIChjb2Vmc1sxXSArIHggKiAoY29lZnNbMl0gKyB4ICogY29lZnNbM10pKTtcbn07XG5cbnZhciBwb2x5M19kZXIgPSBmdW5jdGlvbihjb2VmcywgeCkge1xuICAgIHJldHVybiBjb2Vmc1sxXSArIHggKiAoMiAqIGNvZWZzWzJdICsgeCAqIDMgKiBjb2Vmc1szXSk7XG59O1xuXG5mdW5jdGlvbiBuZXd0b25fcmFwc2hvbihmX2RmLCBzdGFydCwgbWF4X2VyciwgaXRlcnMpIHtcbiAgICB2YXIgeCA9IHN0YXJ0O1xuICAgIGZvciAoOyBpdGVyczsgLS1pdGVycykge1xuICAgICAgICB2YXIgdXBkID0gZl9kZih4KTtcbiAgICAgICAgeCAtPSB1cGQ7XG4gICAgICAgIGlmIChNYXRoLmFicyh1cGQpIDwgbWF4X2Vycikge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICAgIHRoaXMueDAgPSB0aGlzLngwIHx8IDA7XG4gICAgdGhpcy55MCA9IHRoaXMueTAgfHwgMDtcbiAgICB0aGlzLmxvbmcwID0gdGhpcy5sb25nMCB8fCAwO1xuICAgIHRoaXMuZXMgPSAwO1xuICAgIHRoaXMudGl0bGUgPSB0aGlzLnRpdGxlIHx8IFwiUm9iaW5zb25cIjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQobGwpIHtcbiAgICB2YXIgbG9uID0gYWRqdXN0X2xvbihsbC54IC0gdGhpcy5sb25nMCk7XG5cbiAgICB2YXIgZHBoaSA9IE1hdGguYWJzKGxsLnkpO1xuICAgIHZhciBpID0gTWF0aC5mbG9vcihkcGhpICogQzEpO1xuICAgIGlmIChpIDwgMCkge1xuICAgICAgICBpID0gMDtcbiAgICB9IGVsc2UgaWYgKGkgPj0gTk9ERVMpIHtcbiAgICAgICAgaSA9IE5PREVTIC0gMTtcbiAgICB9XG4gICAgZHBoaSA9IFIyRCAqIChkcGhpIC0gUkMxICogaSk7XG4gICAgdmFyIHh5ID0ge1xuICAgICAgICB4OiBwb2x5M192YWwoQ09FRlNfWFtpXSwgZHBoaSkgKiBsb24sXG4gICAgICAgIHk6IHBvbHkzX3ZhbChDT0VGU19ZW2ldLCBkcGhpKVxuICAgIH07XG4gICAgaWYgKGxsLnkgPCAwKSB7XG4gICAgICAgIHh5LnkgPSAteHkueTtcbiAgICB9XG5cbiAgICB4eS54ID0geHkueCAqIHRoaXMuYSAqIEZYQyArIHRoaXMueDA7XG4gICAgeHkueSA9IHh5LnkgKiB0aGlzLmEgKiBGWUMgKyB0aGlzLnkwO1xuICAgIHJldHVybiB4eTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGludmVyc2UoeHkpIHtcbiAgICB2YXIgbGwgPSB7XG4gICAgICAgIHg6ICh4eS54IC0gdGhpcy54MCkgLyAodGhpcy5hICogRlhDKSxcbiAgICAgICAgeTogTWF0aC5hYnMoeHkueSAtIHRoaXMueTApIC8gKHRoaXMuYSAqIEZZQylcbiAgICB9O1xuXG4gICAgaWYgKGxsLnkgPj0gMSkgeyAvLyBwYXRob2xvZ2ljIGNhc2VcbiAgICAgICAgbGwueCAvPSBDT0VGU19YW05PREVTXVswXTtcbiAgICAgICAgbGwueSA9IHh5LnkgPCAwID8gLUhBTEZfUEkgOiBIQUxGX1BJO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIGZpbmQgdGFibGUgaW50ZXJ2YWxcbiAgICAgICAgdmFyIGkgPSBNYXRoLmZsb29yKGxsLnkgKiBOT0RFUyk7XG4gICAgICAgIGlmIChpIDwgMCkge1xuICAgICAgICAgICAgaSA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoaSA+PSBOT0RFUykge1xuICAgICAgICAgICAgaSA9IE5PREVTIC0gMTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKDs7KSB7XG4gICAgICAgICAgICBpZiAoQ09FRlNfWVtpXVswXSA+IGxsLnkpIHtcbiAgICAgICAgICAgICAgICAtLWk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKENPRUZTX1lbaSsxXVswXSA8PSBsbC55KSB7XG4gICAgICAgICAgICAgICAgKytpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBsaW5lYXIgaW50ZXJwb2xhdGlvbiBpbiA1IGRlZ3JlZSBpbnRlcnZhbFxuICAgICAgICB2YXIgY29lZnMgPSBDT0VGU19ZW2ldO1xuICAgICAgICB2YXIgdCA9IDUgKiAobGwueSAtIGNvZWZzWzBdKSAvIChDT0VGU19ZW2krMV1bMF0gLSBjb2Vmc1swXSk7XG4gICAgICAgIC8vIGZpbmQgdCBzbyB0aGF0IHBvbHkzX3ZhbChjb2VmcywgdCkgPSBsbC55XG4gICAgICAgIHQgPSBuZXd0b25fcmFwc2hvbihmdW5jdGlvbih4KSB7XG4gICAgICAgICAgICByZXR1cm4gKHBvbHkzX3ZhbChjb2VmcywgeCkgLSBsbC55KSAvIHBvbHkzX2Rlcihjb2VmcywgeCk7XG4gICAgICAgIH0sIHQsIEVQU0xOLCAxMDApO1xuXG4gICAgICAgIGxsLnggLz0gcG9seTNfdmFsKENPRUZTX1hbaV0sIHQpO1xuICAgICAgICBsbC55ID0gKDUgKiBpICsgdCkgKiBEMlI7XG4gICAgICAgIGlmICh4eS55IDwgMCkge1xuICAgICAgICAgICAgbGwueSA9IC1sbC55O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgbGwueCA9IGFkanVzdF9sb24obGwueCArIHRoaXMubG9uZzApO1xuICAgIHJldHVybiBsbDtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIlJvYmluc29uXCIsIFwicm9iaW5cIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/robin.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/sinu.js":
/*!****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/sinu.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lat */ \"./node_modules/proj4/lib/common/adjust_lat.js\");\n/* harmony import */ var _common_pj_enfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/pj_enfn */ \"./node_modules/proj4/lib/common/pj_enfn.js\");\n/* harmony import */ var _common_pj_mlfn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/pj_mlfn */ \"./node_modules/proj4/lib/common/pj_mlfn.js\");\n/* harmony import */ var _common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/pj_inv_mlfn */ \"./node_modules/proj4/lib/common/pj_inv_mlfn.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n\n\n\nvar MAX_ITER = 20;\n\n\n\n\nfunction init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n  if (!this.sphere) {\n    this.en = (0,_common_pj_enfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\n\nfunction forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n\n        if (Math.abs(V) < _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN) {\n          break;\n        }\n      }\n    }\n\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\nfunction inverse(p) {\n  var lat, temp, lon, s;\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n\n    if (this.m) {\n      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_6__[\"default\"])((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(Math.sin(lat) / this.n);\n    }\n\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon + this.long0);\n    lat = (0,_common_adjust_lat__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lat);\n  } else {\n    lat = (0,_common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n\n    if (s < _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat)); //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(temp);\n    } else if (s - _constants_values__WEBPACK_IMPORTED_MODULE_5__.EPSLN < _constants_values__WEBPACK_IMPORTED_MODULE_5__.HALF_PI) {\n      lon = this.long0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Sinusoidal\", \"sinu\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3NpbnUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUdBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy9zaW51LmpzPzBlNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuaW1wb3J0IGFkanVzdF9sYXQgZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sYXQnO1xuaW1wb3J0IHBqX2VuZm4gZnJvbSAnLi4vY29tbW9uL3BqX2VuZm4nO1xudmFyIE1BWF9JVEVSID0gMjA7XG5pbXBvcnQgcGpfbWxmbiBmcm9tICcuLi9jb21tb24vcGpfbWxmbic7XG5pbXBvcnQgcGpfaW52X21sZm4gZnJvbSAnLi4vY29tbW9uL3BqX2ludl9tbGZuJztcbmltcG9ydCB7RVBTTE4sIEhBTEZfUEl9IGZyb20gJy4uL2NvbnN0YW50cy92YWx1ZXMnO1xuXG5pbXBvcnQgYXNpbnogZnJvbSAnLi4vY29tbW9uL2FzaW56JztcblxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgLyogUGxhY2UgcGFyYW1ldGVycyBpbiBzdGF0aWMgc3RvcmFnZSBmb3IgY29tbW9uIHVzZVxuICAgIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5cbiAgaWYgKCF0aGlzLnNwaGVyZSkge1xuICAgIHRoaXMuZW4gPSBwal9lbmZuKHRoaXMuZXMpO1xuICB9XG4gIGVsc2Uge1xuICAgIHRoaXMubiA9IDE7XG4gICAgdGhpcy5tID0gMDtcbiAgICB0aGlzLmVzID0gMDtcbiAgICB0aGlzLkNfeSA9IE1hdGguc3FydCgodGhpcy5tICsgMSkgLyB0aGlzLm4pO1xuICAgIHRoaXMuQ194ID0gdGhpcy5DX3kgLyAodGhpcy5tICsgMSk7XG4gIH1cblxufVxuXG4vKiBTaW51c29pZGFsIGZvcndhcmQgZXF1YXRpb25zLS1tYXBwaW5nIGxhdCxsb25nIHRvIHgseVxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gZm9yd2FyZChwKSB7XG4gIHZhciB4LCB5O1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuICAvKiBGb3J3YXJkIGVxdWF0aW9uc1xuICAgIC0tLS0tLS0tLS0tLS0tLS0tKi9cbiAgbG9uID0gYWRqdXN0X2xvbihsb24gLSB0aGlzLmxvbmcwKTtcblxuICBpZiAodGhpcy5zcGhlcmUpIHtcbiAgICBpZiAoIXRoaXMubSkge1xuICAgICAgbGF0ID0gdGhpcy5uICE9PSAxID8gTWF0aC5hc2luKHRoaXMubiAqIE1hdGguc2luKGxhdCkpIDogbGF0O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIHZhciBrID0gdGhpcy5uICogTWF0aC5zaW4obGF0KTtcbiAgICAgIGZvciAodmFyIGkgPSBNQVhfSVRFUjsgaTsgLS1pKSB7XG4gICAgICAgIHZhciBWID0gKHRoaXMubSAqIGxhdCArIE1hdGguc2luKGxhdCkgLSBrKSAvICh0aGlzLm0gKyBNYXRoLmNvcyhsYXQpKTtcbiAgICAgICAgbGF0IC09IFY7XG4gICAgICAgIGlmIChNYXRoLmFicyhWKSA8IEVQU0xOKSB7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgeCA9IHRoaXMuYSAqIHRoaXMuQ194ICogbG9uICogKHRoaXMubSArIE1hdGguY29zKGxhdCkpO1xuICAgIHkgPSB0aGlzLmEgKiB0aGlzLkNfeSAqIGxhdDtcblxuICB9XG4gIGVsc2Uge1xuXG4gICAgdmFyIHMgPSBNYXRoLnNpbihsYXQpO1xuICAgIHZhciBjID0gTWF0aC5jb3MobGF0KTtcbiAgICB5ID0gdGhpcy5hICogcGpfbWxmbihsYXQsIHMsIGMsIHRoaXMuZW4pO1xuICAgIHggPSB0aGlzLmEgKiBsb24gKiBjIC8gTWF0aC5zcXJ0KDEgLSB0aGlzLmVzICogcyAqIHMpO1xuICB9XG5cbiAgcC54ID0geDtcbiAgcC55ID0geTtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnZlcnNlKHApIHtcbiAgdmFyIGxhdCwgdGVtcCwgbG9uLCBzO1xuXG4gIHAueCAtPSB0aGlzLngwO1xuICBsb24gPSBwLnggLyB0aGlzLmE7XG4gIHAueSAtPSB0aGlzLnkwO1xuICBsYXQgPSBwLnkgLyB0aGlzLmE7XG5cbiAgaWYgKHRoaXMuc3BoZXJlKSB7XG4gICAgbGF0IC89IHRoaXMuQ195O1xuICAgIGxvbiA9IGxvbiAvICh0aGlzLkNfeCAqICh0aGlzLm0gKyBNYXRoLmNvcyhsYXQpKSk7XG4gICAgaWYgKHRoaXMubSkge1xuICAgICAgbGF0ID0gYXNpbnooKHRoaXMubSAqIGxhdCArIE1hdGguc2luKGxhdCkpIC8gdGhpcy5uKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5uICE9PSAxKSB7XG4gICAgICBsYXQgPSBhc2lueihNYXRoLnNpbihsYXQpIC8gdGhpcy5uKTtcbiAgICB9XG4gICAgbG9uID0gYWRqdXN0X2xvbihsb24gKyB0aGlzLmxvbmcwKTtcbiAgICBsYXQgPSBhZGp1c3RfbGF0KGxhdCk7XG4gIH1cbiAgZWxzZSB7XG4gICAgbGF0ID0gcGpfaW52X21sZm4ocC55IC8gdGhpcy5hLCB0aGlzLmVzLCB0aGlzLmVuKTtcbiAgICBzID0gTWF0aC5hYnMobGF0KTtcbiAgICBpZiAocyA8IEhBTEZfUEkpIHtcbiAgICAgIHMgPSBNYXRoLnNpbihsYXQpO1xuICAgICAgdGVtcCA9IHRoaXMubG9uZzAgKyBwLnggKiBNYXRoLnNxcnQoMSAtIHRoaXMuZXMgKiBzICogcykgLyAodGhpcy5hICogTWF0aC5jb3MobGF0KSk7XG4gICAgICAvL3RlbXAgPSB0aGlzLmxvbmcwICsgcC54IC8gKHRoaXMuYSAqIE1hdGguY29zKGxhdCkpO1xuICAgICAgbG9uID0gYWRqdXN0X2xvbih0ZW1wKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKHMgLSBFUFNMTikgPCBIQUxGX1BJKSB7XG4gICAgICBsb24gPSB0aGlzLmxvbmcwO1xuICAgIH1cbiAgfVxuICBwLnggPSBsb247XG4gIHAueSA9IGxhdDtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJTaW51c29pZGFsXCIsIFwic2ludVwiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/sinu.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/somerc.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/somerc.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\nfunction init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\nfunction forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K; // spheric latitude\n\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4); // spheric longitude\n\n  var I = this.alpha * (p.x - this.lambda0); // psoeudo equatorial rotation\n\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\nfunction inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n  var lambda = this.lambda0 + I / this.alpha;\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    } //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n\n\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\nvar names = [\"somerc\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3NvbWVyYy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUdBOztBQUdBOztBQUdBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3NvbWVyYy5qcz81MmNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gIHJlZmVyZW5jZXM6XG4gICAgRm9ybXVsZXMgZXQgY29uc3RhbnRlcyBwb3VyIGxlIENhbGN1bCBwb3VyIGxhXG4gICAgcHJvamVjdGlvbiBjeWxpbmRyaXF1ZSBjb25mb3JtZSDDoCBheGUgb2JsaXF1ZSBldCBwb3VyIGxhIHRyYW5zZm9ybWF0aW9uIGVudHJlXG4gICAgZGVzIHN5c3TDqG1lcyBkZSByw6lmw6lyZW5jZS5cbiAgICBodHRwOi8vd3d3LnN3aXNzdG9wby5hZG1pbi5jaC9pbnRlcm5ldC9zd2lzc3RvcG8vZnIvaG9tZS90b3BpY3Mvc3VydmV5L3N5cy9yZWZzeXMvc3dpdHplcmxhbmQucGFyc3lzcmVsYXRlZDEuMzEyMTYuZG93bmxvYWRMaXN0Ljc3MDA0LkRvd25sb2FkRmlsZS50bXAvc3dpc3Nwcm9qZWN0aW9uZnIucGRmXG4gICovXG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICB2YXIgcGh5MCA9IHRoaXMubGF0MDtcbiAgdGhpcy5sYW1iZGEwID0gdGhpcy5sb25nMDtcbiAgdmFyIHNpblBoeTAgPSBNYXRoLnNpbihwaHkwKTtcbiAgdmFyIHNlbWlNYWpvckF4aXMgPSB0aGlzLmE7XG4gIHZhciBpbnZGID0gdGhpcy5yZjtcbiAgdmFyIGZsYXR0ZW5pbmcgPSAxIC8gaW52RjtcbiAgdmFyIGUyID0gMiAqIGZsYXR0ZW5pbmcgLSBNYXRoLnBvdyhmbGF0dGVuaW5nLCAyKTtcbiAgdmFyIGUgPSB0aGlzLmUgPSBNYXRoLnNxcnQoZTIpO1xuICB0aGlzLlIgPSB0aGlzLmswICogc2VtaU1ham9yQXhpcyAqIE1hdGguc3FydCgxIC0gZTIpIC8gKDEgLSBlMiAqIE1hdGgucG93KHNpblBoeTAsIDIpKTtcbiAgdGhpcy5hbHBoYSA9IE1hdGguc3FydCgxICsgZTIgLyAoMSAtIGUyKSAqIE1hdGgucG93KE1hdGguY29zKHBoeTApLCA0KSk7XG4gIHRoaXMuYjAgPSBNYXRoLmFzaW4oc2luUGh5MCAvIHRoaXMuYWxwaGEpO1xuICB2YXIgazEgPSBNYXRoLmxvZyhNYXRoLnRhbihNYXRoLlBJIC8gNCArIHRoaXMuYjAgLyAyKSk7XG4gIHZhciBrMiA9IE1hdGgubG9nKE1hdGgudGFuKE1hdGguUEkgLyA0ICsgcGh5MCAvIDIpKTtcbiAgdmFyIGszID0gTWF0aC5sb2coKDEgKyBlICogc2luUGh5MCkgLyAoMSAtIGUgKiBzaW5QaHkwKSk7XG4gIHRoaXMuSyA9IGsxIC0gdGhpcy5hbHBoYSAqIGsyICsgdGhpcy5hbHBoYSAqIGUgLyAyICogazM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3J3YXJkKHApIHtcbiAgdmFyIFNhMSA9IE1hdGgubG9nKE1hdGgudGFuKE1hdGguUEkgLyA0IC0gcC55IC8gMikpO1xuICB2YXIgU2EyID0gdGhpcy5lIC8gMiAqIE1hdGgubG9nKCgxICsgdGhpcy5lICogTWF0aC5zaW4ocC55KSkgLyAoMSAtIHRoaXMuZSAqIE1hdGguc2luKHAueSkpKTtcbiAgdmFyIFMgPSAtdGhpcy5hbHBoYSAqIChTYTEgKyBTYTIpICsgdGhpcy5LO1xuXG4gIC8vIHNwaGVyaWMgbGF0aXR1ZGVcbiAgdmFyIGIgPSAyICogKE1hdGguYXRhbihNYXRoLmV4cChTKSkgLSBNYXRoLlBJIC8gNCk7XG5cbiAgLy8gc3BoZXJpYyBsb25naXR1ZGVcbiAgdmFyIEkgPSB0aGlzLmFscGhhICogKHAueCAtIHRoaXMubGFtYmRhMCk7XG5cbiAgLy8gcHNvZXVkbyBlcXVhdG9yaWFsIHJvdGF0aW9uXG4gIHZhciByb3RJID0gTWF0aC5hdGFuKE1hdGguc2luKEkpIC8gKE1hdGguc2luKHRoaXMuYjApICogTWF0aC50YW4oYikgKyBNYXRoLmNvcyh0aGlzLmIwKSAqIE1hdGguY29zKEkpKSk7XG5cbiAgdmFyIHJvdEIgPSBNYXRoLmFzaW4oTWF0aC5jb3ModGhpcy5iMCkgKiBNYXRoLnNpbihiKSAtIE1hdGguc2luKHRoaXMuYjApICogTWF0aC5jb3MoYikgKiBNYXRoLmNvcyhJKSk7XG5cbiAgcC55ID0gdGhpcy5SIC8gMiAqIE1hdGgubG9nKCgxICsgTWF0aC5zaW4ocm90QikpIC8gKDEgLSBNYXRoLnNpbihyb3RCKSkpICsgdGhpcy55MDtcbiAgcC54ID0gdGhpcy5SICogcm90SSArIHRoaXMueDA7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciBZID0gcC54IC0gdGhpcy54MDtcbiAgdmFyIFggPSBwLnkgLSB0aGlzLnkwO1xuXG4gIHZhciByb3RJID0gWSAvIHRoaXMuUjtcbiAgdmFyIHJvdEIgPSAyICogKE1hdGguYXRhbihNYXRoLmV4cChYIC8gdGhpcy5SKSkgLSBNYXRoLlBJIC8gNCk7XG5cbiAgdmFyIGIgPSBNYXRoLmFzaW4oTWF0aC5jb3ModGhpcy5iMCkgKiBNYXRoLnNpbihyb3RCKSArIE1hdGguc2luKHRoaXMuYjApICogTWF0aC5jb3Mocm90QikgKiBNYXRoLmNvcyhyb3RJKSk7XG4gIHZhciBJID0gTWF0aC5hdGFuKE1hdGguc2luKHJvdEkpIC8gKE1hdGguY29zKHRoaXMuYjApICogTWF0aC5jb3Mocm90SSkgLSBNYXRoLnNpbih0aGlzLmIwKSAqIE1hdGgudGFuKHJvdEIpKSk7XG5cbiAgdmFyIGxhbWJkYSA9IHRoaXMubGFtYmRhMCArIEkgLyB0aGlzLmFscGhhO1xuXG4gIHZhciBTID0gMDtcbiAgdmFyIHBoeSA9IGI7XG4gIHZhciBwcmV2UGh5ID0gLTEwMDA7XG4gIHZhciBpdGVyYXRpb24gPSAwO1xuICB3aGlsZSAoTWF0aC5hYnMocGh5IC0gcHJldlBoeSkgPiAwLjAwMDAwMDEpIHtcbiAgICBpZiAoKytpdGVyYXRpb24gPiAyMCkge1xuICAgICAgLy8uLi5yZXBvcnRFcnJvcihcIm9tZXJjRndkSW5maW5pdHlcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vUyA9IE1hdGgubG9nKE1hdGgudGFuKE1hdGguUEkgLyA0ICsgcGh5IC8gMikpO1xuICAgIFMgPSAxIC8gdGhpcy5hbHBoYSAqIChNYXRoLmxvZyhNYXRoLnRhbihNYXRoLlBJIC8gNCArIGIgLyAyKSkgLSB0aGlzLkspICsgdGhpcy5lICogTWF0aC5sb2coTWF0aC50YW4oTWF0aC5QSSAvIDQgKyBNYXRoLmFzaW4odGhpcy5lICogTWF0aC5zaW4ocGh5KSkgLyAyKSk7XG4gICAgcHJldlBoeSA9IHBoeTtcbiAgICBwaHkgPSAyICogTWF0aC5hdGFuKE1hdGguZXhwKFMpKSAtIE1hdGguUEkgLyAyO1xuICB9XG5cbiAgcC54ID0gbGFtYmRhO1xuICBwLnkgPSBwaHk7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wic29tZXJjXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/somerc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/stere.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/stere.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names),\n/* harmony export */   \"ssfn_\": () => (/* binding */ ssfn_)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/sign */ \"./node_modules/proj4/lib/common/sign.js\");\n/* harmony import */ var _common_msfnz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/msfnz */ \"./node_modules/proj4/lib/common/msfnz.js\");\n/* harmony import */ var _common_tsfnz__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/tsfnz */ \"./node_modules/proj4/lib/common/tsfnz.js\");\n/* harmony import */ var _common_phi2z__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/phi2z */ \"./node_modules/proj4/lib/common/phi2z.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n\n\n\n\n\nfunction ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen);\n}\nfunction init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      this.k0 = 0.5 * (1 + (0,_common_sign__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      } else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      this.k0 = 0.5 * this.cons * (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n\n    this.ms1 = (0,_common_msfnz__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n} // Stereographic forward equations--mapping lat,long to x,y\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN && Math.abs(lat + this.lat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n\n    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      ts = (0,_common_tsfnz__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0); //trace(p.toString());\n\n      return p;\n    } else if (Math.abs(this.sinlat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  } //trace(p.toString());\n\n\n  return p;\n} //* Stereographic inverse equations--mapping x,y to lat/long\n\nfunction inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n\n    if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n\n    if (Math.abs(this.coslat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      if (this.lat0 > 0) {\n        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n      if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat; //trace(p.toString());\n\n        return p;\n      }\n\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.e, ts);\n      lon = this.con * (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n\n      if (rh <= _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n\n      lat = -1 * (0,_common_phi2z__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(this.e, Math.tan(0.5 * (_constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI + Chi)));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat; //trace(p.toString());\n\n  return p;\n}\nvar names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/stere.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/sterea.js":
/*!******************************************************!*\
  !*** ./node_modules/proj4/lib/projections/sterea.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _gauss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gauss */ \"./node_modules/proj4/lib/projections/gauss.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n\n\nfunction init() {\n  _gauss__WEBPACK_IMPORTED_MODULE_0__[\"default\"].init.apply(this);\n\n  if (!this.rc) {\n    return;\n  }\n\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\nfunction forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(p.x - this.long0);\n  _gauss__WEBPACK_IMPORTED_MODULE_0__[\"default\"].forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\nfunction inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if (rho = Math.sqrt(p.x * p.x + p.y * p.y)) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  _gauss__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inverse.apply(this, [p]);\n  p.x = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(p.x + this.long0);\n  return p;\n}\nvar names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\", \"Oblique Stereographic Alternative\", \"Double_Stereographic\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3N0ZXJlYS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvc3RlcmVhLmpzPzk2NjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGdhdXNzIGZyb20gJy4vZ2F1c3MnO1xuaW1wb3J0IGFkanVzdF9sb24gZnJvbSAnLi4vY29tbW9uL2FkanVzdF9sb24nO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdCgpIHtcbiAgZ2F1c3MuaW5pdC5hcHBseSh0aGlzKTtcbiAgaWYgKCF0aGlzLnJjKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRoaXMuc2luYzAgPSBNYXRoLnNpbih0aGlzLnBoaWMwKTtcbiAgdGhpcy5jb3NjMCA9IE1hdGguY29zKHRoaXMucGhpYzApO1xuICB0aGlzLlIyID0gMiAqIHRoaXMucmM7XG4gIGlmICghdGhpcy50aXRsZSkge1xuICAgIHRoaXMudGl0bGUgPSBcIk9ibGlxdWUgU3RlcmVvZ3JhcGhpYyBBbHRlcm5hdGl2ZVwiO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBmb3J3YXJkKHApIHtcbiAgdmFyIHNpbmMsIGNvc2MsIGNvc2wsIGs7XG4gIHAueCA9IGFkanVzdF9sb24ocC54IC0gdGhpcy5sb25nMCk7XG4gIGdhdXNzLmZvcndhcmQuYXBwbHkodGhpcywgW3BdKTtcbiAgc2luYyA9IE1hdGguc2luKHAueSk7XG4gIGNvc2MgPSBNYXRoLmNvcyhwLnkpO1xuICBjb3NsID0gTWF0aC5jb3MocC54KTtcbiAgayA9IHRoaXMuazAgKiB0aGlzLlIyIC8gKDEgKyB0aGlzLnNpbmMwICogc2luYyArIHRoaXMuY29zYzAgKiBjb3NjICogY29zbCk7XG4gIHAueCA9IGsgKiBjb3NjICogTWF0aC5zaW4ocC54KTtcbiAgcC55ID0gayAqICh0aGlzLmNvc2MwICogc2luYyAtIHRoaXMuc2luYzAgKiBjb3NjICogY29zbCk7XG4gIHAueCA9IHRoaXMuYSAqIHAueCArIHRoaXMueDA7XG4gIHAueSA9IHRoaXMuYSAqIHAueSArIHRoaXMueTA7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciBzaW5jLCBjb3NjLCBsb24sIGxhdCwgcmhvO1xuICBwLnggPSAocC54IC0gdGhpcy54MCkgLyB0aGlzLmE7XG4gIHAueSA9IChwLnkgLSB0aGlzLnkwKSAvIHRoaXMuYTtcblxuICBwLnggLz0gdGhpcy5rMDtcbiAgcC55IC89IHRoaXMuazA7XG4gIGlmICgocmhvID0gTWF0aC5zcXJ0KHAueCAqIHAueCArIHAueSAqIHAueSkpKSB7XG4gICAgdmFyIGMgPSAyICogTWF0aC5hdGFuMihyaG8sIHRoaXMuUjIpO1xuICAgIHNpbmMgPSBNYXRoLnNpbihjKTtcbiAgICBjb3NjID0gTWF0aC5jb3MoYyk7XG4gICAgbGF0ID0gTWF0aC5hc2luKGNvc2MgKiB0aGlzLnNpbmMwICsgcC55ICogc2luYyAqIHRoaXMuY29zYzAgLyByaG8pO1xuICAgIGxvbiA9IE1hdGguYXRhbjIocC54ICogc2luYywgcmhvICogdGhpcy5jb3NjMCAqIGNvc2MgLSBwLnkgKiB0aGlzLnNpbmMwICogc2luYyk7XG4gIH1cbiAgZWxzZSB7XG4gICAgbGF0ID0gdGhpcy5waGljMDtcbiAgICBsb24gPSAwO1xuICB9XG5cbiAgcC54ID0gbG9uO1xuICBwLnkgPSBsYXQ7XG4gIGdhdXNzLmludmVyc2UuYXBwbHkodGhpcywgW3BdKTtcbiAgcC54ID0gYWRqdXN0X2xvbihwLnggKyB0aGlzLmxvbmcwKTtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJTdGVyZW9ncmFwaGljX05vcnRoX1BvbGVcIiwgXCJPYmxpcXVlX1N0ZXJlb2dyYXBoaWNcIiwgXCJQb2xhcl9TdGVyZW9ncmFwaGljXCIsIFwic3RlcmVhXCIsXCJPYmxpcXVlIFN0ZXJlb2dyYXBoaWMgQWx0ZXJuYXRpdmVcIixcIkRvdWJsZV9TdGVyZW9ncmFwaGljXCJdO1xuZXhwb3J0IGRlZmF1bHQge1xuICBpbml0OiBpbml0LFxuICBmb3J3YXJkOiBmb3J3YXJkLFxuICBpbnZlcnNlOiBpbnZlcnNlLFxuICBuYW1lczogbmFtZXNcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/sterea.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/tmerc.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/tmerc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_pj_enfn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/pj_enfn */ \"./node_modules/proj4/lib/common/pj_enfn.js\");\n/* harmony import */ var _common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/pj_mlfn */ \"./node_modules/proj4/lib/common/pj_mlfn.js\");\n/* harmony import */ var _common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/pj_inv_mlfn */ \"./node_modules/proj4/lib/common/pj_inv_mlfn.js\");\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_sign__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/sign */ \"./node_modules/proj4/lib/common/sign.js\");\n// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\n\n\n\n\n\nfunction init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = (0,_common_pj_enfn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.es);\n    this.ml0 = (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if (Math.abs(Math.abs(b) - 1) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n      return 93;\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if (b - 1 > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN) {\n          return 93;\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = (0,_common_pj_mlfn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(lat, sin_phi, cos_phi, this.en);\n    x = this.a * (this.k0 * al * (1 + als / 6 * (1 - t + c + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c + als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) + this.x0;\n    y = this.a * (this.k0 * (ml - this.ml0 + sin_phi * delta_lon * al / 2 * (1 + als / 12 * (5 - t + 9 * c + 4 * cs + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\n\nfunction inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if (g === 0 && h === 0) {\n      lon = 0;\n    } else {\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(Math.atan2(g, h) + this.long0);\n    }\n  } else {\n    // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = (0,_common_pj_inv_mlfn__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(con, this.es, this.en);\n\n    if (Math.abs(phi) < _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > _constants_values__WEBPACK_IMPORTED_MODULE_4__.EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n      lat = phi - con * ds / (1 - this.es) * 0.5 * (1 - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n      lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this.long0 + d * (1 - ds / 6 * (1 + 2 * t + c - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi);\n    } else {\n      lat = _constants_values__WEBPACK_IMPORTED_MODULE_4__.HALF_PI * (0,_common_sign__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3RtZXJjLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBTUE7QUFNQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFLQTtBQUlBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy90bWVyYy5qcz9jYTRiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEhlYXZpbHkgYmFzZWQgb24gdGhpcyB0bWVyYyBwcm9qZWN0aW9uIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbWJsb2NoL21hcHNoYXBlci1wcm9qL2Jsb2IvbWFzdGVyL3NyYy9wcm9qZWN0aW9ucy90bWVyYy5qc1xuXG5pbXBvcnQgcGpfZW5mbiBmcm9tICcuLi9jb21tb24vcGpfZW5mbic7XG5pbXBvcnQgcGpfbWxmbiBmcm9tICcuLi9jb21tb24vcGpfbWxmbic7XG5pbXBvcnQgcGpfaW52X21sZm4gZnJvbSAnLi4vY29tbW9uL3BqX2ludl9tbGZuJztcbmltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcblxuaW1wb3J0IHtFUFNMTiwgSEFMRl9QSX0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5pbXBvcnQgc2lnbiBmcm9tICcuLi9jb21tb24vc2lnbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICB0aGlzLngwID0gdGhpcy54MCAhPT0gdW5kZWZpbmVkID8gdGhpcy54MCA6IDA7XG4gIHRoaXMueTAgPSB0aGlzLnkwICE9PSB1bmRlZmluZWQgPyB0aGlzLnkwIDogMDtcbiAgdGhpcy5sb25nMCA9IHRoaXMubG9uZzAgIT09IHVuZGVmaW5lZCA/IHRoaXMubG9uZzAgOiAwO1xuICB0aGlzLmxhdDAgPSB0aGlzLmxhdDAgIT09IHVuZGVmaW5lZCA/IHRoaXMubGF0MCA6IDA7XG5cbiAgaWYgKHRoaXMuZXMpIHtcbiAgICB0aGlzLmVuID0gcGpfZW5mbih0aGlzLmVzKTtcbiAgICB0aGlzLm1sMCA9IHBqX21sZm4odGhpcy5sYXQwLCBNYXRoLnNpbih0aGlzLmxhdDApLCBNYXRoLmNvcyh0aGlzLmxhdDApLCB0aGlzLmVuKTtcbiAgfVxufVxuXG4vKipcbiAgICBUcmFuc3ZlcnNlIE1lcmNhdG9yIEZvcndhcmQgIC0gbG9uZy9sYXQgdG8geC95XG4gICAgbG9uZy9sYXQgaW4gcmFkaWFuc1xuICAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICB2YXIgbG9uID0gcC54O1xuICB2YXIgbGF0ID0gcC55O1xuXG4gIHZhciBkZWx0YV9sb24gPSBhZGp1c3RfbG9uKGxvbiAtIHRoaXMubG9uZzApO1xuICB2YXIgY29uO1xuICB2YXIgeCwgeTtcbiAgdmFyIHNpbl9waGkgPSBNYXRoLnNpbihsYXQpO1xuICB2YXIgY29zX3BoaSA9IE1hdGguY29zKGxhdCk7XG5cbiAgaWYgKCF0aGlzLmVzKSB7XG4gICAgdmFyIGIgPSBjb3NfcGhpICogTWF0aC5zaW4oZGVsdGFfbG9uKTtcblxuICAgIGlmICgoTWF0aC5hYnMoTWF0aC5hYnMoYikgLSAxKSkgPCBFUFNMTikge1xuICAgICAgcmV0dXJuICg5Myk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgeCA9IDAuNSAqIHRoaXMuYSAqIHRoaXMuazAgKiBNYXRoLmxvZygoMSArIGIpIC8gKDEgLSBiKSkgKyB0aGlzLngwO1xuICAgICAgeSA9IGNvc19waGkgKiBNYXRoLmNvcyhkZWx0YV9sb24pIC8gTWF0aC5zcXJ0KDEgLSBNYXRoLnBvdyhiLCAyKSk7XG4gICAgICBiID0gTWF0aC5hYnMoeSk7XG5cbiAgICAgIGlmIChiID49IDEpIHtcbiAgICAgICAgaWYgKChiIC0gMSkgPiBFUFNMTikge1xuICAgICAgICAgIHJldHVybiAoOTMpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHkgPSAwO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgeSA9IE1hdGguYWNvcyh5KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGxhdCA8IDApIHtcbiAgICAgICAgeSA9IC15O1xuICAgICAgfVxuXG4gICAgICB5ID0gdGhpcy5hICogdGhpcy5rMCAqICh5IC0gdGhpcy5sYXQwKSArIHRoaXMueTA7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIHZhciBhbCA9IGNvc19waGkgKiBkZWx0YV9sb247XG4gICAgdmFyIGFscyA9IE1hdGgucG93KGFsLCAyKTtcbiAgICB2YXIgYyA9IHRoaXMuZXAyICogTWF0aC5wb3coY29zX3BoaSwgMik7XG4gICAgdmFyIGNzID0gTWF0aC5wb3coYywgMik7XG4gICAgdmFyIHRxID0gTWF0aC5hYnMoY29zX3BoaSkgPiBFUFNMTiA/IE1hdGgudGFuKGxhdCkgOiAwO1xuICAgIHZhciB0ID0gTWF0aC5wb3codHEsIDIpO1xuICAgIHZhciB0cyA9IE1hdGgucG93KHQsIDIpO1xuICAgIGNvbiA9IDEgLSB0aGlzLmVzICogTWF0aC5wb3coc2luX3BoaSwgMik7XG4gICAgYWwgPSBhbCAvIE1hdGguc3FydChjb24pO1xuICAgIHZhciBtbCA9IHBqX21sZm4obGF0LCBzaW5fcGhpLCBjb3NfcGhpLCB0aGlzLmVuKTtcblxuICAgIHggPSB0aGlzLmEgKiAodGhpcy5rMCAqIGFsICogKDEgK1xuICAgICAgYWxzIC8gNiAqICgxIC0gdCArIGMgK1xuICAgICAgYWxzIC8gMjAgKiAoNSAtIDE4ICogdCArIHRzICsgMTQgKiBjIC0gNTggKiB0ICogYyArXG4gICAgICBhbHMgLyA0MiAqICg2MSArIDE3OSAqIHRzIC0gdHMgKiB0IC0gNDc5ICogdCkpKSkpICtcbiAgICAgIHRoaXMueDA7XG5cbiAgICB5ID0gdGhpcy5hICogKHRoaXMuazAgKiAobWwgLSB0aGlzLm1sMCArXG4gICAgICBzaW5fcGhpICogZGVsdGFfbG9uICogYWwgLyAyICogKDEgK1xuICAgICAgYWxzIC8gMTIgKiAoNSAtIHQgKyA5ICogYyArIDQgKiBjcyArXG4gICAgICBhbHMgLyAzMCAqICg2MSArIHRzIC0gNTggKiB0ICsgMjcwICogYyAtIDMzMCAqIHQgKiBjICtcbiAgICAgIGFscyAvIDU2ICogKDEzODUgKyA1NDMgKiB0cyAtIHRzICogdCAtIDMxMTEgKiB0KSkpKSkpICtcbiAgICAgIHRoaXMueTA7XG4gIH1cblxuICBwLnggPSB4O1xuICBwLnkgPSB5O1xuXG4gIHJldHVybiBwO1xufVxuXG4vKipcbiAgICBUcmFuc3ZlcnNlIE1lcmNhdG9yIEludmVyc2UgIC0gIHgveSB0byBsb25nL2xhdFxuICAqL1xuZXhwb3J0IGZ1bmN0aW9uIGludmVyc2UocCkge1xuICB2YXIgY29uLCBwaGk7XG4gIHZhciBsYXQsIGxvbjtcbiAgdmFyIHggPSAocC54IC0gdGhpcy54MCkgKiAoMSAvIHRoaXMuYSk7XG4gIHZhciB5ID0gKHAueSAtIHRoaXMueTApICogKDEgLyB0aGlzLmEpO1xuXG4gIGlmICghdGhpcy5lcykge1xuICAgIHZhciBmID0gTWF0aC5leHAoeCAvIHRoaXMuazApO1xuICAgIHZhciBnID0gMC41ICogKGYgLSAxIC8gZik7XG4gICAgdmFyIHRlbXAgPSB0aGlzLmxhdDAgKyB5IC8gdGhpcy5rMDtcbiAgICB2YXIgaCA9IE1hdGguY29zKHRlbXApO1xuICAgIGNvbiA9IE1hdGguc3FydCgoMSAtIE1hdGgucG93KGgsIDIpKSAvICgxICsgTWF0aC5wb3coZywgMikpKTtcbiAgICBsYXQgPSBNYXRoLmFzaW4oY29uKTtcblxuICAgIGlmICh5IDwgMCkge1xuICAgICAgbGF0ID0gLWxhdDtcbiAgICB9XG5cbiAgICBpZiAoKGcgPT09IDApICYmIChoID09PSAwKSkge1xuICAgICAgbG9uID0gMDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBsb24gPSBhZGp1c3RfbG9uKE1hdGguYXRhbjIoZywgaCkgKyB0aGlzLmxvbmcwKTtcbiAgICB9XG4gIH1cbiAgZWxzZSB7IC8vIGVsbGlwc29pZGFsIGZvcm1cbiAgICBjb24gPSB0aGlzLm1sMCArIHkgLyB0aGlzLmswO1xuICAgIHBoaSA9IHBqX2ludl9tbGZuKGNvbiwgdGhpcy5lcywgdGhpcy5lbik7XG5cbiAgICBpZiAoTWF0aC5hYnMocGhpKSA8IEhBTEZfUEkpIHtcbiAgICAgIHZhciBzaW5fcGhpID0gTWF0aC5zaW4ocGhpKTtcbiAgICAgIHZhciBjb3NfcGhpID0gTWF0aC5jb3MocGhpKTtcbiAgICAgIHZhciB0YW5fcGhpID0gTWF0aC5hYnMoY29zX3BoaSkgPiBFUFNMTiA/IE1hdGgudGFuKHBoaSkgOiAwO1xuICAgICAgdmFyIGMgPSB0aGlzLmVwMiAqIE1hdGgucG93KGNvc19waGksIDIpO1xuICAgICAgdmFyIGNzID0gTWF0aC5wb3coYywgMik7XG4gICAgICB2YXIgdCA9IE1hdGgucG93KHRhbl9waGksIDIpO1xuICAgICAgdmFyIHRzID0gTWF0aC5wb3codCwgMik7XG4gICAgICBjb24gPSAxIC0gdGhpcy5lcyAqIE1hdGgucG93KHNpbl9waGksIDIpO1xuICAgICAgdmFyIGQgPSB4ICogTWF0aC5zcXJ0KGNvbikgLyB0aGlzLmswO1xuICAgICAgdmFyIGRzID0gTWF0aC5wb3coZCwgMik7XG4gICAgICBjb24gPSBjb24gKiB0YW5fcGhpO1xuXG4gICAgICBsYXQgPSBwaGkgLSAoY29uICogZHMgLyAoMSAtIHRoaXMuZXMpKSAqIDAuNSAqICgxIC1cbiAgICAgICAgZHMgLyAxMiAqICg1ICsgMyAqIHQgLSA5ICogYyAqIHQgKyBjIC0gNCAqIGNzIC1cbiAgICAgICAgZHMgLyAzMCAqICg2MSArIDkwICogdCAtIDI1MiAqIGMgKiB0ICsgNDUgKiB0cyArIDQ2ICogYyAtXG4gICAgICAgIGRzIC8gNTYgKiAoMTM4NSArIDM2MzMgKiB0ICsgNDA5NSAqIHRzICsgMTU3NCAqIHRzICogdCkpKSk7XG5cbiAgICAgIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCArIChkICogKDEgLVxuICAgICAgICBkcyAvIDYgKiAoMSArIDIgKiB0ICsgYyAtXG4gICAgICAgIGRzIC8gMjAgKiAoNSArIDI4ICogdCArIDI0ICogdHMgKyA4ICogYyAqIHQgKyA2ICogYyAtXG4gICAgICAgIGRzIC8gNDIgKiAoNjEgKyA2NjIgKiB0ICsgMTMyMCAqIHRzICsgNzIwICogdHMgKiB0KSkpKSAvIGNvc19waGkpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBsYXQgPSBIQUxGX1BJICogc2lnbih5KTtcbiAgICAgIGxvbiA9IDA7XG4gICAgfVxuICB9XG5cbiAgcC54ID0gbG9uO1xuICBwLnkgPSBsYXQ7XG5cbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJGYXN0X1RyYW5zdmVyc2VfTWVyY2F0b3JcIiwgXCJGYXN0IFRyYW5zdmVyc2UgTWVyY2F0b3JcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/tmerc.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/tpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/tpers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_hypot__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/hypot */ \"./node_modules/proj4/lib/common/hypot.js\");\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\n\nvar params = {\n  h: {\n    def: 100000,\n    num: true\n  },\n  // default is Karman line, no default in PROJ.7\n  azi: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is North\n  tilt: {\n    def: 0,\n    num: true,\n    degrees: true\n  },\n  // default is Nadir\n  long0: {\n    def: 0,\n    num: true\n  },\n  // default is Greenwich, conversion to rad is automatic\n  lat0: {\n    def: 0,\n    num: true\n  } // default is Equator, conversion to rad is automatic\n\n};\nfunction init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n\n    if (params[p].degrees) {\n      this[p] = this[p] * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs(Math.abs(this.lat0) - _constants_values__WEBPACK_IMPORTED_MODULE_0__.HALF_PI) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\nfunction forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  } // Tilt \n\n\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\nfunction inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = {\n    x: p.x,\n    y: p.y\n  }; // Un-Tilt\n\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n  var rh = (0,_common_hypot__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(p.x, p.y);\n\n  if (Math.abs(rh) < _constants_values__WEBPACK_IMPORTED_MODULE_0__.EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\nvar names = [\"Tilted_Perspective\", \"tpers\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3RwZXJzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFPQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUxBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBWkE7O0FBY0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQVpBOzs7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFqQkE7O0FBbUJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy90cGVycy5qcz81MmI1Il0sInNvdXJjZXNDb250ZW50IjpbIlxudmFyIG1vZGUgPSB7XG4gIE5fUE9MRTogMCxcbiAgU19QT0xFOiAxLFxuICBFUVVJVDogMixcbiAgT0JMSVE6IDNcbn07XG5cbmltcG9ydCB7IEQyUiwgSEFMRl9QSSwgRVBTTE4gfSBmcm9tIFwiLi4vY29uc3RhbnRzL3ZhbHVlc1wiO1xuaW1wb3J0IGh5cG90IGZyb20gXCIuLi9jb21tb24vaHlwb3RcIjtcblxudmFyIHBhcmFtcyA9IHtcbiAgaDogICAgIHsgZGVmOiAxMDAwMDAsIG51bTogdHJ1ZSB9LCAgICAgICAgICAgLy8gZGVmYXVsdCBpcyBLYXJtYW4gbGluZSwgbm8gZGVmYXVsdCBpbiBQUk9KLjdcbiAgYXppOiAgIHsgZGVmOiAwLCBudW06IHRydWUsIGRlZ3JlZXM6IHRydWUgfSwgLy8gZGVmYXVsdCBpcyBOb3J0aFxuICB0aWx0OiAgeyBkZWY6IDAsIG51bTogdHJ1ZSwgZGVncmVlczogdHJ1ZSB9LCAvLyBkZWZhdWx0IGlzIE5hZGlyXG4gIGxvbmcwOiB7IGRlZjogMCwgbnVtOiB0cnVlIH0sICAgICAgICAgICAgICAgIC8vIGRlZmF1bHQgaXMgR3JlZW53aWNoLCBjb252ZXJzaW9uIHRvIHJhZCBpcyBhdXRvbWF0aWNcbiAgbGF0MDogIHsgZGVmOiAwLCBudW06IHRydWUgfSAgICAgICAgICAgICAgICAgLy8gZGVmYXVsdCBpcyBFcXVhdG9yLCBjb252ZXJzaW9uIHRvIHJhZCBpcyBhdXRvbWF0aWNcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICBPYmplY3Qua2V5cyhwYXJhbXMpLmZvckVhY2goZnVuY3Rpb24gKHApIHtcbiAgICBpZiAodHlwZW9mIHRoaXNbcF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRoaXNbcF0gPSBwYXJhbXNbcF0uZGVmO1xuICAgIH0gZWxzZSBpZiAocGFyYW1zW3BdLm51bSAmJiBpc05hTih0aGlzW3BdKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBwYXJhbWV0ZXIgdmFsdWUsIG11c3QgYmUgbnVtZXJpYyBcIiArIHAgKyBcIiA9IFwiICsgdGhpc1twXSk7XG4gICAgfSBlbHNlIGlmIChwYXJhbXNbcF0ubnVtKSB7XG4gICAgICB0aGlzW3BdID0gcGFyc2VGbG9hdCh0aGlzW3BdKTtcbiAgICB9XG4gICAgaWYgKHBhcmFtc1twXS5kZWdyZWVzKSB7XG4gICAgICB0aGlzW3BdID0gdGhpc1twXSAqIEQyUjtcbiAgICB9XG4gIH0uYmluZCh0aGlzKSk7XG5cbiAgaWYgKE1hdGguYWJzKChNYXRoLmFicyh0aGlzLmxhdDApIC0gSEFMRl9QSSkpIDwgRVBTTE4pIHtcbiAgICB0aGlzLm1vZGUgPSB0aGlzLmxhdDAgPCAwID8gbW9kZS5TX1BPTEUgOiBtb2RlLk5fUE9MRTtcbiAgfSBlbHNlIGlmIChNYXRoLmFicyh0aGlzLmxhdDApIDwgRVBTTE4pIHtcbiAgICB0aGlzLm1vZGUgPSBtb2RlLkVRVUlUO1xuICB9IGVsc2Uge1xuICAgIHRoaXMubW9kZSA9IG1vZGUuT0JMSVE7XG4gICAgdGhpcy5zaW5waDAgPSBNYXRoLnNpbih0aGlzLmxhdDApO1xuICAgIHRoaXMuY29zcGgwID0gTWF0aC5jb3ModGhpcy5sYXQwKTtcbiAgfVxuXG4gIHRoaXMucG4xID0gdGhpcy5oIC8gdGhpcy5hOyAgLy8gTm9ybWFsaXplIHJlbGF0aXZlIHRvIHRoZSBFYXJ0aCdzIHJhZGl1c1xuXG4gIGlmICh0aGlzLnBuMSA8PSAwIHx8IHRoaXMucG4xID4gMWUxMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgaGVpZ2h0XCIpO1xuICB9XG4gIFxuICB0aGlzLnAgPSAxICsgdGhpcy5wbjE7XG4gIHRoaXMucnAgPSAxIC8gdGhpcy5wO1xuICB0aGlzLmgxID0gMSAvIHRoaXMucG4xO1xuICB0aGlzLnBmYWN0ID0gKHRoaXMucCArIDEpICogdGhpcy5oMTtcbiAgdGhpcy5lcyA9IDA7XG5cbiAgdmFyIG9tZWdhID0gdGhpcy50aWx0O1xuICB2YXIgZ2FtbWEgPSB0aGlzLmF6aTtcbiAgdGhpcy5jZyA9IE1hdGguY29zKGdhbW1hKTtcbiAgdGhpcy5zZyA9IE1hdGguc2luKGdhbW1hKTtcbiAgdGhpcy5jdyA9IE1hdGguY29zKG9tZWdhKTtcbiAgdGhpcy5zdyA9IE1hdGguc2luKG9tZWdhKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuICBwLnggLT0gdGhpcy5sb25nMDtcbiAgdmFyIHNpbnBoaSA9IE1hdGguc2luKHAueSk7XG4gIHZhciBjb3NwaGkgPSBNYXRoLmNvcyhwLnkpO1xuICB2YXIgY29zbGFtID0gTWF0aC5jb3MocC54KTtcbiAgdmFyIHgsIHk7XG4gIHN3aXRjaCAodGhpcy5tb2RlKSB7XG4gICAgY2FzZSBtb2RlLk9CTElROlxuICAgICAgeSA9IHRoaXMuc2lucGgwICogc2lucGhpICsgdGhpcy5jb3NwaDAgKiBjb3NwaGkgKiBjb3NsYW07XG4gICAgICBicmVhaztcbiAgICBjYXNlIG1vZGUuRVFVSVQ6XG4gICAgICB5ID0gY29zcGhpICogY29zbGFtO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBtb2RlLlNfUE9MRTpcbiAgICAgIHkgPSAtc2lucGhpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBtb2RlLk5fUE9MRTpcbiAgICAgIHkgPSBzaW5waGk7XG4gICAgICBicmVhaztcbiAgfVxuICB5ID0gdGhpcy5wbjEgLyAodGhpcy5wIC0geSk7XG4gIHggPSB5ICogY29zcGhpICogTWF0aC5zaW4ocC54KTtcblxuICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgIGNhc2UgbW9kZS5PQkxJUTpcbiAgICAgIHkgKj0gdGhpcy5jb3NwaDAgKiBzaW5waGkgLSB0aGlzLnNpbnBoMCAqIGNvc3BoaSAqIGNvc2xhbTtcbiAgICAgIGJyZWFrO1xuICAgIGNhc2UgbW9kZS5FUVVJVDpcbiAgICAgIHkgKj0gc2lucGhpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBtb2RlLk5fUE9MRTpcbiAgICAgIHkgKj0gLShjb3NwaGkgKiBjb3NsYW0pO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSBtb2RlLlNfUE9MRTpcbiAgICAgIHkgKj0gY29zcGhpICogY29zbGFtO1xuICAgICAgYnJlYWs7XG4gIH1cblxuICAvLyBUaWx0IFxuICB2YXIgeXQsIGJhO1xuICB5dCA9IHkgKiB0aGlzLmNnICsgeCAqIHRoaXMuc2c7XG4gIGJhID0gMSAvICh5dCAqIHRoaXMuc3cgKiB0aGlzLmgxICsgdGhpcy5jdyk7XG4gIHggPSAoeCAqIHRoaXMuY2cgLSB5ICogdGhpcy5zZykgKiB0aGlzLmN3ICogYmE7XG4gIHkgPSB5dCAqIGJhO1xuXG4gIHAueCA9IHggKiB0aGlzLmE7XG4gIHAueSA9IHkgKiB0aGlzLmE7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHAueCAvPSB0aGlzLmE7XG4gIHAueSAvPSB0aGlzLmE7XG4gIHZhciByID0geyB4OiBwLngsIHk6IHAueSB9O1xuXG4gIC8vIFVuLVRpbHRcbiAgdmFyIGJtLCBicSwgeXQ7XG4gIHl0ID0gMSAvICh0aGlzLnBuMSAtIHAueSAqIHRoaXMuc3cpO1xuICBibSA9IHRoaXMucG4xICogcC54ICogeXQ7XG4gIGJxID0gdGhpcy5wbjEgKiBwLnkgKiB0aGlzLmN3ICogeXQ7XG4gIHAueCA9IGJtICogdGhpcy5jZyArIGJxICogdGhpcy5zZztcbiAgcC55ID0gYnEgKiB0aGlzLmNnIC0gYm0gKiB0aGlzLnNnO1xuXG4gIHZhciByaCA9IGh5cG90KHAueCwgcC55KTtcbiAgaWYgKE1hdGguYWJzKHJoKSA8IEVQU0xOKSB7XG4gICAgci54ID0gMDtcbiAgICByLnkgPSBwLnk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNvc3osIHNpbno7XG4gICAgc2lueiA9IDEgLSByaCAqIHJoICogdGhpcy5wZmFjdDtcbiAgICBzaW56ID0gKHRoaXMucCAtIE1hdGguc3FydChzaW56KSkgLyAodGhpcy5wbjEgLyByaCArIHJoIC8gdGhpcy5wbjEpO1xuICAgIGNvc3ogPSBNYXRoLnNxcnQoMSAtIHNpbnogKiBzaW56KTtcbiAgICBzd2l0Y2ggKHRoaXMubW9kZSkge1xuICAgICAgY2FzZSBtb2RlLk9CTElROlxuICAgICAgICByLnkgPSBNYXRoLmFzaW4oY29zeiAqIHRoaXMuc2lucGgwICsgcC55ICogc2lueiAqIHRoaXMuY29zcGgwIC8gcmgpO1xuICAgICAgICBwLnkgPSAoY29zeiAtIHRoaXMuc2lucGgwICogTWF0aC5zaW4oci55KSkgKiByaDtcbiAgICAgICAgcC54ICo9IHNpbnogKiB0aGlzLmNvc3BoMDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG1vZGUuRVFVSVQ6XG4gICAgICAgIHIueSA9IE1hdGguYXNpbihwLnkgKiBzaW56IC8gcmgpO1xuICAgICAgICBwLnkgPSBjb3N6ICogcmg7XG4gICAgICAgIHAueCAqPSBzaW56O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgbW9kZS5OX1BPTEU6XG4gICAgICAgIHIueSA9IE1hdGguYXNpbihjb3N6KTtcbiAgICAgICAgcC55ID0gLXAueTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIG1vZGUuU19QT0xFOlxuICAgICAgICByLnkgPSAtTWF0aC5hc2luKGNvc3opO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gICAgci54ID0gTWF0aC5hdGFuMihwLngsIHAueSk7XG4gIH1cblxuICBwLnggPSByLnggKyB0aGlzLmxvbmcwO1xuICBwLnkgPSByLnk7XG4gIHJldHVybiBwO1xufVxuXG5leHBvcnQgdmFyIG5hbWVzID0gW1wiVGlsdGVkX1BlcnNwZWN0aXZlXCIsIFwidHBlcnNcIl07XG5leHBvcnQgZGVmYXVsdCB7XG4gIGluaXQ6IGluaXQsXG4gIGZvcndhcmQ6IGZvcndhcmQsXG4gIGludmVyc2U6IGludmVyc2UsXG4gIG5hbWVzOiBuYW1lc1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/tpers.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/utm.js":
/*!***************************************************!*\
  !*** ./node_modules/proj4/lib/projections/utm.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"dependsOn\": () => (/* binding */ dependsOn),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_zone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_zone */ \"./node_modules/proj4/lib/common/adjust_zone.js\");\n/* harmony import */ var _etmerc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./etmerc */ \"./node_modules/proj4/lib/projections/etmerc.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n\n\nvar dependsOn = 'etmerc';\n\nfunction init() {\n  var zone = (0,_common_adjust_zone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.zone, this.long0);\n\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n\n  this.lat0 = 0;\n  this.long0 = (6 * Math.abs(zone) - 183) * _constants_values__WEBPACK_IMPORTED_MODULE_2__.D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n  _etmerc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init.apply(this);\n  this.forward = _etmerc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].forward;\n  this.inverse = _etmerc__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inverse;\n}\nvar names = [\"Universal Transverse Mercator System\", \"utm\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3V0bS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9wcm9qNC9saWIvcHJvamVjdGlvbnMvdXRtLmpzP2NkY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFkanVzdF96b25lIGZyb20gJy4uL2NvbW1vbi9hZGp1c3Rfem9uZSc7XG5pbXBvcnQgZXRtZXJjIGZyb20gJy4vZXRtZXJjJztcbmV4cG9ydCB2YXIgZGVwZW5kc09uID0gJ2V0bWVyYyc7XG5pbXBvcnQge0QyUn0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cblxuZXhwb3J0IGZ1bmN0aW9uIGluaXQoKSB7XG4gIHZhciB6b25lID0gYWRqdXN0X3pvbmUodGhpcy56b25lLCB0aGlzLmxvbmcwKTtcbiAgaWYgKHpvbmUgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcigndW5rbm93biB1dG0gem9uZScpO1xuICB9XG4gIHRoaXMubGF0MCA9IDA7XG4gIHRoaXMubG9uZzAgPSAgKCg2ICogTWF0aC5hYnMoem9uZSkpIC0gMTgzKSAqIEQyUjtcbiAgdGhpcy54MCA9IDUwMDAwMDtcbiAgdGhpcy55MCA9IHRoaXMudXRtU291dGggPyAxMDAwMDAwMCA6IDA7XG4gIHRoaXMuazAgPSAwLjk5OTY7XG5cbiAgZXRtZXJjLmluaXQuYXBwbHkodGhpcyk7XG4gIHRoaXMuZm9yd2FyZCA9IGV0bWVyYy5mb3J3YXJkO1xuICB0aGlzLmludmVyc2UgPSBldG1lcmMuaW52ZXJzZTtcbn1cblxuZXhwb3J0IHZhciBuYW1lcyA9IFtcIlVuaXZlcnNhbCBUcmFuc3ZlcnNlIE1lcmNhdG9yIFN5c3RlbVwiLCBcInV0bVwiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgbmFtZXM6IG5hbWVzLFxuICBkZXBlbmRzT246IGRlcGVuZHNPblxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/utm.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/projections/vandg.js":
/*!*****************************************************!*\
  !*** ./node_modules/proj4/lib/projections/vandg.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"forward\": () => (/* binding */ forward),\n/* harmony export */   \"init\": () => (/* binding */ init),\n/* harmony export */   \"inverse\": () => (/* binding */ inverse),\n/* harmony export */   \"names\": () => (/* binding */ names)\n/* harmony export */ });\n/* harmony import */ var _common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/adjust_lon */ \"./node_modules/proj4/lib/common/adjust_lon.js\");\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _common_asinz__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/asinz */ \"./node_modules/proj4/lib/common/asinz.js\");\n\n\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\n\nfunction init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n\n  var dlon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n\n  var theta = (0,_common_asinz__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(2 * Math.abs(lat / Math.PI));\n\n  if (Math.abs(dlon) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN || Math.abs(Math.abs(lat) - _constants_values__WEBPACK_IMPORTED_MODULE_1__.HALF_PI) <= _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n    x = this.x0;\n\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    } //  return(OK);\n\n  }\n\n  var al = 0.5 * Math.abs(Math.PI / dlon - dlon / Math.PI);\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n\n  if (dlon < 0) {\n    con = -con;\n  }\n\n  x = this.x0 + con; //con = Math.abs(con / (Math.PI * this.R));\n\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\n\nfunction inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n  /* inverse equations\n    -----------------*/\n\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = 3 * d / a1 / m1;\n\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n\n  th1 = Math.acos(con) / 3;\n\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < _constants_values__WEBPACK_IMPORTED_MODULE_1__.EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = (0,_common_adjust_lon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\nvar names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3Byb2plY3Rpb25zL3ZhbmRnLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi9wcm9qZWN0aW9ucy92YW5kZy5qcz9hZmI3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhZGp1c3RfbG9uIGZyb20gJy4uL2NvbW1vbi9hZGp1c3RfbG9uJztcblxuaW1wb3J0IHtIQUxGX1BJLCBFUFNMTn0gZnJvbSAnLi4vY29uc3RhbnRzL3ZhbHVlcyc7XG5cbmltcG9ydCBhc2lueiBmcm9tICcuLi9jb21tb24vYXNpbnonO1xuXG4vKiBJbml0aWFsaXplIHRoZSBWYW4gRGVyIEdyaW50ZW4gcHJvamVjdGlvblxuICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0KCkge1xuICAvL3RoaXMuUiA9IDYzNzA5OTc7IC8vUmFkaXVzIG9mIGVhcnRoXG4gIHRoaXMuUiA9IHRoaXMuYTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZvcndhcmQocCkge1xuXG4gIHZhciBsb24gPSBwLng7XG4gIHZhciBsYXQgPSBwLnk7XG5cbiAgLyogRm9yd2FyZCBlcXVhdGlvbnNcbiAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIHZhciBkbG9uID0gYWRqdXN0X2xvbihsb24gLSB0aGlzLmxvbmcwKTtcbiAgdmFyIHgsIHk7XG5cbiAgaWYgKE1hdGguYWJzKGxhdCkgPD0gRVBTTE4pIHtcbiAgICB4ID0gdGhpcy54MCArIHRoaXMuUiAqIGRsb247XG4gICAgeSA9IHRoaXMueTA7XG4gIH1cbiAgdmFyIHRoZXRhID0gYXNpbnooMiAqIE1hdGguYWJzKGxhdCAvIE1hdGguUEkpKTtcbiAgaWYgKChNYXRoLmFicyhkbG9uKSA8PSBFUFNMTikgfHwgKE1hdGguYWJzKE1hdGguYWJzKGxhdCkgLSBIQUxGX1BJKSA8PSBFUFNMTikpIHtcbiAgICB4ID0gdGhpcy54MDtcbiAgICBpZiAobGF0ID49IDApIHtcbiAgICAgIHkgPSB0aGlzLnkwICsgTWF0aC5QSSAqIHRoaXMuUiAqIE1hdGgudGFuKDAuNSAqIHRoZXRhKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICB5ID0gdGhpcy55MCArIE1hdGguUEkgKiB0aGlzLlIgKiAtTWF0aC50YW4oMC41ICogdGhldGEpO1xuICAgIH1cbiAgICAvLyAgcmV0dXJuKE9LKTtcbiAgfVxuICB2YXIgYWwgPSAwLjUgKiBNYXRoLmFicygoTWF0aC5QSSAvIGRsb24pIC0gKGRsb24gLyBNYXRoLlBJKSk7XG4gIHZhciBhc3EgPSBhbCAqIGFsO1xuICB2YXIgc2ludGggPSBNYXRoLnNpbih0aGV0YSk7XG4gIHZhciBjb3N0aCA9IE1hdGguY29zKHRoZXRhKTtcblxuICB2YXIgZyA9IGNvc3RoIC8gKHNpbnRoICsgY29zdGggLSAxKTtcbiAgdmFyIGdzcSA9IGcgKiBnO1xuICB2YXIgbSA9IGcgKiAoMiAvIHNpbnRoIC0gMSk7XG4gIHZhciBtc3EgPSBtICogbTtcbiAgdmFyIGNvbiA9IE1hdGguUEkgKiB0aGlzLlIgKiAoYWwgKiAoZyAtIG1zcSkgKyBNYXRoLnNxcnQoYXNxICogKGcgLSBtc3EpICogKGcgLSBtc3EpIC0gKG1zcSArIGFzcSkgKiAoZ3NxIC0gbXNxKSkpIC8gKG1zcSArIGFzcSk7XG4gIGlmIChkbG9uIDwgMCkge1xuICAgIGNvbiA9IC1jb247XG4gIH1cbiAgeCA9IHRoaXMueDAgKyBjb247XG4gIC8vY29uID0gTWF0aC5hYnMoY29uIC8gKE1hdGguUEkgKiB0aGlzLlIpKTtcbiAgdmFyIHEgPSBhc3EgKyBnO1xuICBjb24gPSBNYXRoLlBJICogdGhpcy5SICogKG0gKiBxIC0gYWwgKiBNYXRoLnNxcnQoKG1zcSArIGFzcSkgKiAoYXNxICsgMSkgLSBxICogcSkpIC8gKG1zcSArIGFzcSk7XG4gIGlmIChsYXQgPj0gMCkge1xuICAgIC8veSA9IHRoaXMueTAgKyBNYXRoLlBJICogdGhpcy5SICogTWF0aC5zcXJ0KDEgLSBjb24gKiBjb24gLSAyICogYWwgKiBjb24pO1xuICAgIHkgPSB0aGlzLnkwICsgY29uO1xuICB9XG4gIGVsc2Uge1xuICAgIC8veSA9IHRoaXMueTAgLSBNYXRoLlBJICogdGhpcy5SICogTWF0aC5zcXJ0KDEgLSBjb24gKiBjb24gLSAyICogYWwgKiBjb24pO1xuICAgIHkgPSB0aGlzLnkwIC0gY29uO1xuICB9XG4gIHAueCA9IHg7XG4gIHAueSA9IHk7XG4gIHJldHVybiBwO1xufVxuXG4vKiBWYW4gRGVyIEdyaW50ZW4gaW52ZXJzZSBlcXVhdGlvbnMtLW1hcHBpbmcgeCx5IHRvIGxhdC9sb25nXG4gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5leHBvcnQgZnVuY3Rpb24gaW52ZXJzZShwKSB7XG4gIHZhciBsb24sIGxhdDtcbiAgdmFyIHh4LCB5eSwgeHlzLCBjMSwgYzIsIGMzO1xuICB2YXIgYTE7XG4gIHZhciBtMTtcbiAgdmFyIGNvbjtcbiAgdmFyIHRoMTtcbiAgdmFyIGQ7XG5cbiAgLyogaW52ZXJzZSBlcXVhdGlvbnNcbiAgICAtLS0tLS0tLS0tLS0tLS0tLSovXG4gIHAueCAtPSB0aGlzLngwO1xuICBwLnkgLT0gdGhpcy55MDtcbiAgY29uID0gTWF0aC5QSSAqIHRoaXMuUjtcbiAgeHggPSBwLnggLyBjb247XG4gIHl5ID0gcC55IC8gY29uO1xuICB4eXMgPSB4eCAqIHh4ICsgeXkgKiB5eTtcbiAgYzEgPSAtTWF0aC5hYnMoeXkpICogKDEgKyB4eXMpO1xuICBjMiA9IGMxIC0gMiAqIHl5ICogeXkgKyB4eCAqIHh4O1xuICBjMyA9IC0yICogYzEgKyAxICsgMiAqIHl5ICogeXkgKyB4eXMgKiB4eXM7XG4gIGQgPSB5eSAqIHl5IC8gYzMgKyAoMiAqIGMyICogYzIgKiBjMiAvIGMzIC8gYzMgLyBjMyAtIDkgKiBjMSAqIGMyIC8gYzMgLyBjMykgLyAyNztcbiAgYTEgPSAoYzEgLSBjMiAqIGMyIC8gMyAvIGMzKSAvIGMzO1xuICBtMSA9IDIgKiBNYXRoLnNxcnQoLWExIC8gMyk7XG4gIGNvbiA9ICgoMyAqIGQpIC8gYTEpIC8gbTE7XG4gIGlmIChNYXRoLmFicyhjb24pID4gMSkge1xuICAgIGlmIChjb24gPj0gMCkge1xuICAgICAgY29uID0gMTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICBjb24gPSAtMTtcbiAgICB9XG4gIH1cbiAgdGgxID0gTWF0aC5hY29zKGNvbikgLyAzO1xuICBpZiAocC55ID49IDApIHtcbiAgICBsYXQgPSAoLW0xICogTWF0aC5jb3ModGgxICsgTWF0aC5QSSAvIDMpIC0gYzIgLyAzIC8gYzMpICogTWF0aC5QSTtcbiAgfVxuICBlbHNlIHtcbiAgICBsYXQgPSAtKC1tMSAqIE1hdGguY29zKHRoMSArIE1hdGguUEkgLyAzKSAtIGMyIC8gMyAvIGMzKSAqIE1hdGguUEk7XG4gIH1cblxuICBpZiAoTWF0aC5hYnMoeHgpIDwgRVBTTE4pIHtcbiAgICBsb24gPSB0aGlzLmxvbmcwO1xuICB9XG4gIGVsc2Uge1xuICAgIGxvbiA9IGFkanVzdF9sb24odGhpcy5sb25nMCArIE1hdGguUEkgKiAoeHlzIC0gMSArIE1hdGguc3FydCgxICsgMiAqICh4eCAqIHh4IC0geXkgKiB5eSkgKyB4eXMgKiB4eXMpKSAvIDIgLyB4eCk7XG4gIH1cblxuICBwLnggPSBsb247XG4gIHAueSA9IGxhdDtcbiAgcmV0dXJuIHA7XG59XG5cbmV4cG9ydCB2YXIgbmFtZXMgPSBbXCJWYW5fZGVyX0dyaW50ZW5fSVwiLCBcIlZhbkRlckdyaW50ZW5cIiwgXCJ2YW5kZ1wiXTtcbmV4cG9ydCBkZWZhdWx0IHtcbiAgaW5pdDogaW5pdCxcbiAgZm9yd2FyZDogZm9yd2FyZCxcbiAgaW52ZXJzZTogaW52ZXJzZSxcbiAgbmFtZXM6IG5hbWVzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/projections/vandg.js\n");

/***/ }),

/***/ "./node_modules/proj4/lib/transform.js":
/*!*********************************************!*\
  !*** ./node_modules/proj4/lib/transform.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _constants_values__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/values */ \"./node_modules/proj4/lib/constants/values.js\");\n/* harmony import */ var _datum_transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./datum_transform */ \"./node_modules/proj4/lib/datum_transform.js\");\n/* harmony import */ var _adjust_axis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./adjust_axis */ \"./node_modules/proj4/lib/adjust_axis.js\");\n/* harmony import */ var _Proj__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Proj */ \"./node_modules/proj4/lib/Proj.js\");\n/* harmony import */ var _common_toPoint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/toPoint */ \"./node_modules/proj4/lib/common/toPoint.js\");\n/* harmony import */ var _checkSanity__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./checkSanity */ \"./node_modules/proj4/lib/checkSanity.js\");\n\n\n\n\n\n\n\nfunction checkNotWGS(source, dest) {\n  return (source.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || source.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) && dest.datumCode !== 'WGS84' || (dest.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_3PARAM || dest.datum.datum_type === _constants_values__WEBPACK_IMPORTED_MODULE_0__.PJD_7PARAM) && source.datumCode !== 'WGS84';\n}\n\nfunction transform(source, dest, point, enforceAxis) {\n  var wgs84;\n\n  if (Array.isArray(point)) {\n    point = (0,_common_toPoint__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(point);\n  }\n\n  (0,_checkSanity__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(point); // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new _Proj__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && source.axis !== 'enu') {\n    point = (0,_adjust_axis__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(source, false, point);\n  } // Transform source points to long/lat, if they aren't already.\n\n\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R,\n      y: point.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n\n    point = source.inverse(point); // Convert Cartesian to longlat\n\n    if (!point) {\n      return;\n    }\n  } // Adjust for the prime meridian if necessary\n\n\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  } // Convert datums if needed, and if possible.\n\n\n  point = (0,_datum_transform__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(source.datum, dest.datum, point);\n\n  if (!point) {\n    return;\n  } // Adjust for the prime meridian if necessary\n\n\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D,\n      y: point.y * _constants_values__WEBPACK_IMPORTED_MODULE_0__.R2D,\n      z: point.z || 0\n    };\n  } else {\n    // else project\n    point = dest.forward(point);\n\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  } // DGR, 2010/11/12\n\n\n  if (enforceAxis && dest.axis !== 'enu') {\n    return (0,_adjust_axis__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(dest, true, point);\n  }\n\n  return point;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvbGliL3RyYW5zZm9ybS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFFQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7O0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7O0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3Byb2o0L2xpYi90cmFuc2Zvcm0uanM/NTkyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0QyUiwgUjJELCBQSkRfM1BBUkFNLCBQSkRfN1BBUkFNfSBmcm9tICcuL2NvbnN0YW50cy92YWx1ZXMnO1xuaW1wb3J0IGRhdHVtX3RyYW5zZm9ybSBmcm9tICcuL2RhdHVtX3RyYW5zZm9ybSc7XG5pbXBvcnQgYWRqdXN0X2F4aXMgZnJvbSAnLi9hZGp1c3RfYXhpcyc7XG5pbXBvcnQgcHJvaiBmcm9tICcuL1Byb2onO1xuaW1wb3J0IHRvUG9pbnQgZnJvbSAnLi9jb21tb24vdG9Qb2ludCc7XG5pbXBvcnQgY2hlY2tTYW5pdHkgZnJvbSAnLi9jaGVja1Nhbml0eSc7XG5cbmZ1bmN0aW9uIGNoZWNrTm90V0dTKHNvdXJjZSwgZGVzdCkge1xuICByZXR1cm4gKChzb3VyY2UuZGF0dW0uZGF0dW1fdHlwZSA9PT0gUEpEXzNQQVJBTSB8fCBzb3VyY2UuZGF0dW0uZGF0dW1fdHlwZSA9PT0gUEpEXzdQQVJBTSkgJiYgZGVzdC5kYXR1bUNvZGUgIT09ICdXR1M4NCcpIHx8ICgoZGVzdC5kYXR1bS5kYXR1bV90eXBlID09PSBQSkRfM1BBUkFNIHx8IGRlc3QuZGF0dW0uZGF0dW1fdHlwZSA9PT0gUEpEXzdQQVJBTSkgJiYgc291cmNlLmRhdHVtQ29kZSAhPT0gJ1dHUzg0Jyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zZm9ybShzb3VyY2UsIGRlc3QsIHBvaW50LCBlbmZvcmNlQXhpcykge1xuICB2YXIgd2dzODQ7XG4gIGlmIChBcnJheS5pc0FycmF5KHBvaW50KSkge1xuICAgIHBvaW50ID0gdG9Qb2ludChwb2ludCk7XG4gIH1cbiAgY2hlY2tTYW5pdHkocG9pbnQpO1xuICAvLyBXb3JrYXJvdW5kIGZvciBkYXR1bSBzaGlmdHMgdG93Z3M4NCwgaWYgZWl0aGVyIHNvdXJjZSBvciBkZXN0aW5hdGlvbiBwcm9qZWN0aW9uIGlzIG5vdCB3Z3M4NFxuICBpZiAoc291cmNlLmRhdHVtICYmIGRlc3QuZGF0dW0gJiYgY2hlY2tOb3RXR1Moc291cmNlLCBkZXN0KSkge1xuICAgIHdnczg0ID0gbmV3IHByb2ooJ1dHUzg0Jyk7XG4gICAgcG9pbnQgPSB0cmFuc2Zvcm0oc291cmNlLCB3Z3M4NCwgcG9pbnQsIGVuZm9yY2VBeGlzKTtcbiAgICBzb3VyY2UgPSB3Z3M4NDtcbiAgfVxuICAvLyBER1IsIDIwMTAvMTEvMTJcbiAgaWYgKGVuZm9yY2VBeGlzICYmIHNvdXJjZS5heGlzICE9PSAnZW51Jykge1xuICAgIHBvaW50ID0gYWRqdXN0X2F4aXMoc291cmNlLCBmYWxzZSwgcG9pbnQpO1xuICB9XG4gIC8vIFRyYW5zZm9ybSBzb3VyY2UgcG9pbnRzIHRvIGxvbmcvbGF0LCBpZiB0aGV5IGFyZW4ndCBhbHJlYWR5LlxuICBpZiAoc291cmNlLnByb2pOYW1lID09PSAnbG9uZ2xhdCcpIHtcbiAgICBwb2ludCA9IHtcbiAgICAgIHg6IHBvaW50LnggKiBEMlIsXG4gICAgICB5OiBwb2ludC55ICogRDJSLFxuICAgICAgejogcG9pbnQueiB8fCAwXG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoc291cmNlLnRvX21ldGVyKSB7XG4gICAgICBwb2ludCA9IHtcbiAgICAgICAgeDogcG9pbnQueCAqIHNvdXJjZS50b19tZXRlcixcbiAgICAgICAgeTogcG9pbnQueSAqIHNvdXJjZS50b19tZXRlcixcbiAgICAgICAgejogcG9pbnQueiB8fCAwXG4gICAgICB9O1xuICAgIH1cbiAgICBwb2ludCA9IHNvdXJjZS5pbnZlcnNlKHBvaW50KTsgLy8gQ29udmVydCBDYXJ0ZXNpYW4gdG8gbG9uZ2xhdFxuICAgIGlmICghcG9pbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cbiAgLy8gQWRqdXN0IGZvciB0aGUgcHJpbWUgbWVyaWRpYW4gaWYgbmVjZXNzYXJ5XG4gIGlmIChzb3VyY2UuZnJvbV9ncmVlbndpY2gpIHtcbiAgICBwb2ludC54ICs9IHNvdXJjZS5mcm9tX2dyZWVud2ljaDtcbiAgfVxuXG4gIC8vIENvbnZlcnQgZGF0dW1zIGlmIG5lZWRlZCwgYW5kIGlmIHBvc3NpYmxlLlxuICBwb2ludCA9IGRhdHVtX3RyYW5zZm9ybShzb3VyY2UuZGF0dW0sIGRlc3QuZGF0dW0sIHBvaW50KTtcbiAgaWYgKCFwb2ludCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEFkanVzdCBmb3IgdGhlIHByaW1lIG1lcmlkaWFuIGlmIG5lY2Vzc2FyeVxuICBpZiAoZGVzdC5mcm9tX2dyZWVud2ljaCkge1xuICAgIHBvaW50ID0ge1xuICAgICAgeDogcG9pbnQueCAtIGRlc3QuZnJvbV9ncmVlbndpY2gsXG4gICAgICB5OiBwb2ludC55LFxuICAgICAgejogcG9pbnQueiB8fCAwXG4gICAgfTtcbiAgfVxuXG4gIGlmIChkZXN0LnByb2pOYW1lID09PSAnbG9uZ2xhdCcpIHtcbiAgICAvLyBjb252ZXJ0IHJhZGlhbnMgdG8gZGVjaW1hbCBkZWdyZWVzXG4gICAgcG9pbnQgPSB7XG4gICAgICB4OiBwb2ludC54ICogUjJELFxuICAgICAgeTogcG9pbnQueSAqIFIyRCxcbiAgICAgIHo6IHBvaW50LnogfHwgMFxuICAgIH07XG4gIH0gZWxzZSB7IC8vIGVsc2UgcHJvamVjdFxuICAgIHBvaW50ID0gZGVzdC5mb3J3YXJkKHBvaW50KTtcbiAgICBpZiAoZGVzdC50b19tZXRlcikge1xuICAgICAgcG9pbnQgPSB7XG4gICAgICAgIHg6IHBvaW50LnggLyBkZXN0LnRvX21ldGVyLFxuICAgICAgICB5OiBwb2ludC55IC8gZGVzdC50b19tZXRlcixcbiAgICAgICAgejogcG9pbnQueiB8fCAwXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIERHUiwgMjAxMC8xMS8xMlxuICBpZiAoZW5mb3JjZUF4aXMgJiYgZGVzdC5heGlzICE9PSAnZW51Jykge1xuICAgIHJldHVybiBhZGp1c3RfYXhpcyhkZXN0LCB0cnVlLCBwb2ludCk7XG4gIH1cblxuICByZXR1cm4gcG9pbnQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/proj4/lib/transform.js\n");

/***/ }),

/***/ "./node_modules/proj4/projs.js":
/*!*************************************!*\
  !*** ./node_modules/proj4/projs.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_projections_tmerc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/projections/tmerc */ \"./node_modules/proj4/lib/projections/tmerc.js\");\n/* harmony import */ var _lib_projections_etmerc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/projections/etmerc */ \"./node_modules/proj4/lib/projections/etmerc.js\");\n/* harmony import */ var _lib_projections_utm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/projections/utm */ \"./node_modules/proj4/lib/projections/utm.js\");\n/* harmony import */ var _lib_projections_sterea__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/projections/sterea */ \"./node_modules/proj4/lib/projections/sterea.js\");\n/* harmony import */ var _lib_projections_stere__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/projections/stere */ \"./node_modules/proj4/lib/projections/stere.js\");\n/* harmony import */ var _lib_projections_somerc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/projections/somerc */ \"./node_modules/proj4/lib/projections/somerc.js\");\n/* harmony import */ var _lib_projections_omerc__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/projections/omerc */ \"./node_modules/proj4/lib/projections/omerc.js\");\n/* harmony import */ var _lib_projections_lcc__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/projections/lcc */ \"./node_modules/proj4/lib/projections/lcc.js\");\n/* harmony import */ var _lib_projections_krovak__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/projections/krovak */ \"./node_modules/proj4/lib/projections/krovak.js\");\n/* harmony import */ var _lib_projections_cass__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/projections/cass */ \"./node_modules/proj4/lib/projections/cass.js\");\n/* harmony import */ var _lib_projections_laea__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/projections/laea */ \"./node_modules/proj4/lib/projections/laea.js\");\n/* harmony import */ var _lib_projections_aea__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./lib/projections/aea */ \"./node_modules/proj4/lib/projections/aea.js\");\n/* harmony import */ var _lib_projections_gnom__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./lib/projections/gnom */ \"./node_modules/proj4/lib/projections/gnom.js\");\n/* harmony import */ var _lib_projections_cea__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/projections/cea */ \"./node_modules/proj4/lib/projections/cea.js\");\n/* harmony import */ var _lib_projections_eqc__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./lib/projections/eqc */ \"./node_modules/proj4/lib/projections/eqc.js\");\n/* harmony import */ var _lib_projections_poly__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./lib/projections/poly */ \"./node_modules/proj4/lib/projections/poly.js\");\n/* harmony import */ var _lib_projections_nzmg__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lib/projections/nzmg */ \"./node_modules/proj4/lib/projections/nzmg.js\");\n/* harmony import */ var _lib_projections_mill__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./lib/projections/mill */ \"./node_modules/proj4/lib/projections/mill.js\");\n/* harmony import */ var _lib_projections_sinu__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./lib/projections/sinu */ \"./node_modules/proj4/lib/projections/sinu.js\");\n/* harmony import */ var _lib_projections_moll__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./lib/projections/moll */ \"./node_modules/proj4/lib/projections/moll.js\");\n/* harmony import */ var _lib_projections_eqdc__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./lib/projections/eqdc */ \"./node_modules/proj4/lib/projections/eqdc.js\");\n/* harmony import */ var _lib_projections_vandg__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./lib/projections/vandg */ \"./node_modules/proj4/lib/projections/vandg.js\");\n/* harmony import */ var _lib_projections_aeqd__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./lib/projections/aeqd */ \"./node_modules/proj4/lib/projections/aeqd.js\");\n/* harmony import */ var _lib_projections_ortho__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./lib/projections/ortho */ \"./node_modules/proj4/lib/projections/ortho.js\");\n/* harmony import */ var _lib_projections_qsc__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./lib/projections/qsc */ \"./node_modules/proj4/lib/projections/qsc.js\");\n/* harmony import */ var _lib_projections_robin__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./lib/projections/robin */ \"./node_modules/proj4/lib/projections/robin.js\");\n/* harmony import */ var _lib_projections_geocent__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./lib/projections/geocent */ \"./node_modules/proj4/lib/projections/geocent.js\");\n/* harmony import */ var _lib_projections_tpers__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./lib/projections/tpers */ \"./node_modules/proj4/lib/projections/tpers.js\");\n/* harmony import */ var _lib_projections_geos__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./lib/projections/geos */ \"./node_modules/proj4/lib/projections/geos.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(proj4) {\n  proj4.Proj.projections.add(_lib_projections_tmerc__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_etmerc__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_utm__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_sterea__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_stere__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_somerc__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_omerc__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_lcc__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_krovak__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_cass__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_laea__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_aea__WEBPACK_IMPORTED_MODULE_11__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_gnom__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_cea__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_eqc__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_poly__WEBPACK_IMPORTED_MODULE_15__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_nzmg__WEBPACK_IMPORTED_MODULE_16__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_mill__WEBPACK_IMPORTED_MODULE_17__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_sinu__WEBPACK_IMPORTED_MODULE_18__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_moll__WEBPACK_IMPORTED_MODULE_19__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_eqdc__WEBPACK_IMPORTED_MODULE_20__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_vandg__WEBPACK_IMPORTED_MODULE_21__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_aeqd__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_ortho__WEBPACK_IMPORTED_MODULE_23__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_qsc__WEBPACK_IMPORTED_MODULE_24__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_robin__WEBPACK_IMPORTED_MODULE_25__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_geocent__WEBPACK_IMPORTED_MODULE_26__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_tpers__WEBPACK_IMPORTED_MODULE_27__[\"default\"]);\n  proj4.Proj.projections.add(_lib_projections_geos__WEBPACK_IMPORTED_MODULE_28__[\"default\"]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcHJvajQvcHJvanMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcHJvajQvcHJvanMuanM/NTdhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdG1lcmMgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvdG1lcmMnO1xuaW1wb3J0IGV0bWVyYyBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9ldG1lcmMnO1xuaW1wb3J0IHV0bSBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy91dG0nO1xuaW1wb3J0IHN0ZXJlYSBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9zdGVyZWEnO1xuaW1wb3J0IHN0ZXJlIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL3N0ZXJlJztcbmltcG9ydCBzb21lcmMgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvc29tZXJjJztcbmltcG9ydCBvbWVyYyBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9vbWVyYyc7XG5pbXBvcnQgbGNjIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2xjYyc7XG5pbXBvcnQga3JvdmFrIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2tyb3Zhayc7XG5pbXBvcnQgY2FzcyBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9jYXNzJztcbmltcG9ydCBsYWVhIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2xhZWEnO1xuaW1wb3J0IGFlYSBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9hZWEnO1xuaW1wb3J0IGdub20gZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvZ25vbSc7XG5pbXBvcnQgY2VhIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2NlYSc7XG5pbXBvcnQgZXFjIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2VxYyc7XG5pbXBvcnQgcG9seSBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9wb2x5JztcbmltcG9ydCBuem1nIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL256bWcnO1xuaW1wb3J0IG1pbGwgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvbWlsbCc7XG5pbXBvcnQgc2ludSBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9zaW51JztcbmltcG9ydCBtb2xsIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL21vbGwnO1xuaW1wb3J0IGVxZGMgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvZXFkYyc7XG5pbXBvcnQgdmFuZGcgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvdmFuZGcnO1xuaW1wb3J0IGFlcWQgZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvYWVxZCc7XG5pbXBvcnQgb3J0aG8gZnJvbSAnLi9saWIvcHJvamVjdGlvbnMvb3J0aG8nO1xuaW1wb3J0IHFzYyBmcm9tICcuL2xpYi9wcm9qZWN0aW9ucy9xc2MnO1xuaW1wb3J0IHJvYmluIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL3JvYmluJztcbmltcG9ydCBnZW9jZW50IGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2dlb2NlbnQnO1xuaW1wb3J0IHRwZXJzIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL3RwZXJzJztcbmltcG9ydCBnZW9zIGZyb20gJy4vbGliL3Byb2plY3Rpb25zL2dlb3MnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHJvajQpe1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZCh0bWVyYyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKGV0bWVyYyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHV0bSk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHN0ZXJlYSk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHN0ZXJlKTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQoc29tZXJjKTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQob21lcmMpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChsY2MpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChrcm92YWspO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChjYXNzKTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQobGFlYSk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKGFlYSk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKGdub20pO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChjZWEpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChlcWMpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChwb2x5KTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQobnptZyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKG1pbGwpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChzaW51KTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQobW9sbCk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKGVxZGMpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZCh2YW5kZyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKGFlcWQpO1xuICBwcm9qNC5Qcm9qLnByb2plY3Rpb25zLmFkZChvcnRobyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHFzYyk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHJvYmluKTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQoZ2VvY2VudCk7XG4gIHByb2o0LlByb2oucHJvamVjdGlvbnMuYWRkKHRwZXJzKTtcbiAgcHJvajQuUHJvai5wcm9qZWN0aW9ucy5hZGQoZ2Vvcyk7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/proj4/projs.js\n");

/***/ }),

/***/ "./node_modules/proj4js-definitions/proj4js-definitions.js":
/*!*****************************************************************!*\
  !*** ./node_modules/proj4js-definitions/proj4js-definitions.js ***!
  \*****************************************************************/
/***/ ((module) => {

eval("/* pass 1 */\nconst A = ' +no_defs',\n      B = ' +towgs84=0,0,0,0,0,0,0',\n      C = ' +ellps=GRS80',\n      D = '+proj=tmerc',\n      E = ' +units=m',\n      F = ' +towgs84=23.92,-141.27,-80.9,-0,0.35,0.82,-0.12',\n      G = ' +towgs84=24.47,-130.89,-81.56,-0,-0,0.13,-0.22',\n      H = '+proj=lcc',\n      I = '+proj=utm',\n      J = ' +units=us-ft',\n      K = '+proj=longlat',\n      L = ' +lat_0=0',\n      M = ' +ellps=krass',\n      N = ' +y_0=0',\n      O = ' +x_0=500000',\n      P = ' +towgs84=0,0,4.5,0,0,0.554,0.2263',\n      Q = ' +towgs84=0,0,1.9,0,0,0.814,-0.38',\n      R = ' +ellps=intl',\n      S = ' +datum=WGS84',\n      T = ' +ellps=WGS72',\n      U = ' +towgs84=15.8,-154.4,-82.3,0,0,0,0',\n      V = ' +k=0.9999',\n      W = ' +towgs84=59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n      X = ' +datum=NAD27',\n      Y = ' +ellps=bessel',\n      Z = ' +x_0=609601.2192024384',\n      a = ' +x_0=600000',\n      b = ' +towgs84=33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84',\n      c = ' +ellps=clrk80',\n      d = ' +b=6356755.288157528',\n      e = ' +x_0=152400.3048006096',\n      f = ' +lat_0=36.66666666666666',\n      g = ' +towgs84=-146.414,507.337,680.507,0,0,0,0',\n      h = ' +x_0=200000',\n      i = ' +ellps=clrk66',\n      j = ' +ellps=WGS84',\n      k = ' +x_0=500000.001016002',\n      l = ' +x_0=240000',\n      m = ' +lat_0=-90',\n      n = ' +towgs84=-87,-98,-121,0,0,0,0',\n      o = ' +south',\n      p = ' +lat_0=41.66666666666666',\n      q = ' +y_0=36000',\n      r = ' +towgs84=-117.808,-51.536,137.784,0.303,0.446,0.234,-0.29',\n      s = ' +x_0=0',\n      t = ' +units=ft',\n      u = ' +x_0=400000',\n      v = ' +towgs84=-115.854,-99.0583,-152.462,0,0,0,0',\n      w = ' +towgs84=-208.406,-109.878,-2.5764,0,0,0,0',\n      x = ' +ellps=aust_SA',\n      y = ' +lat_0=39.33333333333334',\n      z = ' +towgs84=577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n      AA = ' +lat_0=37.66666666666666',\n      AB = ' +lat_0=36.33333333333334',\n      AC = ' +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n      AD = ' +y_0=500000.0001016001',\n      AE = ' +x_0=200000.0001016002',\n      AF = ' +x_0=500000.0001016001',\n      AG = ' +x_0=500000.00001016',\n      AH = ' +y_0=1000000',\n      AI = ' +x_0=300000',\n      AJ = ' +lon_0=-120.5',\n      AK = ' +lat_0=43.66666666666666',\n      AL = ' +lat_0=43.83333333333334',\n      AM = ' +lat_1=-68.66666666666667',\n      AN = ' +lat_2=-71.33333333333333',\n      AO = ' +k=0.999966667',\n      AP = ' +k=0.9996',\n      AQ = ' +lat_0=38.33333333333334',\n      AR = ' +lat_1=73.66666666666667',\n      AS = ' +lat_2=70.33333333333333',\n      AT = ' +lat_0=72.02500919444445',\n      AU = ' +a=6378249.2',\n      AV = ' +x_0=1500000',\n      AW = ' +lat_ts=-80.23861111111111',\n      AX = ' +towgs84=-288,175,-376,0,0,0,0',\n      AY = ' +lat_1=41.78333333333333',\n      AZ = ' +lat_2=-75.33333333333333',\n      Aa = ' +towgs84=278.3,93,474.5,7.889,0.05,-6.61,6.21',\n      Ab = ' +x_0=304800',\n      Ac = ' +x_0=2000000.0001016',\n      Ad = ' +k=0.9999375',\n      Ae = ' +y_0=500000',\n      Af = ' +towgs84=-209.362,-87.8162,404.62,0.0046,3.4784,0.5805,-1.4547',\n      Ag = ' +lon_0=-100.3333333333333',\n      Ah = ' +lat_1=-72.66666666666667',\n      Ai = ' +lat_1=-76.66666666666667',\n      Aj = ' +lat_2=-79.33333333333333',\n      Ak = ' +y_0=10000000',\n      Al = ' +towgs84=-57,1,-41,0,0,0,0',\n      Am = ' +k=0.999941177',\n      An = ' +x_0=800000.0000101599',\n      Ao = ' +y_0=99999.99998983997',\n      Ap = ' +lat_1=38.43333333333333',\n      Aq = ' +lat_0=24.33333333333333',\n      Ar = ' +towgs84=26,-121,-78,0,0,0,0',\n      As = ' +a=6378140',\n      At = ' +towgs84=-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496',\n      Au = ' +x_0=399999.99998984',\n      Av = ' +towgs84=-24,-15,5,0,0,0,0',\n      Aw = ' +towgs84=682,-203,480,0,0,0,0',\n      Ax = ' +towgs84=-136,-108,-292,0,0,0,0',\n      Ay = ' +b=6356075.41314024',\n      Az = ' +lat_1=37.96666666666667',\n      BA = ' +lat_0=38.83333333333334',\n      BB = ' +lat_0=40.16666666666666',\n      BC = ' +lat_0=34.33333333333334',\n      BD = ' +lat_0=42.83333333333334',\n      BE = ' +lon_0=-84.36666666666666',\n      BF = ' +x_0=300000.0000000001',\n      BG = ' +k=0.999933333',\n      BH = ' +lat_1=48.73333333333333',\n      BI = ' +lon_0=-111.5',\n      BJ = ' +k=0.9999473679999999',\n      BK = ' +towgs84=-67.35,3.88,-38.22,0,0,0,0',\n      BL = ' +lat_2=73.66666666666667',\n      BM = ' +lat_0=75.36440330555556',\n      BN = ' +b=6356515',\n      BO = ' +towgs84=25,-141,-78.5,-0,0.35,0.736,0',\n      BP = '+proj=stere',\n      BQ = ' +lat_1=-64.66666666666667',\n      BR = ' +lat_2=-67.33333333333333',\n      BS = ' +b=6356514.966398753',\n      BT = ' +towgs84=295,736,257,0,0,0,0',\n      BU = ' +x_0=100000',\n      BV = ' +towgs84=-11,851,5,0,0,0,0',\n      BW = ' +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0',\n      BX = ' +towgs84=-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06',\n      BY = ' +lat_0=39.66666666666666',\n      BZ = ' +x_0=1000000',\n      Ba = ' +lon_0=-105.5',\n      Bb = ' +towgs84=482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15',\n      Bc = ' +a=6378249.145',\n      Bd = ' +x_0=2000000',\n      Be = ' +lat_0=45.66666666666666',\n      Bf = ' +lat_1=80.33333333333333',\n      Bg = ' +lat_0=78.70733752777778',\n      Bh = ' +b=6356774.50408554',\n      Bi = ' +lon_0=-91.33333333333333',\n      Bj = ' +lon_0=-123.3333333333333',\n      Bk = ' +towgs84=-168,-60,320,0,0,0,0',\n      Bl = ' +lat_0=31',\n      Bm = ' +towgs84=0.072,-0.507,-0.245,-0.0183,0.0003,-0.007,-0.0093',\n      Bn = ' +x_0=150000',\n      Bo = ' +x_0=3500000',\n      Bp = ' +towgs84=213.11,9.37,-74.95,0,0,0,0',\n      Bq = ' +lat_1=43.66666666666666',\n      Br = ' +lat_0=40.33333333333334',\n      Bs = ' +towgs84=-148,136,90,0,0,0,0',\n      Bt = ' +towgs84=616,97,-251,0,0,0,0',\n      Bu = ' +lon_0=-90',\n      Bv = ' +x_0=250000',\n      Bw = ' +x_0=914401.8288036576',\n      Bx = ' +lon_0=-90.33333333333333',\n      By = ' +a=6377276.345',\n      Bz = ' +b=6356103.038993155',\n      CA = ' +lat_0=40.5',\n      CB = ' +towgs84=-134,-48,149,0,0,0,0',\n      CC = ' +towgs84=25,-141,-78.5,0,0.35,0.736,0',\n      CD = ' +lat_1=27.83333333333333',\n      CE = ' +lat_2=26.16666666666667',\n      CF = ' +lat_2=40.71666666666667',\n      CG = ' +lat_2=39.01666666666667',\n      CH = ' +lat_2=37.21666666666667',\n      CI = ' +lat_1=70.33333333333333',\n      CJ = ' +lat_0=68.68747555555557',\n      CK = ' +towgs84=-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68',\n      CL = ' +y_0=304800.6096012192',\n      CM = ' +x_0=699999.9998983998',\n      CN = ' +y_0=999999.9998983998',\n      CO = ' +y_0=800000',\n      CP = ' +k=0.99995',\n      CQ = ' +lat_0=34.75',\n      CR = ' +lon_0=-81',\n      CS = ' +lon_0=-100',\n      CT = ' +b=6356098.145120132',\n      CU = '+proj=omerc',\n      CV = ' +lon_0=-98.5',\n      CW = ' +towgs84=-103.746,-9.614,-255.95,0,0,0,0',\n      CX = ' +x_0=800000',\n      CY = ' +lat_0=37.83333333333334',\n      CZ = ' +lat_2=44.33333333333334',\n      Ca = ' +lat_2=42.33333333333334',\n      Cb = ' +lat_0=29.66666666666667',\n      Cc = ' +lat_0=25.66666666666667',\n      Cd = ' +lat_0=35.83333333333334',\n      Ce = ' +lat_1=83.66666666666667',\n      Cf = ' +lat_2=80.33333333333333',\n      Cg = ' +lat_0=82.05842488888888',\n      Ch = ' +lat_0=38',\n      Ci = ' +x_0=2500000',\n      Cj = ' +towgs84=-377,681,-50,0,0,0,0',\n      Ck = '+proj=cass',\n      Cl = ' +y_0=2000000',\n      Cm = ' +towgs84=-143,-236,7,0,0,0,0',\n      Cn = ' +lon_0=-110.1666666666667',\n      Co = ' +lon_0=-111.9166666666667',\n      Cp = ' +lon_0=-75.41666666666667',\n      Cq = ' +lon_0=-82.16666666666667',\n      Cr = ' +lon_0=-84.16666666666667',\n      Cs = ' +lon_0=-112.1666666666667',\n      Ct = ' +lon_0=-88.83333333333333',\n      Cu = ' +lon_0=-104.3333333333333',\n      Cv = ' +lon_0=-107.8333333333333',\n      Cw = ' +lon_0=-76.58333333333333',\n      Cx = ' +lon_0=-78.58333333333333',\n      Cy = ' +lon_0=-120.8333333333333',\n      Cz = ' +lon_0=-88.33333333333333',\n      DA = ' +lon_0=-90.16666666666667',\n      DB = ' +lon_0=-85.66666666666667',\n      DC = ' +lon_0=-87.08333333333333',\n      DD = ' +lon_0=-70.16666666666667',\n      DE = ' +lon_0=-93.09999999999999',\n      DF = ' +lon_0=-115.5833333333333',\n      DG = ' +lon_0=-116.6666666666667',\n      DH = ' +lon_0=-118.5833333333333',\n      DI = ' +lon_0=-71.66666666666667',\n      DJ = ' +lon_0=-105.1666666666667',\n      DK = ' +lon_0=-107.3333333333333',\n      DL = ' +lon_0=-110.0833333333333',\n      DM = ' +lat_0=37.5',\n      DN = ' +y_0=700000',\n      DO = ' +towgs84=-242.2,-144.9,370.3,0,0,0,0',\n      DP = ' +x_0=4500000',\n      DQ = ' +y_0=1500000',\n      DR = ' +x_0=599999.9999976',\n      DS = ' +towgs84=-275.722,94.7824,340.894,-8.001,-4.42,-11.821,1',\n      DT = '+proj=aea',\n      DU = ' +y_0=-2500000',\n      DV = ' +lat_2=38.96666666666667',\n      DW = ' +lat_1=41.66666666666666',\n      DX = ' +lat_1=39.83333333333334',\n      DY = ' +lat_2=38.33333333333334',\n      DZ = ' +lat_2=37.06666666666667',\n      Da = ' +lat_0=35.33333333333334',\n      Db = ' +lat_1=35.46666666666667',\n      Dc = ' +lat_2=34.03333333333333',\n      Dd = ' +lat_1=33.88333333333333',\n      De = ' +lat_2=32.78333333333333',\n      Df = ' +lat_0=32.16666666666666',\n      Dg = ' +lat_2=37.23333333333333',\n      Dh = ' +lat_1=41.86666666666667',\n      Di = ' +lat_0=40.83333333333334',\n      Dj = ' +lat_2=29.58333333333333',\n      Dk = ' +lat_2=41.71666666666667',\n      Dl = ' +lat_1=41.03333333333333',\n      Dm = ' +lat_2=40.66666666666666',\n      Dn = ' +lat_1=36.76666666666667',\n      Do = ' +lat_0=33.33333333333334',\n      Dp = ' +lat_1=40.96666666666667',\n      Dq = ' +lat_2=39.93333333333333',\n      Dr = ' +lat_0=31.83333333333333',\n      Ds = ' +lat_0=31.66666666666667',\n      Dt = ' +lat_0=27.83333333333333',\n      Du = ' +lat_2=36.76666666666667',\n      Dv = ' +lat_0=45.33333333333334',\n      Dw = ' +lat_0=45.16666666666666',\n      Dx = ' +lat_1=36.23333333333333',\n      Dy = ' +lat_2=34.93333333333333',\n      Dz = ' +lat_1=34.76666666666667',\n      EA = ' +lat_0=32.66666666666666',\n      EB = ' +lat_1=43.26666666666667',\n      EC = ' +lat_2=42.06666666666667',\n      ED = ' +lat_2=40.61666666666667',\n      EE = ' +lat_1=39.78333333333333',\n      EF = ' +lat_2=38.71666666666667',\n      EG = ' +lat_1=38.56666666666667',\n      EH = ' +lat_2=37.26666666666667',\n      EI = ' +lat_0=41.08333333333334',\n      EJ = ' +lat_0=42.33333333333334',\n      EK = ' +y_0=100000',\n      EL = ' +b=6356173.508712696',\n      EM = ' +y_0=5500000',\n      EN = ' +lon_0=105',\n      EO = ' +y_0=-5000000',\n      EP = ' +k=0.9995000000000001',\n      EQ = ' +k=0.9999749999999999',\n      ER = ' +towgs84=-160,-6,-302,0,0,0,0',\n      ES = ' +towgs84=307,304,-318,0,0,0,0',\n      ET = ' +lon_0=-82.5',\n      EU = ' +towgs84=70.995,-335.916,262.898,0,0,0,0',\n      EV = ' +towgs84=-304.046,-60.576,103.64,0,0,0,0',\n      EW = ' +x_0=700000',\n      EX = ' +x_0=213360',\n      EY = ' +lon_0=-85.75',\n      EZ = ' +lon_0=-100.5',\n      Ea = ' +lon_0=-77.75',\n      Eb = ' +x_0=999999.9999898402',\n      Ec = ' +towgs84=-151.99,287.04,-147.45,0,0,0,0',\n      Ed = ' +lon_0=129',\n      Ee = ' +a=6378293.645208759',\n      Ef = ' +b=6356617.987679838',\n      Eg = ' +x_0=5500000',\n      Eh = ' +lat_1=40.78333333333333',\n      Ei = ' +lat_2=39.71666666666667',\n      Ej = ' +lat_1=37.93333333333333',\n      Ek = ' +lat_2=36.73333333333333',\n      El = ' +lat_1=42.68333333333333',\n      Em = ' +lat_1=41.48333333333333',\n      En = ' +lat_2=41.28333333333333',\n      Eo = ' +lat_1=47.08333333333334',\n      Ep = ' +lat_2=45.48333333333333',\n      Eq = ' +lat_0=44.78333333333333',\n      Er = ' +lat_2=44.18333333333333',\n      Es = ' +lat_0=43.31666666666667',\n      Et = ' +lat_1=36.16666666666666',\n      Eu = ' +lat_2=34.33333333333334',\n      Ev = ' +lat_2=47.43333333333333',\n      Ew = ' +lat_1=47.48333333333333',\n      Ex = ' +lat_2=46.18333333333333',\n      Ey = ' +lat_2=35.56666666666667',\n      Ez = ' +lat_1=35.23333333333333',\n      FA = ' +lat_2=33.93333333333333',\n      FB = ' +lat_2=40.88333333333333',\n      FC = ' +lat_1=34.83333333333334',\n      FD = ' +lat_1=36.41666666666666',\n      FE = ' +lat_1=36.18333333333333',\n      FF = ' +lat_1=33.96666666666667',\n      FG = ' +lat_2=32.13333333333333',\n      FH = ' +lat_1=31.88333333333333',\n      FI = ' +lat_2=30.11666666666667',\n      FJ = ' +lat_1=30.28333333333333',\n      FK = ' +lat_2=28.38333333333333',\n      FL = ' +lat_2=38.03333333333333',\n      FM = ' +lat_1=47.33333333333334',\n      FN = ' +lat_2=45.83333333333334',\n      FO = ' +lat_1=46.76666666666667',\n      FP = ' +lat_2=45.56666666666667',\n      FQ = ' +lat_1=44.06666666666667',\n      FR = ' +lat_2=42.73333333333333',\n      FS = ' +lat_1=32.66666666666666',\n      FT = ' +lat_2=31.16666666666667',\n      FU = ' +lat_1=48.63333333333333',\n      FV = ' +lat_2=47.03333333333333',\n      FW = ' +lat_2=45.61666666666667',\n      FX = ' +lat_1=45.21666666666667',\n      FY = ' +lat_2=43.78333333333333',\n      FZ = ' +lat_0=39.83333333333334',\n      Fa = ' +lat_2=40.43333333333333',\n      Fb = ' +lat_1=40.03333333333333',\n      Fc = ' +lat_2=38.73333333333333',\n      Fd = ' +lat_1=45.68333333333333',\n      Fe = ' +lat_2=44.41666666666666',\n      Ff = ' +lat_2=42.83333333333334',\n      Fg = ' +lat_1=38.88333333333333',\n      Fh = ' +lat_2=37.48333333333333',\n      Fi = ' +lat_1=37.08333333333334',\n      Fj = ' +lat_2=38.66666666666666',\n      Fk = ' +lat_0=58',\n      Fl = ' +lon_0=-98',\n      Fm = ' +lon_0=117',\n      Fn = ' +lon_0=135',\n      Fo = ' +lat_0=41.5',\n      Fp = ' +lat_0=42.5',\n      Fq = ' +y_0=3000000',\n      Fr = ' +lon_0=123',\n      Fs = ' +lat_0=40',\n      Ft = ' +lat_0=54',\n      Fu = ' +towgs84=-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188',\n      Fv = ' +towgs84=565.417,50.3319,465.552,-0.398957,0.343988,-1.8774,4.0725',\n      Fw = ' +x_0=914401.8289',\n      Fx = ' +y_0=304800.6096',\n      Fy = ' +lon_0=111',\n      Fz = ' +k_0=0.99878641',\n      GA = ' +lon_0=-66.43333333333334',\n      GB = ' +towgs84=61,-285,-181,0,0,0,0',\n      GC = ' +towgs84=-133,-77,-51,0,0,0,0',\n      GD = ' +towgs84=-679,669,-48,0,0,0,0',\n      GE = ' +lon_0=-71.5',\n      GF = ' +lon_0=-78.5',\n      GG = ' +lon_0=-93.5',\n      GH = ' +lat_0=41.75',\n      GI = ' +y_0=249999.9998983998',\n      GJ = ' +y_0=999999.9999898402',\n      GK = ' +to_meter=1.0000135965',\n      GL = ' +a=6377304.063',\n      GM = ' +lat_0=36',\n      GN = ' +towgs84=-79.9,-158,-168.9,0,0,0,0',\n      GO = ' +towgs84=-50.9,-347.6,-231,0,0,0,0',\n      GP = ' +towgs84=-106.869,52.2978,-103.724,0.3366,-0.457,1.8422,-1.2747',\n      GQ = ' +towgs84=283,682,231,0,0,0,0',\n      GR = ' +towgs84=-206,172,-6,0,0,0,0',\n      GS = ' +towgs84=-92,-93,122,0,0,0,0',\n      GT = ' +to_meter=0.9143985307444408',\n      GU = '+proj=sterea',\n      GV = ' +lat_0=21.16666666666667',\n      GW = ' +lat_1=18.43333333333333',\n      GX = ' +lat_2=18.03333333333333',\n      GY = ' +lat_0=17.83333333333333',\n      GZ = ' +gamma=323.1301023611111',\n      Ga = ' +lon_0=-79.5',\n      Gb = ' +y_0=4500000',\n      Gc = ' +x_0=31500000',\n      Gd = ' +x_0=500000.0001504',\n      Ge = ' +b=6356514.96582849',\n      Gf = ' +towgs84=674.4,15.1,405.3,0,0,0,0',\n      Gg = ' +towgs84=-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.7101',\n      Gh = ' +towgs84=589,76,480,0,0,0,0',\n      Gi = ' +towgs84=-263,6,431,0,0,0,0',\n      Gj = ' +lon_0=15',\n      Gk = ' +axis=wsu',\n      Gl = ' +lon_0=21',\n      Gm = ' +lat_0=30',\n      Gn = ' +ellps=helmert',\n      Go = ' +a=6377299.151',\n      Gp = ' +lon_0=-74.5',\n      Gq = ' +b=6356750.304921594',\n      Gr = ' +y_0=2000000.0001016',\n      Gs = ' +x_0=3500000.0001016',\n      Gt = ' +y_0=399999.99998984',\n      Gu = ' +x_0=200000.00001016',\n      Gv = ' +b=6356098.359005156',\n      Gw = ' +x_0=14500000',\n      Gx = ' +x_0=29500000',\n      Gy = ' +towgs84=-117,-132,-164,0,0,0,0',\n      Gz = ' +zone=20',\n      HA = ' +lon_0=-122',\n      HB = ' +ellps=bess_nam',\n      HC = ' +lon_0=-86.15000000000001',\n      HD = ' +towgs84=-189,-242,-91,0,0,0,0',\n      HE = ' +towgs84=-265,120,-358,0,0,0,0',\n      HF = ' +towgs84=-73.472,-51.66,-112.482,0.953,4.6,-2.368,0.586',\n      HG = ' +towgs84=-17.51,-108.32,-62.39,0,0,0,0',\n      HH = ' +towgs84=-10.18,-350.43,291.37,0,0,0,0',\n      HI = ' +towgs84=-190.421,8.532,238.69,0,0,0,0',\n      HJ = ' +lon_0=-68.5',\n      HK = ' +a=6377299.36559538',\n      HL = ' +x_0=79999.99999968',\n      HM = ' +x_0=50000.00001504',\n      HN = ' +lon_0=0',\n      HO = ' +lon_0=27',\n      HP = ' +lon_0=75',\n      HQ = ' +lon_0=81',\n      HR = ' +lon_0=93',\n      HS = ' +lon_0=99',\n      HT = ' +x_0=900000',\n      HU = ' +x_0=13500000',\n      HV = ' +x_0=20500000',\n      HW = ' +x_0=22500000',\n      HX = ' +towgs84=-166,-15,204,0,0,0,0',\n      HY = ' +towgs84=-130,110,-13,0,0,0,0',\n      HZ = ' +towgs84=-587.8,519.75,145.76,0,0,0,0',\n      Ha = ' +lat_2=83.66666666666667',\n      Hb = ' +lat_0=85.43711833333333',\n      Hc = ' +towgs84=-273.5,110.6,-357.9,0,0,0,0',\n      Hd = ' +lon_0=87',\n      He = '+proj=laea',\n      Hf = ' +towgs84=-403,684,41,0,0,0,0',\n      Hg = ' +lon_0=-92.5',\n      Hh = ' +y_0=6000000',\n      Hi = ' +zone=19',\n      Hj = ' +lat_0=29.5',\n      Hk = ' +y_0=300000',\n      Hl = ' +lat_2=45.5',\n      Hm = ' +k=0.999909091',\n      Hn = ' +a=6377492.018',\n      Ho = ' +b=6356751.689189189',\n      Hp = ' +b=6356100.230165384',\n      Hq = ' +lon_0=90',\n      Hr = ' +lat_0=90',\n      Hs = ' +x_0=18500000',\n      Ht = ' +x_0=19500000',\n      Hu = ' +x_0=15500000',\n      Hv = ' +x_0=16500000',\n      Hw = ' +x_0=21500000',\n      Hx = ' +x_0=23500000',\n      Hy = ' +x_0=25500000',\n      Hz = ' +x_0=26500000',\n      IA = ' +x_0=27500000',\n      IB = ' +x_0=28500000',\n      IC = ' +zone=18',\n      ID = ' +zone=21',\n      IE = ' +towgs84=-124.76,53,466.79,0,0,0,0',\n      IF = ' +lon_0=-92',\n      IG = ' +lon_0=33',\n      IH = ' +lon_0=12',\n      II = ' +lon_0=24',\n      IJ = ' +lat_2=77',\n      IK = ' +y_0=200000',\n      IL = ' +lon_0=-70.5',\n      IM = ' +x_0=7500000',\n      IN = ' +y_0=3500000',\n      IO = ' +towgs84=31,146,47,0,0,0,0',\n      IP = ' +lat_0=45',\n      IQ = ' +lat_0=26',\n      IR = ' +a=6378160',\n      IS = ' +lon_0=-109.5',\n      IT = ' +x_0=30500000',\n      IU = ' +x_0=32500000',\n      IV = ' +lon_0=-85.83333333333333',\n      IW = ' +lon_0=-118.3333333333333',\n      IX = ' +y_0=0.003048006096012192',\n      IY = ' +lat_0=30.5',\n      IZ = ' +lat_0=44',\n      Ia = ' +lon_0=30',\n      Ib = ' +lat_0=47',\n      Ic = ' +lat_1=77',\n      Id = ' +lat_0=36.16666666666666',\n      Ie = ' +lat_0=4.596200416666666',\n      If = ' +gamma=53.13010236111111',\n      Ig = ' +lon_0=13.33333333333333',\n      Ih = ' +lat_0=81.31722600000001',\n      Ii = ' +lat_0=73.15574086111111',\n      Ij = ' +lat_0=65.10127088888888',\n      Ik = ' +zone=17',\n      Il = ' +lon_0=132',\n      Im = ' +lon_0=114',\n      In = ' +towgs84=-143,-90,-294,0,0,0,0',\n      Io = ' +zone=22',\n      Ip = ' +lat_0=41',\n      Iq = ' +lat_0=46.5',\n      Ir = ' +lon_0=-118',\n      Is = ' +y_0=400000',\n      It = ' +x_0=17500000',\n      Iu = ' +x_0=33500000',\n      Iv = ' +lon_0=-113.75',\n      Iw = ' +lon_0=-116.25',\n      Ix = ' +lon_0=-115.75',\n      Iy = ' +lon_0=-106.25',\n      Iz = ' +k=0.999916667',\n      JA = ' +k=0.999964286',\n      JB = ' +lon_0=-108.75',\n      JC = ' +towgs84=-73,-247,227,0,0,0,0',\n      JD = ' +towgs84=265.025,384.929,-194.046,0,0,0,0',\n      JE = ' +k=0.99998',\n      JF = ' +lat_1=40.65',\n      JG = ' +lat_1=38.35',\n      JH = ' +y_0=2500000',\n      JI = ' +y_0=6500000',\n      JJ = ' +x_0=39999.99999984',\n      JK = ' +towgs84=-61.702,284.488,472.052,0,0,0,0',\n      JL = ' +towgs84=-223.237,110.193,36.649,0,0,0,0',\n      JM = ' +zone=39',\n      JN = ' +zone=32',\n      JO = ' +towgs84=-125,53,467,0,0,0,0',\n      JP = ' +towgs84=198,881,317,0,0,0,0',\n      JQ = ' +towgs84=214,804,268,0,0,0,0',\n      JR = ' +towgs84=217,823,299,0,0,0,0',\n      JS = ' +lon_0=45',\n      JT = ' +lat_1=43',\n      JU = '+proj=merc',\n      JV = ' +x_0=99999.99998983997',\n      JW = ' +x_0=99999.99999960001',\n      JX = ' +x_0=2743195.592233322',\n      JY = ' +y_0=914398.5307444407',\n      JZ = ' +zone=38',\n      Ja = ' +zone=28',\n      Jb = ' +lon_0=-114',\n      Jc = ' +lat_1=45.5',\n      Jd = ' +towgs84=-73,46,-86,0,0,0,0',\n      Je = ' +towgs84=11,72,-101,0,0,0,0',\n      Jf = ' +towgs84=287.58,177.78,-135.41,0,0,0,0',\n      Jg = ' +towgs84=-162.619,-276.959,-161.764,0.067753,-2.24365,-1.15883,-1.09425',\n      Jh = ' +lon_0=-87',\n      Ji = ' +lon_0=-99',\n      Jj = ' +lon_0=102',\n      Jk = ' +lon_0=126',\n      Jl = ' +k=0.99999',\n      Jm = ' +x_0=50000',\n      Jn = ' +lat_2=40',\n      Jo = ' +lon_0=-84.25',\n      Jp = ' +x_0=11500000',\n      Jq = ' +lon_0=-72.75',\n      Jr = ' +lon_0=-101.5',\n      Js = ' +lon_0=-94.25',\n      Jt = ' +x_0=6500000',\n      Ju = ' +y_0=5000000',\n      Jv = ' +x_0=1700000',\n      Jw = ' +towgs84=31.95,300.99,419.19,0,0,0,0',\n      Jx = ' +towgs84=-189.681,18.3463,-42.7695,-0.33746,-3.09264,2.53861,0.4598',\n      Jy = ' +towgs84=-119.425,-303.659,-11.0006,1.1643,0.174458,1.09626,3.65706',\n      Jz = ' +towgs84=982.609,552.753,-540.873,6.68163,-31.6115,-19.8482,16.805',\n      KA = ' +zone=29',\n      KB = ' +lon_0=9',\n      KC = ' +zone=33',\n      KD = ' +zone=37',\n      KE = ' +no_uoff',\n      KF = ' +lon_0=120',\n      KG = ' +lon_0=177',\n      KH = ' +lon_0=-177',\n      KI = ' +lon_0=-158',\n      KJ = ' +y_0=250000',\n      KK = ' +lon_0=-111',\n      KL = ' +x_0=2500000.0001424',\n      KM = ' +x_0=1500000.0001464',\n      KN = ' +lon_0=-71.60561777777777',\n      KO = ' +lon_0=-156.6666666666667',\n      KP = ' +lon_0=-160.1666666666667',\n      KQ = ' +lat_0=0.1166666666666667',\n      KR = ' +towgs84=0,0,0,-0,-0,-0,0',\n      KS = ' +lon_0=-117.8333333333333',\n      KT = ' +lon_0=-123.1666666666667',\n      KU = ' +lon_0=-122.3333333333333',\n      KV = ' +lon_0=-119.1666666666667',\n      KW = ' +lon_0=-123.0833333333333',\n      KX = ' +lon_0=-85.84999999999999',\n      KY = ' +lon_0=-87.09999999999999',\n      KZ = ' +lon_0=-86.90000000000001',\n      Ka = ' +lon_0=-89.24166666666667',\n      Kb = ' +lon_0=-92.63333333333334',\n      Kc = ' +towgs84=347.103,1078.12,2623.92,-33.8875,70.6773,-9.3943,186.074',\n      Kd = ' +towgs84=8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926',\n      Ke = ' +towgs84=-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7',\n      Kf = ' +towgs84=-0.293,766.95,87.713,0.195704,1.69507,3.47302,-0.039338',\n      Kg = ' +towgs84=221.525,152.948,176.768,-2.3847,-1.3896,-0.877,11.4741',\n      Kh = ' +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773',\n      Ki = ' +zone=35',\n      Kj = ' +lat_0=46.95240555555556',\n      Kk = ' +alpha=30.28813972222222',\n      Kl = ' +lat_1=10.16666666666667',\n      Km = ' +lat_0=10.16666666666667',\n      Kn = ' +lat_0=18.83333333333333',\n      Ko = ' +lat_0=20.33333333333333',\n      Kp = ' +lat_0=21.83333333333333',\n      Kq = ' +lat_0=21.66666666666667',\n      Kr = ' +lat_0=45.30916666666666',\n      Ks = ' +lat_1=49.83333333333334',\n      Kt = ' +lat_2=51.16666666666666',\n      Ku = ' +lonc=-133.6666666666667',\n      Kv = ' +alpha=323.1301023611111',\n      Kw = ' +lat_1=53.83333333333334',\n      Kx = ' +lat_2=51.83333333333334',\n      Ky = ' +lat_1=44.66666666666666',\n      Kz = ' +lat_0=44.66666666666666',\n      LA = ' +lat_1=45.66666666666666',\n      LB = ' +lat_0=45.91666666666666',\n      LC = ' +lat_0=45.08333333333334',\n      LD = ' +lat_0=44.33333333333334',\n      LE = ' +lat_0=44.08333333333334',\n      LF = ' +lat_1=48.33333333333334',\n      LG = ' +lat_0=48.33333333333334',\n      LH = ' +lat_0=31.73409694444445',\n      LI = ' +lon_0=35.21208055555556',\n      LJ = ' +lat_0=44.03611111111111',\n      LK = ' +lat_0=4.599047222222222',\n      LL = ' +lat_0=40.66666666666666',\n      LM = ' +lat_1=49',\n      LN = ' +lon_0=39',\n      LO = ' +lat_1=37.25',\n      LP = ' +lat_1=39.75',\n      LQ = ' +lat_2=38.45',\n      LR = ' +lat_1=30.75',\n      LS = ' +lon_0=-84.5',\n      LT = ' +lat_0=33.75',\n      LU = ' +x_0=4000000',\n      LV = ' +y_0=4000000',\n      LW = ' +lon_0=-72.5',\n      LX = ' +x_0=5000000',\n      LY = ' +x_0=10500000',\n      LZ = ' +x_0=12500000',\n      La = ' +x_0=24500000',\n      Lb = ' +k=0.99999375',\n      Lc = ' +x_0=399999.9999984',\n      Ld = ' +lon_0=-77',\n      Le = ' +lon_0=108',\n      Lf = ' +lon_0=171',\n      Lg = ' +towgs84=-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925',\n      Lh = ' +lon_0=-171',\n      Li = ' +lat_0=32.5',\n      Lj = ' +lon_0=-117',\n      Lk = ' +k=1.000015',\n      Ll = ' +k=1.000034',\n      Lm = ' +k=1.000031',\n      Ln = ' +k=1.000026',\n      Lo = ' +ellps=evrstSS',\n      Lp = ' +a=6377301.243',\n      Lq = ' +towgs84=410.721,55.049,80.746,2.5779,2.3514,0.6664,17.3311',\n      Lr = ' +towgs84=72.438,345.918,79.486,1.6045,0.8823,0.5565,1.3746',\n      Ls = ' +pm=ferro',\n      Lt = ' +lon_0=78',\n      Lu = ' +lon_0=10',\n      Lv = ' +pm=paris',\n      Lw = ' +towgs84=0.055,-0.541,-0.185,0.0183,-0.0003,-0.007,-0.014',\n      Lx = ' +towgs84=446.448,-125.157,542.06,0.15,0.247,0.842,-20.489',\n      Ly = ' +towgs84=8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081',\n      Lz = ' +towgs84=572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378',\n      MA = ' +zone=58',\n      MB = ' +zone=23',\n      MC = ' +x_0=304800.6096012192',\n      MD = ' +y_0=152400.3048006096',\n      ME = ' +x_0=800000.0001016001',\n      MF = ' +x_0=399999.9998983998',\n      MG = ' +x_0=7999999.999968001',\n      MH = ' +x_0=5999999.999976001',\n      MI = ' +x_0=830000.0001016001',\n      MJ = ' +x_0=249999.9998983998',\n      MK = ' +x_0=350000.0001016001',\n      ML = ' +to_meter=0.3047972654',\n      MM = ' +x_0=99999.99989839978',\n      MN = ' +y_0=8000000.000010163',\n      MO = ' +x_0=699999.9999898402',\n      MP = ' +lon_0=-69',\n      MQ = ' +lon_0=-86',\n      MR = ' +towgs84=-3.2,-5.7,2.8,0,0,0,0',\n      MS = ' +x_0=8500000',\n      MT = ' +x_0=9500000',\n      MU = ' +lat_1=39.45',\n      MV = ' +lat_0=44.25',\n      MW = ' +lat_1=41.95',\n      MX = ' +lat_2=35.25',\n      MY = ' +lat_2=34.65',\n      MZ = ' +lat_2=44.25',\n      Ma = ' +lat_1=47.05',\n      Mb = ' +lat_1=40.25',\n      Mc = ' +k_0=1.00012',\n      Md = ' +lat_0=40.25',\n      Me = ' +zone=40',\n      Mf = ' +zone=36',\n      Mg = ' +zone=51',\n      Mh = ' +zone=48',\n      Mi = ' +zone=49',\n      Mj = ' +lon_0=96',\n      Mk = ' +y_0=750000',\n      Ml = ' +lat_0=36.5',\n      Mm = ' +lon_0=-119',\n      Mn = ' +lat_0=33.5',\n      Mo = ' +lat_2=41.2',\n      Mp = ' +k=0.999995',\n      Mq = ' +lat_2=33.3',\n      Mr = ' +lat_0=38.5',\n      Ms = ' +lon_0=-154',\n      Mt = ' +lon_0=-120',\n      Mu = ' +x_0=34500000',\n      Mv = ' +x_0=35500000',\n      Mw = ' +x_0=36500000',\n      Mx = ' +x_0=37500000',\n      My = ' +x_0=38500000',\n      Mz = ' +x_0=39500000',\n      NA = ' +x_0=40500000',\n      NB = ' +x_0=41500000',\n      NC = ' +x_0=43500000',\n      ND = ' +x_0=45500000',\n      NE = ' +y_0=3999999.99998984',\n      NF = ' +y_0=2000000.00001016',\n      NG = ' +towgs84=164,138,-189,0,0,0,0',\n      NH = ' +towgs84=-186,230,110,0,0,0,0',\n      NI = ' +towgs84=-199,32,322,0,0,0,0',\n      NJ = ' +to_meter=0.3047997101815088',\n      NK = ' +towgs84=-76,-138,67,0,0,0,0',\n      NL = ' +towgs84=-43,-163,45,0,0,0,0',\n      NM = ' +towgs84=-346,-1,224,0,0,0,0',\n      NN = ' +towgs84=210,814,289,0,0,0,0',\n      NO = ' +towgs84=-74,-130,42,0,0,0,0',\n      NP = ' +zone=15',\n      NQ = ' +zone=16',\n      NR = ' +zone=34',\n      NS = ' +zone=50',\n      NT = ' +zone=52',\n      NU = ' +lon_0=-62',\n      NV = ' +lon_0=-84',\n      NW = ' +lon_0=-79',\n      NX = ' +lon_0=131',\n      NY = ' +lon_0=153',\n      NZ = ' +lon_0=165',\n      Na = ' +lon_0=-94',\n      Nb = ' +lon_0=-54',\n      Nc = ' +a=6378300.789',\n      Nd = ' +b=6356566.435',\n      Ne = ' +y_0=3999999.9998984',\n      Nf = ' +y_0=5000000.0001016',\n      Ng = ' +x_0=150000.00001464',\n      Nh = ' +lat_2=46',\n      Ni = ' +lon_0=84',\n      Nj = ' +lat_0=43',\n      Nk = ' +k_0=0.999625769',\n      Nl = ' +towgs84=51,391,-36,0,0,0,0',\n      Nm = ' +towgs84=-83,37,124,0,0,0,0',\n      Nn = ' +towgs84=-355,21,72,0,0,0,0',\n      No = ' +towgs84=-23,259,-9,0,0,0,0',\n      Np = ' +towgs84=174.05,-25.49,112.57,-0,-0,0.554,0.2263',\n      Nq = ' +zone=59',\n      Nr = ' +zone=25',\n      Ns = ' +zone=11',\n      Nt = ' +zone=12',\n      Nu = ' +zone=13',\n      Nv = ' +zone=54',\n      Nw = ' +zone=14',\n      Nx = ' +zone=24',\n      Ny = ' +zone=47',\n      Nz = ' +lat_2=38.3',\n      OA = ' +lat_1=45.7',\n      OB = ' +lat_2=42.1',\n      OC = ' +x_0=165000',\n      OD = ' +lat_2=32.5',\n      OE = ' +x_0=609600',\n      OF = ' +lat_1=39.2',\n      OG = ' +lat_2=47.5',\n      OH = ' +lat_1=30.7',\n      OI = ' +lat_2=29.3',\n      OJ = ' +lat_0=28.5',\n      OK = ' +lat_1=41.7',\n      OL = ' +lat_1=44.4',\n      OM = ' +lat_1=27.5',\n      ON = ' +lon_0=-150',\n      OO = ' +lat_0=44.5',\n      OP = ' +k=1.000027',\n      OQ = ' +k=1.000038',\n      OR = ' +k=1.000036',\n      OS = ' +lon_0=-87.5',\n      OT = ' +x_0=3999999.999984',\n      OU = ' +x_0=199999.9999992',\n      OV = ' +towgs84=16,196,93,0,0,0,0',\n      OW = ' +towgs84=-88,4,101,0,0,0,0',\n      OX = ' +lat_0=18',\n      OY = ' +lat_2=67',\n      OZ = ' +lon_0=-96',\n      Oa = ' +x_0=80000',\n      Ob = ' +lon_0=-82',\n      Oc = ' +lon_0=-74',\n      Od = ' +lon_0=147',\n      Oe = ' +lon_0=150',\n      Of = ' +x_0=40000',\n      Og = ' +k=1.00002',\n      Oh = ' +x_0=42500000',\n      Oi = ' +x_0=44500000',\n      Oj = ' +lon_0=-85.05',\n      Ok = ' +ellps=mod_airy',\n      Ol = ' +lat_0=0.1333333333333333',\n      Om = ' +lat_1=-60.66666666666666',\n      On = ' +lat_2=-63.33333333333334',\n      Oo = ' +lon_0=-91.91666666666667',\n      Op = ' +y_0=0.003352806705613411',\n      Oq = ' +zone=30',\n      Or = ' +lon_0=3',\n      Os = ' +zone=26',\n      Ot = ' +zone=53',\n      Ou = ' +lat_0=31.73439361111111',\n      Ov = ' +lon_0=35.20451694444445',\n      Ow = ' +lon_0=7.439583333333333',\n      Ox = ' +lon_0=132.1666666666667',\n      Oy = ' +lon_0=134.3333333333333',\n      Oz = ' +lon_0=137.1666666666667',\n      PA = ' +lon_0=139.8333333333333',\n      PB = ' +lon_0=140.8333333333333',\n      PC = ' +lon_0=3.192280555555556',\n      PD = ' +lat_1=49.50000000000001',\n      PE = ' +lat_0=49.50000000000001',\n      PF = ' +alpha=53.31582047222222',\n      PG = ' +lon_0=10.33333333333333',\n      PH = ' +lon_0=16.33333333333333',\n      PI = ' +towgs84=-502.862,-247.438,312.724,0,0,0,0',\n      PJ = ' +towgs84=-381.788,-57.501,-256.673,0,0,0,0',\n      PK = ' +towgs84=-43.685,-179.785,-267.721,0,0,0,0',\n      PL = ' +zone=60',\n      PM = ' +zone=55',\n      PN = ' +lon_0=36',\n      PO = ' +lon_0=42',\n      PP = ' +lat_1=46',\n      PQ = ' +lat_1=44',\n      PR = ' +lat_0=42',\n      PS = ' +lon_0=51',\n      PT = ' +lat_0=33',\n      PU = ' +lat_0=52',\n      PV = ' +ellps=airy',\n      PW = ' +pm=jakarta',\n      PX = ' +x_0=2743195.5',\n      PY = ' +y_0=-4354009.816',\n      PZ = ' +k_0=0.9987864078000001',\n      Pa = ' +towgs84=-106.226,166.366,-37.893,0,0,0,0',\n      Pb = ' +towgs84=508.088,-191.042,565.223,0,0,0,0',\n      Pc = ' +k=0.99996',\n      Pd = ' +a=6378135',\n      Pe = ' +lon_0=-66',\n      Pf = ' +lon_0=141',\n      Pg = ' +lon_0=159',\n      Ph = ' +k=0.99984',\n      Pi = ' +lat_0=-22',\n      Pj = ' +lon_0=127.5',\n      Pk = ' +x_0=6000000',\n      Pl = ' +x_0=3900000',\n      Pm = ' +y_0=1300000',\n      Pn = ' +lat_0=44.75',\n      Po = ' +lat_0=37.75',\n      Pp = ' +lat_0=40.55',\n      Pq = ' +lon_0=-87.3',\n      Pr = ' +lon_0=-86.5',\n      Ps = ' +towgs84=195.671,332.517,274.607,0,0,0,0',\n      Pt = ' +towgs84=-204.619,140.176,55.226,0,0,0,0',\n      Pu = '+proj=somerc',\n      Pv = ' +y_0=30480.06096012192',\n      Pw = ' +y_0=999999.9999960001',\n      Px = ' +x_0=182880.3657607315',\n      Py = ' +towgs84=674.374,15.056,405.346,0,0,0,0',\n      Pz = ' +towgs84=-133.63,-157.5,-158.62,0,0,0,0',\n      QA = ' +towgs84=-0.465,372.095,171.736,0,0,0,0',\n      QB = ' +towgs84=-56.263,16.136,-22.856,0,0,0,0',\n      QC = ' +towgs84=-241.54,-163.64,396.06,0,0,0,0',\n      QD = ' +zone=31',\n      QE = ' +zone=10',\n      QF = ' +zone=46',\n      QG = ' +x_0=304800.6096',\n      QH = ' +y_0=152400.3048',\n      QI = ' +alpha=337.25556',\n      QJ = ' +x_0=2546731.496',\n      QK = ' +gamma=337.25556',\n      QL = ' +k_0=0.999625544',\n      QM = ' +towgs84=335.47,222.58,-230.94,0,0,0,0',\n      QN = ' +towgs84=217.037,86.959,23.956,0,0,0,0',\n      QO = ' +towgs84=-128.16,-282.42,21.93,0,0,0,0',\n      QP = ' +towgs84=103.25,-100.4,-307.19,0,0,0,0',\n      QQ = ' +lon_0=31',\n      QR = ' +lon_0=18',\n      QS = ' +lat_2=36',\n      QT = ' +lat_0=29',\n      QU = ' +lat_0=35',\n      QV = ' +lat_0=34',\n      QW = ' +lon_0=63',\n      QX = ' +lat_0=37',\n      QY = ' +lat_2=65',\n      QZ = ' +y_0=-4000000',\n      Qa = ' +y_0=914398.5',\n      Qb = ' +towgs84=-199.87,74.79,246.62,0,0,0,0',\n      Qc = ' +towgs84=-11.64,-348.6,291.98,0,0,0,0',\n      Qd = ' +towgs84=-254.1,-5.36,-100.29,0,0,0,0',\n      Qe = ' +towgs84=-206.1,-174.7,-87.7,0,0,0,0',\n      Qf = ' +towgs84=-770.1,158.4,-498.2,0,0,0,0',\n      Qg = ' +towgs84=-146.21,112.63,4.05,0,0,0,0',\n      Qh = ' +towgs84=-294.7,-200.1,525.5,0,0,0,0',\n      Qi = ' +lat_0=4',\n      Qj = ' +a=6378300',\n      Qk = ' +lon_0=-63',\n      Ql = ' +lon_0=162',\n      Qm = ' +lat_ts=90',\n      Qn = ' +y_0=600000',\n      Qo = ' +x_0=350000',\n      Qp = ' +y_0=900000',\n      Qq = ' +lat_1=32.5',\n      Qr = ' +lon_0=-147',\n      Qs = ' +k=1.000043',\n      Qt = ' +lat_0=48.5',\n      Qu = ' +lat_0=40.9',\n      Qv = ' +k=1.000028',\n      Qw = ' +k=1.000025',\n      Qx = ' +x_0=170251.555',\n      Qy = ' +b=6356657.142669561',\n      Qz = ' +b=6356094.667915204',\n      RA = ' +b=6355862.933255573',\n      RB = ' +a=6378249.144808011',\n      RC = ' +b=6356514.966204134',\n      RD = ' +towgs84=-70.9,-151.8,-41.4,0,0,0,0',\n      RE = ' +towgs84=52.17,-71.82,-14.9,0,0,0,0',\n      RF = ' +towgs84=283.7,735.9,261.1,0,0,0,0',\n      RG = ' +zone=5',\n      RH = ' +zone=7',\n      RI = ' +lon_0=19',\n      RJ = ' +lon_0=25',\n      RK = ' +lat_2=45',\n      RL = ' +lon_0=57',\n      RM = ' +lon_0=69',\n      RN = ' +lat_2=39',\n      RO = ' +lat_2=35',\n      RP = ' +lon_0=28',\n      RQ = ' +lon_0=-61.5',\n      RR = ' +lon_0=-64.5',\n      RS = ' +lon_0=-90.5',\n      RT = ' +lon_0=-94.5',\n      RU = ' +y_0=2800000',\n      RV = ' +x_0=4321000',\n      RW = ' +y_0=3210000',\n      RX = ' +y_0=14743.5',\n      RY = ' +y_0=1999999.999992',\n      RZ = ' +y_0=2999999.999988',\n      Ra = ' +y_0=50000.00001504',\n      Rb = ' +zone=41',\n      Rc = ' +zone=42',\n      Rd = ' +k=0.994',\n      Re = ' +zone=56',\n      Rf = ' +lon_0=-67.875',\n      Rg = ' +lon_0=-70.375',\n      Rh = ' +x_0=609601.22',\n      Ri = ' +b=6356889.449',\n      Rj = ' +lon_0=-69.125',\n      Rk = ' +lon_0=-121.75',\n      Rl = ' +lon_0=-121.25',\n      Rm = ' +lon_0=-119.75',\n      Rn = ' +lon_0=-122.75',\n      Ro = ' +zone=6',\n      Rp = '+proj=krovak',\n      Rq = ' +towgs84=-637,-549,-203,0,0,0,0',\n      Rr = ' +towgs84=-20.8,11.3,2.4,0,0,0,0',\n      Rs = ' +lon_0=-93',\n      Rt = ' +lon_0=127',\n      Ru = ' +lon_0=125',\n      Rv = ' +k=0.99975',\n      Rw = ' +lon_0=136',\n      Rx = ' +lon_0=138',\n      Ry = ' +lon_0=180',\n      Rz = ' +y_0=50000',\n      SA = ' +lon_0=-85',\n      SB = ' +k=1.00016',\n      SC = ' +lon_0=2.7',\n      SD = ' +towgs84=27.5,14,186.4,0,0,0,0',\n      SE = ' +towgs84=-499,-249,314,0,0,0,0',\n      SF = ' +towgs84=-467,-16,-300,0,0,0,0',\n      SG = ' +towgs84=-382,-59,-262,0,0,0,0',\n      SH = ' +towgs84=253,-132,-127,0,0,0,0',\n      SI = ' +towgs84=-963,510,-359,0,0,0,0',\n      SJ = ' +towgs84=94,-948,-1262,0,0,0,0',\n      SK = ' +zone=1',\n      SL = ' +zone=27',\n      SM = ' +zone=57',\n      SN = ' +pm=oslo',\n      SO = ' +zone=43',\n      SP = ' +lon_0=23',\n      SQ = ' +lon_0=48',\n      SR = ' +lon_0=54',\n      SS = ' +lat_0=49.5',\n      ST = ' +k=0.999912',\n      SU = ' +lon_0=-174',\n      SV = ' +lon_0=-168',\n      SW = ' +lon_0=-170',\n      SX = ' +lon_0=-165',\n      SY = ' +lat_2=40.5',\n      SZ = ' +lon_0=-115',\n      Sa = ' +lat_1=29.5',\n      Sb = ' +k=1.000045',\n      Sc = ' +lat_1=39.5',\n      Sd = ' +lat_1=33.3',\n      Se = ' +lat_0=33.3',\n      Sf = ' +lon_0=-155.5',\n      Sg = ' +lon_0=-159.5',\n      Sh = ' +y_0=-4480000',\n      Si = ' +lon_0=-176.5',\n      Sj = ' +lon_0=-89.75',\n      Sk = ' +k_0=1.000008',\n      Sl = ' +lonc=-124.05',\n      Sm = ' +k_0=1.000002',\n      Sn = ' +lon_0=-122.5',\n      So = ' +lon_0=-98.25',\n      Sp = ' +lon_0=-112.5',\n      Sq = ' +lon_0=-84.95',\n      Sr = ' +lon_0=-86.95',\n      Ss = ' +lon_0=-85.45',\n      St = ' +lon_0=-87.45',\n      Su = ' +lon_0=-87.55',\n      Sv = ' +towgs84=-149,128,296,0,0,0,0',\n      Sw = ' +towgs84=-425,-169,81,0,0,0,0',\n      Sx = ' +towgs84=-104,167,-38,0,0,0,0',\n      Sy = ' +towgs84=-106,-87,188,0,0,0,0',\n      Sz = ' +towgs84=-289,-124,60,0,0,0,0',\n      TA = ' +towgs84=137,248,-430,0,0,0,0',\n      TB = ' +towgs84=-13,-348,292,0,0,0,0',\n      TC = ' +towgs84=-115,118,426,0,0,0,0',\n      TD = ' +towgs84=0,-0.15,0.68,0,0,0,0',\n      TE = ' +towgs84=145,-187,103,0,0,0,0',\n      TF = ' +towgs84=-134,229,-29,0,0,0,0',\n      TG = ' +towgs84=70,207,389.5,0,0,0,0',\n      TH = ' +towgs84=-148,51,-291,0,0,0,0',\n      TI = ' +towgs84=-255,-15,71,0,0,0,0',\n      TJ = ' +towgs84=725,685,536,0,0,0,0',\n      TK = ' +towgs84=72,213.7,93,0,0,0,0',\n      TL = ' +towgs84=174,359,365,0,0,0,0',\n      TM = ' +towgs84=-173,253,27,0,0,0,0',\n      TN = ' +towgs84=-203,141,53,0,0,0,0',\n      TO = ' +towgs84=186,482,151,0,0,0,0',\n      TP = ' +towgs84=162,117,154,0,0,0,0',\n      TQ = ' +towgs84=-73,213,296,0,0,0,0',\n      TR = ' +towgs84=-130,29,364,0,0,0,0',\n      TS = ' +towgs84=-10,375,165,0,0,0,0',\n      TT = ' +towgs84=175,-38,113,0,0,0,0',\n      TU = ' +to_meter=0.9143984146160287',\n      TV = ' +zone=2',\n      TW = ' +zone=8',\n      TX = ' +zone=9',\n      TY = ' +zone=4',\n      TZ = ' +towgs84=30,430,368,0,0,0,0',\n      Ta = ' +towgs84=185,165,42,0,0,0,0',\n      Tb = ' +towgs84=-97,787,86,0,0,0,0',\n      Tc = ' +towgs84=639,405,60,0,0,0,0',\n      Td = ' +zone=44',\n      Te = ' +zone=45',\n      Tf = ' +lon_0=-58.5',\n      Tg = ' +lon_0=-67.5',\n      Th = ' +lon_0=-73.5',\n      Ti = ' +lon_0=-76.5',\n      Tj = ' +y_0=1200000',\n      Tk = ' +lon_0=133.5',\n      Tl = ' +x_0=8000000',\n      Tm = ' +y_0=8000000',\n      Tn = ' +k=0.9998335',\n      To = ' +lon_0=-85.5',\n      Tp = ' +x_0=7000000',\n      Tq = ' +lat_0=43.75',\n      Tr = ' +lat_0=43.25',\n      Ts = ' +lat_0=45.25',\n      Tt = ' +lon_0=-86.3',\n      Tu = ' +lat_0=38.15',\n      Tv = ' +lat_0=39.15',\n      Tw = ' +lat_0=41.25',\n      Tx = ' +lat_0=40.65',\n      Ty = ' +lat_0=39.25',\n      Tz = ' +lat_0=40.35',\n      UA = ' +lon_0=-85.8',\n      UB = ' +towgs84=9,183,236,0,0,0,0',\n      UC = ' +towgs84=-48,55,52,0,0,0,0',\n      UD = ' +towgs84=84,274,65,0,0,0,0',\n      UE = ' +lon_0=17',\n      UF = ' +lat_1=60',\n      UG = ' +k=0.9998',\n      UH = ' +lon_0=66',\n      UI = ' +lon_0=20',\n      UJ = ' +lon_0=26',\n      UK = ' +lat_0=51',\n      UL = ' +lat_1=87',\n      UM = ' +lat_1=26',\n      UN = ' +lon_0=144',\n      UO = ' +lon_0=168',\n      UP = ' +lon_0=174',\n      UQ = ' +lon_0=-72',\n      UR = ' +lon_0=-75',\n      US = ' +lon_0=-60',\n      UT = ' +lon_0=-39',\n      UU = '+proj=poly',\n      UV = ' +x_0=219529.584',\n      UW = ' +a=6378306.3696',\n      UX = ' +lon_0=-61.33333333333334',\n      UY = ' +lon_0=-91.86666666666666',\n      UZ = ' +lon_0=-8.131906111111112',\n      Ua = ' +lon_0=-83.66666666666667',\n      Ub = ' +lon_0=-108.4166666666667',\n      Uc = ' +lon_0=-108.3333333333333',\n      Ud = ' +lon_0=-85.40000000000001',\n      Ue = ' +lon_0=-86.65000000000001',\n      Uf = ' +lon_0=-86.40000000000001',\n      Ug = ' +lon_0=-85.59999999999999',\n      Uh = ' +lon_0=-87.15000000000001',\n      Ui = ' +lon_0=-86.59999999999999',\n      Uj = ' +lon_0=-84.90000000000001',\n      Uk = ' +lon_0=-85.65000000000001',\n      Ul = ' +lon_0=-87.65000000000001',\n      Um = ' +lon_0=-85.34999999999999',\n      Un = ' +lon_0=-87.40000000000001',\n      Uo = ' +lon_0=-87.34999999999999',\n      Up = ' +lon_0=-85.90000000000001',\n      Uq = ' +lon_0=-90.62222222222222',\n      Ur = ' +lon_0=-91.84999999999999',\n      Us = ' +lon_0=-91.15277777777779',\n      Ut = ' +lon_0=-91.79722222222222',\n      Uu = ' +lon_0=-92.45777777777778',\n      Uv = ' +lon_0=-91.29444444444444',\n      Uw = ' +lon_0=-90.70833333333334',\n      Ux = ' +lon_0=-89.39444444444445',\n      Uy = ' +lon_0=-89.42222222222223',\n      Uz = ' +lon_0=-88.77500000000001',\n      VA = ' +lon_0=-87.27222222222223',\n      VB = ' +lon_0=-91.89444444444445',\n      VC = ' +lon_0=-91.28888888888889',\n      VD = ' +lon_0=-88.14166666666668',\n      VE = ' +lon_0=-88.63333333333334',\n      VF = ' +lon_0=-89.83888888888889',\n      VG = ' +lon_0=-90.16111111111111',\n      VH = ' +lon_0=-90.25555555555556',\n      VI = ' +lon_0=-90.84429651944444',\n      VJ = ' +lon_0=-87.89444444444445',\n      VK = ' +lon_0=-91.31666666666666',\n      VL = ' +lon_0=-89.03333333333333',\n      VM = ' +lon_0=-89.73333333333333',\n      VN = ' +lon_0=-87.71111111111111',\n      VO = ' +lon_0=-88.41666666666667',\n      VP = ' +lon_0=-90.64166666666668',\n      VQ = ' +lon_0=-87.90833333333335',\n      VR = ' +lon_0=-89.54444444444444',\n      VS = ' +lon_0=-92.22777777777777',\n      VT = ' +lon_0=-90.48888888888889',\n      VU = ' +lon_0=-90.43055555555556',\n      VV = ' +lon_0=-89.07222222222222',\n      VW = ' +lon_0=-91.06666666666666',\n      VX = ' +lon_0=-89.90000000000001',\n      VY = ' +lon_0=-91.11666666666666',\n      VZ = ' +lon_0=-88.60555555555555',\n      Va = ' +lon_0=-90.48333333333333',\n      Vb = ' +lon_0=-91.36666666666666',\n      Vc = ' +lon_0=-90.78333333333333',\n      Vd = ' +lon_0=-89.48888888888889',\n      Ve = ' +lon_0=-88.54166666666667',\n      Vf = ' +lon_0=-91.78333333333333',\n      Vg = ' +lon_0=-88.06388888888888',\n      Vh = ' +lon_0=-88.22499999999999',\n      Vi = ' +lon_0=-88.81666666666666',\n      Vj = ' +y_0=0.004876809753619507',\n      Vk = ' +y_0=0.008534417068834137',\n      Vl = ' +y_0=0.003962407924815849',\n      Vm = ' +y_0=0.005791211582423164',\n      Vn = ' +lon_0=-55.68333333333333',\n      Vo = ' +to_meter=0.201166195164',\n      Vp = ' +lat_0=4.666666666666667',\n      Vq = ' +lat_0=6.666666666666667',\n      Vr = ' +lon_0=6.166666666666667',\n      Vs = ' +lat_0=10.44166666666667',\n      Vt = ' +lat_0=22.31213333333334',\n      Vu = ' +lon_0=114.1785555555556',\n      Vv = ' +lon_0=51.21666666666667',\n      Vw = ' +lon_0=11.30827777777778',\n      Vx = ' +lon_0=13.55827777777778',\n      Vy = ' +lon_0=15.80827777777778',\n      Vz = ' +lon_0=18.05827777777778',\n      WA = ' +lon_0=20.30827777777778',\n      WB = ' +lon_0=22.55827777777778',\n      WC = ' +lat_1=27.41666666666667',\n      WD = ' +lat_2=34.91666666666666',\n      WE = ' +lat_0=31.16666666666667',\n      WF = ' +lat_1=59.33333333333334',\n      WG = ' +lat_0=57.51755393055556',\n      WH = ' +lon_0=4.359215833333333',\n      WI = ' +lat_1=61.66666666666666',\n      WJ = ' +lat_0=29.02626833333333',\n      WK = ' +lat_1=48.66666666666666',\n      WL = ' +lat_2=53.66666666666666',\n      WM = ' +lon_0=127.0028902777778',\n      WN = ' +lon_0=89.84999999999999',\n      WO = ' +lon_0=91.56666666666666',\n      WP = ' +lon_0=24.83333333333333',\n      WQ = ' +lat_2=63.66666666666666',\n      WR = ' +lat_0=65.35103930555555',\n      WS = ' +lat_1=63.66666666666666',\n      WT = ' +lat_2=60.33333333333334',\n      WU = ' +lat_0=62.01530688888889',\n      WV = ' +lat_1=45.78333333333333',\n      WW = ' +lat_0=45.78333333333333',\n      WX = ' +lat_0=42.66666666666666',\n      WY = ' +lat_0=43.36666666666667',\n      WZ = ' +lat_0=45.70611111111111',\n      Wa = ' +lat_0=45.13333333333333',\n      Wb = ' +lat_1=46.66964837722222',\n      Wc = ' +lat_0=46.66964837722222',\n      Wd = ' +lat_0=43.48138888888889',\n      We = ' +lat_1=45.89871486583333',\n      Wf = ' +lat_0=45.89871486583333',\n      Wg = ' +lat_0=42.71944444444445',\n      Wh = ' +lat_1=44.97785689861112',\n      Wi = ' +lat_0=44.97785689861112',\n      Wj = ' +lat_1=43.46254664583333',\n      Wk = ' +lat_0=43.46254664583333',\n      Wl = ' +lon_0=-90.9388888888889',\n      Wm = ' +lat_0=41.47222222222222',\n      Wn = ' +lat_0=45.88333333333333',\n      Wo = ' +lat_0=44.40833333333333',\n      Wp = ' +lat_1=44.87228112638889',\n      Wq = ' +lat_0=44.87228112638889',\n      Wr = ' +lat_0=45.43888888888888',\n      Ws = ' +lat_0=44.00555555555555',\n      Wt = ' +lat_0=41.41111111111111',\n      Wu = ' +lat_1=42.63756227694444',\n      Wv = ' +lat_0=42.63756227694444',\n      Ww = ' +lat_1=43.80700011777778',\n      Wx = ' +lat_0=43.80700011777778',\n      Wy = ' +lat_0=42.53888888888888',\n      Wz = ' +lat_0=45.43333333333333',\n      XA = ' +lat_0=44.25333512777778',\n      XB = ' +lat_0=42.21666666666667',\n      XC = ' +lat_0=43.26666666666667',\n      XD = ' +lat_0=43.45111111111111',\n      XE = ' +lat_1=45.15423710527778',\n      XF = ' +lat_0=45.15423710527778',\n      XG = ' +lat_0=44.84444444444445',\n      XH = ' +lat_1=44.90090442361111',\n      XI = ' +lat_0=44.90090442361111',\n      XJ = ' +lat_0=44.69166666666666',\n      XK = ' +lat_0=44.71666666666667',\n      XL = ' +lat_1=44.00007392861111',\n      XM = ' +lat_0=44.00007392861111',\n      XN = ' +lat_0=44.39722222222222',\n      XO = ' +lat_1=45.70422377027778',\n      XP = ' +lat_0=45.70422377027778',\n      XQ = ' +lat_1=44.63614887194444',\n      XR = ' +lat_0=44.63614887194444',\n      XS = ' +lat_0=44.66111111111111',\n      XT = ' +lat_1=44.41682397527777',\n      XU = ' +lat_0=44.41682397527777',\n      XV = ' +lat_0=44.55555555555555',\n      XW = ' +lat_0=41.94444444444444',\n      XX = ' +lat_0=43.91944444444444',\n      XY = ' +lat_0=42.81944444444445',\n      XZ = ' +lat_1=45.90009913138888',\n      Xa = ' +lat_0=45.90009913138888',\n      Xb = ' +lat_1=45.17782208583333',\n      Xc = ' +lat_0=45.17782208583333',\n      Xd = ' +lat_0=43.16111111111111',\n      Xe = ' +lat_1=43.57503293972223',\n      Xf = ' +lat_0=43.57503293972223',\n      Xg = ' +lat_1=46.07784409055556',\n      Xh = ' +lat_0=46.07784409055556',\n      Xi = ' +lat_1=42.66946209694444',\n      Xj = ' +lat_0=42.66946209694444',\n      Xk = ' +lat_1=45.96121983333334',\n      Xl = ' +lat_0=45.96121983333334',\n      Xm = ' +lat_0=42.91805555555555',\n      Xn = ' +lat_0=42.56944444444445',\n      Xo = ' +lat_0=43.42027777777778',\n      Xp = ' +lat_1=44.11394404583334',\n      Xq = ' +lat_0=44.11394404583334',\n      Xr = ' +lat_1=44.36259546944444',\n      Xs = ' +lat_0=44.36259546944444',\n      Xt = ' +lat_1=44.10000000000001',\n      Xu = ' +lat_0=44.10000000000001',\n      Xv = ' +lat_1=42.16500000000001',\n      Xw = ' +lat_0=42.16500000000001',\n      Xx = ' +lat_0=52.15616055555555',\n      Xy = ' +lat_2=48.73333333333333',\n      Xz = ' +zone=3',\n      YA = ' +lat_0=53.5',\n      YB = ' +k=0.999923',\n      YC = ' +x_0=850000',\n      YD = ' +x_0=830000',\n      YE = ' +lon_0=16.5',\n      YF = ' +x_0=520000',\n      YG = ' +lat_2=31.5',\n      YH = ' +lon_0=10.5',\n      YI = ' +lat_1=44.5',\n      YJ = ' +lon_0=-153',\n      YK = ' +lon_0=-135',\n      YL = ' +x_0=750000',\n      YM = ' +lat_0=43.5',\n      YN = ' +lon_0=-142',\n      YO = ' +lon_0=-146',\n      YP = ' +lon_0=-162',\n      YQ = ' +lon_0=-166',\n      YR = ' +lon_0=-176',\n      YS = ' +lat_2=39.5',\n      YT = ' +lon_0=-129',\n      YU = ' +k_0=1.0002',\n      YV = ' +k=1.000023',\n      YW = ' +lon_0=-121',\n      YX = ' +k=1.000175',\n      YY = ' +lat_0=45.5',\n      YZ = ' +k=1.000155',\n      Ya = ' +lat_2=37.5',\n      Yb = ' +lat_1=48.5',\n      Yc = ' +k=1.000029',\n      Yd = ' +lat_0=39.6',\n      Ye = ' +k=1.000013',\n      Yf = ' +k=1.000022',\n      Yg = ' +lat_0=40.7',\n      Yh = ' +lat_0=39.3',\n      Yi = ' +lat_0=37.8',\n      Yj = ' +lat_0=38.9',\n      Yk = ' +lon_0=-5.4',\n      Yl = ' +y_0=626907.39',\n      Ym = ' +b=6356571.996',\n      Yn = ' +a=6377295.664',\n      Yo = ' +lon_0=5.38763888888889',\n      Yp = ' +y_0=-4600000.00001208',\n      Yq = ' +y_0=1889763.779527559',\n      Yr = ' +y_0=99999.99999960001',\n      Ys = ' +x_0=120091.4401828804',\n      Yt = ' +lon_0=72',\n      Yu = ' +lat_0=50',\n      Yv = ' +lat_1=50',\n      Yw = ' +lat_1=35',\n      Yx = ' +lon_0=22',\n      Yy = ' +lat_1=34',\n      Yz = ' +lonc=115',\n      ZA = ' +lat_0=-9',\n      ZB = ' +lat_0=23',\n      ZC = ' +lat_1=85',\n      ZD = ' +lat_2=69',\n      ZE = ' +lat_1=69',\n      ZF = ' +lat_2=61',\n      ZG = ' +lon_0=34',\n      ZH = ' +lon_0=140.25',\n      ZI = ' +lon_0=142.25',\n      ZJ = ' +lon_0=144.25',\n      ZK = ' +x_0=47500000',\n      ZL = ' +y_0=-3000000',\n      ZM = ' +pm=2.337208333333333',\n      ZN = ' +x_0=7000000.00000248',\n      ZO = ' +lon_0=6',\n      ZP = ' +k=0.997',\n      ZQ = ' +lon_0=106',\n      ZR = ' +lon_0=154',\n      ZS = ' +lon_0=156',\n      ZT = ' +lat_2=-36',\n      ZU = ' +lon_0=119',\n      ZV = ' +lon_0=121',\n      ZW = ' +lon_0=166',\n      ZX = ' +a=6371228',\n      ZY = ' +b=6371228',\n      ZZ = ' +a=6378273',\n      Za = ' +lat_0=-44',\n      Zb = ' +pm=lisbon',\n      Zc = ' +lon_0=-57',\n      Zd = ' +lon_0=-56',\n      Ze = ' +k=1.00007',\n      Zf = ' +lonc=-123',\n      Zg = ' +alpha=295',\n      Zh = ' +gamma=295',\n      Zi = ' +k=1.00011',\n      Zj = ' +k=1.00005',\n      Zk = ' +k=1.00013',\n      Zl = ' +x_0=30000',\n      Zm = ' +k=1.00001',\n      Zn = ' +k=1.00003',\n      Zo = ' +y_0=130000.00001472',\n      Zp = ' +x_0=119999.99999952',\n      Zq = ' +y_0=-2999999.999988',\n      Zr = ' +x_0=-299999.9999988',\n      Zs = ' +lat_1=43.0695160375',\n      Zt = ' +lat_0=43.0695160375',\n      Zu = ' +lat_1=43.3223129275',\n      Zv = ' +lat_0=43.3223129275',\n      Zw = ' +k=1.0000067',\n      Zx = ' +a=6378298.3',\n      Zy = ' +lon_0=-66.5',\n      Zz = ' +lon_0=129.5',\n      aA = ' +lon_0=138.5',\n      aB = ' +x_0=2300000',\n      aC = ' +x_0=3300000',\n      aD = ' +x_0=4300000',\n      aE = ' +y_0=7500000',\n      aF = ' +lonc=102.25',\n      aG = ' +y_0=1166200',\n      aH = ' +x_0=3000000',\n      aI = ' +lat_1=46.25',\n      aJ = ' +ellps=WGS66',\n      aK = ' +ellps=GRS67',\n      aL = ' +lat_1=34.65',\n      aM = ' +y_0=59999.99999976',\n      aN = ' +y_0=30000.00001512',\n      aO = ' +x_0=59999.99999976',\n      aP = ' +x_0=30000.00001512',\n      aQ = ' +lat_1=43.200055605',\n      aR = ' +lat_0=43.200055605',\n      aS = ' +y_0=65379.0134283',\n      aT = ' +alpha=323.0257905',\n      aU = ' +alpha=53.31580995',\n      aV = ' +x_0=10000.0000152';\nmodule.exports = [2000, D + L + NU + EP + u + N + c + E + A, 1, D + L + NU + EP + u + N + c + TI + E + A, 1, D + L + NU + EP + u + N + c + TJ + E + A, 1, D + L + NU + EP + u + N + c + TK + E + A, 1, D + L + NU + EP + u + N + c + TL + E + A, 1, D + L + NU + EP + u + N + c + UB + E + A, 1, D + L + NU + EP + u + N + c + Sv + E + A, 1, D + L + NU + EP + u + N + c + Ps + E + A, 2, D + L + Tf + V + Ab + N + i + E + A, 1, D + L + RQ + V + Ab + N + i + E + A, 1, D + L + RR + V + Ab + N + i + E + A, 1, D + L + Tg + V + Ab + N + i + E + A, 1, D + L + IL + V + Ab + N + i + E + A, 1, D + L + Th + V + Ab + N + i + E + A, 1, D + L + Ti + V + Ab + N + i + E + A, 1, D + L + Ga + V + Ab + N + i + E + A, 1, D + L + Th + V + Ab + N + i + E + A, 1, D + L + Ti + V + Ab + N + i + E + A, 1, D + L + Ga + V + Ab + N + i + E + A, 1, D + L + ET + V + Ab + N + i + E + A, 1, D + L + CR + V + Ab + N + i + E + A, 1, D + L + NV + V + Ab + N + i + E + A, 1, D + L + Jh + V + Ab + N + i + E + A, 1, D + L + Bu + V + Ab + N + i + E + A, 1, D + L + Rs + V + Ab + N + i + E + A, 1, D + L + OZ + V + Ab + N + i + E + A, 1, I + NP + i + E + A, 1, I + NQ + i + E + A, 1, I + Ik + i + E + A, 1, I + IC + i + E + A, 1, I + Ik + i + E + A, 1, I + IC + i + E + A, 1, I + Hi + i + E + A, 1, I + Gz + i + E + A, 1, I + ID + i + E + A, 4, D + Ou + Ov + Zw + UV + Yl + C + UC + E + A, 1, I + Oq + c + JO + E + A, 1, I + Oq + c + IE + E + A, 1, I + KA + c + JO + E + A, 1, I + KA + c + IE + E + A, 1, D + L + EN + ' +k=1' + Hs + N + M + HG + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + M + HG + E + A, 1, D + L + Gj + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + UE + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + RI + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + Gl + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + SP + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + RJ + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + HO + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + ' +lon_0=29 +k=1' + s + N + Gk + j + B + E + A, 1, D + L + QQ + ' +k=1' + s + N + Gk + j + B + E + A, 1, D + L + IG + ' +k=1' + s + N + Gk + j + B + E + A, 1, Pu + Kj + Ow + ' +k_0=1 +x_0=2600000' + Tj + Y + Py + E + A, 1, CU + ' +lat_0=27.51882880555555 +lonc=52.60353916666667 +alpha=0.5716611944444444 +k=0.999895934 +x_0=658377.437 +y_0=3044969.194 +gamma=0.5716611944444444' + R + Pz + E + A, 1, I + JZ + R + Gy + E + A, 1, I + JM + R + Gy + E + A, 1, I + Me + R + Gy + E + A, 1, I + Rb + R + Gy + E + A, 1, H + ' +lat_1=40' + Fs + HN + ' +k_0=0.9988085293' + a + Qn + Zx + Qy + ' +pm=madrid' + E + A, 3, Rp + SS + ' +lon_0=42.5' + Kk + V + s + N + Y + Gh + Ls + E + A, 1, Ck + ' +lat_0=11.25217861111111 +lon_0=-60.68600888888889 +x_0=37718.66159325 +y_0=36209.91512952' + Ee + Ef + Vo + A, 1, I + Gz + R + QA + E + A, 1, D + L + KB + V + h + N + R + v + E + A, 1, D + L + ' +lon_0=11' + V + h + N + R + v + E + A, 1, D + L + ' +lon_0=13' + V + h + N + R + v + E + A, 1, D + L + Gj + V + h + N + R + v + E + A, 1, D + L + UE + V + h + N + R + v + E + A, 1, D + L + RI + V + h + N + R + v + E + A, 1, D + L + Gl + V + h + N + R + v + E + A, 1, D + L + SP + V + h + N + R + v + E + A, 1, D + L + RJ + V + h + N + R + v + E + A, 1, I + JN + R + v + E + A, 1, I + KC + R + v + E + A, 1, I + NR + R + v + E + A, 1, I + Ki + R + v + E + A, 1, D + m + MP + ' +k=1' + Ci + N + R + E + A, 1, D + m + MP + ' +k=1' + Ci + N + R + SD + E + A, 1, D + m + MP + ' +k=1' + Ci + N + R + OV + E + A, 1, I + Hi + o + R + OV + E + A, 3, D + L + IH + AP + O + N + R + v + E + A, 1, D + L + ' +lon_0=11' + AP + O + N + AU + BN + Gi + E + A, 1, I + JZ + j + B + E + A, 1, I + JM + j + B + E + A, 3, D + L + ZQ + ' +k=1' + O + N + M + HG + E + A, 1, D + L + ZQ + AP + O + N + T + Q + E + A, 1, I + Ja + R + TM + E + A, 1, D + Ch + Ed + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + Rt + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + Ru + ' +k=1' + h + Ae + Y + E + A, 1, Ck + ' +lat_0=25.38236111111111 +lon_0=50.76138888888889' + BU + EK + Gn + E + A, 1, D + L + II + AP + O + N + C + Qb + E + A, 1, H + Kl + Km + KN + ' +k_0=1' + s + ' +y_0=-52684.972' + R + E + A, 1, H + Kl + Km + KN + ' +k_0=1' + h + ' +y_0=147315.028' + R + E + A, 1, H + Kl + Km + KN + ' +k_0=1' + O + ' +y_0=447315.028' + R + E + A, 1, H + Kl + Km + KN + ' +k_0=1 +x_0=-17044 +y_0=-23139.97' + R + E + A, 1, D + ' +lat_0=-36.87972222222222 +lon_0=174.7641666666667' + V + u + CO + C + B + E + A, 1, D + ' +lat_0=-37.76111111111111 +lon_0=176.4661111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-38.62444444444444 +lon_0=177.8855555555556 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-39.65083333333333 +lon_0=176.6736111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-39.13555555555556 +lon_0=174.2277777777778 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-39.51222222222222 +lon_0=175.64 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-40.24194444444444 +lon_0=175.4880555555555 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-40.92527777777777 +lon_0=175.6472222222222 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-41.3011111111111 +lon_0=174.7763888888889 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-40.71472222222223 +lon_0=172.6719444444444 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-41.27444444444444 +lon_0=173.2991666666667 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-41.28972222222222 +lon_0=172.1088888888889 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-41.81055555555555 +lon_0=171.5811111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-42.33361111111111 +lon_0=171.5497222222222 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-42.68888888888888 +lon_0=173.01 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-41.54444444444444 +lon_0=173.8019444444444 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-42.88611111111111 +lon_0=170.9797222222222 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-43.11 +lon_0=170.2608333333333 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-43.97777777777778 +lon_0=168.6061111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-43.59055555555556 +lon_0=172.7269444444445 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-43.74861111111111 +lon_0=171.3605555555555 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-44.40194444444445 +lon_0=171.0572222222222 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-44.735 +lon_0=169.4675 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-45.13277777777778 +lon_0=168.3986111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-45.56361111111111 +lon_0=167.7386111111111 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-45.81611111111111 +lon_0=170.6283333333333 +k=1' + u + CO + C + B + E + A, 1, D + ' +lat_0=-45.86138888888889 +lon_0=170.2825' + Pc + u + CO + C + B + E + A, 1, D + ' +lat_0=-46.6 +lon_0=168.3427777777778 +k=1' + u + CO + C + B + E + A, 1, I + MA + o + C + B + E + A, 1, I + Nq + o + C + B + E + A, 1, I + PL + o + C + B + E + A, 1, D + Vp + ' +lon_0=-1' + Rv + ' +x_0=274319.7391633579' + N + Qj + Ho + NI + NJ + A, 1, D + L + ' +lon_0=-1' + AP + O + N + Qj + Ho + NI + E + A, 1, H + UF + Nh + IZ + HJ + s + N + i + E + A, 16, H + LM + ' +lat_2=44' + Iq + Or + EW + ' +y_0=6600000' + C + B + E + A, 3, D + YA + ' +lon_0=-8 +k=0.99982' + a + Mk + C + B + E + A, 1, I + KA + C + B + E + A, 1, D + Vq + ' +lon_0=-12 +k=1 +x_0=152399.8550907544' + N + Qj + Ho + NJ + A, 1, D + Vq + ' +lon_0=-12 +k=1 +x_0=243839.7681452071 +y_0=182879.8261089053' + Qj + Ho + NJ + A, 1, I + Ja + c + OW + E + A, 1, I + KA + c + OW + E + A, 1, He + IP + CS + s + N + ' +a=6370997 +b=6370997' + E + A, 1, D + L + ' +lon_0=-5' + AP + O + N + c + JO + E + A, 1, D + L + ' +lon_0=-5' + AP + O + N + c + IE + E + A, 4, D + ' +lat_0=49.83333333333334' + Vr + ' +k=1' + Oa + EK + R + Jx + E + A, 3, GU + ' +lat_0=53.00194444444445 +lon_0=21.50277777777778' + UG + ' +x_0=4603000 +y_0=5806000' + M + b + E + A, 1, GU + ' +lat_0=53.58333333333334 +lon_0=17.00833333333333' + UG + ' +x_0=3501000 +y_0=5999000' + M + b + E + A, 1, GU + ' +lat_0=51.67083333333333 +lon_0=16.67222222222222' + UG + ' +x_0=3703000 +y_0=5627000' + M + b + E + A, 1, D + L + ' +lon_0=18.95833333333333 +k=0.999983 +x_0=237000 +y_0=-4700000' + M + b + E + A, 1, D + L + Gj + YB + Eg + N + C + B + E + A, 1, D + L + QR + YB + Jt + N + C + B + E + A, 1, D + L + Gl + YB + IM + N + C + B + E + A, 1, D + L + II + YB + MS + N + C + B + E + A, 1, D + L + RI + ' +k=0.9993' + O + ' +y_0=-5300000' + C + B + E + A, 8, I + Nr + R + Sw + E + A, 1, I + Os + R + Sx + E + A, 1, I + Os + R + TN + E + A, 3, D + L + ' +lon_0=173' + AP + ' +x_0=1600000' + Ak + C + B + E + A, 2, I + TV + o + C + B + E + A, 1, D + L + ' +lon_0=9.5' + CP + h + N + C + B + E + A, 1, D + L + IH + CP + O + N + C + B + E + A, 1, D + L + Gj + ' +k=1' + HT + N + C + B + E + A, 2, GU + Iq + Zy + ST + AI + CO + Pd + Gq + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, H + ' +lat_1=35.25 +lat_2=36.41666666666666 +lat_0=34.66666666666666' + MQ + Z + Pv + X + J + A, 1, H + Az + DV + DM + Jo + O + N + C + B + E + A, 1, D + L + HO + ' +k=1' + MT + N + R + n + E + A, 1, D + L + Ia + ' +k=1' + LY + N + R + n + E + A, 1, D + L + IG + ' +k=1' + Jp + N + R + n + E + A, 1, D + L + PN + ' +k=1' + LZ + N + R + n + E + A, 1, D + L + LN + ' +k=1' + HU + N + R + n + E + A, 1, D + L + PO + ' +k=1' + Gw + N + R + n + E + A, 1, D + L + JS + ' +k=1' + Hu + N + R + n + E + A, 1, D + L + Ia + AP + O + N + C + B + E + A, 2, I + JN + AU + BN + RD + E + A, 1, I + Io + R + NG + E + A, 1, I + MB + R + NG + E + A, 2, I + Hi + Pd + Gq + E + A, 1, I + Gz + Pd + Gq + E + A, 2, D + Bl + Cn + V + EX + N + C + B + t + A, 1, D + Bl + Co + V + EX + N + C + B + t + A, 1, D + Bl + Iv + BG + EX + N + C + B + t + A, 1, H + DW + Jn + y + HA + Ac + AD + C + B + J + A, 1, H + DX + DY + AA + HA + Ac + AD + C + B + J + A, 1, H + Ap + DZ + Ml + AJ + Ac + AD + C + B + J + A, 1, H + LO + QS + Da + Mm + Ac + AD + C + B + J + A, 1, H + Db + Dc + Mn + Ir + Ac + AD + C + B + J + A, 1, H + Dd + De + Df + Iw + Ac + AD + C + B + J + A, 1, H + Eh + Ei + y + Ba + Bw + CL + C + B + J + A, 1, H + LP + LQ + CY + Ba + Bw + CL + C + B + J + A, 1, H + Ap + Dg + f + Ba + Bw + CL + C + B + J + A, 1, H + Dh + Mo + Di + Jq + MC + MD + C + B + J + A, 1, D + Ch + Cp + Mp + AE + N + C + B + J + A, 1, D + Aq + CR + Am + AE + N + C + B + J + A, 1, D + Aq + Ob + Am + AE + N + C + B + J + A, 1, H + LR + Dj + QT + LS + a + N + C + B + J + A, 1, D + Gm + Cq + V + AE + N + C + B + J + A, 1, D + Gm + Cr + V + CM + N + C + B + J + A, 1, D + p + Cs + BJ + AE + N + C + B + J + A, 1, D + p + Jb + BJ + AF + N + C + B + J + A, 1, D + p + Ix + BG + ME + N + C + B + J + A, 3, H + Az + DV + DM + Jo + AF + N + C + B + J + A, 1, H + Ej + Ek + AB + EY + AF + AD + C + B + J + A, 1, H + MU + Nz + AA + Ld + MF + N + C + B + J + A, 1, H + El + Dk + Ip + GE + AE + Mk + C + B + J + A, 1, H + Em + En + Ip + IL + AF + N + C + B + J + A, 1, H + Eo + Ep + Eq + Jh + MG + N + C + B + t + A, 1, H + OA + Er + Es + BE + MH + N + C + B + t + A, 1, H + Bq + OB + Fo + BE + OT + N + C + B + t + A, 1, D + Hj + Ct + CP + BF + N + C + B + J + A, 1, D + Hj + Bx + CP + CM + N + C + B + J + A, 1, H + LM + RK + MV + IS + DR + N + C + B + t + A, 1, D + Bl + Cu + Hm + OC + N + C + B + J + A, 1, D + Bl + Iy + V + AF + N + C + B + J + A, 1, D + Bl + Cv + Iz + MI + N + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, D + Fs + Cw + Ad + MJ + N + C + B + J + A, 1, D + Fs + Cx + Ad + MK + N + C + B + J + A, 1, H + Dl + Dm + BB + Oc + BF + N + C + B + J + A, 1, H + Et + Eu + LT + NW + Z + N + C + B + J + A, 1, H + BH + Ev + Ib + EZ + DR + N + C + B + t + A, 1, H + Ew + Ex + Be + EZ + DR + N + C + B + t + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + J + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + J + A, 1, H + PP + CZ + AK + AJ + KL + N + C + B + t + A, 1, H + PQ + Ca + p + AJ + KM + N + C + B + t + A, 1, H + MW + FB + BB + Ea + a + N + C + B + J + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + J + A, 1, H + FC + OD + Dr + CR + OE + N + C + B + t + A, 1, H + FD + MX + BC + MQ + a + N + C + B + J + A, 1, H + FE + MY + QV + Jr + AE + CN + C + B + J + A, 1, H + FF + FG + Ds + CV + a + Gr + C + B + J + A, 1, H + FH + FI + Cb + Ag + CM + Fq + C + B + J + A, 1, H + FJ + FK + Dt + Ji + a + Ne + C + B + J + A, 1, H + CD + CE + Cc + CV + BF + Nf + C + B + J + A, 1, H + AY + CF + Br + BI + Gd + Pw + C + B + t + A, 1, H + JF + CG + AQ + BI + Gd + RY + C + B + t + A, 1, H + JG + CH + f + BI + Gd + RZ + C + B + t + A, 1, H + OF + FL + AA + GF + Gs + Gr + C + B + J + A, 1, H + Az + Du + AB + GF + Gs + CN + C + B + J + A, 1, H + BH + OG + Ib + Cy + AF + N + C + B + J + A, 1, H + FM + FN + Dv + AJ + AF + N + C + B + J + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + J + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + J + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + J + A, 1, GU + ' +lat_0=47.25' + Qk + ST + EW + Is + Pd + Gq + E + A, 4, D + L + RQ + V + DP + N + Pd + Gq + E + A, 1, D + L + RR + V + Eg + N + Pd + Gq + E + A, 13, D + L + ' +lon_0=109' + AP + O + Ak + Y + Cj + E + A, 1, D + L + ' +lon_0=116' + AP + O + Ak + S + E + A, 1, D + L + Il + AP + O + Ak + S + E + A, 1, D + L + ZO + AP + O + N + S + E + A, 1, I + KC + c + E + A, 1, I + KC + c + E + A, 1, Ck + Vs + UX + ' +x_0=86501.46392052001' + aS + Ee + Ef + JK + ML + A, 1, I + Hi + o + R + Bs + E + A, 1, I + Gz + o + R + Bs + E + A, 1, H + ' +lat_1=9 +lat_2=3 +lat_0=6' + Pe + BZ + AH + R + AX + E + A, 1, H + ' +lat_1=17 +lat_2=33 +lat_0=25.08951' + SQ + s + N + R + Cm + E + A, 1, D + L + HO + ' +k=1' + O + N + R + n + E + A, 1, D + L + Ia + ' +k=1' + O + N + R + n + E + A, 1, D + L + IG + ' +k=1' + O + N + R + n + E + A, 1, D + L + PN + ' +k=1' + O + N + R + n + E + A, 1, D + L + LN + ' +k=1' + O + N + R + n + E + A, 1, D + L + PO + ' +k=1' + O + N + R + n + E + A, 1, D + L + JS + ' +k=1' + O + N + R + n + E + A, 1, D + Vt + Vu + ' +k=1 +x_0=836694.05 +y_0=819069.8' + R + Jg + E + A, 1, D + L + HP + ' +k=1' + HU + N + As + d + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + As + d + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + As + d + E + A, 1, D + L + HR + ' +k=1' + Hv + N + As + d + E + A, 1, D + L + HS + ' +k=1' + It + N + As + d + E + A, 1, D + L + EN + ' +k=1' + Hs + N + As + d + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + As + d + E + A, 1, D + L + Fm + ' +k=1' + HV + N + As + d + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + As + d + E + A, 1, D + L + Ed + ' +k=1' + HW + N + As + d + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + As + d + E + A, 1, D + L + HP + ' +k=1' + O + N + As + d + E + A, 1, D + L + HQ + ' +k=1' + O + N + As + d + E + A, 1, D + L + Hd + ' +k=1' + O + N + As + d + E + A, 1, D + L + HR + ' +k=1' + O + N + As + d + E + A, 1, D + L + HS + ' +k=1' + O + N + As + d + E + A, 1, D + L + EN + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fy + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fm + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fr + ' +k=1' + O + N + As + d + E + A, 1, D + L + Ed + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fn + ' +k=1' + O + N + As + d + E + A, 1, D + L + HP + ' +k=1' + Hy + N + As + d + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + As + d + E + A, 1, D + L + HQ + ' +k=1' + IA + N + As + d + E + A, 1, D + L + Ni + ' +k=1' + IB + N + As + d + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + As + d + E + A, 1, D + L + Hq + ' +k=1' + IT + N + As + d + E + A, 1, D + L + HR + ' +k=1' + Gc + N + As + d + E + A, 1, D + L + Mj + ' +k=1' + IU + N + As + d + E + A, 1, D + L + HS + ' +k=1' + Iu + N + As + d + E + A, 1, D + L + Jj + ' +k=1' + Mu + N + As + d + E + A, 1, D + L + EN + ' +k=1' + Mv + N + As + d + E + A, 1, D + L + Le + ' +k=1' + Mw + N + As + d + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + As + d + E + A, 1, D + L + Im + ' +k=1' + My + N + As + d + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + As + d + E + A, 1, D + L + KF + ' +k=1' + NA + N + As + d + E + A, 1, D + L + Fr + ' +k=1' + NB + N + As + d + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + As + d + E + A, 1, D + L + Ed + ' +k=1' + NC + N + As + d + E + A, 1, D + L + Il + ' +k=1' + Oi + N + As + d + E + A, 1, D + L + Fn + ' +k=1' + ND + N + As + d + E + A, 1, D + L + HP + ' +k=1' + O + N + As + d + E + A, 1, D + L + Lt + ' +k=1' + O + N + As + d + E + A, 1, D + L + HQ + ' +k=1' + O + N + As + d + E + A, 1, D + L + Ni + ' +k=1' + O + N + As + d + E + A, 1, D + L + Hd + ' +k=1' + O + N + As + d + E + A, 1, D + L + Hq + ' +k=1' + O + N + As + d + E + A, 1, D + L + HR + ' +k=1' + O + N + As + d + E + A, 1, D + L + Mj + ' +k=1' + O + N + As + d + E + A, 1, D + L + HS + ' +k=1' + O + N + As + d + E + A, 1, D + L + Jj + ' +k=1' + O + N + As + d + E + A, 1, D + L + EN + ' +k=1' + O + N + As + d + E + A, 1, D + L + Le + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fy + ' +k=1' + O + N + As + d + E + A, 1, D + L + Im + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fm + ' +k=1' + O + N + As + d + E + A, 1, D + L + KF + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fr + ' +k=1' + O + N + As + d + E + A, 1, D + L + Jk + ' +k=1' + O + N + As + d + E + A, 1, D + L + Ed + ' +k=1' + O + N + As + d + E + A, 1, D + L + Il + ' +k=1' + O + N + As + d + E + A, 1, D + L + Fn + ' +k=1' + O + N + As + d + E + A, 1, D + L + Gl + ' +k=1' + AV + N + R + At + E + A, 1, D + L + II + ' +k=1' + Ci + N + R + At + E + A, 1, D + L + HO + ' +k=1' + Bo + N + R + At + E + A, 1, D + L + Ia + ' +k=1' + DP + N + R + At + E + A, 1, D + L + JS + ' +k=1' + MS + N + M + NK + E + A, 1, D + L + PS + ' +k=1' + MT + N + M + NK + E + A, 1, D + L + KB + ' +k=1' + Bo + N + M + Ar + E + A, 1, D + L + IH + ' +k=1' + DP + N + M + Ar + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + M + Ar + E + A, 2, D + L + HP + ' +k=1' + Hy + N + M + U + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + M + U + E + A, 1, D + L + HQ + ' +k=1' + IA + N + M + U + E + A, 1, D + L + Ni + ' +k=1' + IB + N + M + U + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + M + U + E + A, 1, D + L + Hq + ' +k=1' + IT + N + M + U + E + A, 1, D + L + HR + ' +k=1' + Gc + N + M + U + E + A, 1, D + L + Mj + ' +k=1' + IU + N + M + U + E + A, 1, D + L + HS + ' +k=1' + Iu + N + M + U + E + A, 1, D + L + Jj + ' +k=1' + Mu + N + M + U + E + A, 1, D + L + EN + ' +k=1' + Mv + N + M + U + E + A, 1, D + L + Le + ' +k=1' + Mw + N + M + U + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + M + U + E + A, 1, D + L + Im + ' +k=1' + My + N + M + U + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + M + U + E + A, 1, D + L + KF + ' +k=1' + NA + N + M + U + E + A, 1, D + L + Fr + ' +k=1' + NB + N + M + U + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + M + U + E + A, 1, D + L + Ed + ' +k=1' + NC + N + M + U + E + A, 1, D + L + Il + ' +k=1' + Oi + N + M + U + E + A, 1, D + L + Fn + ' +k=1' + ND + N + M + U + E + A, 1, D + L + HP + ' +k=1' + O + N + M + U + E + A, 1, D + L + Lt + ' +k=1' + O + N + M + U + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + U + E + A, 1, D + L + Ni + ' +k=1' + O + N + M + U + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + U + E + A, 1, D + L + Hq + ' +k=1' + O + N + M + U + E + A, 1, D + L + HR + ' +k=1' + O + N + M + U + E + A, 1, D + L + Mj + ' +k=1' + O + N + M + U + E + A, 1, D + L + HS + ' +k=1' + O + N + M + U + E + A, 1, D + L + Jj + ' +k=1' + O + N + M + U + E + A, 1, D + L + EN + ' +k=1' + O + N + M + U + E + A, 1, D + L + Le + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + U + E + A, 1, D + L + Im + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + U + E + A, 1, D + L + KF + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + U + E + A, 1, D + L + Jk + ' +k=1' + O + N + M + U + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + U + E + A, 1, D + L + Il + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + U + E + A, 1, D + PT + Zz + V + s + N + C + B + E + A, 1, D + PT + NX + V + s + N + C + B + E + A, 1, D + GM + Ox + V + s + N + C + B + E + A, 1, D + PT + Tk + V + s + N + C + B + E + A, 1, D + GM + Oy + V + s + N + C + B + E + A, 1, D + GM + Rw + V + s + N + C + B + E + A, 1, D + GM + Oz + V + s + N + C + B + E + A, 1, D + GM + aA + V + s + N + C + B + E + A, 1, D + GM + PA + V + s + N + C + B + E + A, 1, D + Fs + PB + V + s + N + C + B + E + A, 1, D + IZ + ZH + V + s + N + C + B + E + A, 1, D + IZ + ZI + V + s + N + C + B + E + A, 1, D + IZ + ZJ + V + s + N + C + B + E + A, 1, D + IQ + ' +lon_0=142' + V + s + N + C + B + E + A, 1, D + IQ + Pj + V + s + N + C + B + E + A, 1, D + IQ + ' +lon_0=124' + V + s + N + C + B + E + A, 1, D + IQ + NX + V + s + N + C + B + E + A, 1, D + ' +lat_0=20' + Rw + V + s + N + C + B + E + A, 1, D + IQ + ZR + V + s + N + C + B + E + A, 1, D + L + Gl + ' +k=1' + DP + N + M + E + A, 1, D + L + Gl + ' +k=1' + O + N + M + G + E + A, 1, D + L + HO + ' +k=1' + O + N + M + G + E + A, 1, D + L + IG + ' +k=1' + O + N + M + G + E + A, 1, D + L + LN + ' +k=1' + O + N + M + G + E + A, 1, D + L + JS + ' +k=1' + O + N + M + G + E + A, 1, D + L + PS + ' +k=1' + O + N + M + G + E + A, 1, D + L + RL + ' +k=1' + O + N + M + G + E + A, 1, D + L + QW + ' +k=1' + O + N + M + G + E + A, 1, D + L + RM + ' +k=1' + O + N + M + G + E + A, 1, D + L + HP + ' +k=1' + O + N + M + G + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + G + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + G + E + A, 1, D + L + HR + ' +k=1' + O + N + M + G + E + A, 1, D + L + HS + ' +k=1' + O + N + M + G + E + A, 1, D + L + EN + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + G + E + A, 1, D + L + Pf + ' +k=1' + O + N + M + G + E + A, 1, D + L + Od + ' +k=1' + O + N + M + G + E + A, 1, D + L + NY + ' +k=1' + O + N + M + G + E + A, 1, D + L + Pg + ' +k=1' + O + N + M + G + E + A, 1, D + L + NZ + ' +k=1' + O + N + M + G + E + A, 1, D + L + Lf + ' +k=1' + O + N + M + G + E + A, 1, D + L + KG + ' +k=1' + O + N + M + G + E + A, 1, D + L + KH + ' +k=1' + O + N + M + G + E + A, 1, D + L + Lh + ' +k=1' + O + N + M + G + E + A, 3, D + L + Gl + ' +k=1' + O + N + M + F + E + A, 1, D + L + HO + ' +k=1' + O + N + M + F + E + A, 1, D + L + IG + ' +k=1' + O + N + M + F + E + A, 1, D + L + LN + ' +k=1' + O + N + M + F + E + A, 1, D + L + JS + ' +k=1' + O + N + M + F + E + A, 1, D + L + PS + ' +k=1' + O + N + M + F + E + A, 1, D + L + RL + ' +k=1' + O + N + M + F + E + A, 1, D + L + QW + ' +k=1' + O + N + M + F + E + A, 1, D + L + RM + ' +k=1' + O + N + M + F + E + A, 1, D + L + HP + ' +k=1' + O + N + M + F + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + F + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + F + E + A, 1, D + L + HR + ' +k=1' + O + N + M + F + E + A, 1, D + L + HS + ' +k=1' + O + N + M + F + E + A, 1, D + L + EN + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + F + E + A, 1, D + L + Pf + ' +k=1' + O + N + M + F + E + A, 1, D + L + Od + ' +k=1' + O + N + M + F + E + A, 1, D + L + NY + ' +k=1' + O + N + M + F + E + A, 1, D + L + Pg + ' +k=1' + O + N + M + F + E + A, 1, D + L + NZ + ' +k=1' + O + N + M + F + E + A, 1, D + L + Lf + ' +k=1' + O + N + M + F + E + A, 1, D + L + KG + ' +k=1' + O + N + M + F + E + A, 1, D + L + KH + ' +k=1' + O + N + M + F + E + A, 1, D + L + Lh + ' +k=1' + O + N + M + F + E + A, 1, D + L + Gl + ' +k=1' + IM + N + M + F + E + A, 1, D + L + II + ' +k=1' + MS + N + M + F + E + A, 1, D + L + HO + ' +k=1' + MT + N + M + F + E + A, 1, D + L + Ia + ' +k=1' + LY + N + M + F + E + A, 1, D + L + IG + ' +k=1' + Jp + N + M + F + E + A, 1, D + L + PN + ' +k=1' + LZ + N + M + F + E + A, 1, D + L + LN + ' +k=1' + HU + N + M + F + E + A, 1, D + L + PO + ' +k=1' + Gw + N + M + F + E + A, 1, D + L + JS + ' +k=1' + Hu + N + M + F + E + A, 1, D + L + SQ + ' +k=1' + Hv + N + M + F + E + A, 1, D + L + PS + ' +k=1' + It + N + M + F + E + A, 1, D + L + SR + ' +k=1' + Hs + N + M + F + E + A, 1, D + L + RL + ' +k=1' + Ht + N + M + F + E + A, 1, D + L + ' +lon_0=60 +k=1' + HV + N + M + F + E + A, 1, D + L + QW + ' +k=1' + Hw + N + M + F + E + A, 1, D + L + UH + ' +k=1' + HW + N + M + F + E + A, 1, D + L + RM + ' +k=1' + Hx + N + M + F + E + A, 1, D + L + Yt + ' +k=1' + La + N + M + F + E + A, 1, D + L + HP + ' +k=1' + Hy + N + M + F + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + M + F + E + A, 1, D + L + HQ + ' +k=1' + IA + N + M + F + E + A, 1, D + L + Ni + ' +k=1' + IB + N + M + F + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + M + F + E + A, 1, D + L + Hq + ' +k=1' + IT + N + M + F + E + A, 1, D + L + HR + ' +k=1' + Gc + N + M + F + E + A, 1, D + L + Mj + ' +k=1' + IU + N + M + F + E + A, 1, D + L + HS + ' +k=1' + Iu + N + M + F + E + A, 2, D + L + Jj + ' +k=1' + Mu + N + M + F + E + A, 1, D + L + EN + ' +k=1' + Mv + N + M + F + E + A, 1, D + L + Le + ' +k=1' + Mw + N + M + F + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + M + F + E + A, 1, D + L + Im + ' +k=1' + My + N + M + F + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + M + F + E + A, 1, D + L + KF + ' +k=1' + NA + N + M + F + E + A, 1, D + L + Fr + ' +k=1' + NB + N + M + F + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + M + F + E + A, 1, D + L + Ed + ' +k=1' + NC + N + M + F + E + A, 1, D + L + Il + ' +k=1' + Oi + N + M + F + E + A, 1, D + L + Fn + ' +k=1' + ND + N + M + F + E + A, 1, D + L + Rx + ' +k=1 +x_0=46500000' + N + M + F + E + A, 1, D + L + Pf + ' +k=1' + ZK + N + M + F + E + A, 1, D + L + UN + ' +k=1 +x_0=48500000' + N + M + F + E + A, 1, D + L + Od + ' +k=1 +x_0=49500000' + N + M + F + E + A, 1, D + L + Oe + ' +k=1 +x_0=50500000' + N + M + F + E + A, 1, D + L + NY + ' +k=1 +x_0=51500000' + N + M + F + E + A, 1, D + L + ZS + ' +k=1 +x_0=52500000' + N + M + F + E + A, 1, D + L + Pg + ' +k=1 +x_0=53500000' + N + M + F + E + A, 1, D + L + Ql + ' +k=1 +x_0=54500000' + N + M + F + E + A, 1, D + L + NZ + ' +k=1 +x_0=55500000' + N + M + F + E + A, 1, D + L + UO + ' +k=1 +x_0=56500000' + N + M + F + E + A, 1, D + L + Lf + ' +k=1 +x_0=57500000' + N + M + F + E + A, 1, D + L + UP + ' +k=1 +x_0=58500000' + N + M + F + E + A, 1, D + L + KG + ' +k=1 +x_0=59500000' + N + M + F + E + A, 2, D + L + KH + ' +k=1 +x_0=61500000' + N + M + F + E + A, 1, D + L + SU + ' +k=1 +x_0=62500000' + N + M + F + E + A, 1, D + L + Lh + ' +k=1 +x_0=63500000' + N + M + F + E + A, 1, D + L + SV + ' +k=1 +x_0=64500000' + N + M + F + E + A, 1, D + L + Gl + ' +k=1' + O + N + M + F + E + A, 1, D + L + II + ' +k=1' + O + N + M + F + E + A, 1, D + L + HO + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ia + ' +k=1' + O + N + M + F + E + A, 1, D + L + IG + ' +k=1' + O + N + M + F + E + A, 1, D + L + PN + ' +k=1' + O + N + M + F + E + A, 1, D + L + LN + ' +k=1' + O + N + M + F + E + A, 1, D + L + PO + ' +k=1' + O + N + M + F + E + A, 1, D + L + JS + ' +k=1' + O + N + M + F + E + A, 1, D + L + SQ + ' +k=1' + O + N + M + F + E + A, 1, D + L + PS + ' +k=1' + O + N + M + F + E + A, 1, D + L + SR + ' +k=1' + O + N + M + F + E + A, 1, D + L + RL + ' +k=1' + O + N + M + F + E + A, 1, D + L + ' +lon_0=60 +k=1' + O + N + M + F + E + A, 1, D + L + QW + ' +k=1' + O + N + M + F + E + A, 1, D + L + UH + ' +k=1' + O + N + M + F + E + A, 1, D + L + RM + ' +k=1' + O + N + M + F + E + A, 1, D + L + Yt + ' +k=1' + O + N + M + F + E + A, 2, D + L + HP + ' +k=1' + O + N + M + F + E + A, 1, D + L + Lt + ' +k=1' + O + N + M + F + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ni + ' +k=1' + O + N + M + F + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + F + E + A, 1, D + L + Hq + ' +k=1' + O + N + M + F + E + A, 1, D + L + HR + ' +k=1' + O + N + M + F + E + A, 1, D + L + Mj + ' +k=1' + O + N + M + F + E + A, 1, D + L + HS + ' +k=1' + O + N + M + F + E + A, 1, D + L + Jj + ' +k=1' + O + N + M + F + E + A, 1, D + L + EN + ' +k=1' + O + N + M + F + E + A, 1, D + L + Le + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + F + E + A, 1, D + L + Im + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + F + E + A, 1, D + L + KF + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + F + E + A, 1, D + L + Jk + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + F + E + A, 1, D + L + Il + ' +k=1' + O + N + M + F + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + F + E + A, 1, D + L + Rx + ' +k=1' + O + N + M + F + E + A, 1, D + L + Pf + ' +k=1' + O + N + M + F + E + A, 1, D + L + UN + ' +k=1' + O + N + M + F + E + A, 1, D + L + Od + ' +k=1' + O + N + M + F + E + A, 1, D + L + Oe + ' +k=1' + O + N + M + F + E + A, 1, D + L + NY + ' +k=1' + O + N + M + F + E + A, 1, D + L + ZS + ' +k=1' + O + N + M + F + E + A, 1, D + L + Pg + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ql + ' +k=1' + O + N + M + F + E + A, 1, D + L + NZ + ' +k=1' + O + N + M + F + E + A, 1, D + L + UO + ' +k=1' + O + N + M + F + E + A, 1, D + L + Lf + ' +k=1' + O + N + M + F + E + A, 1, D + L + UP + ' +k=1' + O + N + M + F + E + A, 1, D + L + KG + ' +k=1' + O + N + M + F + E + A, 1, D + L + Ry + ' +k=1' + O + N + M + F + E + A, 1, D + L + KH + ' +k=1' + O + N + M + F + E + A, 1, D + L + SU + ' +k=1' + O + N + M + F + E + A, 1, D + L + Lh + ' +k=1' + O + N + M + F + E + A, 1, D + L + SV + ' +k=1' + O + N + M + F + E + A, 1, D + L + Gl + ' +k=1' + IM + N + M + G + E + A, 1, D + L + II + ' +k=1' + MS + N + M + G + E + A, 1, D + L + HO + ' +k=1' + MT + N + M + G + E + A, 1, D + L + Ia + ' +k=1' + LY + N + M + G + E + A, 1, D + L + IG + ' +k=1' + Jp + N + M + G + E + A, 1, D + L + PN + ' +k=1' + LZ + N + M + G + E + A, 1, D + L + LN + ' +k=1' + HU + N + M + G + E + A, 1, D + L + PO + ' +k=1' + Gw + N + M + G + E + A, 1, D + L + JS + ' +k=1' + Hu + N + M + G + E + A, 1, D + L + SQ + ' +k=1' + Hv + N + M + G + E + A, 1, D + L + PS + ' +k=1' + It + N + M + G + E + A, 1, D + L + SR + ' +k=1' + Hs + N + M + G + E + A, 1, D + L + RL + ' +k=1' + Ht + N + M + G + E + A, 1, D + L + ' +lon_0=60 +k=1' + HV + N + M + G + E + A, 1, D + L + QW + ' +k=1' + Hw + N + M + G + E + A, 1, D + L + UH + ' +k=1' + HW + N + M + G + E + A, 1, D + L + RM + ' +k=1' + Hx + N + M + G + E + A, 1, D + L + Yt + ' +k=1' + La + N + M + G + E + A, 1, D + L + HP + ' +k=1' + Hy + N + M + G + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + M + G + E + A, 1, D + L + HQ + ' +k=1' + IA + N + M + G + E + A, 1, D + L + Ni + ' +k=1' + IB + N + M + G + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + M + G + E + A, 1, D + L + Hq + ' +k=1' + IT + N + M + G + E + A, 1, D + L + HR + ' +k=1' + Gc + N + M + G + E + A, 1, D + L + Mj + ' +k=1' + IU + N + M + G + E + A, 1, D + L + HS + ' +k=1' + Iu + N + M + G + E + A, 1, D + L + Jj + ' +k=1' + Mu + N + M + G + E + A, 1, D + L + EN + ' +k=1' + Mv + N + M + G + E + A, 1, D + L + Le + ' +k=1' + Mw + N + M + G + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + M + G + E + A, 1, D + L + Im + ' +k=1' + My + N + M + G + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + M + G + E + A, 1, D + L + KF + ' +k=1' + NA + N + M + G + E + A, 1, D + L + Fr + ' +k=1' + NB + N + M + G + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + M + G + E + A, 1, D + L + Ed + ' +k=1' + NC + N + M + G + E + A, 1, D + L + Il + ' +k=1' + Oi + N + M + G + E + A, 1, D + L + Fn + ' +k=1' + ND + N + M + G + E + A, 1, D + L + Rx + ' +k=1 +x_0=46500000' + N + M + G + E + A, 1, D + L + Pf + ' +k=1' + ZK + N + M + G + E + A, 1, D + L + UN + ' +k=1 +x_0=48500000' + N + M + G + E + A, 1, D + L + Od + ' +k=1 +x_0=49500000' + N + M + G + E + A, 1, D + L + Oe + ' +k=1 +x_0=50500000' + N + M + G + E + A, 1, D + L + NY + ' +k=1 +x_0=51500000' + N + M + G + E + A, 1, D + L + ZS + ' +k=1 +x_0=52500000' + N + M + G + E + A, 1, D + L + Pg + ' +k=1 +x_0=53500000' + N + M + G + E + A, 1, D + L + Ql + ' +k=1 +x_0=54500000' + N + M + G + E + A, 1, D + L + NZ + ' +k=1 +x_0=55500000' + N + M + G + E + A, 1, D + L + UO + ' +k=1 +x_0=56500000' + N + M + G + E + A, 1, D + L + Lf + ' +k=1 +x_0=57500000' + N + M + G + E + A, 1, D + L + UP + ' +k=1 +x_0=58500000' + N + M + G + E + A, 1, D + L + KG + ' +k=1 +x_0=59500000' + N + M + G + E + A, 2, D + L + KH + ' +k=1 +x_0=61500000' + N + M + G + E + A, 1, D + L + SU + ' +k=1 +x_0=62500000' + N + M + G + E + A, 1, D + L + Lh + ' +k=1 +x_0=63500000' + N + M + G + E + A, 1, D + L + SV + ' +k=1 +x_0=64500000' + N + M + G + E + A, 1, D + L + Gl + ' +k=1' + O + N + M + G + E + A, 1, D + L + II + ' +k=1' + O + N + M + G + E + A, 1, D + L + HO + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ia + ' +k=1' + O + N + M + G + E + A, 1, D + L + IG + ' +k=1' + O + N + M + G + E + A, 1, D + L + PN + ' +k=1' + O + N + M + G + E + A, 1, D + L + LN + ' +k=1' + O + N + M + G + E + A, 1, D + L + PO + ' +k=1' + O + N + M + G + E + A, 1, D + L + JS + ' +k=1' + O + N + M + G + E + A, 1, D + L + SQ + ' +k=1' + O + N + M + G + E + A, 1, D + L + PS + ' +k=1' + O + N + M + G + E + A, 1, D + L + SR + ' +k=1' + O + N + M + G + E + A, 1, D + L + RL + ' +k=1' + O + N + M + G + E + A, 1, D + L + ' +lon_0=60 +k=1' + O + N + M + G + E + A, 1, D + L + QW + ' +k=1' + O + N + M + G + E + A, 1, D + L + UH + ' +k=1' + O + N + M + G + E + A, 1, D + L + RM + ' +k=1' + O + N + M + G + E + A, 1, D + L + Yt + ' +k=1' + O + N + M + G + E + A, 1, D + L + HP + ' +k=1' + O + N + M + G + E + A, 1, D + L + Lt + ' +k=1' + O + N + M + G + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ni + ' +k=1' + O + N + M + G + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + G + E + A, 1, D + L + Hq + ' +k=1' + O + N + M + G + E + A, 1, D + L + HR + ' +k=1' + O + N + M + G + E + A, 1, D + L + Mj + ' +k=1' + O + N + M + G + E + A, 1, D + L + HS + ' +k=1' + O + N + M + G + E + A, 1, D + L + Jj + ' +k=1' + O + N + M + G + E + A, 1, D + L + EN + ' +k=1' + O + N + M + G + E + A, 1, D + L + Le + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + G + E + A, 1, D + L + Im + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + G + E + A, 1, D + L + KF + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + G + E + A, 1, D + L + Jk + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + G + E + A, 1, I + Mf + o + i + HF + E + A, 1, I + KD + o + i + HF + E + A, 1, D + L + Il + ' +k=1' + O + N + M + G + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + G + E + A, 1, D + L + Rx + ' +k=1' + O + N + M + G + E + A, 1, D + L + Pf + ' +k=1' + O + N + M + G + E + A, 1, D + L + UN + ' +k=1' + O + N + M + G + E + A, 1, D + L + Od + ' +k=1' + O + N + M + G + E + A, 1, D + L + Oe + ' +k=1' + O + N + M + G + E + A, 1, D + L + NY + ' +k=1' + O + N + M + G + E + A, 1, D + L + ZS + ' +k=1' + O + N + M + G + E + A, 1, D + L + Pg + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ql + ' +k=1' + O + N + M + G + E + A, 1, D + L + NZ + ' +k=1' + O + N + M + G + E + A, 1, D + L + UO + ' +k=1' + O + N + M + G + E + A, 1, D + L + Lf + ' +k=1' + O + N + M + G + E + A, 1, D + L + UP + ' +k=1' + O + N + M + G + E + A, 1, D + L + KG + ' +k=1' + O + N + M + G + E + A, 1, D + L + Ry + ' +k=1' + O + N + M + G + E + A, 1, D + L + KH + ' +k=1' + O + N + M + G + E + A, 1, D + L + SU + ' +k=1' + O + N + M + G + E + A, 1, D + L + Lh + ' +k=1' + O + N + M + G + E + A, 1, D + L + SV + ' +k=1' + O + N + M + G + E + A, 1, D + IY + IV + Pc + h + N + C + B + E + A, 1, D + Gm + OS + BG + a + N + C + B + E + A, 1, D + Bl + Cn + V + EX + N + C + B + E + A, 1, D + Bl + Co + V + EX + N + C + B + E + A, 1, D + Bl + Iv + BG + EX + N + C + B + E + A, 1, H + Dx + Dy + BC + IF + u + N + C + B + E + A, 1, H + Dz + Mq + EA + IF + u + Is + C + B + E + A, 1, H + DW + Jn + y + HA + Bd + Ae + C + B + E + A, 1, H + DX + DY + AA + HA + Bd + Ae + C + B + E + A, 1, H + Ap + DZ + Ml + AJ + Bd + Ae + C + B + E + A, 1, H + LO + QS + Da + Mm + Bd + Ae + C + B + E + A, 1, H + Db + Dc + Mn + Ir + Bd + Ae + C + B + E + A, 1, H + Dd + De + Df + Iw + Bd + Ae + C + B + E + A, 1, H + Eh + Ei + y + Ba + Fw + Fx + C + B + E + A, 1, H + LP + LQ + CY + Ba + Fw + Fx + C + B + E + A, 1, H + Ap + Dg + f + Ba + Fw + Fx + C + B + E + A, 1, H + Dh + Mo + Di + Jq + QG + QH + C + B + E + A, 1, D + Ch + Cp + Mp + h + N + C + B + E + A, 1, D + Aq + CR + Am + h + N + C + B + E + A, 1, D + Aq + Ob + Am + h + N + C + B + E + A, 1, H + LR + Dj + QT + LS + a + N + C + B + E + A, 1, D + Gm + Cq + V + h + N + C + B + E + A, 1, D + Gm + Cr + V + EW + N + C + B + E + A, 1, D + Kn + Sf + AO + O + N + C + B + E + A, 1, D + Ko + KO + AO + O + N + C + B + E + A, 1, D + GV + KI + Jl + O + N + C + B + E + A, 1, D + Kp + Sg + Jl + O + N + C + B + E + A, 1, D + Kq + KP + ' +k=1' + O + N + C + B + E + A, 1, D + p + Cs + BJ + h + N + C + B + E + A, 1, D + p + Jb + BJ + O + N + C + B + E + A, 1, D + p + Ix + BG + CX + N + C + B + E + A, 1, D + f + Cz + EQ + AI + N + C + B + E + A, 1, D + f + DA + Am + EW + N + C + B + E + A, 1, D + DM + DB + AO + BU + KJ + C + B + E + A, 1, D + DM + DC + AO + HT + KJ + C + B + E + A, 1, H + EB + EC + Fo + GG + AV + AH + C + B + E + A, 1, H + AY + ED + Fs + GG + O + N + C + B + E + A, 1, H + EE + EF + AQ + Fl + u + N + C + B + E + A, 1, H + EG + EH + f + CV + u + Is + C + B + E + A, 1, H + Az + DV + DM + Jo + O + N + C + B + E + A, 1, H + Ej + Ek + AB + EY + O + Ae + C + B + E + A, 1, H + FS + FT + IY + Hg + BZ + N + C + B + E + A, 1, H + OH + OI + OJ + Bi + BZ + N + C + B + E + A, 1, D + AK + HJ + V + AI + N + C + B + E + A, 1, D + BD + DD + AO + HT + N + C + B + E + A, 1, H + MU + Nz + AA + Ld + u + N + C + B + E + A, 1, H + El + Dk + Ip + GE + h + Mk + C + B + E + A, 1, H + Em + En + Ip + IL + O + N + C + B + E + A, 1, H + Eo + Ep + Eq + Jh + Tl + N + C + B + E + A, 1, H + OA + Er + Es + BE + Pk + N + C + B + E + A, 1, H + Bq + OB + Fo + BE + LU + N + C + B + E + A, 1, H + FU + FV + Iq + DE + CX + EK + C + B + E + A, 1, H + Ma + FW + IP + Js + CX + EK + C + B + E + A, 1, H + FX + FY + Nj + Na + CX + EK + C + B + E + A, 1, D + Hj + Ct + CP + AI + N + C + B + E + A, 1, D + Hj + Bx + CP + EW + N + C + B + E + A, 1, D + Cd + RS + BG + Bv + N + C + B + E + A, 1, D + Cd + Hg + BG + O + N + C + B + E + A, 1, D + Id + RT + Am + YC + N + C + B + E + A, 1, H + LM + RK + MV + IS + a + N + C + B + E + A, 1, H + JT + Jn + FZ + CS + O + N + C + B + E + A, 1, D + CQ + DF + V + h + Tm + C + B + E + A, 1, D + CQ + DG + V + O + Hh + C + B + E + A, 1, D + CQ + DH + V + CX + LV + C + B + E + A, 1, D + Fp + DI + AO + AI + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + Bl + Cu + Hm + OC + N + C + B + E + A, 1, D + Bl + Iy + V + O + N + C + B + E + A, 1, D + Bl + Cv + Iz + YD + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + Fs + Cw + Ad + Bv + N + C + B + E + A, 1, D + Fs + Cx + Ad + Qo + N + C + B + E + A, 1, H + Dl + Dm + BB + Oc + AI + N + C + B + E + A, 1, H + BH + Ev + Ib + EZ + a + N + C + B + E + A, 1, H + Ew + Ex + Be + EZ + a + N + C + B + E + A, 1, H + OK + Fa + BY + ET + a + N + C + B + E + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + E + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + E + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + E + A, 1, H + PP + CZ + AK + AJ + Ci + N + C + B + E + A, 1, H + PQ + Ca + p + AJ + AV + N + C + B + E + A, 1, D + EI + GE + Lb + BU + N + C + B + E + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + E + A, 1, H + OL + Ff + EJ + Ag + a + N + C + B + E + A, 1, H + FD + MX + BC + MQ + a + N + C + B + E + A, 1, H + FE + MY + QV + Jr + h + AH + C + B + E + A, 1, H + FF + FG + Ds + CV + a + Cl + C + B + E + A, 1, H + FH + FI + Cb + Ag + EW + Fq + C + B + E + A, 1, H + FJ + FK + Dt + Ji + a + LV + C + B + E + A, 1, H + CD + CE + Cc + CV + AI + Ju + C + B + E + A, 1, H + AY + CF + Br + BI + O + AH + C + B + E + A, 1, H + JF + CG + AQ + BI + O + Cl + C + B + E + A, 1, H + JG + CH + f + BI + O + Fq + C + B + E + A, 1, D + Fp + LW + JA + O + N + C + B + E + A, 1, H + OF + FL + AA + GF + Bo + Cl + C + B + E + A, 1, H + Az + Du + AB + GF + Bo + AH + C + B + E + A, 1, H + BH + OG + Ib + Cy + O + N + C + B + E + A, 1, H + FM + FN + Dv + AJ + O + N + C + B + E + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + E + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + E + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + E + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + E + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + E + A, 1, D + CA + DJ + Ad + h + N + C + B + E + A, 1, D + CA + DK + Ad + u + EK + C + B + E + A, 1, D + CA + JB + Ad + a + N + C + B + E + A, 1, D + CA + DL + Ad + CX + EK + C + B + E + A, 1, H + GW + GX + GY + GA + h + IK + C + B + E + A, 1, D + Bl + Cn + V + EX + N + C + B + t + A, 1, D + Bl + Co + V + EX + N + C + B + t + A, 1, D + Bl + Iv + BG + EX + N + C + B + t + A, 1, H + DW + Jn + y + HA + Ac + AD + C + B + J + A, 1, H + DX + DY + AA + HA + Ac + AD + C + B + J + A, 1, H + Ap + DZ + Ml + AJ + Ac + AD + C + B + J + A, 1, H + LO + QS + Da + Mm + Ac + AD + C + B + J + A, 1, H + Db + Dc + Mn + Ir + Ac + AD + C + B + J + A, 1, H + Dd + De + Df + Iw + Ac + AD + C + B + J + A, 1, H + Eh + Ei + y + Ba + Bw + CL + C + B + J + A, 1, H + LP + LQ + CY + Ba + Bw + CL + C + B + J + A, 1, H + Ap + Dg + f + Ba + Bw + CL + C + B + J + A, 1, H + Dh + Mo + Di + Jq + MC + MD + C + B + J + A, 1, D + Ch + Cp + Mp + AE + N + C + B + J + A, 1, D + Aq + CR + Am + AE + N + C + B + J + A, 1, D + Aq + Ob + Am + AE + N + C + B + J + A, 1, H + LR + Dj + QT + LS + a + N + C + B + J + A, 1, D + Gm + Cq + V + AE + N + C + B + J + A, 1, D + Gm + Cr + V + CM + N + C + B + J + A, 1, D + p + Cs + BJ + AE + N + C + B + J + A, 1, D + p + Jb + BJ + AF + N + C + B + J + A, 1, D + p + Ix + BG + ME + N + C + B + J + A, 3, H + Az + DV + DM + Jo + AF + N + C + B + J + A, 1, H + Ej + Ek + AB + EY + AF + AD + C + B + J + A, 1, H + MU + Nz + AA + Ld + MF + N + C + B + J + A, 1, H + El + Dk + Ip + GE + AE + Mk + C + B + J + A, 1, H + Em + En + Ip + IL + AF + N + C + B + J + A, 1, H + Eo + Ep + Eq + Jh + MG + N + C + B + t + A, 1, H + OA + Er + Es + BE + MH + N + C + B + t + A, 1, H + Bq + OB + Fo + BE + OT + N + C + B + t + A, 1, D + Hj + Ct + CP + BF + N + C + B + J + A, 1, D + Hj + Bx + CP + CM + N + C + B + J + A, 1, H + LM + RK + MV + IS + DR + N + C + B + t + A, 1, D + Bl + Cu + Hm + OC + N + C + B + J + A, 1, D + Bl + Iy + V + AF + N + C + B + J + A, 1, D + Bl + Cv + Iz + MI + N + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, D + Fs + Cw + Ad + MJ + N + C + B + J + A, 1, D + Fs + Cx + Ad + MK + N + C + B + J + A, 1, H + Dl + Dm + BB + Oc + BF + N + C + B + J + A, 1, H + BH + Ev + Ib + EZ + DR + N + C + B + t + A, 1, H + Ew + Ex + Be + EZ + DR + N + C + B + t + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + J + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + J + A, 1, H + PP + CZ + AK + AJ + KL + N + C + B + t + A, 1, H + PQ + Ca + p + AJ + KM + N + C + B + t + A, 1, H + FD + MX + BC + MQ + a + N + C + B + J + A, 1, H + FE + MY + QV + Jr + AE + CN + C + B + J + A, 1, H + FF + FG + Ds + CV + a + Gr + C + B + J + A, 1, H + FH + FI + Cb + Ag + CM + Fq + C + B + J + A, 1, H + FJ + FK + Dt + Ji + a + Ne + C + B + J + A, 1, H + CD + CE + Cc + CV + BF + Nf + C + B + J + A, 1, H + AY + CF + Br + BI + Gd + Pw + C + B + t + A, 1, H + JF + CG + AQ + BI + Gd + RY + C + B + t + A, 1, H + JG + CH + f + BI + Gd + RZ + C + B + t + A, 1, H + OF + FL + AA + GF + Gs + Gr + C + B + J + A, 1, H + Az + Du + AB + GF + Gs + CN + C + B + J + A, 1, H + BH + OG + Ib + Cy + AF + N + C + B + J + A, 1, H + FM + FN + Dv + AJ + AF + N + C + B + J + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + J + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + J + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + J + A, 1, D + L + ' +lon_0=13' + AP + O + N + AU + BN + Sy + E + A, 1, D + ' +lat_0=24.45' + Vv + Jl + h + Hk + R + Jy + E + A, 1, I + NS + o + Y + Hf + E + A, 2, D + KQ + ' +lon_0=41.53333333333333 +k=1 +x_0=1300000' + N + M + F + E + A, 1, D + KQ + ' +lon_0=44.53333333333333 +k=1' + aB + N + M + F + E + A, 1, D + KQ + ' +lon_0=47.53333333333333 +k=1' + aC + N + M + F + E + A, 1, D + KQ + ' +lon_0=50.53333333333333 +k=1' + aD + N + M + F + E + A, 1, D + Ol + ' +lon_0=50.76666666666667 +k=1' + aB + N + M + F + E + A, 1, D + Ol + ' +lon_0=53.76666666666667 +k=1' + aC + N + M + F + E + A, 1, D + Ol + ' +lon_0=56.76666666666667 +k=1' + aD + N + M + F + E + A, 1, I + Ja + R + SE + E + A, 1, I + Ja + R + Sz + E + A, 2, D + L + Tf + V + Ab + N + C + B + E + A, 1, D + L + RQ + V + Ab + N + C + B + E + A, 1, D + L + RR + V + Ab + N + C + B + E + A, 1, D + L + Tg + V + Ab + N + C + B + E + A, 1, D + L + IL + V + Ab + N + C + B + E + A, 1, D + L + Th + V + Ab + N + C + B + E + A, 1, D + L + Ti + V + Ab + N + C + B + E + A, 1, D + L + Ga + V + Ab + N + C + B + E + A, 1, GU + Iq + Zy + ST + Ci + aE + C + B + E + A, 1, GU + ' +lat_0=47.25' + Qk + ST + u + CO + C + B + E + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, I + ID + C + B + E + A, 2, DT + ' +lat_1=55' + QY + Yu + Ms + s + N + X + J + A, 1, D + DM + DB + AO + MM + GI + C + B + J + A, 1, D + DM + DC + AO + HT + GI + C + B + J + A, 1, D + DM + DB + AO + MM + GI + C + B + J + A, 1, D + DM + DC + AO + HT + GI + C + B + J + A, 1, I + Gz + R + TA + E + A, 1, I + Gz + R + SF + E + A, 1, I + Io + R + NH + E + A, 1, I + Io + C + B + E + A, 1, I + Gz + R + TO + E + A, 2, I + Me + o + C + B + E + A, 1, I + Ro + o + R + TP + E + A, 1, I + RG + o + R + Lr + E + A, 1, I + RH + o + R + UD + E + A, 2, I + JZ + o + R + SG + E + A, 1, I + MA + o + R + QM + E + A, 6, I + ID + i + TZ + E + A, 1, I + SK + o + R + SH + E + A, 3, H + JT + Hl + GH + AJ + u + N + C + B + E + A, 1, H + JT + Hl + GH + AJ + Lc + N + C + B + t + A, 1, H + JT + Hl + GH + AJ + u + N + C + B + E + A, 1, H + JT + Hl + GH + AJ + Lc + N + C + B + t + A, 1, I + MA + o + R + Jf + E + A, 1, I + MA + o + R + TB + E + A, 1, I + MA + o + R + Ke + E + A, 1, I + MA + o + R + HH + E + A, 1, I + JZ + o + R + SI + E + A, 1, JU + ' +lon_0=110' + ZP + Pl + Qp + Y + Hf + E + A, 1, JU + ' +lon_0=110' + ZP + Pl + Qp + Y + Cj + E + A, 1, JU + ' +lon_0=110' + ZP + Pl + Qp + Y + HZ + E + A, 1, D + L + KB + AP + AV + N + R + CK + E + A, 1, D + L + Gj + AP + ' +x_0=2520000' + N + R + CK + E + A, 1, DT + Yv + ' +lat_2=58.5' + IP + ' +lon_0=-126' + BZ + N + C + B + E + A, 1, I + KC + C + B + E + A, 1, D + L + IH + ' +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=13.5 +k=1' + Bn + N + C + B + E + A, 1, D + L + Gj + ' +k=1' + Bn + N + C + B + E + A, 1, D + L + YE + ' +k=1' + Bn + N + C + B + E + A, 1, D + L + QR + ' +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=14.25 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=15.75 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=17.25 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=18.75 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=20.25 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=21.75 +k=1' + Bn + N + C + B + E + A, 1, D + L + ' +lon_0=23.25 +k=1' + Bn + N + C + B + E + A, 1, D + L + Vw + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + Vx + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + Vy + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + Vz + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + WA + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + WB + ' +k=1' + AV + N + Y + BW + E + A, 1, D + L + Vw + ' +k=1' + AV + N + Y + E + A, 1, D + L + Vx + ' +k=1' + AV + N + Y + E + A, 1, D + L + Vy + ' +k=1' + AV + N + Y + E + A, 1, D + L + Vz + ' +k=1' + AV + N + Y + E + A, 1, D + L + WA + ' +k=1' + AV + N + Y + E + A, 1, D + L + WB + ' +k=1' + AV + N + Y + E + A, 1, BP + m + ' +lat_ts=-71' + HN + ' +k=1' + s + N + S + E + A, 1, BP + m + ' +lat_ts=-71 +lon_0=70 +k=1' + Pk + Hh + S + E + A, 1, H + ' +lat_1=-68.5 +lat_2=-74.5 +lat_0=-50 +lon_0=70' + Pk + Hh + S + E + A, 1, H + Yw + QY + PU + Lu + LU + RU + C + B + E + A, 1, He + PU + Lu + RV + RW + C + B + E + A, 1, I + Mf + o + j + KR + E + A, 1, I + KD + o + j + KR + E + A, 3, I + Ja + C + B + E + A, 1, I + KA + C + B + E + A, 1, I + Oq + C + B + E + A, 1, I + QD + C + B + E + A, 1, I + JN + C + B + E + A, 1, I + KC + C + B + E + A, 1, I + NR + C + B + E + A, 1, I + Ki + C + B + E + A, 1, I + Mf + C + B + E + A, 1, I + KD + C + B + E + A, 5, I + Os + R + Jd + E + A, 1, I + SL + R + Jd + E + A, 1, I + Ja + R + Jd + E + A, 1, H + ' +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19' + O + Ae + C + B + E + A, 1, D + L + ' +lon_0=-8.5 +k=1' + Jm + ' +y_0=-7800000' + R + Jz + E + A, 1, D + L + II + AP + O + ' +y_0=-6000000' + C + B + E + A, 1, I + MA + o + R + Qc + E + A, 1, I + Ja + R + PI + E + A, 1, I + Os + R + Pt + E + A, 1, I + Os + R + Pa + E + A, 1, I + JN + j + B + E + A, 1, I + KC + j + B + E + A, 1, D + L + ' +lon_0=37' + UG + O + ZL + R + n + E + A, 1, I + Ki + C + B + E + A, 1, Ck + ' +lat_0=52.41864827777778 +lon_0=13.62720366666667' + Of + ' +y_0=10000' + Y + AC + E + A, 1, D + L + Bu + AP + O + ' +y_0=-4500000' + X + E + A, 1, D + L + Bu + AP + YF + Sh + C + B + E + A, 1, D + L + Bu + AP + YF + Sh + C + B + E + A, 1, D + AL + Rf + JE + EW + N + C + B + E + A, 2, D + BD + Rg + JE + AI + N + C + B + E + A, 1, D + AL + Rf + JE + EW + N + C + B + E + A, 2, D + BD + Rg + JE + AI + N + C + B + E + A, 1, CU + Kr + ' +lonc=-86' + QI + AP + QJ + PY + KE + QK + C + B + E + A, 1, CU + Kr + ' +lonc=-86' + QI + AP + QJ + PY + KE + QK + C + B + E + A, 1, H + WC + WD + WE + CS + ' +x_0=914400 +y_0=914400' + X + t + A, 1, H + WC + WD + WE + CS + BZ + AH + C + B + E + A, 1, H + OM + RO + OX + CS + AV + Ju + C + B + E + A, 1, DT + OM + RO + OX + CS + AV + Hh + C + B + E + A, 1, H + OM + RO + OX + CS + AV + Ju + C + B + E + A, 1, DT + OM + RO + OX + CS + AV + Hh + C + B + E + A, 1, DT + ' +lat_1=24' + YG + ' +lat_0=24' + NV + u + N + C + B + E + A, 1, DT + ' +lat_1=24' + YG + ' +lat_0=24' + NV + u + N + C + B + E + A, 1, H + Fi + Fj + AB + EY + AV + AH + C + B + E + A, 1, H + Fi + Fj + AB + EY + AV + CN + C + B + J + A, 1, H + Fi + Fj + AB + EY + AV + AH + C + B + E + A, 1, H + Fi + Fj + AB + EY + AV + CN + C + B + J + A, 1, I + Mg + Y + g + E + A, 1, I + NT + Y + g + E + A, 1, I + Ot + Y + g + E + A, 1, I + Nv + Y + g + E + A, 1, I + PM + Y + g + E + A, 1, I + Mg + C + B + E + A, 1, I + NT + C + B + E + A, 1, I + Ot + C + B + E + A, 1, I + Nv + C + B + E + A, 1, I + PM + C + B + E + A, 1, H + ' +lat_1=-14.26666666666667 +lat_0=-14.26666666666667' + SW + ' +k_0=1' + e + ' +y_0=95169.31165862332' + i + TC + J + A, 4, D + L + Hq + AP + O + N + By + Ay + RF + E + A, 1, H + ' +lat_1=-28' + ZT + ' +lat_0=-32' + Fn + BZ + Cl + C + B + E + A, 1, D + SS + ' +lon_0=-2.416666666666667 +k=0.999997 +x_0=47000' + Rz + C + B + E + A, 1, D + ' +lat_0=49.225 +lon_0=-2.135 +k=0.9999999000000001' + Of + ' +y_0=70000' + C + B + E + A, 1, H + ' +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145' + Ci + Gb + x + r + E + A, 1, H + ' +lat_1=-36 +lat_2=-38 +lat_0=-37 +lon_0=145' + Ci + JH + C + B + E + A, 1, H + ' +lat_1=-18' + ZT + L + ' +lon_0=134' + s + N + C + B + E + A, 1, D + ' +lat_0=-28' + NY + Jl + Jm + EK + C + B + E + A, 1, D + Ie + ' +lon_0=-80.07750791666666 +k=1' + BZ + AH + C + B + E + A, 1, D + Ie + ' +lon_0=-77.07750791666666 +k=1' + BZ + AH + C + B + E + A, 1, D + Ie + ' +lon_0=-74.07750791666666 +k=1' + BZ + AH + C + B + E + A, 1, D + Ie + ' +lon_0=-71.07750791666666 +k=1' + BZ + AH + C + B + E + A, 1, D + Ie + ' +lon_0=-68.07750791666666 +k=1' + BZ + AH + C + B + E + A, 1, D + L + YH + ' +k=0.999' + BZ + AH + R + Qe + E + A, 1, GU + ' +lat_0=50.625 +lon_0=21.08333333333333' + UG + ' +x_0=4637000 +y_0=5467000' + M + b + E + A, 1, D + L + Fm + CP + O + N + i + BX + E + A, 1, D + L + ZU + CP + O + N + i + BX + E + A, 1, D + L + ZV + CP + O + N + i + BX + E + A, 1, D + L + Fr + CP + O + N + i + BX + E + A, 1, D + L + Ru + CP + O + N + i + BX + E + A, 1, D + L + RI + ' +k=1' + O + N + C + B + E + A, 1, D + L + UI + ' +k=1' + O + N + C + B + E + A, 1, D + L + Gl + ' +k=1' + O + N + C + B + E + A, 1, D + L + Yx + ' +k=1' + O + N + C + B + E + A, 1, D + L + SP + ' +k=1' + O + N + C + B + E + A, 1, D + L + II + ' +k=1' + O + N + C + B + E + A, 1, D + L + RJ + ' +k=1' + O + N + C + B + E + A, 1, D + L + UJ + ' +k=1' + O + N + C + B + E + A, 1, D + L + HO + ' +k=1' + O + N + C + B + E + A, 1, D + L + RP + ' +k=1' + O + N + C + B + E + A, 1, D + L + ' +lon_0=29 +k=1' + O + N + C + B + E + A, 1, D + L + Ia + ' +k=1' + O + N + C + B + E + A, 1, D + L + QQ + ' +k=1' + O + N + C + B + E + A, 2, Ck + ' +lat_0=-18 +lon_0=178 +x_0=109435.392 +y_0=141622.272' + UW + Ym + Nl + ' +to_meter=0.201168' + A, 1, I + PL + o + R + JD + E + A, 1, I + SK + o + R + JD + E + A, 6, I + Mh + By + Ay + JP + E + A, 1, I + Mi + By + Ay + JP + E + A, 3, D + L + ' +lon_0=18.05779 +k=0.99999425 +x_0=100178.1808 +y_0=-6500614.7836' + C + B + E + A, 1, DT + Yv + ' +lat_2=58.5' + IP + ' +lon_0=-126' + BZ + N + C + B + E + A, 1, I + RH + C + B + E + A, 1, I + TW + C + B + E + A, 1, I + TX + C + B + E + A, 1, I + QE + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, H + YI + ' +lat_2=53.5' + L + SA + ' +x_0=930000 +y_0=6430000' + C + B + E + A, 1, H + YI + ' +lat_2=53.5' + L + SA + ' +x_0=930000 +y_0=6430000' + C + B + E + A, 1, H + ' +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5' + ZW + u + Hk + C + B + E + A, 1, I + MA + o + j + QB + E + A, 1, H + ' +lat_1=-22.24469175 +lat_2=-22.29469175 +lat_0=-22.26969175 +lon_0=166.44242575 +x_0=0.66 +y_0=1.02' + R + HH + E + A, 1, H + ' +lat_1=-22.24472222222222 +lat_2=-22.29472222222222 +lat_0=-22.26972222222222 +lon_0=166.4425 +x_0=8.313000000000001 +y_0=-2.354' + R + HH + E + A, 1, CU + Qi + aF + aT + Ph + Of + N + KE + GZ + Yn + Qz + ' +to_meter=20.116756' + A, 1, CU + Qi + aF + aT + Ph + ' +x_0=804670.24' + N + KE + GZ + Yn + Qz + E + A, 1, I + SM + o + C + B + E + A, 1, I + MA + o + C + B + E + A, 1, I + Nq + o + C + B + E + A, 1, I + Nq + o + R + Jf + E + A, 2, DT + ' +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-84.455955' + BZ + AH + C + B + E + A, 1, DT + ' +lat_1=42.122774 +lat_2=49.01518 +lat_0=45.568977 +lon_0=-83.248627' + BZ + AH + C + B + E + A, 1, D + L + ZQ + AP + O + N + By + Ay + JP + E + A, 1, D + L + UE + ' +k=0.9965000000000001' + BZ + N + R + w + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, I + ID + C + B + E + A, 1, I + Io + C + B + E + A, 1, I + MB + C + B + E + A, 1, I + Nx + C + B + E + A, 1, I + Nr + C + B + E + A, 1, I + Os + C + B + E + A, 1, I + SL + C + B + E + A, 1, I + Ja + C + B + E + A, 1, I + KA + C + B + E + A, 1, D + L + KB + CP + h + N + R + w + E + A, 1, D + L + ' +lon_0=11' + CP + h + N + R + w + E + A, 1, D + L + ' +lon_0=13' + CP + h + N + R + w + E + A, 1, D + L + Gj + CP + h + N + R + w + E + A, 1, D + L + UE + CP + h + N + R + w + E + A, 1, D + L + RI + CP + h + N + R + w + E + A, 1, D + L + Gl + CP + h + N + R + w + E + A, 1, D + L + SP + CP + h + N + R + w + E + A, 1, D + L + RJ + CP + h + N + R + w + E + A, 1, I + JN + R + w + E + A, 1, H + Qq + Li + JS + PZ + AV + aG + c + QC + E + A, 1, I + KC + R + w + E + A, 1, I + NR + R + w + E + A, 1, I + Ki + R + w + E + A, 1, H + Om + On + m + Pe + s + N + S + E + A, 1, H + Om + On + m + Nb + s + N + S + E + A, 1, H + Om + On + m + ' +lon_0=-42' + s + N + S + E + A, 1, H + BQ + BR + m + SU + s + N + S + E + A, 1, H + BQ + BR + m + Pe + s + N + S + E + A, 1, H + BQ + BR + m + Nb + s + N + S + E + A, 1, H + BQ + BR + m + PO + s + N + S + E + A, 1, H + BQ + BR + m + SR + s + N + S + E + A, 1, H + BQ + BR + m + UH + s + N + S + E + A, 1, H + BQ + BR + m + Lt + s + N + S + E + A, 1, H + BQ + BR + m + Hq + s + N + S + E + A, 1, H + BQ + BR + m + Jj + s + N + S + E + A, 1, H + BQ + BR + m + Im + s + N + S + E + A, 1, H + BQ + BR + m + Jk + s + N + S + E + A, 1, H + BQ + BR + m + Rx + s + N + S + E + A, 1, H + BQ + BR + m + Oe + s + N + S + E + A, 1, H + BQ + BR + m + Ql + s + N + S + E + A, 1, H + AM + AN + m + ' +lon_0=-102' + s + N + S + E + A, 1, H + AM + AN + m + Bu + s + N + S + E + A, 1, H + AM + AN + m + ' +lon_0=-78' + s + N + S + E + A, 1, H + AM + AN + m + Pe + s + N + S + E + A, 1, H + AM + AN + m + ' +lon_0=-18' + s + N + S + E + A, 1, H + AM + AN + m + ' +lon_0=-6' + s + N + S + E + A, 1, H + AM + AN + m + ZO + s + N + S + E + A, 1, H + AM + AN + m + QR + s + N + S + E + A, 1, H + AM + AN + m + Ia + s + N + S + E + A, 1, H + AM + AN + m + PO + s + N + S + E + A, 1, H + AM + AN + m + SR + s + N + S + E + A, 1, H + AM + AN + m + UH + s + N + S + E + A, 1, H + AM + AN + m + Lt + s + N + S + E + A, 1, H + AM + AN + m + Hq + s + N + S + E + A, 1, H + AM + AN + m + Jj + s + N + S + E + A, 1, H + AM + AN + m + Im + s + N + S + E + A, 1, H + AM + AN + m + Jk + s + N + S + E + A, 1, H + AM + AN + m + Rx + s + N + S + E + A, 1, H + AM + AN + m + Oe + s + N + S + E + A, 1, H + AM + AN + m + Ql + s + N + S + E + A, 1, H + AM + AN + m + UP + s + N + S + E + A, 1, H + Ah + AZ + m + YJ + s + N + S + E + A, 1, H + Ah + AZ + m + YK + s + N + S + E + A, 1, H + Ah + AZ + m + Lj + s + N + S + E + A, 1, H + Ah + AZ + m + Ji + s + N + S + E + A, 1, H + Ah + AZ + m + CR + s + N + S + E + A, 1, H + Ah + AZ + m + Qk + s + N + S + E + A, 1, H + Ah + AZ + m + ' +lon_0=-27' + s + N + S + E + A, 1, H + Ah + AZ + m + ' +lon_0=-9' + s + N + S + E + A, 1, H + Ah + AZ + m + KB + s + N + S + E + A, 1, H + Ah + AZ + m + HO + s + N + S + E + A, 1, H + Ah + AZ + m + JS + s + N + S + E + A, 1, H + Ah + AZ + m + QW + s + N + S + E + A, 1, H + Ah + AZ + m + HQ + s + N + S + E + A, 1, H + Ah + AZ + m + HS + s + N + S + E + A, 1, H + Ah + AZ + m + Fm + s + N + S + E + A, 1, H + Ah + AZ + m + Fn + s + N + S + E + A, 1, H + Ah + AZ + m + NY + s + N + S + E + A, 1, H + Ah + AZ + m + Lf + s + N + S + E + A, 1, H + Ai + Aj + m + SV + s + N + S + E + A, 1, H + Ai + Aj + m + ' +lon_0=-144' + s + N + S + E + A, 1, H + Ai + Aj + m + Mt + s + N + S + E + A, 1, H + Ai + Aj + m + OZ + s + N + S + E + A, 1, H + Ai + Aj + m + UQ + s + N + S + E + A, 1, H + Ai + Aj + m + ' +lon_0=-48' + s + N + S + E + A, 1, H + Ai + Aj + m + ' +lon_0=-24' + s + N + S + E + A, 1, H + Ai + Aj + m + HN + s + N + S + E + A, 1, H + Ai + Aj + m + II + s + N + S + E + A, 1, H + Ai + Aj + m + SQ + s + N + S + E + A, 1, H + Ai + Aj + m + Yt + s + N + S + E + A, 1, H + Ai + Aj + m + Mj + s + N + S + E + A, 1, H + Ai + Aj + m + KF + s + N + S + E + A, 1, H + Ai + Aj + m + UN + s + N + S + E + A, 1, H + Ai + Aj + m + UO + s + N + S + E + A, 1, BP + m + AW + SX + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + YK + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + ' +lon_0=-105 +k=1' + s + N + S + E + A, 1, BP + m + AW + UR + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + ' +lon_0=-45 +k=1' + s + N + S + E + A, 1, BP + m + AW + ' +lon_0=-15 +k=1' + s + N + S + E + A, 1, BP + m + AW + Gj + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + JS + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + HP + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + EN + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + Fn + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + NZ + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + ON + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + Bu + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + ' +lon_0=-30 +k=1' + s + N + S + E + A, 1, BP + m + AW + Ia + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + Hq + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + Oe + ' +k=1' + s + N + S + E + A, 1, BP + m + AW + HN + ' +k=1' + s + N + S + E + A, 1, H + Ai + Aj + ' +lat_0=-78' + Ql + s + N + S + E + A, 2, I + RG + o + C + Bm + E + A, 1, I + Ro + o + C + Bm + E + A, 1, I + RH + o + C + Bm + E + A, 1, I + TW + o + C + Bm + E + A, 1, H + WF + ' +lat_2=58' + WG + II + O + ' +y_0=6375000' + C + Lw + E + A, 1, H + WF + ' +lat_2=58' + WG + II + O + ' +y_0=6375000' + C + B + E + A, 1, I + RH + o + R + Lq + E + A, 1, I + RH + o + R + Kc + E + A, 1, I + Ro + o + R + Kg + E + A, 1, I + Ro + o + R + Kh + E + A, 1, I + RG + o + R + QN + E + A, 1, I + JM + j + TD + E + A, 1, H + ' +lat_1=-30.75 +lat_2=-35.75 +lat_0=-33.25' + Od + ' +x_0=9300000' + Gb + C + B + E + A, 1, DT + Yy + SY + L + Mt + s + QZ + X + E + A, 1, DT + Yy + SY + L + Mt + s + QZ + C + B + E + A, 1, DT + Yy + SY + L + Mt + s + QZ + C + B + E + A, 1, I + ID + R + NH + E + A, 1, I + ID + C + B + E + A, 3, D + L + Yx + V + O + Ak + c + E + A, 1, D + L + II + V + O + Ak + c + E + A, 1, D + L + IH + V + O + Ak + c + E + A, 1, D + L + ' +lon_0=14' + V + O + Ak + c + E + A, 1, D + L + ' +lon_0=16' + V + O + Ak + c + E + A, 1, D + L + QR + V + O + Ak + c + E + A, 1, D + L + UI + V + O + Ak + c + E + A, 1, D + L + Yx + V + O + Ak + c + E + A, 1, D + L + II + V + O + Ak + c + E + A, 1, D + L + UJ + V + O + Ak + c + E + A, 1, D + L + RP + V + O + Ak + c + E + A, 1, D + L + Ia + V + O + Ak + c + E + A, 1, GU + ' +lat_0=52.16666666666666 +lon_0=19.16666666666667 +k=0.999714' + O + Ae + M + b + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + M + b + E + A, 1, D + L + QR + ' +k=1' + Jt + N + M + b + E + A, 1, D + L + Gl + ' +k=1' + IM + N + M + b + E + A, 1, D + L + II + ' +k=1' + MS + N + M + b + E + A, 1, D + L + Gj + ' +k=1' + Bo + N + M + b + E + A, 1, D + L + Gl + ' +k=1' + DP + N + M + b + E + A, 1, D + L + HO + ' +k=1' + Eg + N + M + b + E + A, 1, I + Rc + o + R + TE + E + A, 1, H + ' +lat_1=-20.19506944444445 +lat_0=-20.19506944444445 +lon_0=57.52182777777778 +k_0=1' + BZ + AH + c + Qf + E + A, 1, DT + ' +lat_1=55' + QY + Yu + Ms + s + N + C + B + E + A, 1, D + L + IH + V + O + Ak + c + GN + E + A, 1, D + L + ' +lon_0=14' + V + O + Ak + c + GN + E + A, 1, D + L + ' +lon_0=16' + V + O + Ak + c + GN + E + A, 1, I + KC + o + c + GN + E + A, 1, I + Ja + C + B + E + A, 1, I + KA + C + B + E + A, 1, I + Oq + C + B + E + A, 1, D + L + II + UG + O + N + C + B + E + A, 1, H + LM + IJ + ' +lat_0=63.390675' + UY + ' +x_0=6200000' + Fq + C + B + E + A, 1, H + LM + IJ + ' +lat_0=63.390675' + UY + ' +x_0=6200000' + Fq + C + B + E + A, 2, D + ' +lat_0=0.1 +lon_0=21.95 +k=1' + Bv + N + M + F + E + A, 1, D + ' +lat_0=0.1 +lon_0=24.95 +k=1 +x_0=1250000' + N + M + F + E + A, 1, D + ' +lat_0=0.1 +lon_0=27.95 +k=1 +x_0=2250000' + N + M + F + E + A, 1, I + JN + o + R + E + A, 1, I + JN + o + R + E + A, 1, D + Gm + QQ + ' +k=1 +x_0=615000 +y_0=810000' + Gn + Qg + E + A, 3, H + Et + Eu + LT + NW + Rh + N + C + B + E + A, 2, H + FC + OD + Dr + CR + OE + N + C + B + E + A, 1, H + FC + OD + Dr + CR + OE + N + C + B + t + A, 1, H + MW + FB + BB + Ea + a + N + C + B + E + A, 1, H + MW + FB + BB + Ea + a + N + C + B + J + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + E + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + J + A, 2, I + Ja + c + E + A, 1, I + KA + c + E + A, 1, I + Oq + c + E + A, 1, I + Nq + X + E + A, 1, I + PL + X + E + A, 1, I + Nq + C + B + E + A, 1, I + PL + C + B + E + A, 1, I + KA + R + E + A, 1, CU + Qi + aF + ' +alpha=323.0257964666666' + Ph + ' +x_0=804671' + N + KE + GZ + C + E + A, 1, CU + Qi + Yz + aU + Ph + s + N + KE + If + C + E + A, 1, Ck + ' +lat_0=2.121679744444445 +lon_0=103.4279362361111 +x_0=-14810.562 +y_0=8758.32' + C + E + A, 1, Ck + ' +lat_0=2.682347636111111 +lon_0=101.9749050416667 +x_0=3673.785 +y_0=-4240.573' + C + E + A, 1, Ck + ' +lat_0=3.769388088888889 +lon_0=102.3682989833333 +x_0=-7368.228 +y_0=6485.858' + C + E + A, 1, Ck + ' +lat_0=3.68464905 +lon_0=101.3891079138889 +x_0=-34836.161 +y_0=56464.049' + C + E + A, 1, Ck + ' +lat_0=4.9762852 +lon_0=103.070275625 +x_0=19594.245 +y_0=3371.895' + C + E + A, 1, Ck + ' +lat_0=5.421517541666667 +lon_0=100.3443769638889 +x_0=-23.414 +y_0=62.283' + C + E + A, 1, Ck + ' +lat_0=5.964672713888889 +lon_0=100.6363711111111' + s + N + C + E + A, 1, Ck + ' +lat_0=4.859063022222222 +lon_0=100.8154105861111 +x_0=-1.769 +y_0=133454.779' + C + E + A, 1, Ck + ' +lat_0=5.972543658333334 +lon_0=102.2952416694444 +x_0=13227.851 +y_0=8739.894' + C + E + A, 1, D + L + QR + ' +k=1' + O + N + R + At + E + A, 1, D + L + IG + ' +k=1' + Eg + N + R + At + E + A, 1, JU + PS + ' +lat_ts=42' + s + N + M + F + E + A, 1, D + L + Ry + ' +k=1 +x_0=60500000' + N + M + F + E + A, 1, D + L + Ry + ' +k=1 +x_0=60500000' + N + M + G + E + A, 1, I + KD + c + EU + E + A, 1, I + JZ + c + EU + E + A, 1, I + JM + c + EU + E + A, 1, H + Qq + Li + JS + PZ + AV + aG + c + E + A, 1, JU + HN + ' +k=1' + s + N + S + E + A, 1, D + L + KB + ' +k=1' + Bo + N + Y + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + Y + E + A, 1, D + L + SZ + ' +k=0.9992' + O + N + C + B + E + A, 1, D + L + SZ + ' +k=0.9992' + s + N + C + B + E + A, 1, D + L + SZ + ' +k=0.9992' + O + N + C + B + E + A, 1, D + L + SZ + ' +k=0.9992' + s + N + C + B + E + A, 1, H + Et + Eu + LT + NW + Z + N + C + B + J + A, 1, I + Mh + j + Fu + E + A, 1, I + Mi + j + Fu + E + A, 1, Ck + Vt + Vu + ' +x_0=40243.57775604237 +y_0=19069.93351512578' + Ee + Ef + ML + A, 1, He + Hr + HN + s + N + ZX + ZY + E + A, 1, He + m + HN + s + N + ZX + ZY + E + A, 1, '+proj=cea' + HN + ' +lat_ts=30' + s + N + ZX + ZY + E + A, 1, BP + Hr + ' +lat_ts=70 +lon_0=-45 +k=1' + s + N + ZZ + Ri + E + A, 1, BP + m + ' +lat_ts=-70' + HN + ' +k=1' + s + N + ZZ + Ri + E + A, 1, BP + Hr + ' +lat_ts=70 +lon_0=-45 +k=1' + s + N + S + E + A, 1, D + ' +lat_0=1.366666666666667 +lon_0=103.8333333333333 +k=1 +x_0=28001.642 +y_0=38744.572' + j + E + A, 1, H + ' +lat_1=18 +lat_2=24 +lat_0=21' + Im + O + Ae + T + Q + E + A, 1, H + LM + Nh + ' +lat_0=47.5' + Ig + u + Is + C + B + E + A, 1, H + EB + EC + Fo + GG + AV + GJ + C + B + J + A, 1, H + AY + ED + Fs + GG + AG + N + C + B + J + A, 1, H + EE + EF + AQ + Fl + Au + N + C + B + J + A, 1, H + EG + EH + f + CV + Au + Gt + C + B + J + A, 1, D + CQ + DF + V + Gu + MN + C + B + J + A, 1, D + CQ + DG + V + AG + Hh + C + B + J + A, 1, D + CQ + DH + V + An + NE + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, H + EB + EC + Fo + GG + AV + GJ + C + B + J + A, 1, H + AY + ED + Fs + GG + AG + N + C + B + J + A, 1, H + EE + EF + AQ + Fl + Au + N + C + B + J + A, 1, H + EG + EH + f + CV + Au + Gt + C + B + J + A, 1, D + CQ + DF + V + Gu + MN + C + B + J + A, 1, D + CQ + DG + V + AG + Hh + C + B + J + A, 1, D + CQ + DH + V + An + NE + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, H + Dx + Dy + BC + IF + Au + N + C + B + J + A, 1, H + Dz + Mq + EA + IF + Au + Gt + C + B + J + A, 1, D + f + Cz + EQ + BF + N + C + B + J + A, 1, D + f + DA + Am + MO + N + C + B + J + A, 1, D + Fp + DI + AO + BF + N + C + B + J + A, 1, D + EI + GE + Lb + JV + N + C + B + J + A, 1, I + JM + c + Gg + E + A, 1, I + Me + c + Gg + E + A, 1, H + Dx + Dy + BC + IF + Au + N + C + B + J + A, 1, H + Dz + Mq + EA + IF + Au + Gt + C + B + J + A, 1, D + f + Cz + EQ + BF + N + C + B + J + A, 1, D + f + DA + Am + MO + N + C + B + J + A, 1, D + Fp + DI + AO + BF + N + C + B + J + A, 1, D + EI + GE + Lb + JV + N + C + B + J + A, 1, H + Ks + Kt + ' +lat_0=50.797815' + WH + ' +x_0=150328 +y_0=166262' + C + B + E + A, 1, H + ' +lat_1=18' + OX + Ld + ' +k_0=1' + YL + ' +y_0=650000' + j + B + E + A, 1, I + Ik + j + B + E + A, 1, I + IC + j + B + E + A, 1, H + FS + FT + IY + Hg + Eb + N + C + B + J + A, 1, H + OH + OI + OJ + Bi + Eb + N + C + B + J + A, 1, H + CD + CE + ' +lat_0=25.5' + Bi + Eb + N + C + B + J + A, 2, H + OL + Ff + EJ + Ag + a + N + C + B + J + A, 1, H + FS + FT + IY + Hg + Eb + N + C + B + J + A, 1, H + OH + OI + OJ + Bi + Eb + N + C + B + J + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + J + A, 1, H + OL + Ff + EJ + Ag + a + N + C + B + J + A, 1, D + ' +lat_0=-17 +lon_0=178.75 +k=0.99985' + Bd + LV + T + P + E + A, 1, I + Ja + AU + BN + Nm + E + A, 1, I + KA + AU + BN + Nm + E + A, 1, D + YM + Rj + JE + O + N + C + B + E + A, 1, D + YM + Rj + JE + O + N + C + B + E + A, 1, D + IY + IV + Pc + h + N + C + B + E + A, 1, D + Gm + OS + BG + a + N + C + B + E + A, 1, DT + ' +lat_1=55' + QY + Yu + Ms + s + N + C + B + E + A, 1, CU + ' +lat_0=57' + Ku + Kv + V + LX + EO + KE + GZ + C + B + E + A, 1, D + Ft + YN + V + O + N + C + B + E + A, 1, D + Ft + YO + V + O + N + C + B + E + A, 1, D + Ft + ON + V + O + N + C + B + E + A, 1, D + Ft + Ms + V + O + N + C + B + E + A, 1, D + Ft + KI + V + O + N + C + B + E + A, 1, D + Ft + YP + V + O + N + C + B + E + A, 1, D + Ft + YQ + V + O + N + C + B + E + A, 1, D + Ft + SW + V + O + N + C + B + E + A, 1, H + Kw + Kx + UK + YR + BZ + N + C + B + E + A, 1, D + Bl + Co + V + EX + N + C + B + E + A, 1, D + Bl + Co + V + EX + N + C + B + t + A, 1, D + Bl + Cn + V + EX + N + C + B + E + A, 1, D + Bl + Cn + V + EX + N + C + B + t + A, 1, D + Bl + Iv + BG + EX + N + C + B + E + A, 1, D + Bl + Iv + BG + EX + N + C + B + t + A, 1, H + Dx + Dy + BC + IF + u + N + C + B + E + A, 1, H + Dx + Dy + BC + IF + Au + N + C + B + J + A, 1, H + Dz + Mq + EA + IF + u + Is + C + B + E + A, 1, H + Dz + Mq + EA + IF + Au + Gt + C + B + J + A, 1, DT + Yy + SY + L + Mt + s + QZ + C + B + E + A, 1, H + DW + Jn + y + HA + Bd + Ae + C + B + E + A, 1, H + DW + Jn + y + HA + Ac + AD + C + B + J + A, 1, H + DX + DY + AA + HA + Bd + Ae + C + B + E + A, 1, H + DX + DY + AA + HA + Ac + AD + C + B + J + A, 1, H + Ap + DZ + Ml + AJ + Bd + Ae + C + B + E + A, 1, H + Ap + DZ + Ml + AJ + Ac + AD + C + B + J + A, 1, H + LO + QS + Da + Mm + Bd + Ae + C + B + E + A, 1, H + LO + QS + Da + Mm + Ac + AD + C + B + J + A, 1, H + Db + Dc + Mn + Ir + Bd + Ae + C + B + E + A, 1, H + Db + Dc + Mn + Ir + Ac + AD + C + B + J + A, 1, H + Dd + De + Df + Iw + Bd + Ae + C + B + E + A, 1, H + Dd + De + Df + Iw + Ac + AD + C + B + J + A, 1, H + LP + LQ + CY + Ba + Fw + Fx + C + B + E + A, 1, H + LP + LQ + CY + Ba + Bw + CL + C + B + J + A, 1, H + Eh + Ei + y + Ba + Fw + Fx + C + B + E + A, 1, H + Eh + Ei + y + Ba + Bw + CL + C + B + J + A, 1, H + Ap + Dg + f + Ba + Fw + Fx + C + B + E + A, 1, H + Ap + Dg + f + Ba + Bw + CL + C + B + J + A, 1, H + Dh + Mo + Di + Jq + QG + QH + C + B + E + A, 1, H + Dh + Mo + Di + Jq + MC + MD + C + B + J + A, 1, D + Ch + Cp + Mp + h + N + C + B + E + A, 1, D + Ch + Cp + Mp + AE + N + C + B + J + A, 1, D + Aq + CR + Am + h + N + C + B + E + A, 1, D + Aq + CR + Am + AE + N + C + B + J + A, 1, DT + ' +lat_1=24' + YG + ' +lat_0=24' + NV + u + N + C + B + E + A, 1, H + LR + Dj + QT + LS + a + N + C + B + E + A, 1, H + LR + Dj + QT + LS + a + N + C + B + J + A, 1, D + Aq + Ob + Am + h + N + C + B + E + A, 1, D + Aq + Ob + Am + AE + N + C + B + J + A, 1, D + Gm + Cq + V + h + N + C + B + E + A, 1, D + Gm + Cq + V + AE + N + C + B + J + A, 1, D + Gm + Cr + V + EW + N + C + B + E + A, 1, D + Gm + Cr + V + CM + N + C + B + J + A, 1, D + p + Jb + BJ + O + N + C + B + E + A, 1, D + p + Jb + BJ + AF + N + C + B + J + A, 1, D + p + Cs + BJ + h + N + C + B + E + A, 1, D + p + Cs + BJ + AE + N + C + B + J + A, 1, D + p + Ix + BG + CX + N + C + B + E + A, 1, D + p + Ix + BG + ME + N + C + B + J + A, 1, D + f + Cz + EQ + AI + N + C + B + E + A, 1, D + f + Cz + EQ + BF + N + C + B + J + A, 1, D + f + DA + Am + EW + N + C + B + E + A, 1, D + f + DA + Am + MO + N + C + B + J + A, 1, D + DM + DB + AO + BU + KJ + C + B + E + A, 1, D + DM + DB + AO + MM + GI + C + B + J + A, 1, D + DM + DC + AO + HT + KJ + C + B + E + A, 1, D + DM + DC + AO + HT + GI + C + B + J + A, 1, H + EB + EC + Fo + GG + AV + AH + C + B + E + A, 1, H + EB + EC + Fo + GG + AV + GJ + C + B + J + A, 1, H + AY + ED + Fs + GG + O + N + C + B + E + A, 1, H + AY + ED + Fs + GG + AG + N + C + B + J + A, 1, H + EE + EF + AQ + Fl + u + N + C + B + E + A, 1, H + EE + EF + AQ + Fl + Au + N + C + B + J + A, 1, H + EG + EH + f + CV + u + Is + C + B + E + A, 1, H + EG + EH + f + CV + Au + Gt + C + B + J + A, 1, H + Az + DV + DM + Jo + O + N + C + B + E + A, 1, H + Az + DV + DM + Jo + AF + N + C + B + J + A, 1, H + Fi + Fj + AB + EY + AV + AH + C + B + E + A, 1, H + Fi + Fj + AB + EY + AV + CN + C + B + J + A, 1, H + Ej + Ek + AB + EY + O + Ae + C + B + E + A, 1, H + Ej + Ek + AB + EY + AF + AD + C + B + J + A, 1, H + FS + FT + IY + Hg + BZ + N + C + B + E + A, 1, H + FS + FT + IY + Hg + Eb + N + C + B + J + A, 1, H + OH + OI + OJ + Bi + BZ + N + C + B + E + A, 1, H + OH + OI + OJ + Bi + Eb + N + C + B + J + A, 1, D + YM + Rj + JE + O + N + C + B + E + A, 1, D + AL + Rf + JE + EW + N + C + B + E + A, 1, D + BD + Rg + JE + AI + N + C + B + E + A, 1, D + AK + HJ + V + AI + N + C + B + E + A, 1, D + BD + DD + AO + HT + N + C + B + E + A, 1, H + MU + Nz + AA + Ld + u + N + C + B + E + A, 1, H + AY + CF + Br + BI + AG + GJ + C + B + J + A, 1, D + Kn + Sf + AO + e + N + i + GB + J + A, 1, D + Ko + KO + AO + e + N + i + GB + J + A, 1, D + GV + KI + Jl + e + N + i + GB + J + A, 1, D + Kp + Sg + Jl + e + N + i + GB + J + A, 1, D + Kq + KP + ' +k=1' + e + N + i + GB + J + A, 1, H + JF + CG + AQ + BI + AG + NF + C + B + J + A, 1, H + JG + CH + f + BI + AG + Fq + C + B + J + A, 1, H + AY + CF + Br + BI + AG + GJ + C + B + J + A, 1, H + JF + CG + AQ + BI + AG + NF + C + B + J + A, 1, H + JG + CH + f + BI + AG + Fq + C + B + J + A, 1, He + Hr + Ry + s + N + S + E + A, 1, He + Hr + ON + s + N + S + E + A, 1, He + Hr + CS + s + N + S + E + A, 1, He + Hr + ' +lon_0=-40' + s + N + S + E + A, 1, He + Hr + Lu + s + N + S + E + A, 1, He + Hr + Hq + s + N + S + E + A, 1, DT + ' +lat_1=-18' + ZT + L + Il + s + N + C + B + E + A, 1, DT + WI + ' +lat_2=68 +lat_0=59 +lon_0=-132.5' + O + Ae + C + B + E + A, 1, DT + WI + ' +lat_2=68 +lat_0=59 +lon_0=-132.5' + O + Ae + C + B + E + A, 1, H + ' +lat_1=62 +lat_2=70' + L + ' +lon_0=-112' + s + N + C + B + E + A, 1, H + ' +lat_1=62 +lat_2=70' + L + ' +lon_0=-112' + s + N + C + B + E + A, 1, H + MU + Nz + AA + Ld + MF + N + C + B + J + A, 1, H + Em + En + Ip + IL + O + N + C + B + E + A, 1, H + Em + En + Ip + IL + AF + N + C + B + J + A, 1, H + El + Dk + Ip + GE + h + Mk + C + B + E + A, 1, H + El + Dk + Ip + GE + AE + Mk + C + B + J + A, 1, H + OA + Er + Es + BE + Pk + N + C + B + E + A, 1, H + OA + Er + Es + BE + MH + N + C + B + t + A, 1, H + Eo + Ep + Eq + Jh + Tl + N + C + B + E + A, 1, H + Eo + Ep + Eq + Jh + MG + N + C + B + t + A, 1, CU + Kr + ' +lonc=-86' + QI + AP + QJ + PY + KE + QK + C + B + E + A, 1, H + Bq + OB + Fo + BE + LU + N + C + B + E + A, 1, H + Bq + OB + Fo + BE + OT + N + C + B + t + A, 1, H + Ma + FW + IP + Js + CX + EK + C + B + E + A, 1, H + FU + FV + Iq + DE + CX + EK + C + B + E + A, 1, H + FX + FY + Nj + Na + CX + EK + C + B + E + A, 1, D + Hj + Ct + CP + AI + N + C + B + E + A, 1, D + Hj + Ct + CP + BF + N + C + B + J + A, 1, D + Hj + Bx + CP + EW + N + C + B + E + A, 1, D + Hj + Bx + CP + CM + N + C + B + J + A, 1, D + Cd + Hg + BG + O + N + C + B + E + A, 1, D + Cd + RS + BG + Bv + N + C + B + E + A, 1, D + Id + RT + Am + YC + N + C + B + E + A, 1, H + LM + RK + MV + IS + a + N + C + B + E + A, 1, H + LM + RK + MV + IS + DR + N + C + B + t + A, 1, H + JT + Jn + FZ + CS + O + N + C + B + E + A, 1, D + CQ + DG + V + O + Hh + C + B + E + A, 1, D + CQ + DG + V + AG + Hh + C + B + J + A, 1, D + CQ + DF + V + h + Tm + C + B + E + A, 1, D + CQ + DF + V + Gu + MN + C + B + J + A, 1, D + CQ + DH + V + CX + LV + C + B + E + A, 1, D + CQ + DH + V + An + NE + C + B + J + A, 1, D + Fp + DI + AO + AI + N + C + B + E + A, 1, D + Fp + DI + AO + BF + N + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, D + Bl + Iy + V + O + N + C + B + E + A, 1, D + Bl + Iy + V + AF + N + C + B + J + A, 1, D + Bl + Cu + Hm + OC + N + C + B + E + A, 1, D + Bl + Cu + Hm + OC + N + C + B + J + A, 1, D + Bl + Cv + Iz + YD + N + C + B + E + A, 1, D + Bl + Cv + Iz + MI + N + C + B + J + A, 1, D + Fs + Cw + Ad + Bv + N + C + B + E + A, 1, D + Fs + Cw + Ad + MJ + N + C + B + J + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + J + A, 1, H + Dl + Dm + BB + Oc + AI + N + C + B + E + A, 1, H + Dl + Dm + BB + Oc + BF + N + C + B + J + A, 1, D + Fs + Cx + Ad + Qo + N + C + B + E + A, 1, D + Fs + Cx + Ad + MK + N + C + B + J + A, 1, H + Et + Eu + LT + NW + Rh + N + C + B + E + A, 1, H + Et + Eu + LT + NW + Z + N + C + B + J + A, 1, H + BH + Ev + Ib + EZ + a + N + C + B + E + A, 1, H + BH + Ev + Ib + EZ + DR + N + C + B + t + A, 1, H + Ew + Ex + Be + EZ + a + N + C + B + E + A, 1, H + Ew + Ex + Be + EZ + DR + N + C + B + t + A, 1, H + OK + Fa + BY + ET + a + N + C + B + E + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + E + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + E + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + J + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + E + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + J + A, 1, H + JT + Hl + GH + AJ + u + N + C + B + E + A, 1, H + JT + Hl + GH + AJ + Lc + N + C + B + t + A, 1, H + PP + CZ + AK + AJ + Ci + N + C + B + E + A, 1, H + PP + CZ + AK + AJ + KL + N + C + B + t + A, 1, H + PQ + Ca + p + AJ + AV + N + C + B + E + A, 1, H + PQ + Ca + p + AJ + KM + N + C + B + t + A, 1, H + MW + FB + BB + Ea + a + N + C + B + E + A, 1, H + MW + FB + BB + Ea + a + N + C + B + J + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + E + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + J + A, 1, D + EI + GE + Lb + BU + N + C + B + E + A, 1, D + EI + GE + Lb + JV + N + C + B + J + A, 1, H + FC + OD + Dr + CR + OE + N + C + B + E + A, 1, H + FC + OD + Dr + CR + OE + N + C + B + t + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + E + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + J + A, 1, H + OL + Ff + EJ + Ag + a + N + C + B + E + A, 1, H + OL + Ff + EJ + Ag + a + N + C + B + J + A, 1, H + FD + MX + BC + MQ + a + N + C + B + E + A, 1, H + FD + MX + BC + MQ + a + N + C + B + J + A, 1, H + FH + FI + Cb + Ag + EW + Fq + C + B + E + A, 1, H + FH + FI + Cb + Ag + CM + Fq + C + B + J + A, 1, DT + OM + RO + OX + CS + AV + Hh + C + B + E + A, 1, H + OM + RO + OX + CS + AV + Ju + C + B + E + A, 1, H + FE + MY + QV + Jr + h + AH + C + B + E + A, 1, H + FE + MY + QV + Jr + AE + CN + C + B + J + A, 1, H + FF + FG + Ds + CV + a + Cl + C + B + E + A, 1, H + FF + FG + Ds + CV + a + Gr + C + B + J + A, 1, H + CD + CE + Cc + CV + AI + Ju + C + B + E + A, 1, H + CD + CE + Cc + CV + BF + Nf + C + B + J + A, 1, H + FJ + FK + Dt + Ji + a + LV + C + B + E + A, 1, H + FJ + FK + Dt + Ji + a + Ne + C + B + J + A, 1, H + JF + CG + AQ + BI + O + Cl + C + B + E + A, 1, H + JF + CG + AQ + BI + Gd + RY + C + B + t + A, 1, H + JF + CG + AQ + BI + AG + NF + C + B + J + A, 1, H + AY + CF + Br + BI + O + AH + C + B + E + A, 1, H + AY + CF + Br + BI + Gd + Pw + C + B + t + A, 1, H + AY + CF + Br + BI + AG + GJ + C + B + J + A, 1, H + JG + CH + f + BI + O + Fq + C + B + E + A, 1, H + JG + CH + f + BI + Gd + RZ + C + B + t + A, 1, H + JG + CH + f + BI + AG + Fq + C + B + J + A, 1, D + Fp + LW + JA + O + N + C + B + E + A, 1, H + OF + FL + AA + GF + Bo + Cl + C + B + E + A, 1, H + OF + FL + AA + GF + Gs + Gr + C + B + J + A, 1, H + Az + Du + AB + GF + Bo + AH + C + B + E + A, 1, H + Az + Du + AB + GF + Gs + CN + C + B + J + A, 1, H + BH + OG + Ib + Cy + O + N + C + B + E + A, 1, H + BH + OG + Ib + Cy + AF + N + C + B + J + A, 1, H + FM + FN + Dv + AJ + O + N + C + B + E + A, 1, H + FM + FN + Dv + AJ + AF + N + C + B + J + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + E + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + E + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + E + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + J + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + E + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + J + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + E + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + J + A, 1, D + L + Bu + AP + YF + Sh + C + B + E + A, 1, D + CA + DJ + Ad + h + N + C + B + E + A, 1, D + CA + DK + Ad + u + EK + C + B + E + A, 1, D + CA + JB + Ad + a + N + C + B + E + A, 1, D + CA + DL + Ad + CX + EK + C + B + E + A, 1, I + Nq + C + B + E + A, 1, I + PL + C + B + E + A, 1, I + SK + C + B + E + A, 1, I + TV + C + B + E + A, 1, I + Xz + C + B + E + A, 1, I + TY + C + B + E + A, 1, I + RG + C + B + E + A, 1, I + Ro + C + B + E + A, 1, I + RH + C + B + E + A, 1, I + TW + C + B + E + A, 1, I + TX + C + B + E + A, 1, I + QE + C + B + E + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, D + ' +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=160000' + Rz + R + SJ + E + A, 1, H + OK + Fa + BY + ET + a + N + C + B + J + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + J + A, 1, D + CA + DJ + Ad + Gu + N + C + B + J + A, 1, D + CA + DK + Ad + Au + Ao + C + B + J + A, 1, D + CA + JB + Ad + a + N + C + B + J + A, 1, D + CA + DL + Ad + An + Ao + C + B + J + A, 1, H + OK + Fa + BY + ET + a + N + C + B + J + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + J + A, 1, D + CA + DJ + Ad + Gu + N + C + B + J + A, 1, D + CA + DK + Ad + Au + Ao + C + B + J + A, 1, D + CA + JB + Ad + a + N + C + B + J + A, 1, D + CA + DL + Ad + An + Ao + C + B + J + A, 1, I + QE + C + B + E + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + TY + C + B + E + A, 1, I + RG + C + B + E + A, 2, H + OK + Fa + BY + ET + a + N + C + B + J + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + J + A, 1, D + CA + DJ + Ad + Gu + N + C + B + J + A, 1, D + CA + DK + Ad + Au + Ao + C + B + J + A, 1, D + CA + JB + Ad + a + N + C + B + J + A, 1, D + CA + DL + Ad + An + Ao + C + B + J + A, 1, D + GV + KI + Jl + AG + N + C + B + J + A, 1, D + GV + KI + Jl + AG + N + C + B + J + A, 1, I + Io + C + B + E + A, 1, H + ' +lat_1=-54 +lat_2=-54.75 +lat_0=-55 +lon_0=-37' + s + N + S + E + A, 1, D + ' +lat_0=39.66825833333333 +lon_0=-8.133108333333334 +k=1' + s + N + C + B + E + A, 1, D + Za + Si + ' +k=1' + u + CO + C + B + E + A, 1, D + L + YE + V + O + N + C + B + E + A, 1, H + ' +lat_1=45.91666666666666 +lat_2=43.08333333333334' + L + YE + s + N + C + B + E + A, 1, I + KC + C + B + E + A, 1, I + NR + C + B + E + A, 1, I + Gz + i + TQ + E + A, 1, D + ' +lat_0=32 +lon_0=-64.75 +k=1 +x_0=550000' + EK + j + B + E + A, 1, D + L + KK + V + s + N + X + E + A, 1, D + L + Jb + V + s + N + X + E + A, 1, D + L + Lj + V + s + N + X + E + A, 2, D + L + KK + V + s + N + C + B + E + A, 1, D + L + Jb + V + s + N + C + B + E + A, 1, D + L + Lj + V + s + N + C + B + E + A, 2, D + L + KK + V + s + N + C + B + E + A, 1, D + L + Jb + V + s + N + C + B + E + A, 1, D + L + Lj + V + s + N + C + B + E + A, 2, D + ' +lat_0=-25.06855261111111 +lon_0=-130.1129671111111 +k=1 +x_0=14200 +y_0=15500' + j + B + E + A, 1, I + TX + o + R + Ta + E + A, 4, D + L + ZW + ' +k=1' + Bo + Ak + C + B + E + A, 1, D + L + ' +lon_0=169 +k=1' + Bo + Ak + C + B + E + A, 1, D + L + ' +lon_0=179 +k=1' + Bo + Ak + C + B + E + A, 1, D + L + ' +lon_0=-178 +k=1' + Bo + Ak + C + B + E + A, 2, D + L + Si + ' +k=1' + Bo + Ak + C + B + E + A, 1, D + L + Gj + V + O + EO + C + B + E + A, 1, H + ' +lat_1=23 +lat_2=21.7 +lat_0=22.35' + CR + O + ' +y_0=280296.016' + X + E + A, 1, H + ' +lat_1=21.3 +lat_2=20.13333333333333 +lat_0=20.71666666666667 +lon_0=-76.83333333333333' + O + ' +y_0=229126.939' + X + E + A, 1, H + Yv + Nh + IZ + ' +lon_0=-70' + CX + N + X + E + A, 1, H + Yv + Nh + IZ + ' +lon_0=-70' + CX + N + C + B + E + A, 1, H + Yv + Nh + IZ + ' +lon_0=-70' + CX + N + C + B + E + A, 1, D + L + Mt + V + s + N + X + E + A, 1, D + L + Mt + V + s + N + C + B + E + A, 1, D + L + Mt + V + s + N + C + B + E + A, 10, H + Ks + Kt + ' +lat_0=50.797815' + WH + ' +x_0=649328 +y_0=665262' + C + B + E + A, 2, D + Li + Sj + Tn + O + Pm + C + B + E + A, 1, D + Li + Sj + Tn + O + Pm + C + B + E + A, 1, D + Li + Sj + Tn + O + Pm + C + B + E + A, 3, K + Y + ' +towgs84=595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408' + A, 2, K + x + A, 3, K + C + B + A, 1, D + L + ZU + V + Bv + N + C + B + E + A, 1, D + L + ZV + V + Bv + N + C + B + E + A, 1, D + L + ZU + V + Bv + N + x + E + A, 1, D + L + ZV + V + Bv + N + x + E + A, 1, I + Mg + R + Rq + E + A, 3, JU + Oe + ' +k=1' + s + N + S + E + A, 1, D + L + KB + ' +k=1' + Ci + N + M + b + E + A, 1, D + L + KB + ' +k=1' + Ci + N + M + Ar + E + A, 1, D + L + Gj + ' +k=1' + Bo + N + M + Ar + E + A, 1, D + L + Gl + ' +k=1' + DP + N + M + Ar + E + A, 1, D + L + KB + ' +k=1' + Bo + N + M + b + E + A, 1, D + L + IH + ' +k=1' + DP + N + M + b + E + A, 1, D + L + HO + ' +k=1' + MT + N + M + b + E + A, 1, D + L + Ia + ' +k=1' + LY + N + M + b + E + A, 1, D + L + QR + ' +k=1' + Jt + N + M + Ar + E + A, 3, GU + ' +lat_0=46' + RJ + Rv + O + Ae + M + b + E + A, 1, D + L + ' +lon_0=11.30625 +k=1.000006 +x_0=1500025.141 +y_0=-667.282' + C + B + E + A, 1, D + L + ' +lon_0=13.55626666666667 +k=1.0000058 +x_0=1500044.695 +y_0=-667.13' + C + B + E + A, 1, D + L + ' +lon_0=15.80628452944445 +k=1.00000561024 +x_0=1500064.274 +y_0=-667.711' + C + B + E + A, 1, D + L + ' +lon_0=18.0563 +k=1.0000054 +x_0=1500083.521 +y_0=-668.8440000000001' + C + B + E + A, 1, D + L + ' +lon_0=20.30631666666667 +k=1.0000052 +x_0=1500102.765 +y_0=-670.706' + C + B + E + A, 1, D + L + ' +lon_0=22.55633333333333 +k=1.0000049 +x_0=1500121.846 +y_0=-672.557' + C + B + E + A, 1, H + ' +lat_1=-37.5 +lat_2=-44.5 +lat_0=-41 +lon_0=173' + aH + ' +y_0=7000000' + C + B + E + A, 1, H + Ai + Aj + m + ' +lon_0=157' + O + N + C + B + E + A, 2, D + L + ' +lon_0=18.05787 +k=0.99999506 +x_0=100182.7406 +y_0=-6500620.1207' + C + B + E + A, 3, JU + ' +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0' + N + ' +k=1.0' + E + ' +nadgrids=@null +wktext ' + A, 16, D + L + RI + ' +k=1' + Ht + N + C + B + E + A, 1, D + L + UI + ' +k=1' + HV + N + C + B + E + A, 1, D + L + Gl + ' +k=1' + Hw + N + C + B + E + A, 1, D + L + Yx + ' +k=1' + HW + N + C + B + E + A, 1, D + L + SP + ' +k=1' + Hx + N + C + B + E + A, 1, D + L + II + ' +k=1' + La + N + C + B + E + A, 1, D + L + RJ + ' +k=1' + Hy + N + C + B + E + A, 1, D + L + UJ + ' +k=1' + Hz + N + C + B + E + A, 1, D + L + HO + ' +k=1' + IA + N + C + B + E + A, 1, D + L + RP + ' +k=1' + IB + N + C + B + E + A, 1, D + L + ' +lon_0=29 +k=1' + Gx + N + C + B + E + A, 1, D + L + Ia + ' +k=1' + IT + N + C + B + E + A, 1, D + L + QQ + ' +k=1' + Gc + N + C + B + E + A, 4, K + C + B + A, 1, I + KD + C + B + E + A, 1, I + JZ + C + B + E + A, 1, I + JM + C + B + E + A, 1, D + WJ + ' +lon_0=46.5 +k=0.9994' + CX + N + R + n + E + A, 13, K + Y + Aw + A, 6, D + L + Gj + V + O + EO + Y + Aw + E + A, 8, I + Gz + i + Je + E + A, 22, H + ' +lat_1=41.25 +lat_2=42.75' + PR + Or + Jv + Tj + C + B + E + A, 1, H + ' +lat_1=42.25 +lat_2=43.75' + Nj + Or + Jv + ' +y_0=2200000' + C + B + E + A, 1, H + ' +lat_1=43.25 +lat_2=44.75' + IZ + Or + Jv + ' +y_0=3200000' + C + B + E + A, 1, H + ' +lat_1=44.25 +lat_2=45.75' + IP + Or + Jv + ' +y_0=4200000' + C + B + E + A, 1, H + ' +lat_1=45.25 +lat_2=46.75 +lat_0=46' + Or + Jv + ' +y_0=5200000' + C + B + E + A, 1, H + aI + ' +lat_2=47.75' + Ib + Or + Jv + ' +y_0=6200000' + C + B + E + A, 1, H + ' +lat_1=47.25 +lat_2=48.75 +lat_0=48' + Or + Jv + ' +y_0=7200000' + C + B + E + A, 1, H + ' +lat_1=48.25 +lat_2=49.75 +lat_0=49' + Or + Jv + ' +y_0=8200000' + C + B + E + A, 1, H + ' +lat_1=49.25 +lat_2=50.75' + Yu + Or + Jv + ' +y_0=9200000' + C + B + E + A, 18, H + ' +lat_1=37' + YS + GM + Ga + s + N + C + B + E + A, 1, H + ' +lat_1=37' + YS + GM + Ga + s + N + C + B + E + A, 1, H + ' +lat_1=37' + YS + GM + Ga + s + N + C + B + E + A, 6, BP + m + ' +lat_ts=-70' + HN + ' +k=1' + s + N + S + E + A, 2, H + LM + IJ + ' +lat_0=49 +lon_0=-95' + s + N + C + B + E + A, 1, H + LM + IJ + ' +lat_0=49 +lon_0=-95' + s + N + C + B + E + A, 7, D + ZA + Ia + ' +k=1' + h + Ae + i + CW + E + A, 1, D + ZA + RP + ' +k=1' + h + Ae + i + CW + E + A, 1, D + ZA + UJ + ' +k=1' + h + Ae + i + CW + E + A, 1, D + ZA + II + ' +k=1' + h + Ae + i + CW + E + A, 2, H + GW + GX + GY + GA + e + N + i + Je + J + A, 1, H + GW + GX + GY + GA + e + Pv + i + Je + J + A, 2, JU + ' +lon_0=100 +lat_ts=-41' + s + N + S + E + A, 1, BP + Hr + ' +lat_ts=71' + HN + ' +k=1' + s + N + S + E + A, 1, BP + Hr + ' +lat_ts=75' + HN + ' +k=1' + s + N + S + E + A, 1, D + L + ' +lon_0=55.33333333333334 +k=1' + O + N + S + E + A, 4, K + PV + A, 1, K + Ok + A, 1, K + x + A, 1, K + Y + A, 1, K + Hn + EL + A, 1, K + HB + A, 1, K + Ee + Ef + A, 1, K + i + A, 2, K + Nc + Nd + A, 1, K + AU + BN + A, 1, K + c + A, 1, K + Bc + BS + A, 1, K + AU + ' +b=6356514.996941779' + A, 1, K + By + Ay + A, 1, K + Lo + A, 2, K + GL + Bz + A, 1, K + C + A, 1, K + Gn + A, 1, K + IR + Bh + A, 1, K + R + A, 1, K + C + B + A, 0, K + C + B + A, 1, K + M + A, 1, K + aJ + A, 1, D + L + ' +lon_0=28.4 +k=0.9999400000000001' + h + EO + C + B + E + A, 1, K + ' +a=6376523' + RA + A, 1, K + Zx + Qy + A, 1, K + Qj + Ho + A, 1, K + j + A, 1, K + j + A, 1, K + ' +a=6378136.2 +b=6356751.516927429' + A, 1, K + ' +a=6378136.3 +b=6356751.616592146' + A, 1, K + RB + RC + A, 2, K + aK + A, 1, I + Ki + S + E + A, 1, I + Mf + S + E + A, 3, K + Pd + Gq + A, 1, K + HK + Gv + A, 1, K + T + A, 1, K + Lp + Hp + A, 1, K + Go + CT + A, 1, K + C + B + A, 1, K + ' +a=6371007 +b=6371007' + A, 1, D + L + IH + V + O + Ak + C + B + E + A, 1, D + L + ' +lon_0=14' + V + O + Ak + C + B + E + A, 1, D + L + ' +lon_0=16' + V + O + Ak + C + B + E + A, 1, D + L + QR + V + O + Ak + C + B + E + A, 1, K + ' +a=6370997 +b=6370997' + A, 1, K + ZX + ZY + A, 1, K + ZZ + Ri + A, 2, D + L + UI + V + O + Ak + C + B + E + A, 1, D + L + Yx + V + O + Ak + C + B + E + A, 1, D + L + II + V + O + Ak + C + B + E + A, 1, D + L + UJ + V + O + Ak + C + B + E + A, 1, D + L + RP + V + O + Ak + C + B + E + A, 1, I + KC + o + C + B + E + A, 1, I + NR + o + C + B + E + A, 1, I + Ki + o + C + B + E + A, 8, I + MB + o + R + TF + E + A, 4, K + C + B + A, 6, K + C + B + A, 1, I + SL + C + B + E + A, 1, I + Ja + C + B + E + A, 4, '+proj=eqc +lat_ts=0' + L + HN + s + N + S + E + A, 1, '+proj=eqc +lat_ts=0' + L + HN + s + N + ' +a=6371007 +b=6371007' + E + A, 5, D + L + KB + JE + h + EO + C + B + E + A, 1, D + L + Lu + JE + u + EO + C + B + E + A, 1, D + L + ' +lon_0=11.75' + JE + a + EO + C + B + E + A, 1, D + L + Gj + ' +k=1' + CX + EO + C + B + E + A, 24, K + Y + A, 1, K + C + Qb + A, 1, K + Pd + Gq + A, 1, K + R + At + A, 1, K + Y + BW + A, 3, K + i + HF + A, 1, K + i + A, 1, K + i + A, 1, K + j + KR + A, 1, K + By + Ay + JP + A, 1, K + c + QC + A, 1, K + C + Lw + A, 1, K + c + Gg + A, 1, K + i + GB + A, 1, K + i + A, 1, K + i + A, 1, K + i + A, 1, K + i + Je + A, 2, K + C + UC + A, 1, K + c + JO + A, 1, K + c + IE + A, 1, K + By + Ay + JQ + A, 1, K + Lp + Hp + GQ + A, 1, K + Go + CT + BT + A, 1, K + M + HG + A, 1, K + j + B + A, 1, K + Y + Gf + A, 1, K + Y + Py + A, 1, K + C + B + A, 1, K + C + B + A, 1, K + R + Pz + A, 1, K + R + Gy + A, 1, K + AU + BN + Nm + A, 1, K + Y + Gh + A, 1, K + Ee + Ef + A, 1, K + R + QA + A, 1, K + R + v + A, 1, K + R + A, 1, K + R + SD + A, 1, K + Y + A, 1, K + j + B + A, 1, K + M + NK + A, 1, K + R + TM + A, 1, K + j + B + A, 1, K + C + B + A, 1, K + Qj + Ho + NI + A, 1, K + i + TC + A, 1, K + C + B + A, 1, K + C + B + A, 2, K + C + B + A, 1, K + Qj + Ho + A, 1, K + c + OW + A, 1, K + C + B + A, 2, K + M + Ar + A, 1, K + M + b + A, 1, K + C + B + A, 1, K + R + Jx + A, 1, K + R + Sw + A, 1, K + R + Sx + A, 1, K + R + TN + A, 4, K + PV + Bb + A, 1, K + C + B + A, 1, K + C + B + A, 1, K + M + A, 1, K + R + Qe + A, 1, K + AU + BN + RD + A, 1, K + R + NG + A, 1, K + R + ' +towgs84=105,326,-102.5,0,0,0.814,-0.6' + A, 1, K + R + ' +towgs84=-45,417,-3.5,0,0,0.814,-0.6' + A, 1, K + c + A, 1, K + c + A, 1, K + R + A, 1, K + M + G + A, 1, K + c + HX + A, 1, K + x + r + A, 1, K + x + CB + A, 1, K + R + Cm + A, 1, K + M + NL + A, 1, K + AU + BN + A, 1, K + R + EV + A, 1, K + R + Ec + A, 1, K + Bc + BS + In + A, 1, K + c + ER + A, 1, K + Y + Cj + A, 1, K + c + Jw + A, 1, K + AU + BN + Sy + A, 1, K + M + U + A, 1, K + R + A, 1, K + i + TQ + A, 1, D + L + Lf + AP + k + N + C + B + J + A, 0, D + L + Lf + AP + k + N + C + B + J + A, 1, K + R + ES + A, 1, K + Y + ' +towgs84=-384,664,-48,0,0,0,0' + A, 1, K + c + GO + A, 1, K + R + Bs + A, 1, K + Bc + BS + Ax + A, 1, K + AU + BN + Gi + A, 1, K + R + TF + A, 1, K + R + GR + A, 2, K + AU + BN + HI + A, 2, K + Gn + HY + A, 1, K + R + n + A, 1, K + R + ' +towgs84=-83.11,-97.38,-117.22,0.00569291,-0.0446976,0.0442851,0.1218' + A, 1, K + c + NM + A, 4, K + R + Rq + A, 1, K + aK + RE + A, 1, K + IR + Bh + Av + A, 1, K + By + Ay + JR + A, 1, K + By + Ay + NN + A, 1, K + RB + RC + A, 1, K + i + TG + A, 1, K + HK + Gv + A, 1, K + By + Ay + Tb + A, 1, K + GL + Bz + BV + A, 1, K + c + Qh + A, 1, K + R + Hc + A, 1, K + R + AX + A, 1, K + R + A, 1, K + c + TR + A, 1, K + c + ' +towgs84=-90,40,88,0,0,0,0' + A, 1, K + AU + BN + A, 1, K + i + GC + A, 1, K + R + OV + A, 1, K + R + ' +towgs84=-333,-222,114,0,0,0,0' + A, 1, K + c + ' +towgs84=41,-220,-134,0,0,0,0' + A, 1, K + Y + HZ + A, 1, K + C + B + A, 1, K + R + Qd + A, 2, K + AU + BN + IO + A, 1, K + Y + Tc + A, 1, K + c + GS + A, 2, K + R + CK + A, 1, K + AU + BN + NO + A, 1, K + X + A, 2, K + C + B + A, 1, K + c + DO + A, 1, K + R + TS + A, 1, K + R + W + A, 1, K + Hn + EL + Aa + A, 1, K + R + JL + A, 1, K + AU + BN + Bk + A, 1, K + aJ + A, 1, K + PV + Lx + A, 1, K + PV + A, 1, K + PV + A, 1, K + Y + A, 1, K + Nc + Nd + DS + A, 1, K + AU + BN + TH + A, 1, K + C + B + A, 1, K + M + F + A, 1, K + R + QO + A, 1, K + Gn + A, 2, K + R + A, 1, K + Y + Fv + A, 3, K + R + Nn + A, 1, K + HB + Bt + A, 2, K + Y + A, 2, K + R + HD + A, 1, K + Lo + GD + A, 1, K + Ok + Bb + A, 1, K + Ok + Bb + A, 1, K + Y + g + A, 1, K + Ee + Ef + JK + A, 1, K + Gn + A, 1, K + AU + BN + JC + A, 2, K + Y + A, 1, K + c + Af + A, 1, K + Y + A, 1, K + R + ' +towgs84=-155,171,37,0,0,0,0' + A, 1, K + AU + BN + A, 1, K + R + HE + A, 1, K + Y + z + A, 1, K + R + GP + A, 1, K + Y + AC + A, 1, K + AU + BN + No + A, 1, K + R + QP + A, 2, K + j + MR + A, 1, K + C + Rr + A, 3, K + T + P + A, 2, K + T + Q + A, 2, K + S + A, 64, Ck + ' +lat_0=2.042583333333333 +lon_0=103.5627583333333' + s + N + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=2.712283333333334 +lon_0=101.9411666666667 +x_0=-242.005 +y_0=-948.547' + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=3.710972222222222 +lon_0=102.4361777777778' + s + N + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=3.680344444444444 +lon_0=101.5082444444444 +x_0=-21759.438 +y_0=55960.906' + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=4.946141666666667 +lon_0=102.8952083333333' + s + N + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=5.421325 +lon_0=100.3458694444444' + s + N + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=5.965147222222223 +lon_0=100.6375944444444' + s + N + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=4.859380555555555 +lon_0=100.8167666666667' + s + ' +y_0=133453.669' + GL + Bz + BV + E + A, 1, Ck + ' +lat_0=5.893922222222222 +lon_0=102.1772916666667' + s + N + GL + Bz + BV + E + A, 1, D + L + Lf + AP + k + N + X + J + A, 1, D + L + KG + AP + k + N + X + J + A, 1, D + L + KH + AP + k + N + X + J + A, 1, D + L + Lh + AP + k + N + X + J + A, 1, D + L + SX + AP + k + N + X + J + A, 1, D + L + ' +lon_0=-159' + AP + k + N + X + J + A, 0, D + L + ' +lon_0=-159' + AP + k + N + X + J + A, 1, D + L + YJ + AP + k + N + X + J + A, 1, D + L + Qr + AP + k + N + X + J + A, 1, D + L + ' +lon_0=-141' + AP + k + N + X + J + A, 1, D + L + YK + AP + k + N + X + J + A, 1, D + L + YT + AP + k + N + X + J + A, 1, D + L + ' +lon_0=-123' + AP + k + N + X + J + A, 1, D + L + Lj + AP + k + N + X + J + A, 1, D + L + KK + AP + k + N + X + J + A, 1, D + L + ' +lon_0=-105' + AP + k + N + X + J + A, 1, D + ' +lat_0=13.5 +lon_0=144.75 +k=1' + BU + IK + C + B + E + A, 1, H + ' +lat_1=-6.5 +lat_2=-11.5' + ZA + UJ + O + Ae + i + CW + E + A, 2, D + L + Gl + ' +k=1' + IM + N + M + Ar + E + A, 1, D + L + UR + AP + k + N + X + J + A, 1, D + L + MP + AP + k + N + X + J + A, 1, D + L + KG + AP + k + N + C + B + J + A, 1, D + L + KH + AP + k + N + C + B + J + A, 1, D + L + Lh + AP + k + N + C + B + J + A, 1, D + L + SX + AP + k + N + C + B + J + A, 1, D + L + ' +lon_0=-159' + AP + k + N + C + B + J + A, 1, D + L + YJ + AP + k + N + C + B + J + A, 1, D + L + Qr + AP + k + N + C + B + J + A, 1, D + L + ' +lon_0=-141' + AP + k + N + C + B + J + A, 1, D + L + YK + AP + k + N + C + B + J + A, 1, D + L + YT + AP + k + N + C + B + J + A, 1, D + L + ' +lon_0=-123' + AP + k + N + C + B + J + A, 1, D + L + Lj + AP + k + N + C + B + J + A, 1, D + L + KK + AP + k + N + C + B + J + A, 1, D + L + ' +lon_0=-105' + AP + k + N + C + B + J + A, 1, D + L + II + ' +k=1' + MS + N + M + Ar + E + A, 3, H + GW + GX + GY + GA + h + IK + C + B + E + A, 1, D + L + UR + AP + k + N + C + B + J + A, 1, D + L + MP + AP + k + N + C + B + J + A, 16, H + Dp + Dq + y + Ea + Z + N + X + J + A, 1, H + Dl + Dm + CA + Oc + Z + Pv + X + J + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + J + A, 5, H + ' +lat_1=-18' + ZT + ' +lat_0=-27' + Il + s + N + S + E + A, 1, K + C + B + A, 4, I + ID + C + B + E + A, 3, K + C + B + A, 1, I + JZ + o + C + B + E + A, 4, K + R + PJ + A, 8, K + C + B + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, K + C + A, 1, D + L + HP + ' +k=1' + HU + N + C + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + C + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + C + E + A, 1, D + L + HR + ' +k=1' + Hv + N + C + E + A, 1, D + L + HS + ' +k=1' + It + N + C + E + A, 1, D + L + EN + ' +k=1' + Hs + N + C + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + C + E + A, 1, D + L + Fm + ' +k=1' + HV + N + C + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + C + E + A, 1, D + L + Ed + ' +k=1' + HW + N + C + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + C + E + A, 1, D + L + HP + ' +k=1' + O + N + C + E + A, 1, D + L + HQ + ' +k=1' + O + N + C + E + A, 1, D + L + Hd + ' +k=1' + O + N + C + E + A, 1, D + L + HR + ' +k=1' + O + N + C + E + A, 1, D + L + HS + ' +k=1' + O + N + C + E + A, 1, D + L + EN + ' +k=1' + O + N + C + E + A, 1, D + L + Fy + ' +k=1' + O + N + C + E + A, 1, D + L + Fm + ' +k=1' + O + N + C + E + A, 1, D + L + Fr + ' +k=1' + O + N + C + E + A, 1, D + L + Ed + ' +k=1' + O + N + C + E + A, 1, D + L + Fn + ' +k=1' + O + N + C + E + A, 1, D + L + HP + ' +k=1' + Hy + N + C + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + C + E + A, 1, D + L + HQ + ' +k=1' + IA + N + C + E + A, 1, D + L + Ni + ' +k=1' + IB + N + C + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + C + E + A, 1, D + L + Hq + ' +k=1' + IT + N + C + E + A, 1, D + L + HR + ' +k=1' + Gc + N + C + E + A, 1, D + L + Mj + ' +k=1' + IU + N + C + E + A, 1, D + L + HS + ' +k=1' + Iu + N + C + E + A, 1, D + L + Jj + ' +k=1' + Mu + N + C + E + A, 1, D + L + EN + ' +k=1' + Mv + N + C + E + A, 1, D + L + Le + ' +k=1' + Mw + N + C + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + C + E + A, 1, D + L + Im + ' +k=1' + My + N + C + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + C + E + A, 1, D + L + KF + ' +k=1' + NA + N + C + E + A, 1, D + L + Fr + ' +k=1' + NB + N + C + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + C + E + A, 1, D + L + Ed + ' +k=1' + NC + N + C + E + A, 1, D + L + Il + ' +k=1' + Oi + N + C + E + A, 1, D + L + Fn + ' +k=1' + ND + N + C + E + A, 1, D + L + HP + ' +k=1' + O + N + C + E + A, 1, D + L + Lt + ' +k=1' + O + N + C + E + A, 1, D + L + HQ + ' +k=1' + O + N + C + E + A, 1, D + L + Ni + ' +k=1' + O + N + C + E + A, 1, D + L + Hd + ' +k=1' + O + N + C + E + A, 1, D + L + Hq + ' +k=1' + O + N + C + E + A, 1, D + L + HR + ' +k=1' + O + N + C + E + A, 1, D + L + Mj + ' +k=1' + O + N + C + E + A, 1, D + L + HS + ' +k=1' + O + N + C + E + A, 1, D + L + Jj + ' +k=1' + O + N + C + E + A, 1, D + L + EN + ' +k=1' + O + N + C + E + A, 1, D + L + Le + ' +k=1' + O + N + C + E + A, 1, D + L + Fy + ' +k=1' + O + N + C + E + A, 1, D + L + Im + ' +k=1' + O + N + C + E + A, 1, D + L + Fm + ' +k=1' + O + N + C + E + A, 1, D + L + KF + ' +k=1' + O + N + C + E + A, 1, D + L + Fr + ' +k=1' + O + N + C + E + A, 1, D + L + Jk + ' +k=1' + O + N + C + E + A, 1, D + L + Ed + ' +k=1' + O + N + C + E + A, 1, D + L + Il + ' +k=1' + O + N + C + E + A, 1, D + L + Fn + ' +k=1' + O + N + C + E + A, 1, K + M + A, 3, K + C + B + A, 1, I + Gz + C + B + E + A, 9, D + L + HP + ' +k=1' + HU + N + M + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + M + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + M + E + A, 1, D + L + HR + ' +k=1' + Hv + N + M + E + A, 1, D + L + HS + ' +k=1' + It + N + M + E + A, 1, D + L + EN + ' +k=1' + Hs + N + M + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + M + E + A, 1, D + L + Fm + ' +k=1' + HV + N + M + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + M + E + A, 1, D + L + Ed + ' +k=1' + HW + N + M + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + M + E + A, 1, D + L + HP + ' +k=1' + O + N + M + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + E + A, 1, D + L + HR + ' +k=1' + O + N + M + E + A, 1, D + L + HS + ' +k=1' + O + N + M + E + A, 1, D + L + EN + ' +k=1' + O + N + M + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + E + A, 11, K + c + A, 1, K + c + TI + A, 1, K + c + TJ + A, 1, K + c + TK + A, 1, K + c + TL + A, 1, K + c + UB + A, 1, K + c + Sv + A, 1, K + c + Ps + A, 1, K + i + A, 1, K + i + A, 1, K + As + d + A, 1, K + R + Jg + A, 1, K + C + B + A, 1, K + Y + Hf + A, 1, K + R + Jy + A, 1, K + R + SE + A, 1, K + R + Sz + A, 1, K + C + B + A, 1, K + x + Al + A, 1, K + C + B + A, 1, K + c + ' +towgs84=-106,-129,165,0,0,0,0' + A, 1, K + R + TA + A, 1, K + R + SF + A, 1, K + R + NH + A, 1, K + C + B + A, 1, K + R + TO + A, 1, K + R + SJ + A, 1, K + C + B + A, 1, K + R + TP + A, 1, K + R + Lr + A, 1, K + R + UD + A, 2, K + R + SG + A, 1, K + R + QM + A, 3, K + R + ' +towgs84=365,194,166,0,0,0,0' + A, 1, K + R + ' +towgs84=325,154,172,0,0,0,0' + A, 1, K + i + TZ + A, 1, K + R + SH + A, 2, K + R + Jf + A, 1, K + R + TB + A, 1, K + R + Ke + A, 1, K + R + HH + A, 2, K + R + SI + A, 1, D + L + KB + AP + IU + N + C + B + E + A, 5, D + L + HP + ' +k=1' + Hy + N + M + E + A, 1, D + L + Lt + ' +k=1' + Hz + N + M + E + A, 1, D + L + HQ + ' +k=1' + IA + N + M + E + A, 1, D + L + Ni + ' +k=1' + IB + N + M + E + A, 1, D + L + Hd + ' +k=1' + Gx + N + M + E + A, 1, K + ' +a=6377019.27 +b=6355762.5391 +towgs84=-28,199,5,0,0,0,0' + A, 1, K + R + Jd + A, 1, K + C + B + A, 1, K + R + Jz + A, 1, K + C + B + A, 1, K + R + Qc + A, 1, K + R + PI + A, 1, K + R + Pt + A, 1, K + R + Pa + A, 1, K + Y + Pb + A, 1, K + j + B + A, 1, K + R + ' +towgs84=-86,-98,-119,0,0,0,0' + A, 1, K + C + B + A, 1, K + j + B + A, 1, K + AU + BN + A, 1, K + R + TT + A, 1, K + R + Np + A, 1, K + C + B + A, 1, K + i + ' +towgs84=-100,-248,259,0,0,0,0' + A, 1, K + M + A, 1, K + M + A, 1, K + M + ' +towgs84=44.585,-131.212,-39.544,0,0,0,0' + A, 1, K + c + ' +towgs84=-80.01,253.26,291.19,0,0,0,0' + A, 1, K + c + ' +towgs84=124.5,-63.5,-281,0,0,0,0' + A, 2, K + By + Ay + RF + A, 1, K + i + BX + A, 1, K + R + ' +towgs84=-133,-321,50,0,0,0,0' + A, 2, K + C + B + A, 1, K + C + Bm + A, 1, K + R + Kc + A, 1, K + R + Lq + A, 1, K + R + Kg + A, 1, K + R + Kh + A, 1, K + R + QN + A, 1, K + j + TD + A, 1, K + j + B + A, 1, K + i + CW + A, 1, K + c + A, 1, K + c + A, 1, K + R + TE + A, 1, K + c + Qf + A, 1, K + c + A, 1, K + c + GN + A, 1, K + C + B + A, 1, K + c + A, 1, K + R + A, 1, K + R + A, 1, K + Gn + Qg + A, 1, K + R + ' +towgs84=114,-116,-333,0,0,0,0' + A, 1, K + x + ' +towgs84=-491,-22,435,0,0,0,0' + A, 1, K + R + ' +towgs84=145,75,-272,0,0,0,0' + A, 1, K + R + ' +towgs84=-320,550,-494,0,0,0,0' + A, 1, K + R + ' +towgs84=124,-234,-25,0,0,0,0' + A, 1, K + R + ' +towgs84=-205,107,53,0,0,0,0' + A, 1, K + c + ' +towgs84=-79,-129,145,0,0,0,0' + A, 1, K + R + ' +towgs84=-127,-769,472,0,0,0,0' + A, 1, K + R + ' +towgs84=-104,-129,239,0,0,0,0' + A, 1, K + R + ' +towgs84=298,-304,-375,0,0,0,0' + A, 1, K + i + ' +towgs84=-2,151,181,0,0,0,0' + A, 1, K + R + ' +towgs84=230,-199,-752,0,0,0,0' + A, 1, K + R + ' +towgs84=211,147,111,0,0,0,0' + A, 1, K + T + P + A, 1, K + R + JD + A, 1, K + R + ' +towgs84=-794,119,-298,0,0,0,0' + A, 1, K + i + Lg + A, 1, K + R + ' +towgs84=208,-435,-229,0,0,0,0' + A, 1, K + R + ' +towgs84=189,-79,-202,0,0,0,0' + A, 1, K + i + Ly + A, 1, K + R + ' +towgs84=403,-81,277,0,0,0,0' + A, 1, K + R + ' +towgs84=-307,-92,127,0,0,0,0' + A, 1, K + R + Ta + A, 1, K + R + ' +towgs84=170,42,84,0,0,0,0' + A, 2, K + ' +a=6378270 +b=6356794.343434343 +towgs84=102,52,-38,0,0,0,0' + A, 1, K + R + ' +towgs84=276,-57,149,0,0,0,0' + A, 1, K + R + ' +towgs84=-632,438,-609,0,0,0,0' + A, 1, K + R + ' +towgs84=647,1777,-1124,0,0,0,0' + A, 1, K + c + ' +towgs84=260,12,-147,0,0,0,0' + A, 1, K + C + B + A, 1, K + Ee + Ef + A, 1, K + R + ' +towgs84=-156,-271,-189,0,0,0,0' + A, 1, K + ' +a=6378136 +b=6356751.361745712 +towgs84=0,0,1.5,-0,-0,0.076,0' + A, 1, K + R + A, 1, K + C + A, 1, K + c + EU + A, 1, K + c + A, 1, K + Y + A, 1, K + Y + A, 1, K + C + B + A, 1, K + UW + Ym + Nl + A, 1, K + C + B + A, 1, K + j + QB + A, 1, K + Yn + Qz + A, 1, K + UW + Ym + Nl + A, 1, K + R + A, 1, K + R + w + A, 1, K + j + B + A, 1, K + j + Fu + A, 1, K + j + A, 1, K + j + B + A, 1, K + C + B + A, 1, K + aJ + A, 1, K + C + B + A, 1, K + j + B + A, 1, K + j + B + A, 1, K + C + B + A, 1, K + C + B + A, 1, D + L + Hq + ' +k=1' + IT + N + M + E + A, 1, D + L + HR + ' +k=1' + Gc + N + M + E + A, 1, D + L + Mj + ' +k=1' + IU + N + M + E + A, 1, D + L + HS + ' +k=1' + Iu + N + M + E + A, 1, D + L + Jj + ' +k=1' + Mu + N + M + E + A, 1, D + L + EN + ' +k=1' + Mv + N + M + E + A, 1, D + L + Le + ' +k=1' + Mw + N + M + E + A, 1, D + L + Fy + ' +k=1' + Mx + N + M + E + A, 1, D + L + Im + ' +k=1' + My + N + M + E + A, 1, D + L + Fm + ' +k=1' + Mz + N + M + E + A, 1, D + L + KF + ' +k=1' + NA + N + M + E + A, 1, D + L + Fr + ' +k=1' + NB + N + M + E + A, 1, D + L + Jk + ' +k=1' + Oh + N + M + E + A, 1, D + L + Ed + ' +k=1' + NC + N + M + E + A, 1, D + L + Il + ' +k=1' + Oi + N + M + E + A, 1, D + L + Fn + ' +k=1' + ND + N + M + E + A, 1, D + L + HP + ' +k=1' + O + N + M + E + A, 1, D + L + Lt + ' +k=1' + O + N + M + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + E + A, 1, D + L + Ni + ' +k=1' + O + N + M + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + E + A, 1, D + L + Hq + ' +k=1' + O + N + M + E + A, 1, D + L + HR + ' +k=1' + O + N + M + E + A, 1, D + L + Mj + ' +k=1' + O + N + M + E + A, 1, D + L + HS + ' +k=1' + O + N + M + E + A, 1, D + L + Jj + ' +k=1' + O + N + M + E + A, 1, D + L + EN + ' +k=1' + O + N + M + E + A, 1, D + L + Le + ' +k=1' + O + N + M + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + E + A, 1, D + L + Im + ' +k=1' + O + N + M + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + E + A, 1, D + L + KF + ' +k=1' + O + N + M + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + E + A, 1, D + L + Jk + ' +k=1' + O + N + M + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + E + A, 1, K + Y + Gf + ' +pm=bern' + A, 1, K + R + ES + ' +pm=bogota' + A, 1, K + R + EV + Zb + A, 1, K + Y + HZ + PW + A, 1, K + Y + Aw + Ls + A, 1, K + R + CK + ' +pm=rome' + A, 1, K + AU + BN + Bk + Lv + A, 1, K + Y + PW + A, 1, K + R + ' +pm=brussels' + A, 1, K + R + HD + Lv + A, 1, K + AU + BN + JC + Lv + A, 1, D + L + Il + ' +k=1' + O + N + M + E + A, 0, D + L + Il + ' +k=1' + O + N + M + E + A, 1, K + Y + Cj + PW + A, 1, K + Y + ' +pm=stockholm' + A, 1, K + Y + ' +pm=athens' + A, 1, K + AU + BN + Gi + Lv + A, 1, K + Hn + EL + Aa + SN + A, 1, K + Y + Gh + Ls + A, 2, K + Y + Hf + PW + A, 1, K + AU + BN + Lv + A, 1, D + L + Fn + ' +k=1' + O + N + M + E + A, 1, K + R + A, 1, K + R + A, 2, H + ' +lat_1=15 +lat_2=16.66666666666667 +lat_0=15.83333333333333 +lon_0=-24 +x_0=161587.83 +y_0=128511.202' + S + E + A, 13, H + WK + WL + UK + YH + s + N + C + B + E + A, 62, K + ' +a=6376523' + RA + ZM + A, 2, K + Zx + Qy + ' +pm=madrid' + A, 1, K + Y + Pb + Zb + A, 109, K + C + B + A, 1, I + Nr + C + B + E + A, 1, I + Os + C + B + E + A, 1, I + Ja + C + B + E + A, 2, D + BY + UZ + ' +k=1' + s + N + R + EV + E + A, 23, BP + Hr + Qm + HN + Rd + Bd + Cl + S + E + A, 1, BP + m + ' +lat_ts=-90' + HN + Rd + Bd + Cl + S + E + A, 6, I + Ki + C + B + E + A, 21, DT + Sa + Hl + ZB + OZ + s + N + X + E + A, 1, DT + Sa + Hl + ZB + OZ + s + N + C + B + E + A, 1, DT + Sa + Hl + ZB + OZ + s + N + C + B + E + A, 1, DT + Sa + Hl + ZB + OZ + s + N + C + B + E + A, 33, D + Fk + ' +lon_0=5.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=6.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=7.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=8.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=9.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + YH + ' +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=11.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=12.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=13.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=14.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=15.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + YE + ' +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=17.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=18.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=19.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=20.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=21.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=22.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=23.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=24.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=25.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=26.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=27.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=28.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=29.5 +k=1' + BU + AH + C + B + E + A, 1, D + Fk + ' +lon_0=30.5 +k=1' + BU + AH + C + B + E + A, 2, K + Y + A, 35, D + Ch + NX + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + Rt + ' +k=1' + h + ' +y_0=550000' + Y + E + A, 1, D + Ch + Ru + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + Rt + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + Ed + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + NX + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + ' +lon_0=125.0028902777778 +k=1' + h + Ae + Y + E + A, 1, D + Ch + WM + ' +k=1' + h + Ae + Y + E + A, 1, D + Ch + WM + ' +k=1' + h + ' +y_0=550000' + Y + E + A, 1, D + Ch + ' +lon_0=129.0028902777778 +k=1' + h + Ae + Y + E + A, 1, D + Ch + ' +lon_0=131.0028902777778 +k=1' + h + Ae + Y + E + A, 1, D + Ch + Pj + AP + BZ + Cl + Y + E + A, 1, D + Ch + Pj + AP + BZ + Cl + C + B + E + A, 1, D + Ch + Ru + ' +k=1' + h + Ae + C + B + E + A, 1, D + Ch + Rt + ' +k=1' + h + Ae + C + B + E + A, 1, D + Ch + Rt + ' +k=1' + h + ' +y_0=550000' + C + B + E + A, 1, D + Ch + Ed + ' +k=1' + h + Ae + C + B + E + A, 1, D + Ch + NX + ' +k=1' + h + Ae + C + B + E + A, 1, D + Ch + Ru + ' +k=1' + h + Qn + C + B + E + A, 1, D + Ch + Rt + ' +k=1' + h + Qn + C + B + E + A, 1, D + Ch + Ed + ' +k=1' + h + Qn + C + B + E + A, 1, D + Ch + NX + ' +k=1' + h + Qn + C + B + E + A, 33, Rp + SS + ' +lon_0=42.5' + Kk + V + s + N + Y + Gh + Ls + E + A, 2, D + L + IH + AP + O + Ae + S + E + A, 5, K + Y + Lz + A, 1, K + Y + Lz + Ls + A, 4, K + By + Ay + Kf + A, 1, D + ' +lat_0=7.000480277777778 +lon_0=80.77171111111112 +k=0.9999238418' + h + IK + By + Ay + Tb + E + A, 1, D + ' +lat_0=7.000471527777778 +lon_0=80.77171308333334 +k=0.9999238418' + O + Ae + By + Ay + Kf + E + A, 8, H + WK + WL + UK + YH + s + N + C + B + E + A, 3, K + C + A, 1, CU + Qi + Yz + aU + Ph + s + N + KE + If + C + E + A, 5, K + C + B + A, 1, D + L + HO + ' +k=1' + O + N + C + B + E + A, 1, D + L + Ia + ' +k=1' + O + N + C + B + E + A, 1, D + L + IG + ' +k=1' + O + N + C + B + E + A, 1, D + L + PN + ' +k=1' + O + N + C + B + E + A, 1, D + L + LN + ' +k=1' + O + N + C + B + E + A, 1, D + L + PO + ' +k=1' + O + N + C + B + E + A, 1, D + L + JS + ' +k=1' + O + N + C + B + E + A, 5, K + C + B + A, 2, D + L + Hq + ' +k=1' + Bv + N + C + B + E + A, 3, D + L + HO + ' +k=1' + MT + N + C + B + E + A, 1, D + L + Ia + ' +k=1' + LY + N + C + B + E + A, 1, D + L + IG + ' +k=1' + Jp + N + C + B + E + A, 1, D + L + PN + ' +k=1' + LZ + N + C + B + E + A, 1, D + L + LN + ' +k=1' + HU + N + C + B + E + A, 1, D + L + PO + ' +k=1' + Gw + N + C + B + E + A, 1, D + L + JS + ' +k=1' + Hu + N + C + B + E + A, 17, D + L + ' +lon_0=90.73333333333333 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=89.55 +k=1' + Bv + DU + C + B + E + A, 1, D + L + WN + ' +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.03333333333333 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.15000000000001 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=91.13333333333334 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=91.23333333333333 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=89.34999999999999 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=91.34999999999999 +k=1' + Bv + DU + C + B + E + A, 1, D + L + WN + ' +k=1' + Bv + DU + C + B + E + A, 1, D + L + WO + ' +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=89.06666666666666 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.26666666666667 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=89.55 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=91.75 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.5 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.16666666666667 +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.11666666666666 +k=1' + Bv + DU + C + B + E + A, 1, D + L + WO + ' +k=1' + Bv + DU + C + B + E + A, 1, D + L + ' +lon_0=90.86666666666666 +k=1' + Bv + DU + C + B + E + A, 5, D + L + ' +lon_0=-7 +k=0.999997' + h + ' +y_0=-6000000' + C + B + E + A, 4, H + YI + ' +lat_2=54.5' + L + NV + BZ + N + C + B + E + A, 1, H + YI + ' +lat_2=54.5' + L + NV + BZ + N + C + B + E + A, 3, K + C + B + A, 1, H + ' +lat_1=64.25 +lat_2=65.75 +lat_0=65 +lon_0=-19' + Jv + Hk + C + B + E + A, 4, JU + PC + ZP + Pl + Qp + Y + Hf + PW + E + A, 1, JU + PC + ZP + Pl + Qp + Y + Cj + PW + E + A, 1, JU + PC + ZP + Pl + Qp + Y + HZ + PW + E + A, 6, I + Nr + o + R + Ec + E + A, 3, K + C + B + A, 3, D + m + UQ + ' +k=1' + AV + N + C + B + E + A, 1, D + m + MP + ' +k=1' + Ci + N + C + B + E + A, 1, D + m + Pe + ' +k=1' + Bo + N + C + B + E + A, 1, D + m + Qk + ' +k=1' + DP + N + C + B + E + A, 1, D + m + US + ' +k=1' + Eg + N + C + B + E + A, 1, D + m + Zc + ' +k=1' + Jt + N + C + B + E + A, 1, D + m + Nb + ' +k=1' + IM + N + C + B + E + A, 5, K + C + B + A, 1, I + Gz + o + C + B + E + A, 1, I + Hi + o + C + B + E + A, 1, I + ID + o + C + B + E + A, 3, K + C + B + A, 1, I + Hi + o + C + B + E + A, 1, I + IC + o + C + B + E + A, 3, K + j + B + A, 2, D + L + NV + V + O + N + j + B + E + A, 4, K + C + B + A, 2, K + C + B + A, 8, K + j + B + A, 1, I + ID + o + j + B + E + A, 1, I + Io + o + j + B + E + A, 4, I + IC + o + C + B + E + A, 2, I + Hi + o + C + B + E + A, 4, K + C + B + A, 3, I + Os + o + C + B + E + A, 55, K + i + Bp + A, 5, H + ' +lat_1=10.46666666666667 +lat_0=10.46666666666667 +lon_0=-84.33333333333333 +k_0=0.99995696' + O + ' +y_0=271820.522' + i + Bp + E + A, 1, H + ' +lat_1=9 +lat_0=9' + Ua + ' +k_0=0.99995696' + O + ' +y_0=327987.436' + i + Bp + E + A, 2, H + ' +lat_1=14.9 +lat_0=14.9' + Bx + ' +k_0=0.99989906' + O + ' +y_0=325992.681' + i + Bp + E + A, 1, H + ' +lat_1=13.78333333333333 +lat_0=13.78333333333333 +lon_0=-89 +k_0=0.99996704' + O + ' +y_0=295809.184' + i + Bp + E + A, 1, H + ' +lat_1=13.86666666666667 +lat_0=13.86666666666667' + To + ' +k_0=0.99990314' + O + ' +y_0=359891.816' + i + Bp + E + A, 1, H + ' +lat_1=11.73333333333333 +lat_0=11.73333333333333' + To + ' +k_0=0.9999222800000001' + O + ' +y_0=288876.327' + i + Bp + E + A, 1, I + Ik + x + Al + E + A, 1, K + Ee + Ef + A, 3, K + i + A, 2, H + ' +lat_1=8.416666666666666 +lat_0=8.416666666666666 +lon_0=-80 +k_0=0.99989909' + O + ' +y_0=294865.303' + i + E + A, 3, UU + ' +lat_0=8.25' + CR + ' +x_0=914391.7962 +y_0=999404.7217154861' + i + ' +to_meter=0.9143917962' + A, 7, H + Ai + Aj + ' +lat_0=-78 +lon_0=163' + Tp + Ju + C + B + E + A, 1, H + ' +lat_1=-73.66666666666667' + AZ + ' +lat_0=-74.5' + NZ + LX + Fq + C + B + E + A, 1, H + ' +lat_1=-70.66666666666667 +lat_2=-72.33333333333333 +lat_0=-71.5' + ZW + aH + AH + C + B + E + A, 1, BP + m + ' +lat_ts=-90' + Ry + Rd + LX + AH + C + B + E + A, 7, K + C + B + A, 1, I + Gz + C + B + E + A, 23, Rp + SS + WP + Kk + V + s + N + Y + Gh + E + A, 1, Rp + SS + WP + Kk + V + s + N + Y + Gh + E + A, 4, D + Za + Si + ' +k=1' + Qo + ' +y_0=650000' + R + TT + E + A, 1, D + Za + Si + ' +k=1' + Qo + ' +y_0=650000' + R + Np + E + A, 1, D + L + Or + ' +k=1' + AV + N + Y + AC + E + A, 3, D + L + ' +lon_0=11.5' + AP + AV + EM + S + E + A, 1, K + R + A, 3, K + x + BK + A, 3, UU + L + Nb + LX + Ak + x + BK + E + A, 1, I + ID + o + x + BK + E + A, 2, I + MB + o + x + BK + E + A, 1, I + Nx + o + x + BK + E + A, 1, I + Nr + o + x + BK + E + A, 1, I + ID + o + R + E + A, 1, I + Io + o + R + E + A, 1, I + MB + o + R + E + A, 1, I + Nx + o + R + E + A, 7, K + C + B + A, 4, I + Nv + o + C + B + E + A, 1, I + PM + o + C + B + E + A, 1, I + Re + o + C + B + E + A, 7, H + ' +lat_1=16.81666666666667 +lat_0=16.81666666666667' + Bx + ' +k_0=0.99992226' + O + ' +y_0=292209.579' + i + Bp + E + A, 2, K + M + BO + A, 1, D + L + Gl + ' +k=1' + DP + N + M + BO + E + A, 1, D + L + HO + ' +k=1' + Eg + N + M + BO + E + A, 1, D + L + IG + ' +k=1' + Jt + N + M + BO + E + A, 1, D + L + LN + ' +k=1' + IM + N + M + BO + E + A, 1, D + L + Gl + ' +k=1' + O + N + M + BO + E + A, 1, D + L + HO + ' +k=1' + O + N + M + BO + E + A, 1, D + L + IG + ' +k=1' + O + N + M + BO + E + A, 1, D + L + LN + ' +k=1' + O + N + M + BO + E + A, 19, GU + Iq + Zy + ST + Ab + ' +y_0=304800' + X + t + A, 1, D + ' +lat_0=17.06124194444444 +lon_0=-88.6318575 +k=1 +x_0=66220.02833082761 +y_0=135779.5099885299' + Ee + Ef + ML + A, 4, K + C + B + A, 3, D + L + ' +lon_0=11.33333333333333 +k=1' + BZ + N + C + B + E + A, 27, D + Fo + Ua + ' +k=0.999942857' + e + N + X + J + A, 1, D + Fo + EY + Hm + e + N + X + J + A, 1, D + Fo + ' +lon_0=-88.75' + Hm + e + N + X + J + A, 2, D + L + ZO + AP + O + N + R + n + E + A, 2, I + JZ + o + j + KR + E + A, 2, D + L + KB + ' +k=1' + Ci + N + M + b + E + A, 1, H + Yw + QY + PU + Lu + LU + RU + C + B + E + A, 1, He + PU + Lu + RV + RW + C + B + E + A, 1, H + Yw + QY + PU + Lu + LU + RU + C + B + E + A, 1, He + PU + Lu + RV + RW + C + B + E + A, 1, He + PU + Lu + RV + RW + C + B + E + A, 1, H + Yw + QY + PU + Lu + LU + RU + C + B + E + A, 1, He + PU + Lu + RV + RW + C + B + E + A, 1, H + Yw + QY + PU + Lu + LU + RU + C + B + E + A, 2, JU + ' +lon_0=-43 +lat_ts=-2' + LX + Ak + C + B + E + A, 2, H + ' +lat_1=52.66666666666666 +lat_2=54.33333333333334 +lat_0=48' + Lu + ' +x_0=815000' + N + R + n + E + A, 1, I + JM + o + C + B + E + A, 2, D + Fp + LW + JA + AG + N + C + B + J + A, 3, D + L + Or + AP + Gc + N + C + B + E + A, 1, D + L + Gj + AP + Iu + N + C + B + E + A, 1, D + L + Or + AP + Gc + N + C + B + E + A, 1, D + L + KB + AP + IU + N + C + B + E + A, 1, D + L + Gj + AP + Iu + N + C + B + E + A, 1, D + Fp + LW + JA + AG + N + C + B + J + A, 1, D + Fp + LW + JA + AG + N + C + B + J + A, 4, D + L + KB + AP + ' +x_0=500053 +y_0=-3999820' + R + CK + E + A, 4, D + L + Gj + ' +k=1' + Bo + N + M + b + E + A, 1, D + L + KB + ' +k=1' + Ci + N + M + Ar + E + A, 1, D + L + Gj + ' +k=1' + Bo + N + M + Ar + E + A, 1, D + L + KB + ' +k=1' + Bo + N + Y + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + Y + E + A, 1, D + L + KB + ' +k=1' + Bo + N + M + b + E + A, 1, D + L + IH + ' +k=1' + DP + N + M + b + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + M + b + E + A, 1, D + L + KB + ' +k=1' + Bo + N + M + Ar + E + A, 1, D + L + IH + ' +k=1' + DP + N + M + Ar + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + M + Ar + E + A, 1, D + L + ZO + ' +k=1' + Ci + N + Y + AC + E + A, 1, D + L + KB + ' +k=1' + Bo + N + Y + AC + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + AC + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + Y + AC + E + A, 1, D + L + Or + ' +k=1' + AV + N + Y + AC + E + A, 1, K + Y + A, 1, D + L + ZO + ' +k=1' + Ci + N + Y + E + A, 1, D + L + KB + ' +k=1' + Bo + N + Y + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + Y + E + A, 15, I + SK + o + C + B + E + A, 125, D + ' +lat_0=-35.31773627777778 +lon_0=149.0092948305555 +k=1.000086' + h + Qn + x + r + E + A, 11, I + KD + j + B + E + A, 1, I + Me + j + B + E + A, 2, I + Ik + o + C + B + E + A, 3, D + L + IH + AP + O + Ak + S + E + A, 2, D + L + Ia + V + O + Ak + C + B + E + A, 14, I + Io + o + x + BK + E + A, 17, I + IC + o + x + BK + E + A, 1, I + Hi + o + x + BK + E + A, 1, I + Gz + o + x + BK + E + A, 2, I + JZ + o + R + PJ + E + A, 1, UU + L + Nb + LX + Ak + C + B + E + A, 6, K + C + A, 1, D + L + KH + AP + AV + Ju + C + E + A, 3, BP + Hr + ' +lat_ts=70' + Hq + ' +k=1' + s + N + ZZ + Ri + E + A, 31, H + ZC + IJ + Ih + KK + s + N + S + E + A, 1, H + ZC + IJ + Ih + UT + s + N + S + E + A, 1, H + ZC + IJ + Ih + IG + s + N + S + E + A, 1, H + ZC + IJ + Ih + EN + s + N + S + E + A, 1, H + ZC + IJ + Ih + KG + s + N + S + E + A, 1, H + Ic + ZD + Ii + KK + s + N + S + E + A, 1, H + Ic + ZD + Ii + UT + s + N + S + E + A, 1, H + Ic + ZD + Ii + IG + s + N + S + E + A, 1, H + Ic + ZD + Ii + EN + s + N + S + E + A, 1, H + Ic + ZD + Ii + KG + s + N + S + E + A, 1, H + ZE + ZF + Ij + KK + s + N + S + E + A, 1, H + ZE + ZF + Ij + UT + s + N + S + E + A, 1, H + ZE + ZF + Ij + IG + s + N + S + E + A, 1, H + ZE + ZF + Ij + EN + s + N + S + E + A, 1, H + ZE + ZF + Ij + KG + s + N + S + E + A, 1, BP + Hr + Qm + ON + Rd + Bd + Cl + S + E + A, 1, BP + Hr + Qm + CS + Rd + Bd + Cl + S + E + A, 1, BP + Hr + Qm + ' +lon_0=-33' + Rd + Bd + Cl + S + E + A, 1, BP + Hr + Qm + QR + Rd + Bd + Cl + S + E + A, 1, BP + Hr + Qm + EN + Rd + Bd + Cl + S + E + A, 110, H + UL + Ha + Hb + ' +lon_0=-30' + Hy + DQ + C + B + E + A, 1, H + Ce + Cf + Cg + ' +lon_0=-52' + Hs + JH + C + B + E + A, 1, H + Ce + Cf + Cg + ' +lon_0=-12' + HV + JH + C + B + E + A, 1, H + Bf + IJ + Bg + MP + Gx + IN + C + B + E + A, 1, H + Bf + IJ + Bg + UT + Gc + IN + C + B + E + A, 1, H + Bf + IJ + Bg + ' +lon_0=-10' + Iu + IN + C + B + E + A, 1, H + Ic + BL + BM + ' +lon_0=-64' + HV + Gb + C + B + E + A, 1, H + Ic + BL + BM + UT + HW + Gb + C + B + E + A, 1, H + Ic + BL + BM + ' +lon_0=-14' + La + Gb + C + B + E + A, 1, H + AR + AS + AT + NU + NB + EM + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=-42' + NC + EM + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=-22' + ND + EM + C + B + E + A, 1, H + CI + OY + CJ + Zd + Hz + JI + C + B + E + A, 1, H + CI + OY + CJ + ' +lon_0=-38' + IB + JI + C + B + E + A, 1, H + CI + OY + CJ + ' +lon_0=-20' + IT + JI + C + B + E + A, 1, H + ' +lat_1=67' + WQ + WR + ' +lon_0=-51' + Jp + aE + C + B + E + A, 1, H + ' +lat_1=67' + WQ + WR + ' +lon_0=-34' + HU + aE + C + B + E + A, 1, H + WS + WT + WU + ' +lon_0=-52' + HV + ' +y_0=8500000' + C + B + E + A, 1, H + WS + WT + WU + ' +lon_0=-37' + HW + ' +y_0=8500000' + C + B + E + A, 1, H + Ce + Cf + Cg + ' +lon_0=16' + HW + JH + C + B + E + A, 1, H + Bf + IJ + Bg + Gl + Jp + IN + C + B + E + A, 1, H + Ic + BL + BM + Lu + Hz + Gb + C + B + E + A, 1, H + Ic + BL + BM + ZG + IB + Gb + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=14' + Jp + EM + C + B + E + A, 1, H + AR + AS + AT + ZG + HU + EM + C + B + E + A, 1, H + Ce + Cf + Cg + ' +lon_0=53' + La + JH + S + E + A, 1, H + Ce + Cf + Cg + HR + Hz + JH + S + E + A, 1, H + Bf + IJ + Bg + ' +lon_0=52' + HU + IN + S + E + A, 1, H + Bf + IJ + Bg + ' +lon_0=83' + Hu + IN + S + E + A, 1, H + Bf + IJ + Bg + Im + It + IN + S + E + A, 1, H + Bf + IJ + Bg + ' +lon_0=145' + Ht + IN + S + E + A, 1, H + Ic + BL + BM + ' +lon_0=58' + IT + Gb + S + E + A, 1, H + Ic + BL + BM + ' +lon_0=82' + IU + Gb + S + E + A, 1, H + Ic + BL + BM + ZQ + Mu + Gb + S + E + A, 1, H + Ic + BL + BM + ' +lon_0=130' + Mw + Gb + S + E + A, 1, H + Ic + BL + BM + ZR + My + Gb + S + E + A, 1, H + Ic + BL + BM + ' +lon_0=179' + NA + Gb + S + E + A, 1, H + AR + AS + AT + SR + Hu + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=74' + It + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=95' + Ht + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=116' + Hw + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=137' + Hx + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=158' + Hy + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=179' + IA + EM + S + E + A, 1, H + AR + AS + AT + ' +lon_0=-163' + Gx + EM + C + B + E + A, 1, H + AR + AS + AT + Qr + Gc + EM + C + B + E + A, 1, H + CI + OY + CJ + SX + Gw + JI + C + B + E + A, 1, H + CI + OY + CJ + Qr + Hv + JI + C + B + E + A, 1, H + UL + Ha + Hb + Bu + Hx + DQ + C + B + E + A, 1, H + Ce + Cf + Cg + SZ + Gw + JH + C + B + E + A, 1, H + Ce + Cf + Cg + UR + Hv + JH + C + B + E + A, 1, H + Bf + IJ + Bg + YT + Hy + IN + C + B + E + A, 1, H + Bf + IJ + Bg + Ji + IA + IN + C + B + E + A, 1, H + Bf + IJ + Bg + MP + Gx + IN + C + B + E + A, 1, H + Ic + BL + BM + YT + Gw + Gb + C + B + E + A, 1, H + Ic + BL + BM + ' +lon_0=-104' + Hv + Gb + C + B + E + A, 1, H + Ic + BL + BM + NW + Hs + Gb + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=-131' + Iu + EM + C + B + E + A, 1, H + AR + AS + AT + KK + Mv + EM + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=-91' + Mx + EM + C + B + E + A, 1, H + AR + AS + AT + ' +lon_0=-71' + Mz + EM + C + B + E + A, 1, H + CI + OY + CJ + ' +lon_0=-132' + Hs + JI + C + B + E + A, 1, H + CI + OY + CJ + ' +lon_0=-113' + HV + JI + C + B + E + A, 1, H + CI + OY + CJ + Na + HW + JI + C + B + E + A, 1, H + CI + OY + CJ + UR + La + JI + C + B + E + A, 1, H + UL + Ha + Hb + Ia + IA + DQ + S + E + A, 1, H + UL + Ha + Hb + Hq + Gx + DQ + S + E + A, 1, H + UL + Ha + Hb + Oe + Gc + DQ + S + E + A, 1, H + UL + Ha + Hb + ON + Hw + DQ + S + E + A, 1, H + Ce + Cf + Cg + ' +lon_0=133' + IB + JH + S + E + A, 1, H + Ce + Cf + Cg + ZW + LY + JH + S + E + A, 1, H + Ce + Cf + Cg + Ms + LZ + JH + S + E + A, 1, H + Bf + IJ + Bg + ' +lon_0=176' + Hw + IN + S + E + A, 1, H + Bf + IJ + Bg + YJ + Hx + IN + S + E + A, 1, H + Ic + BL + BM + ' +lon_0=-155' + LZ + Gb + S + E + A, 1, H + AR + AS + AT + ' +lon_0=-5' + ZK + EM + C + B + E + A, 3, I + Ik + i + Lg + t + A, 1, I + Ik + i + Ly + t + A, 6, K + C + B + A, 69, D + L + Gl + V + O + N + Y + Aw + E + A, 3, K + By + Ay + ' +towgs84=293.17,726.18,245.36,0,0,0,0' + A, 3, I + MB + C + B + E + A, 1, I + Nx + C + B + E + A, 96, H + GW + GX + GY + GA + h + IK + C + E + A, 4, K + j + Kd + A, 1, D + L + IG + CP + h + ' +y_0=-3500000' + j + Kd + E + A, 4, D + L + Gl + V + IM + N + Y + Aw + E + A, 2, K + C + A, 4, K + C + A, 3, K + C + A, 3, I + Nq + C + E + A, 1, I + PL + C + E + A, 1, I + SK + C + E + A, 1, I + TV + C + E + A, 1, I + Xz + C + E + A, 1, I + TY + C + E + A, 1, I + RG + C + E + A, 1, I + Ro + C + E + A, 1, I + RH + C + E + A, 1, I + TW + C + E + A, 1, I + TX + C + E + A, 1, I + QE + C + E + A, 1, I + Ns + C + E + A, 1, I + Nt + C + E + A, 1, I + Nu + C + E + A, 1, I + Nw + C + E + A, 1, I + NP + C + E + A, 1, I + NQ + C + E + A, 1, I + Ik + C + E + A, 1, I + IC + C + E + A, 1, I + Hi + C + E + A, 2, DT + Sa + Hl + ZB + OZ + s + N + C + E + A, 1, H + AR + AS + AT + ' +lon_0=-163' + Gx + EM + C + E + A, 1, H + AR + AS + AT + Qr + Gc + EM + C + E + A, 1, H + CI + OY + CJ + SX + Gw + JI + C + E + A, 1, H + CI + OY + CJ + Qr + Hv + JI + C + E + A, 1, D + IY + IV + Pc + h + N + C + E + A, 1, D + Gm + OS + BG + a + N + C + E + A, 6, H + ' +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102' + Ci + N + C + B + E + A, 3, K + C + B + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, H + ' +lat_1=17.5 +lat_2=29.5 +lat_0=12 +lon_0=-102' + Ci + N + C + B + E + A, 9, D + L + Gl + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + II + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + HO + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + Ia + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + IG + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + PN + ' +k=1' + AI + N + M + CC + E + A, 1, D + L + LN + ' +k=1' + AI + N + M + CC + E + A, 4, H + ' +lat_1=19.33333333333333 +lat_2=19.7 +lat_0=19.33333333333333 +lon_0=-80.56666666666666 +x_0=899160 +y_0=579120' + C + B + t + A, 2, DT + ' +lat_1=55' + QY + Yu + Ms + s + N + C + E + A, 1, CU + ' +lat_0=57' + Ku + Kv + V + LX + EO + KE + GZ + C + E + A, 1, D + Ft + YN + V + O + N + C + E + A, 1, D + Ft + YO + V + O + N + C + E + A, 1, D + Ft + ON + V + O + N + C + E + A, 1, D + Ft + Ms + V + O + N + C + E + A, 1, D + Ft + KI + V + O + N + C + E + A, 1, D + Ft + YP + V + O + N + C + E + A, 1, D + Ft + YQ + V + O + N + C + E + A, 1, D + Ft + SW + V + O + N + C + E + A, 1, H + Kw + Kx + UK + YR + BZ + N + C + E + A, 1, D + Bl + Co + V + EX + N + C + E + A, 1, D + Bl + Co + V + EX + N + C + t + A, 1, D + Bl + Cn + V + EX + N + C + E + A, 1, D + Bl + Cn + V + EX + N + C + t + A, 1, D + Bl + Iv + BG + EX + N + C + E + A, 1, D + Bl + Iv + BG + EX + N + C + t + A, 1, H + Dx + Dy + BC + IF + u + N + C + E + A, 1, H + Dx + Dy + BC + IF + Au + N + C + J + A, 1, H + Dz + Mq + EA + IF + u + Is + C + E + A, 1, H + Dz + Mq + EA + IF + Au + Gt + C + J + A, 1, DT + Yy + SY + L + Mt + s + QZ + C + E + A, 1, H + DW + Jn + y + HA + Bd + Ae + C + E + A, 1, H + DW + Jn + y + HA + Ac + AD + C + J + A, 1, H + DX + DY + AA + HA + Bd + Ae + C + E + A, 1, H + DX + DY + AA + HA + Ac + AD + C + J + A, 1, H + Ap + DZ + Ml + AJ + Bd + Ae + C + E + A, 1, H + Ap + DZ + Ml + AJ + Ac + AD + C + J + A, 1, H + LO + QS + Da + Mm + Bd + Ae + C + E + A, 1, H + LO + QS + Da + Mm + Ac + AD + C + J + A, 1, H + Db + Dc + Mn + Ir + Bd + Ae + C + E + A, 1, H + Db + Dc + Mn + Ir + Ac + AD + C + J + A, 1, H + Dd + De + Df + Iw + Bd + Ae + C + E + A, 1, H + Dd + De + Df + Iw + Ac + AD + C + J + A, 1, H + LP + LQ + CY + Ba + Fw + Fx + C + E + A, 1, H + LP + LQ + CY + Ba + Bw + CL + C + J + A, 1, H + Eh + Ei + y + Ba + Fw + Fx + C + E + A, 1, H + Eh + Ei + y + Ba + Bw + CL + C + J + A, 1, H + Ap + Dg + f + Ba + Fw + Fx + C + E + A, 1, H + Ap + Dg + f + Ba + Bw + CL + C + J + A, 1, H + Dh + Mo + Di + Jq + QG + QH + C + E + A, 1, H + Dh + Mo + Di + Jq + MC + MD + C + J + A, 1, D + Ch + Cp + Mp + h + N + C + E + A, 1, D + Ch + Cp + Mp + AE + N + C + J + A, 1, D + Aq + CR + Am + h + N + C + E + A, 1, D + Aq + CR + Am + AE + N + C + J + A, 1, DT + ' +lat_1=24' + YG + ' +lat_0=24' + NV + u + N + C + E + A, 1, H + LR + Dj + QT + LS + a + N + C + E + A, 1, H + LR + Dj + QT + LS + a + N + C + J + A, 1, D + Aq + Ob + Am + h + N + C + E + A, 1, D + Aq + Ob + Am + AE + N + C + J + A, 1, D + Gm + Cq + V + h + N + C + E + A, 1, D + Gm + Cq + V + AE + N + C + J + A, 1, D + Gm + Cr + V + EW + N + C + E + A, 1, D + Gm + Cr + V + CM + N + C + J + A, 1, D + p + Jb + BJ + O + N + C + E + A, 1, D + p + Jb + BJ + AF + N + C + J + A, 1, D + p + Cs + BJ + h + N + C + E + A, 1, D + p + Cs + BJ + AE + N + C + J + A, 1, D + p + Ix + BG + CX + N + C + E + A, 1, D + p + Ix + BG + ME + N + C + J + A, 1, D + f + Cz + EQ + AI + N + C + E + A, 1, D + f + Cz + EQ + AI + N + C + J + A, 1, D + f + DA + Am + EW + N + C + E + A, 1, D + f + DA + Am + MO + N + C + J + A, 1, D + DM + DB + AO + BU + KJ + C + E + A, 1, D + DM + DB + AO + MM + GI + C + J + A, 1, D + DM + DC + AO + HT + KJ + C + E + A, 1, D + DM + DC + AO + HT + GI + C + J + A, 1, H + EB + EC + Fo + GG + AV + AH + C + E + A, 1, H + EB + EC + Fo + GG + AV + GJ + C + J + A, 1, H + AY + ED + Fs + GG + O + N + C + E + A, 1, H + AY + ED + Fs + GG + AG + N + C + J + A, 1, H + EE + EF + AQ + Fl + u + N + C + E + A, 1, H + EE + EF + AQ + Fl + Au + N + C + J + A, 1, H + EG + EH + f + CV + u + Is + C + E + A, 1, H + EG + EH + f + CV + Au + Gt + C + J + A, 1, H + Az + DV + DM + Jo + O + N + C + E + A, 1, H + Az + DV + DM + Jo + AF + N + C + J + A, 1, H + Fi + Fj + AB + EY + AV + AH + C + E + A, 1, H + Fi + Fj + AB + EY + AV + CN + C + J + A, 1, H + Ej + Ek + AB + EY + O + Ae + C + E + A, 1, H + Ej + Ek + AB + EY + AF + AD + C + J + A, 1, H + FS + FT + IY + Hg + BZ + N + C + E + A, 1, H + FS + FT + IY + Hg + Eb + N + C + J + A, 1, H + OH + OI + OJ + Bi + BZ + N + C + E + A, 1, H + OH + OI + OJ + Bi + Eb + N + C + J + A, 1, D + YM + Rj + JE + O + N + C + E + A, 1, D + AL + Rf + JE + EW + N + C + E + A, 1, D + BD + Rg + JE + AI + N + C + E + A, 1, D + AK + HJ + V + AI + N + C + E + A, 1, D + AK + HJ + V + AI + N + C + J + A, 1, D + BD + DD + AO + HT + N + C + E + A, 1, D + BD + DD + AO + HT + N + C + J + A, 1, H + MU + Nz + AA + Ld + u + N + C + E + A, 1, H + MU + Nz + AA + Ld + MF + N + C + J + A, 1, H + Em + En + Ip + IL + O + N + C + E + A, 1, H + Em + En + Ip + IL + AF + N + C + J + A, 1, H + El + Dk + Ip + GE + h + Mk + C + E + A, 1, H + El + Dk + Ip + GE + AE + Mk + C + J + A, 1, H + OA + Er + Es + BE + Pk + N + C + E + A, 1, H + OA + Er + Es + BE + MH + N + C + t + A, 1, H + Eo + Ep + Eq + Jh + Tl + N + C + E + A, 1, H + Eo + Ep + Eq + Jh + MG + N + C + t + A, 1, CU + Kr + ' +lonc=-86' + QI + AP + QJ + PY + KE + QK + C + E + A, 1, H + Bq + OB + Fo + BE + LU + N + C + E + A, 1, H + Bq + OB + Fo + BE + OT + N + C + t + A, 1, H + Ma + FW + IP + Js + CX + EK + C + E + A, 1, H + Ma + FW + IP + Js + An + Ao + C + J + A, 1, H + FU + FV + Iq + DE + CX + EK + C + E + A, 1, H + FU + FV + Iq + DE + An + Ao + C + J + A, 1, H + FX + FY + Nj + Na + CX + EK + C + E + A, 1, H + FX + FY + Nj + Na + An + Ao + C + J + A, 1, D + Hj + Ct + CP + AI + N + C + E + A, 1, D + Hj + Ct + CP + AI + N + C + J + A, 1, D + Li + Sj + Tn + O + Pm + C + E + A, 1, D + Hj + Bx + CP + EW + N + C + E + A, 1, D + Hj + Bx + CP + CM + N + C + J + A, 1, D + Cd + Hg + BG + O + N + C + E + A, 1, D + Cd + RS + BG + Bv + N + C + E + A, 1, D + Id + RT + Am + YC + N + C + E + A, 1, H + LM + RK + MV + IS + a + N + C + E + A, 1, H + LM + RK + MV + IS + DR + N + C + t + A, 1, H + JT + Jn + FZ + CS + O + N + C + E + A, 2, D + CQ + DG + V + O + Hh + C + E + A, 1, D + CQ + DG + V + AG + Hh + C + J + A, 1, D + CQ + DF + V + h + Tm + C + E + A, 1, D + CQ + DF + V + Gu + MN + C + J + A, 1, D + CQ + DH + V + CX + LV + C + E + A, 1, D + CQ + DH + V + An + NE + C + J + A, 1, D + Fp + DI + AO + AI + N + C + E + A, 1, D + Fp + DI + AO + AI + N + C + J + A, 1, D + BA + Gp + V + Bn + N + C + E + A, 1, D + BA + Gp + V + Bn + N + C + J + A, 1, D + Bl + Iy + V + O + N + C + E + A, 1, D + Bl + Iy + V + AF + N + C + J + A, 1, D + Bl + Cu + Hm + OC + N + C + E + A, 1, D + Bl + Cu + Hm + OC + N + C + J + A, 1, D + Bl + Cv + Iz + YD + N + C + E + A, 1, D + Bl + Cv + Iz + MI + N + C + J + A, 1, D + Fs + Cw + Ad + Bv + N + C + E + A, 1, D + Fs + Cw + Ad + MJ + N + C + J + A, 1, D + BA + Gp + V + Bn + N + C + E + A, 1, D + BA + Gp + V + Bn + N + C + J + A, 1, H + Dl + Dm + BB + Oc + AI + N + C + E + A, 1, H + Dl + Dm + BB + Oc + AI + N + C + J + A, 1, D + Fs + Cx + Ad + Qo + N + C + E + A, 1, D + Fs + Cx + Ad + MK + N + C + J + A, 1, H + Et + Eu + LT + NW + Rh + N + C + E + A, 1, H + Et + Eu + LT + NW + Z + N + C + J + A, 1, H + BH + Ev + Ib + EZ + a + N + C + E + A, 1, H + BH + Ev + Ib + EZ + DR + N + C + t + A, 1, H + Ew + Ex + Be + EZ + a + N + C + E + A, 1, H + Ew + Ex + Be + EZ + DR + N + C + t + A, 1, H + OK + Fa + BY + ET + a + N + C + E + A, 1, H + OK + Fa + BY + ET + a + N + C + J + A, 1, H + Fb + Fc + Ch + ET + a + N + C + E + A, 1, H + Fb + Fc + Ch + ET + a + N + C + J + A, 1, H + Dn + Ey + QU + Fl + a + N + C + E + A, 1, H + Dn + Ey + QU + Fl + a + N + C + J + A, 1, H + Ez + FA + Do + Fl + a + N + C + E + A, 1, H + Ez + FA + Do + Fl + a + N + C + J + A, 1, H + JT + Hl + GH + AJ + u + N + C + E + A, 1, H + JT + Hl + GH + AJ + Lc + N + C + t + A, 1, H + PP + CZ + AK + AJ + Ci + N + C + E + A, 1, H + PP + CZ + AK + AJ + KL + N + C + t + A, 1, H + PQ + Ca + p + AJ + AV + N + C + E + A, 1, H + PQ + Ca + p + AJ + KM + N + C + t + A, 1, H + MW + FB + BB + Ea + a + N + C + E + A, 1, H + MW + FB + BB + Ea + a + N + C + J + A, 1, H + Dp + Dq + y + Ea + a + N + C + E + A, 1, H + Dp + Dq + y + Ea + a + N + C + J + A, 1, H + GW + GX + GY + GA + h + IK + C + E + A, 1, D + EI + GE + Lb + BU + N + C + E + A, 1, D + EI + GE + Lb + JV + N + C + J + A, 1, H + FC + OD + Dr + CR + OE + N + C + E + A, 1, H + FC + OD + Dr + CR + OE + N + C + t + A, 1, H + Fd + Fe + AL + CS + a + N + C + E + A, 1, H + Fd + Fe + AL + CS + a + N + C + J + A, 1, H + OL + Ff + EJ + Ag + a + N + C + E + A, 1, H + OL + Ff + EJ + Ag + a + N + C + J + A, 1, H + FD + MX + BC + MQ + a + N + C + E + A, 1, H + FD + MX + BC + MQ + a + N + C + J + A, 1, H + FH + FI + Cb + Ag + EW + Fq + C + E + A, 1, H + FH + FI + Cb + Ag + CM + Fq + C + J + A, 1, DT + OM + RO + OX + CS + AV + Hh + C + E + A, 1, H + OM + RO + OX + CS + AV + Ju + C + E + A, 1, H + FE + MY + QV + Jr + h + AH + C + E + A, 1, H + FE + MY + QV + Jr + AE + CN + C + J + A, 1, H + FF + FG + Ds + CV + a + Cl + C + E + A, 1, H + FF + FG + Ds + CV + a + Gr + C + J + A, 1, H + CD + CE + Cc + CV + AI + Ju + C + E + A, 1, H + CD + CE + Cc + CV + AI + Nf + C + J + A, 1, H + FJ + FK + Dt + Ji + a + LV + C + E + A, 1, H + FJ + FK + Dt + Ji + a + Ne + C + J + A, 1, D + Fp + LW + JA + O + N + C + E + A, 1, D + Fp + LW + JA + AG + N + C + J + A, 1, H + ' +lat_1=37' + YS + GM + Ga + s + N + C + E + A, 1, H + OF + FL + AA + GF + Bo + Cl + C + E + A, 1, H + OF + FL + AA + GF + Gs + Gr + C + J + A, 1, H + Az + Du + AB + GF + Bo + AH + C + E + A, 1, H + Az + Du + AB + GF + Gs + CN + C + J + A, 1, H + BH + OG + Ib + Cy + O + N + C + E + A, 1, H + BH + OG + Ib + Cy + AF + N + C + J + A, 1, H + FM + FN + Dv + AJ + O + N + C + E + A, 1, H + FM + FN + Dv + AJ + AF + N + C + J + A, 1, H + Mb + RN + Mr + Ga + a + N + C + E + A, 1, H + Mb + RN + Mr + Ga + a + N + C + J + A, 1, H + Fg + Fh + QX + CR + a + N + C + E + A, 1, H + Fg + Fh + QX + CR + a + N + C + J + A, 2, H + Jc + MZ + AL + Bu + a + N + C + J + A, 1, H + FO + FP + Dw + Bu + a + N + C + E + A, 1, H + FO + FP + Dw + Bu + a + N + C + J + A, 1, H + FQ + FR + PR + Bu + a + N + C + E + A, 1, H + FQ + FR + PR + Bu + a + N + C + J + A, 1, D + L + Bu + AP + YF + Sh + C + E + A, 1, D + CA + DJ + Ad + h + N + C + E + A, 1, D + CA + DJ + Ad + Gu + N + C + J + A, 1, D + CA + DK + Ad + u + EK + C + E + A, 1, D + CA + DK + Ad + Au + Ao + C + J + A, 1, D + CA + DL + Ad + CX + EK + C + E + A, 1, D + CA + DL + Ad + An + Ao + C + J + A, 1, D + CA + JB + Ad + a + N + C + E + A, 1, D + CA + JB + Ad + a + N + C + J + A, 1, H + JF + CG + AQ + BI + O + Cl + C + E + A, 1, H + AY + CF + Br + BI + O + AH + C + E + A, 1, H + JG + CH + f + BI + O + Fq + C + E + A, 1, H + UF + Nh + IZ + HJ + s + N + C + B + E + A, 1, DT + UF + Nh + IZ + HJ + s + N + C + B + E + A, 1, DT + UF + Nh + IZ + HJ + s + N + C + B + E + A, 1, H + JF + CG + AQ + BI + AG + NF + C + J + A, 1, H + AY + CF + Br + BI + AG + GJ + C + J + A, 1, H + JG + CH + f + BI + AG + Fq + C + J + A, 1, D + Kn + Sf + AO + O + N + C + E + A, 1, D + Ko + KO + AO + O + N + C + E + A, 1, D + GV + KI + Jl + O + N + C + E + A, 1, D + Kp + Sg + Jl + O + N + C + E + A, 1, D + Kq + KP + ' +k=1' + O + N + C + E + A, 1, D + GV + KI + Jl + AG + N + C + J + A, 1, I + TY + C + E + A, 1, I + RG + C + E + A, 1, I + TV + o + C + E + A, 1, D + ' +lat_0=13.5 +lon_0=144.75 +k=1' + BU + IK + C + E + A, 9, D + WJ + ' +lon_0=46.5 +k=0.9994' + CX + N + Bc + Ge + EU + E + A, 22, K + C + A, 1, D + PT + Zz + V + s + N + C + E + A, 1, D + PT + NX + V + s + N + C + E + A, 1, D + GM + Ox + V + s + N + C + E + A, 1, D + PT + Tk + V + s + N + C + E + A, 1, D + GM + Oy + V + s + N + C + E + A, 1, D + GM + Rw + V + s + N + C + E + A, 1, D + GM + Oz + V + s + N + C + E + A, 1, D + GM + aA + V + s + N + C + E + A, 1, D + GM + PA + V + s + N + C + E + A, 1, D + Fs + PB + V + s + N + C + E + A, 1, D + IZ + ZH + V + s + N + C + E + A, 1, D + IZ + ZI + V + s + N + C + E + A, 1, D + IZ + ZJ + V + s + N + C + E + A, 1, D + IQ + ' +lon_0=142' + V + s + N + C + E + A, 1, D + IQ + Pj + V + s + N + C + E + A, 1, D + IQ + ' +lon_0=124' + V + s + N + C + E + A, 1, D + IQ + NX + V + s + N + C + E + A, 1, D + ' +lat_0=20' + Rw + V + s + N + C + E + A, 1, D + IQ + ZR + V + s + N + C + E + A, 1, I + Mg + C + E + A, 1, I + NT + C + E + A, 1, I + Ot + C + E + A, 1, I + Nv + C + E + A, 1, I + PM + C + E + A, 11, D + L + US + AP + O + Ak + j + B + E + A, 3, K + C + B + A, 1, I + JN + C + B + E + A, 1, I + KC + C + B + E + A, 1, I + NR + C + B + E + A, 11, D + L + ' +lon_0=105.625 +k=1.000024' + Jm + Pm + j + B + E + A, 1, D + L + ' +lon_0=105.625 +k=1.00002514' + Jm + Pm + C + B + E + A, 1, D + L + ' +lon_0=96.875 +k=1' + Jm + ' +y_0=1400000' + j + B + E + A, 1, D + L + ' +lon_0=96.875 +k=0.99999387' + Jm + DQ + C + B + E + A, 13, I + QF + o + C + B + E + A, 1, I + Ny + o + C + B + E + A, 1, I + Nq + o + C + B + E + A, 45, K + C + A, 1, D + OO + KS + SB + Of + N + C + E + A, 1, D + OO + KS + SB + JJ + N + C + t + A, 1, D + OO + KS + SB + Of + N + C + E + A, 1, D + OO + KS + SB + JJ + N + C + t + A, 1, D + GH + Rk + ' +k=1.0002' + Oa + N + C + E + A, 1, D + GH + Rk + ' +k=1.0002' + HL + N + C + t + A, 1, D + GH + Rk + ' +k=1.0002' + Oa + N + C + E + A, 1, D + GH + Rk + ' +k=1.0002' + HL + N + C + t + A, 1, H + Ky + Kz + Rl + Mc + Oa + ' +y_0=130000' + C + E + A, 1, H + Ky + Kz + Rl + Mc + HL + Zo + C + t + A, 1, H + Ky + Kz + Rl + Mc + Oa + ' +y_0=130000' + C + E + A, 1, H + Ky + Kz + Rl + Mc + HL + Zo + C + t + A, 1, H + Bq + AK + Rm + YU + ' +x_0=120000 +y_0=60000' + C + E + A, 1, H + Bq + AK + Rm + YU + Zp + aM + C + t + A, 1, H + Bq + AK + Rm + YU + ' +x_0=120000 +y_0=60000' + C + E + A, 1, H + Bq + AK + Rm + YU + Zp + aM + C + t + A, 1, D + Fp + Bj + Ze + Of + N + C + E + A, 1, D + Fp + Bj + Ze + JJ + N + C + t + A, 1, D + Fp + Bj + Ze + Of + N + C + E + A, 1, D + Fp + Bj + Ze + JJ + N + C + t + A, 1, H + LA + Be + AJ + Sk + Bn + ' +y_0=30000' + C + E + A, 1, H + LA + Be + AJ + Sk + Ng + aN + C + t + A, 1, H + LA + Be + AJ + Sk + Bn + ' +y_0=30000' + C + E + A, 1, H + LA + Be + AJ + Sk + Ng + aN + C + t + A, 1, CU + LB + Zf + Zg + ' +k=1' + Tp + ZL + KE + Zh + C + E + A, 1, CU + LB + Zf + Zg + ' +k=1' + ZN + Zq + KE + Zh + C + t + A, 1, CU + LB + Zf + Zg + ' +k=1' + Tp + ZL + KE + Zh + C + E + A, 1, CU + LB + Zf + Zg + ' +k=1' + ZN + Zq + KE + Zh + C + t + A, 1, D + BD + Bj + YV + Jm + N + C + E + A, 1, D + BD + Bj + YV + HM + N + C + t + A, 1, D + BD + Bj + YV + Jm + N + C + E + A, 1, D + BD + Bj + YV + HM + N + C + t + A, 1, D + OO + YW + Zi + Oa + N + C + E + A, 1, D + OO + YW + Zi + HL + N + C + t + A, 1, D + OO + YW + Zi + Oa + N + C + E + A, 1, D + OO + YW + Zi + HL + N + C + t + A, 1, D + Tq + KT + Lk + Jm + N + C + E + A, 1, D + Tq + KT + Lk + HM + N + C + t + A, 1, D + Tq + KT + Lk + Jm + N + C + E + A, 1, D + Tq + KT + Lk + HM + N + C + t + A, 1, D + GH + Bj + Qs + Jm + N + C + E + A, 1, D + GH + Bj + Qs + HM + N + C + t + A, 1, D + GH + Bj + Qs + Jm + N + C + E + A, 1, D + GH + Bj + Qs + HM + N + C + t + A, 1, D + IP + KU + Zj + ' +x_0=10000' + N + C + E + A, 1, D + IP + KU + Zj + aV + N + C + t + A, 1, D + IP + KU + Zj + ' +x_0=10000' + N + C + E + A, 1, D + IP + KU + Zj + aV + N + C + t + A, 1, D + IP + Ir + Zk + Of + N + C + E + A, 1, D + IP + Ir + Zk + JJ + N + C + t + A, 1, D + IP + Ir + Zk + Of + N + C + E + A, 1, D + IP + Ir + Zk + JJ + N + C + t + A, 1, D + Tr + Lj + ' +k=1.0001' + Oa + N + C + E + A, 1, D + Tr + Lj + ' +k=1.0001' + HL + N + C + t + A, 1, D + Tr + Lj + ' +k=1.0001' + Oa + N + C + E + A, 1, D + Tr + Lj + ' +k=1.0001' + HL + N + C + t + A, 1, CU + Pn + Sl + ' +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000' + KE + ' +gamma=5' + C + E + A, 1, CU + Pn + Sl + ' +alpha=5 +k=1' + Zr + Yp + KE + ' +gamma=5' + C + t + A, 1, CU + Pn + Sl + ' +alpha=5 +k=1 +x_0=-300000 +y_0=-4600000' + KE + ' +gamma=5' + C + E + A, 1, CU + Pn + Sl + ' +alpha=5 +k=1' + Zr + Yp + KE + ' +gamma=5' + C + t + A, 1, D + Ts + KV + Sb + ' +x_0=60000' + N + C + E + A, 1, D + Ts + KV + Sb + aO + N + C + t + A, 1, D + Ts + KV + Sb + ' +x_0=60000' + N + C + E + A, 1, D + Ts + KV + Sb + aO + N + C + t + A, 1, D + LC + IW + YX + Zl + N + C + E + A, 1, D + LC + IW + YX + aP + N + C + t + A, 1, D + LC + IW + YX + Zl + N + C + E + A, 1, D + LC + IW + YX + aP + N + C + t + A, 1, H + Jc + YY + Rn + Sm + BU + Rz + C + E + A, 1, H + Jc + YY + Rn + Sm + JW + Ra + C + t + A, 1, H + Jc + YY + Rn + Sm + BU + Rz + C + E + A, 1, H + Jc + YY + Rn + Sm + JW + Ra + C + t + A, 1, D + LD + KW + Zm + Jm + N + C + E + A, 1, D + LD + KW + Zm + HM + N + C + t + A, 1, D + LD + KW + Zm + Jm + N + C + E + A, 1, D + LD + KW + Zm + HM + N + C + t + A, 1, D + LE + Sn + YZ + s + N + C + E + A, 1, D + LE + Sn + YZ + s + N + C + t + A, 1, D + LE + Sn + YZ + s + N + C + E + A, 1, D + LE + Sn + YZ + s + N + C + t + A, 4, H + JT + Hl + GH + AJ + u + N + C + E + A, 1, H + JT + Hl + GH + AJ + Lc + N + C + t + A, 2, D + L + UI + ' +k=1' + O + N + C + B + E + A, 5, D + L + IH + ' +k=0.9985000000000001' + Tp + N + C + B + E + A, 1, D + L + IH + ' +k=1' + aH + N + C + B + E + A, 3, H + Jc + MZ + AL + Bu + a + N + C + E + A, 1, H + JT + Jn + FZ + CS + AG + N + C + J + A, 1, K + Bc + Ge + ' +towgs84=-24,-203,268,0,0,0,0' + A, 1, K + Bc + Ge + ' +towgs84=-183,-15,273,0,0,0,0' + A, 1, K + R + ' +towgs84=-235,-110,393,0,0,0,0' + A, 1, H + PP + CZ + AK + AJ + Ci + N + C + E + A, 1, H + PP + CZ + AK + AJ + KL + N + C + t + A, 1, H + PQ + Ca + p + AJ + AV + N + C + E + A, 1, H + PQ + Ca + p + AJ + KM + N + C + t + A, 5, K + Bc + Ge + PK + A, 2, K + Bc + Ge + ' +towgs84=-63,176,185,0,0,0,0' + A, 21, I + Me + Bc + Ge + PK + E + A, 7, H + Sc + Ya + GM + So + u + N + C + B + E + A, 1, H + Sc + Ya + GM + So + Au + N + C + B + J + A, 1, H + Sc + Ya + GM + So + u + N + C + E + A, 1, H + Sc + Ya + GM + So + Au + N + C + J + A, 6, He + Hr + HN + s + N + j + B + E + A, 1, He + m + HN + s + N + j + B + E + A, 1, '+proj=cea' + HN + ' +lat_ts=30' + s + N + j + B + E + A, 29, H + ' +lat_1=39 +lat_2=43' + Ip + UI + s + N + C + B + E + A, 21, K + C + A, 1, D + Ou + Ov + Zw + UV + Yl + C + E + A, 6, K + C + A, 1, D + Ou + Ov + Zw + UV + Yl + C + E + A, 14, I + KD + Bc + Ge + DO + E + A, 1, I + JZ + Bc + Ge + DO + E + A, 1, I + JM + Bc + Ge + DO + E + A, 28, K + C + A, 2, K + C + A, 2, K + C + A, 2, K + C + A, 16, H + ' +lat_1=43.2 +lat_0=43.2 +lon_0=-95.25 +k_0=1.000052 +x_0=3505207.010414021 +y_0=2926085.852171705' + C + J + A, 1, H + ' +lat_1=43.16666666666666 +lat_0=43.16666666666666 +lon_0=-92.75 +k_0=1.000043 +x_0=3810007.62001524 +y_0=2987045.974091948' + C + J + A, 1, D + Md + ' +lon_0=-91.2 +k=1.000035 +x_0=4114808.229616459 +y_0=2529845.05969012' + C + J + A, 1, H + ' +lat_1=42.53333333333333 +lat_0=42.53333333333333 +lon_0=-94.83333333333333 +k_0=1.000045 +x_0=4419608.839217679 +y_0=2621285.242570485' + C + J + A, 1, H + ' +lat_1=42.65 +lat_0=42.65 +lon_0=-92.25 +k_0=1.000032 +x_0=4724409.448818898 +y_0=2712725.425450851' + C + J + A, 1, D + Md + ' +lon_0=-95.73333333333333 +k=1.000039 +x_0=5029210.058420117 +y_0=2011684.023368047' + C + J + A, 1, D + Md + ' +lon_0=-94.63333333333334' + Sb + ' +x_0=5334010.668021336 +y_0=2072644.145288291' + C + J + A, 1, D + Md + ' +lon_0=-93.71666666666667 +k=1.000033 +x_0=5638811.277622555 +y_0=2133604.267208535' + C + J + A, 1, D + Md + ' +lon_0=-92.81666666666666' + OP + ' +x_0=5943611.887223775 +y_0=2194564.389128779' + C + J + A, 1, H + ' +lat_1=41.83333333333334 +lat_0=41.83333333333334 +lon_0=-91.66666666666667 +k_0=1.00002 +x_0=6248412.496824994 +y_0=2438404.876809754' + C + J + A, 1, D + Md + ' +lon_0=-90.53333333333333' + OP + ' +x_0=6553213.106426213 +y_0=2316484.632969266' + C + J + A, 1, H + ' +lat_1=40.91666666666666 +lat_0=40.91666666666666 +lon_0=-93.75 +k_0=1.000037 +x_0=6858013.716027432' + Yq + C + J + A, 1, D + Md + Oo + Og + ' +x_0=7162814.325628651 +y_0=1950723.901447803' + C + J + A, 1, D + Md + ' +lon_0=-91.25 +k=1.000018 +x_0=7467614.93522987' + Yq + C + J + A, 3, K + C + A, 1, I + KD + o + C + E + A, 1, I + JZ + o + C + E + A, 1, I + JM + o + C + E + A, 1, I + Me + o + C + E + A, 1, I + Rb + o + C + E + A, 1, I + Rc + o + C + E + A, 1, I + SO + o + C + E + A, 1, I + Td + o + C + E + A, 3, K + C + A, 2, K + C + A, 23, D + Qt + Sp + SB + Bn + N + C + E + A, 1, D + ' +lat_0=48' + Sp + ' +k=1.00019' + BU + N + C + E + A, 1, H + Yb + Qt + KK + ' +k_0=1.000145' + Bn + IK + C + E + A, 1, H + Yb + Qt + ' +lon_0=-108.5' + Mc + h + ' +y_0=150000' + C + E + A, 1, H + LF + LG + Ba + Mc + h + EK + C + E + A, 1, H + LF + LG + Ba + ' +k_0=1.00009' + BU + Rz + C + E + A, 1, D + Pn + ' +lon_0=-107.75 +k=1.000148' + h + N + C + E + A, 1, H + aI + ' +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185' + BU + EK + C + E + A, 1, H + WV + WW + Ub + ' +k_0=1.0001515' + h + Rz + C + E + A, 1, D + WX + Uc + ' +k=1.00024' + BU + N + C + E + A, 1, D + Qt + Sp + SB + Ng + N + C + t + A, 1, D + ' +lat_0=48' + Sp + ' +k=1.00019' + JW + N + C + t + A, 1, H + Yb + Qt + KK + ' +k_0=1.000145' + Ng + ' +y_0=199999.9999992' + C + t + A, 1, H + Yb + Qt + ' +lon_0=-108.5' + Mc + OU + ' +y_0=150000.00001464' + C + t + A, 1, H + LF + LG + Ba + Mc + OU + Yr + C + t + A, 1, H + LF + LG + Ba + ' +k_0=1.00009' + JW + ' +y_0=49999.99971024' + C + t + A, 1, D + Pn + ' +lon_0=-107.75 +k=1.000148' + OU + N + C + t + A, 1, H + aI + ' +lat_0=46.25 +lon_0=-111.25 +k_0=1.000185' + JW + Yr + C + t + A, 1, H + WV + WW + Ub + ' +k_0=1.0001515' + OU + Ra + C + t + A, 1, D + WX + Uc + ' +k=1.00024' + JV + N + C + J + A, 3, D + Po + ' +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000' + C + E + A, 1, D + Po + ' +lon_0=-122.45 +k=1.000007 +x_0=48000 +y_0=24000' + C + J + A, 1, K + C + A, 3, K + j + A, 3, K + j + A, 3, D + LH + LI + ' +k=1' + Qx + ' +y_0=126867.909' + Nc + Nd + ' +towgs84=-275.7224,94.7824,340.8944,-8.001,-4.42,-11.821,1' + E + A, 115, D + Pp + Sq + Ll + l + q + C + E + A, 1, D + Pp + Sq + Ll + l + q + C + J + A, 1, D + Qu + Oj + Lm + l + q + C + E + A, 1, D + Qu + Oj + Lm + l + q + C + J + A, 1, D + ' +lat_0=39' + KX + Ln + l + q + C + E + A, 1, D + ' +lat_0=39' + KX + Ln + l + q + C + J + A, 1, D + ' +lat_0=40.45' + Pq + Yc + l + q + C + E + A, 1, D + ' +lat_0=40.45' + Pq + Yc + l + q + C + J + A, 1, D + ' +lat_0=40.05' + Ud + OQ + l + q + C + E + A, 1, D + ' +lat_0=40.05' + Ud + OQ + l + q + C + J + A, 1, D + Yd + Pr + OR + l + q + C + E + A, 1, D + Yd + Pr + OR + l + q + C + J + A, 1, D + ' +lat_0=39' + Tt + Zn + l + q + C + E + A, 1, D + ' +lat_0=39' + Tt + Zn + l + q + C + J + A, 1, D + ' +lat_0=40.4' + Ue + Ln + l + q + C + E + A, 1, D + ' +lat_0=40.4' + Ue + Ln + l + q + C + J + A, 1, D + Pp + Uf + Qv + l + q + C + E + A, 1, D + Pp + Uf + Qv + l + q + C + J + A, 1, D + Tu + Ug + ' +k=1.000021' + l + q + C + E + A, 1, D + Tu + Ug + ' +k=1.000021' + l + q + C + J + A, 1, D + Tv + Uh + ' +k=1.000024' + l + q + C + E + A, 1, D + Tv + Uh + ' +k=1.000024' + l + q + C + J + A, 1, D + ' +lat_0=40.15' + Ui + ' +k=1.000032' + l + q + C + E + A, 1, D + ' +lat_0=40.15' + Ui + ' +k=1.000032' + l + q + C + J + A, 1, D + ' +lat_0=38.1' + Pr + Qw + l + q + C + E + A, 1, D + ' +lat_0=38.1' + Pr + Qw + l + q + C + J + A, 1, D + ' +lat_0=38.45' + KY + ' +k=1.000018' + l + q + C + E + A, 1, D + ' +lat_0=38.45' + KY + ' +k=1.000018' + l + q + C + J + A, 1, D + ' +lat_0=38.65' + Uj + Yc + l + q + C + E + A, 1, D + ' +lat_0=38.65' + Uj + Yc + l + q + C + J + A, 1, D + ' +lat_0=39.1' + Uk + OR + l + q + C + E + A, 1, D + ' +lat_0=39.1' + Uk + OR + l + q + C + J + A, 1, D + Tw + Sq + OR + l + q + C + E + A, 1, D + Tw + Sq + OR + l + q + C + J + A, 1, D + ' +lat_0=38.2' + Sr + Og + l + q + C + E + A, 1, D + ' +lat_0=38.2' + Sr + Og + l + q + C + J + A, 1, D + Tx + KX + ' +k=1.000033' + l + q + C + E + A, 1, D + Tx + KX + ' +k=1.000033' + l + q + C + J + A, 1, D + Ty + Oj + OQ + l + q + C + E + A, 1, D + Ty + Oj + OQ + l + q + C + J + A, 1, D + ' +lat_0=39.95' + Pq + Qw + l + q + C + E + A, 1, D + ' +lat_0=39.95' + Pq + Qw + l + q + C + J + A, 1, D + Qu + Tt + Lm + l + q + C + E + A, 1, D + Qu + Tt + Lm + l + q + C + J + A, 1, D + Tu + Ul + Ye + l + q + C + E + A, 1, D + Tu + Ul + Ye + l + q + C + J + A, 1, D + Tz + ' +lon_0=-85.7' + Ll + l + q + C + E + A, 1, D + Tz + ' +lon_0=-85.7' + Ll + l + q + C + J + A, 1, D + ' +lat_0=39.9' + MQ + Ll + l + q + C + E + A, 1, D + ' +lat_0=39.9' + MQ + Ll + l + q + C + J + A, 1, D + ' +lat_0=39.65' + UA + OR + l + q + C + E + A, 1, D + ' +lat_0=39.65' + UA + OR + l + q + C + J + A, 1, D + ' +lat_0=37.95' + HC + OP + l + q + C + E + A, 1, D + ' +lat_0=37.95' + HC + OP + l + q + C + J + A, 1, D + ' +lat_0=39.75' + Ss + Qs + l + q + C + E + A, 1, D + ' +lat_0=39.75' + Ss + Qs + l + q + C + J + A, 1, D + Tz + HC + Lm + l + q + C + E + A, 1, D + Tz + HC + Lm + l + q + C + J + A, 1, D + Tx + To + Ll + l + q + C + E + A, 1, D + Tx + To + Ll + l + q + C + J + A, 1, D + ' +lat_0=38.7 +lon_0=-85.95' + Yf + l + q + C + E + A, 1, D + ' +lat_0=38.7 +lon_0=-85.95' + Yf + l + q + C + J + A, 1, D + Yg + KY + OP + l + q + C + E + A, 1, D + Yg + KY + OP + l + q + C + J + A, 1, D + ' +lat_0=40.3' + SA + OQ + l + q + C + E + A, 1, D + ' +lat_0=40.3' + SA + OQ + l + q + C + J + A, 1, D + ' +lat_0=38.55' + Um + Qv + l + q + C + E + A, 1, D + ' +lat_0=38.55' + Um + Qv + l + q + C + J + A, 1, D + ' +lat_0=38.8' + UA + Qw + l + q + C + E + A, 1, D + ' +lat_0=38.8' + UA + Qw + l + q + C + J + A, 1, D + Yh + HC + Lm + l + q + C + E + A, 1, D + Yh + HC + Lm + l + q + C + J + A, 1, D + ' +lat_0=38.4' + St + Lk + l + q + C + E + A, 1, D + ' +lat_0=38.4' + St + Lk + l + q + C + J + A, 1, D + Tw + Ss + ' +k=1.000037' + l + q + C + E + A, 1, D + Tw + Ss + ' +k=1.000037' + l + q + C + J + A, 1, D + Yg + Un + Ln + l + q + C + E + A, 1, D + Yg + Un + Ln + l + q + C + J + A, 1, D + Qu + ' +lon_0=-86.75' + OP + l + q + C + E + A, 1, D + Qu + ' +lon_0=-86.75' + OP + l + q + C + J + A, 1, D + ' +lat_0=38.95' + Pr + Qv + l + q + C + E + A, 1, D + ' +lat_0=38.95' + Pr + Qv + l + q + C + J + A, 1, D + ' +lat_0=39.45' + Sr + Lm + l + q + C + E + A, 1, D + ' +lat_0=39.45' + Sr + Lm + l + q + C + J + A, 1, D + Tv + KZ + Ln + l + q + C + E + A, 1, D + Tv + KZ + Ln + l + q + C + J + A, 1, D + Yd + Uo + Yf + l + q + C + E + A, 1, D + Yd + Uo + Yf + l + q + C + J + A, 1, D + Yi + ' +lon_0=-86.7' + Og + l + q + C + E + A, 1, D + Yi + ' +lon_0=-86.7' + Og + l + q + C + J + A, 1, D + ' +lat_0=37.85' + Pq + Lk + l + q + C + E + A, 1, D + ' +lat_0=37.85' + Pq + Lk + l + q + C + J + A, 1, D + Po + ' +lon_0=-87.95' + Ye + l + q + C + E + A, 1, D + Po + ' +lon_0=-87.95' + Ye + l + q + C + J + A, 1, D + ' +lat_0=39.7' + Oj + ' +k=1.000044' + l + q + C + E + A, 1, D + ' +lat_0=39.7' + Oj + ' +k=1.000044' + l + q + C + J + A, 1, D + Yj + ' +lon_0=-85.3' + OQ + l + q + C + E + A, 1, D + Yj + ' +lon_0=-85.3' + OQ + l + q + C + J + A, 1, D + Yh + Up + Zn + l + q + C + E + A, 1, D + Yh + Up + Zn + l + q + C + J + A, 1, D + Po + ' +lon_0=-87.05 +k=1.000014' + l + q + C + E + A, 1, D + Po + ' +lon_0=-87.05 +k=1.000014' + l + q + C + J + A, 1, D + Fo + SA + ' +k=1.000041' + l + q + C + E + A, 1, D + Fo + SA + ' +k=1.000041' + l + q + C + J + A, 1, D + Yj + OS + ' +k=1.000017' + l + q + C + E + A, 1, D + Yj + OS + ' +k=1.000017' + l + q + C + J + A, 1, D + ' +lat_0=40.2' + KZ + Ln + l + q + C + E + A, 1, D + ' +lat_0=40.2' + KZ + Ln + l + q + C + J + A, 1, D + Yi + Su + Lk + l + q + C + E + A, 1, D + Yi + Su + Lk + l + q + C + J + A, 1, D + Ty + St + Og + l + q + C + E + A, 1, D + Ty + St + Og + l + q + C + J + A, 1, D + Pp + ' +lon_0=-85.25' + Ll + l + q + C + E + A, 1, D + Pp + ' +lon_0=-85.25' + Ll + l + q + C + J + A, 3, K + C + B + A, 1, I + JM + C + B + E + A, 1, I + Me + C + B + E + A, 1, I + Rb + C + B + E + A, 152, D + WY + Bu + ' +k=1.0000365285 +x_0=147218.6942 +y_0=0.0037' + C + E + A, 1, D + WZ + Uq + ' +k=1.0000495683 +x_0=172821.9461 +y_0=0.0017' + C + E + A, 1, D + Wa + Ur + ' +k=1.0000486665 +x_0=93150 +y_0=0.0029' + C + E + A, 1, H + Wb + Wc + Us + ' +k_0=1.0000331195 +x_0=228600.4575 +y_0=148551.4837' + C + E + A, 1, D + Nj + ' +lon_0=-88' + Og + ' +x_0=31600 +y_0=4600' + C + E + A, 1, D + Wd + Ut + ' +k=1.0000382778 +x_0=175260.3502 +y_0=0.0048' + C + E + A, 1, H + We + Wf + Uu + ' +k_0=1.0000383841 +x_0=64008.1276 +y_0=59445.9043' + C + E + A, 1, D + Wg + ' +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8893 +y_0=0.0049' + C + E + A, 1, H + Wh + Wi + Uv + ' +k_0=1.0000391127 +x_0=60045.72 +y_0=44091.4346' + C + E + A, 1, D + ' +lat_0=43.6' + Uw + ' +k=1.0000463003 +x_0=199949.1989 +y_0=0.0086' + C + E + A, 1, H + Wj + Wk + Ux + ' +k_0=1.00003498 +x_0=169164.3381 +y_0=111569.6134' + C + E + A, 1, H + aQ + aR + Wl + ' +k_0=1.0000349151 +x_0=113690.6274 +y_0=53703.1201' + C + E + A, 1, H + Zs + Zt + Uy + ' +k_0=1.0000384786 +x_0=247193.2944 +y_0=146591.9896' + C + E + A, 1, D + Wm + Uz + ' +k=1.0000346418 +x_0=263347.7263 +y_0=0.0076' + C + E + A, 1, D + ' +lat_0=44.4' + VA + ' +k=1.0000187521 +x_0=158801.1176 +y_0=0.0023' + C + E + A, 1, D + Wn + Oo + ' +k=1.0000385418 +x_0=59131.3183 +y_0=0.0041' + C + E + A, 1, D + Wo + VB + ' +k=1.0000410324 +x_0=51816.104 +y_0=0.003' + C + E + A, 1, H + Wp + Wq + VC + ' +k_0=1.000035079 +x_0=120091.4402 +y_0=91687.92389999999' + C + E + A, 1, D + Wr + VD + ' +k=1.0000552095 +x_0=133502.6683 +y_0=0.0063' + C + E + A, 1, D + Ws + VE + ' +k=1.0000673004 +x_0=275844.5533 +y_0=0.0157' + C + E + A, 1, D + Wt + ' +lon_0=-90.8 +k=1.0000349452 +x_0=242316.4841 +y_0=0.01' + C + E + A, 1, H + Wu + Wv + VF + ' +k_0=1.0000390487 +x_0=170078.7403 +y_0=45830.2947' + C + E + A, 1, H + Ww + Wx + Ka + ' +k_0=1.0000344057 +x_0=150876.3018 +y_0=79170.7795' + C + E + A, 1, D + Wy + VG + ' +k=1.0000394961 +x_0=113081.0261 +y_0=0.0045' + C + E + A, 1, D + Wz + VH + ' +k=1.0000677153 +x_0=220980.4419 +y_0=0.008500000000000001' + C + E + A, 1, D + XA + VI + ' +k=1.0000353 +x_0=27000 +y_0=25000' + C + E + A, 1, D + XB + VJ + ' +k=1.0000260649 +x_0=185928.3728 +y_0=0.0009' + C + E + A, 1, D + XC + Su + ' +k=1.0000233704 +x_0=79857.7614 +y_0=0.0012' + C + E + A, 1, D + XD + VK + ' +k=1.0000319985 +x_0=130454.6598 +y_0=0.0033' + C + E + A, 1, H + XE + XF + VL + ' +k_0=1.0000627024 +x_0=198425.197 +y_0=105279.7829' + C + E + A, 1, D + XG + VM + ' +k=1.0000599003 +x_0=116129.0323 +y_0=0.0058' + C + E + A, 1, H + XH + XI + ' +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493 +y_0=55049.2669' + C + E + A, 1, D + XJ + VN + ' +k=1.0000234982 +x_0=238658.8794 +y_0=0.0032' + C + E + A, 1, D + XK + VO + ' +k=1.0000362499 +x_0=105461.0121 +y_0=0.0029' + C + E + A, 1, H + XL + XM + VP + ' +k_0=1.0000434122 +x_0=204521.209 +y_0=121923.9861' + C + E + A, 1, D + XN + VQ + ' +k=1.0000236869 +x_0=182880.3676 +y_0=0.0033' + C + E + A, 1, H + XO + XP + VR + ' +k_0=1.0000686968 +x_0=70104.1401 +y_0=57588.0346' + C + E + A, 1, H + XQ + XR + VS + ' +k_0=1.0000362977 +x_0=167640.3354 +y_0=86033.0876' + C + E + A, 1, D + XS + Kb + ' +k=1.0000433849 +x_0=141732.2823 +y_0=0.0059' + C + E + A, 1, H + XT + XU + ' +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.1128 +y_0=50022.1874' + C + E + A, 1, D + XV + VT + ' +k=1.0000649554 +x_0=227990.8546 +y_0=0.0109' + C + E + A, 1, H + Zu + Zv + VU + ' +k_0=1.0000375653 +x_0=202387.6048 +y_0=134255.4253' + C + E + A, 1, D + XW + VV + ' +k=1.0000337311 +x_0=146304.2926 +y_0=0.0068' + C + E + A, 1, D + XX + VW + ' +k=1.0000495976 +x_0=250546.1013 +y_0=0.0234' + C + E + A, 1, D + XY + VX + ' +k=1.0000373868 +x_0=185623.5716 +y_0=0.0051' + C + E + A, 1, H + XZ + Xa + VY + ' +k_0=1.0000573461 +x_0=216713.2336 +y_0=120734.1631' + C + E + A, 1, D + LJ + VZ + ' +k=1.000032144 +x_0=262433.3253 +y_0=0.009599999999999999' + C + E + A, 1, D + LJ + Kb + ' +k=1.0000381803 +x_0=165506.7302 +y_0=0.0103' + C + E + A, 1, H + Xb + Xc + Va + ' +k_0=1.0000597566 +x_0=187147.5744 +y_0=107746.7522' + C + E + A, 1, D + Xd + Vb + ' +k=1.0000361538 +x_0=256946.9138 +y_0=0.0041' + C + E + A, 1, H + Xe + Xf + Vc + ' +k_0=1.0000408158 +x_0=222504.4451 +y_0=47532.0602' + C + E + A, 1, H + Xg + Xh + Vd + ' +k_0=1.0000730142 +x_0=134417.0689 +y_0=50337.1092' + C + E + A, 1, H + Xi + Xj + Ve + ' +k_0=1.0000367192 +x_0=232562.8651 +y_0=111088.2224' + C + E + A, 1, H + Xk + Xl + Vf + ' +k_0=1.0000475376 +x_0=234086.8682 +y_0=188358.6058' + C + E + A, 1, D + Xm + Vg + ' +k=1.00003738 +x_0=120091.4415 +y_0=0.003' + C + E + A, 1, D + Xn + Vh + ' +k=1.0000346179 +x_0=208788.418 +y_0=0.0034' + C + E + A, 1, D + Xo + Vi + ' +k=1.0000333645 +x_0=185013.9709 +y_0=0.007' + C + E + A, 1, H + Xp + Xq + Ka + ' +k_0=1.0000392096 +x_0=120091.4402 +y_0=45069.7587' + C + E + A, 1, H + Xr + Xs + Bu + ' +k_0=1.0000421209 +x_0=208483.6173 +y_0=134589.754' + C + E + A, 1, D + WY + Bu + ' +k=1.0000365285 +x_0=147218.6941325883 +y_0=0.00365760731521463' + C + J + A, 1, D + WZ + Uq + ' +k=1.0000495683 +x_0=172821.945948692 +y_0=0.001828803657607315' + C + J + A, 1, D + Wa + Ur + ' +k=1.0000486665 +x_0=93150' + IX + C + J + A, 1, H + Wb + Wc + Us + ' +k_0=1.0000331195 +x_0=228600.4575057151 +y_0=148551.4835661671' + C + J + A, 1, D + Nj + ' +lon_0=-88' + Og + ' +x_0=31599.99989839979 +y_0=4599.999898399797' + C + J + A, 1, D + Wd + Ut + ' +k=1.0000382778 +x_0=175260.3502159004' + Vj + C + J + A, 1, H + We + Wf + Uu + ' +k_0=1.0000383841 +x_0=64008.12771145543 +y_0=59445.90419100838' + C + J + A, 1, D + Wg + ' +lon_0=-88.5 +k=1.0000286569 +x_0=244754.8892049784' + Vj + C + J + A, 1, H + Wh + Wi + Uv + ' +k_0=1.0000391127 +x_0=60045.72009144018 +y_0=44091.43449326898' + C + J + A, 1, D + ' +lat_0=43.6' + Uw + ' +k=1.0000463003 +x_0=199949.198983998' + Vk + C + J + A, 1, H + Wj + Wk + Ux + ' +k_0=1.00003498 +x_0=169164.338023876 +y_0=111569.613512827' + C + J + A, 1, H + aQ + aR + Wl + ' +k_0=1.0000349151 +x_0=113690.6273812548 +y_0=53703.12024384048' + C + J + A, 1, H + Zs + Zt + Uy + ' +k_0=1.0000384786 +x_0=247193.2943865888 +y_0=146591.9896367793' + C + J + A, 1, D + Wm + Uz + ' +k=1.0000346418 +x_0=263347.7263906528 +y_0=0.00762001524003048' + C + J + A, 1, D + ' +lat_0=44.4' + VA + ' +k=1.0000187521 +x_0=158801.1176022352 +y_0=0.002438404876809754' + C + J + A, 1, D + Wn + Oo + ' +k=1.0000385418 +x_0=59131.31826263652' + Vl + C + J + A, 1, D + Wo + VB + ' +k=1.0000410324 +x_0=51816.10393700787' + IX + C + J + A, 1, H + Wp + Wq + VC + ' +k_0=1.000035079' + Ys + ' +y_0=91687.92390144781' + C + J + A, 1, D + Wr + VD + ' +k=1.0000552095 +x_0=133502.6682245364 +y_0=0.006400812801625603' + C + J + A, 1, D + Ws + VE + ' +k=1.0000673004 +x_0=275844.5532131065 +y_0=0.0158496316992634' + C + J + A, 1, D + Wt + ' +lon_0=-90.8 +k=1.0000349452 +x_0=242316.484023368 +y_0=0.01005842011684023' + C + J + A, 1, H + Wu + Wv + VF + ' +k_0=1.0000390487 +x_0=170078.7401574803 +y_0=45830.29484378968' + C + J + A, 1, H + Ww + Wx + Ka + ' +k_0=1.0000344057 +x_0=150876.3017526035 +y_0=79170.77937515875' + C + J + A, 1, D + Wy + VG + ' +k=1.0000394961 +x_0=113081.0261620523 +y_0=0.004572009144018288' + C + J + A, 1, D + Wz + VH + ' +k=1.0000677153 +x_0=220980.4419608839' + Vk + C + J + A, 1, D + XA + VI + ' +k=1.0000353 +x_0=27000 +y_0=24999.99989839979' + C + J + A, 1, D + XB + VJ + ' +k=1.0000260649 +x_0=185928.3727711455 +y_0=0.0009144018288036576' + C + J + A, 1, D + XC + Su + ' +k=1.0000233704 +x_0=79857.76154432308 +y_0=0.001219202438404877' + C + J + A, 1, D + XD + VK + ' +k=1.0000319985 +x_0=130454.6596901194' + Op + C + J + A, 1, H + XE + XF + VL + ' +k_0=1.0000627024 +x_0=198425.1968503937 +y_0=105279.7828803657' + C + J + A, 1, D + XG + VM + ' +k=1.0000599003 +x_0=116129.0322580645' + Vm + C + J + A, 1, H + XH + XI + ' +lon_0=-89.77 +k_0=1.000053289 +x_0=74676.1493522987 +y_0=55049.26695453391' + C + J + A, 1, D + XJ + VN + ' +k=1.0000234982 +x_0=238658.8794513589' + IX + C + J + A, 1, D + XK + VO + ' +k=1.0000362499 +x_0=105461.0121412243' + IX + C + J + A, 1, H + XL + XM + VP + ' +k_0=1.0000434122 +x_0=204521.2090424181 +y_0=121923.9861823724' + C + J + A, 1, D + XN + VQ + ' +k=1.0000236869 +x_0=182880.3675895352' + Op + C + J + A, 1, H + XO + XP + VR + ' +k_0=1.0000686968 +x_0=70104.14020828041 +y_0=57588.03474726949' + C + J + A, 1, H + XQ + XR + VS + ' +k_0=1.0000362977 +x_0=167640.3352806706 +y_0=86033.08773177546' + C + J + A, 1, D + XS + Kb + ' +k=1.0000433849 +x_0=141732.2822453645' + Vm + C + J + A, 1, H + XT + XU + ' +lon_0=-89.5 +k_0=1.000039936 +x_0=56388.11277622555 +y_0=50022.1874523749' + C + J + A, 1, D + XV + VT + ' +k=1.0000649554 +x_0=227990.8544577089 +y_0=0.01097282194564389' + C + J + A, 1, H + Zu + Zv + VU + ' +k_0=1.0000375653 +x_0=202387.6047752095 +y_0=134255.4254508509' + C + J + A, 1, D + XW + VV + ' +k=1.0000337311 +x_0=146304.2926085852 +y_0=0.006705613411226822' + C + J + A, 1, D + XX + VW + ' +k=1.0000495976 +x_0=250546.1013970028 +y_0=0.02346964693929388' + C + J + A, 1, D + XY + VX + ' +k=1.0000373868 +x_0=185623.5715519431 +y_0=0.005181610363220727' + C + J + A, 1, H + XZ + Xa + VY + ' +k_0=1.0000573461 +x_0=216713.2337312675 +y_0=120734.1631699263' + C + J + A, 1, D + LJ + VZ + ' +k=1.000032144 +x_0=262433.3251714504 +y_0=0.009448818897637795' + C + J + A, 1, D + LJ + Kb + ' +k=1.0000381803 +x_0=165506.7300990602 +y_0=0.01036322072644145' + C + J + A, 1, H + Xb + Xc + Va + ' +k_0=1.0000597566 +x_0=187147.5742951486 +y_0=107746.7521463043' + C + J + A, 1, D + Xd + Vb + ' +k=1.0000361538 +x_0=256946.9138938278' + Vl + C + J + A, 1, H + Xe + Xf + Vc + ' +k_0=1.0000408158 +x_0=222504.44500889 +y_0=47532.0603505207' + C + J + A, 1, H + Xg + Xh + Vd + ' +k_0=1.0000730142 +x_0=134417.0688341377 +y_0=50337.10927101854' + C + J + A, 1, H + Xi + Xj + Ve + ' +k_0=1.0000367192 +x_0=232562.8651257302 +y_0=111088.2224028448' + C + J + A, 1, H + Xk + Xl + Vf + ' +k_0=1.0000475376 +x_0=234086.8681737363 +y_0=188358.6059436119' + C + J + A, 1, D + Xm + Vg + ' +k=1.00003738 +x_0=120091.4414020828' + IX + C + J + A, 1, D + Xn + Vh + ' +k=1.0000346179 +x_0=208788.4178816358' + Op + C + J + A, 1, D + Xo + Vi + ' +k=1.0000333645 +x_0=185013.9709423419 +y_0=0.007010414020828041' + C + J + A, 1, H + Xp + Xq + Ka + ' +k_0=1.0000392096' + Ys + ' +y_0=45069.7588011176' + C + J + A, 1, H + Xr + Xs + Bu + ' +k_0=1.0000421209 +x_0=208483.6172720346 +y_0=134589.7539243078' + C + J + A, 41, K + C + A, 6, D + L + ' +lon_0=68.51666666666667 +k=1 +x_0=1300000' + RX + C + E + A, 1, D + L + ' +lon_0=71.51666666666667 +k=1' + aB + RX + C + E + A, 1, D + L + ' +lon_0=74.51666666666667 +k=1' + aC + RX + C + E + A, 1, D + L + ' +lon_0=77.51666666666667 +k=1' + aD + RX + C + E + A, 1, D + L + ' +lon_0=80.51666666666667 +k=1 +x_0=5300000' + RX + C + E + A, 12308, D + L + Gl + ' +k=1' + DP + N + M + G + E + A, 1, D + L + HO + ' +k=1' + Eg + N + M + G + E + A, 1, D + L + IG + ' +k=1' + Jt + N + M + G + E + A, 1, D + L + LN + ' +k=1' + IM + N + M + G + E + A, 1, D + L + JS + ' +k=1' + MS + N + M + G + E + A, 1, D + L + PS + ' +k=1' + MT + N + M + G + E + A, 1, D + L + RL + ' +k=1' + LY + N + M + G + E + A, 1, D + L + QW + ' +k=1' + Jp + N + M + G + E + A, 1, D + L + RM + ' +k=1' + LZ + N + M + G + E + A, 1, D + L + HP + ' +k=1' + HU + N + M + G + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + M + G + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + M + G + E + A, 1, D + L + HR + ' +k=1' + Hv + N + M + G + E + A, 1, D + L + HS + ' +k=1' + It + N + M + G + E + A, 1, D + L + EN + ' +k=1' + Hs + N + M + G + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + M + G + E + A, 1, D + L + Fm + ' +k=1' + HV + N + M + G + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + M + G + E + A, 1, D + L + Ed + ' +k=1' + HW + N + M + G + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + M + G + E + A, 1, D + L + Pf + ' +k=1' + La + N + M + G + E + A, 1, D + L + Od + ' +k=1' + Hy + N + M + G + E + A, 1, D + L + NY + ' +k=1' + Hz + N + M + G + E + A, 1, D + L + Pg + ' +k=1' + IA + N + M + G + E + A, 1, D + L + NZ + ' +k=1' + IB + N + M + G + E + A, 1, D + L + Lf + ' +k=1' + Gx + N + M + G + E + A, 1, D + L + KG + ' +k=1' + IT + N + M + G + E + A, 1, D + L + KH + ' +k=1' + Gc + N + M + G + E + A, 1, D + L + Lh + ' +k=1' + IU + N + M + G + E + A, 103, I + Ki + c + HX + E + A, 1, I + Mf + c + HX + E + A, 1, I + KD + c + HX + E + A, 1, I + JZ + c + HX + E + A, 111, I + Mi + o + x + r + E + A, 1, I + NS + o + x + r + E + A, 1, I + Mg + o + x + r + E + A, 1, I + NT + o + x + r + E + A, 1, I + Ot + o + x + r + E + A, 1, I + Nv + o + x + r + E + A, 1, I + PM + o + x + r + E + A, 1, I + Re + o + x + r + E + A, 1, I + SM + o + x + r + E + A, 1, I + MA + o + x + r + E + A, 91, I + Mi + o + x + CB + E + A, 1, I + NS + o + x + CB + E + A, 1, I + Mg + o + x + CB + E + A, 1, I + NT + o + x + CB + E + A, 1, I + Ot + o + x + CB + E + A, 1, I + Nv + o + x + CB + E + A, 1, I + PM + o + x + CB + E + A, 1, I + Re + o + x + CB + E + A, 80, I + Mf + R + Cm + E + A, 1, I + KD + R + Cm + E + A, 1, I + JZ + R + Cm + E + A, 1, I + JM + R + Cm + E + A, 1, I + Me + R + Cm + E + A, 59, I + JM + R + Cm + E + A, 39, I + JZ + M + NL + E + A, 1, I + JM + M + NL + E + A, 251, D + BY + ' +lon_0=1 +k=1' + h + Hk + R + EV + Zb + E + A, 1, D + BY + ' +lon_0=1 +k=1' + s + N + R + EV + Zb + E + A, 31, I + Io + o + R + Ec + E + A, 1, I + MB + o + R + Ec + E + A, 1, I + Nx + o + R + Ec + E + A, 110, I + NR + o + Bc + BS + In + E + A, 1, I + Ki + o + Bc + BS + In + E + A, 1, I + Mf + o + Bc + BS + In + E + A, 99, I + Ki + o + c + ER + E + A, 1, I + Mf + o + c + ER + E + A, 1, I + KD + o + c + ER + E + A, 58, I + Ki + c + ER + E + A, 1, I + Mf + c + ER + E + A, 1, I + KD + c + ER + E + A, 51, I + Mh + o + Y + Cj + E + A, 1, I + Mi + o + Y + Cj + E + A, 1, I + NS + o + Y + Cj + E + A, 141, D + L + NU + EP + u + N + c + Jw + E + A, 1, D + ' +lat_0=13.17638888888889 +lon_0=-59.55972222222222 +k=0.9999986' + Zl + ' +y_0=75000' + c + Jw + E + A, 121, D + L + HP + ' +k=1' + HU + N + M + U + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + M + U + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + M + U + E + A, 1, D + L + HR + ' +k=1' + Hv + N + M + U + E + A, 1, D + L + HS + ' +k=1' + It + N + M + U + E + A, 1, D + L + EN + ' +k=1' + Hs + N + M + U + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + M + U + E + A, 1, D + L + Fm + ' +k=1' + HV + N + M + U + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + M + U + E + A, 1, D + L + Ed + ' +k=1' + HW + N + M + U + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + M + U + E + A, 30, D + L + HP + ' +k=1' + O + N + M + U + E + A, 1, D + L + HQ + ' +k=1' + O + N + M + U + E + A, 1, D + L + Hd + ' +k=1' + O + N + M + U + E + A, 1, D + L + HR + ' +k=1' + O + N + M + U + E + A, 1, D + L + HS + ' +k=1' + O + N + M + U + E + A, 1, D + L + EN + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fy + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fm + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fr + ' +k=1' + O + N + M + U + E + A, 1, D + L + Ed + ' +k=1' + O + N + M + U + E + A, 1, D + L + Fn + ' +k=1' + O + N + M + U + E + A, 37, H + Ks + Kt + Hr + HN + Bn + ' +y_0=5400000' + R + ' +pm=brussels' + E + A, 280, Pu + Kj + HN + ' +k_0=1' + s + N + Y + Gf + ' +pm=bern' + E + A, 1, Pu + Kj + Ow + ' +k_0=1' + a + IK + Y + Gf + E + A, 1, Pu + Kj + Ow + ' +k_0=1' + s + N + Y + Gf + E + A, 36, I + IC + R + ES + E + A, 78, D + LK + ' +lon_0=-77.08091666666667 +k=1' + BZ + AH + R + ES + E + A, 1, D + LK + ' +lon_0=-74.08091666666667 +k=1' + BZ + AH + R + ES + E + A, 1, D + LK + ' +lon_0=-71.08091666666667 +k=1' + BZ + AH + R + ES + E + A, 1, D + LK + ' +lon_0=-68.08091666666667 +k=1' + BZ + AH + R + ES + E + A, 133, I + JN + o + c + GO + E + A, 1, I + KC + o + c + GO + E + A, 58, D + L + ' +lon_0=11.5' + AP + O + Ak + c + GO + E + A, 1, D + L + IH + AP + O + Ak + c + GO + E + A, 79, D + m + UQ + ' +k=1' + AV + N + C + B + E + A, 1, D + m + MP + ' +k=1' + Ci + N + C + B + E + A, 1, D + m + Pe + ' +k=1' + Bo + N + C + B + E + A, 1, D + m + Qk + ' +k=1' + DP + N + C + B + E + A, 1, D + m + US + ' +k=1' + Eg + N + C + B + E + A, 1, D + m + Zc + ' +k=1' + Jt + N + C + B + E + A, 1, D + m + Nb + ' +k=1' + IM + N + C + B + E + A, 4, D + m + UQ + ' +k=1' + AV + N + j + B + E + A, 1, D + m + MP + ' +k=1' + Ci + N + j + B + E + A, 1, D + m + Pe + ' +k=1' + Bo + N + j + B + E + A, 1, D + m + Qk + ' +k=1' + DP + N + j + B + E + A, 1, D + m + US + ' +k=1' + Eg + N + j + B + E + A, 1, D + m + Zc + ' +k=1' + Jt + N + j + B + E + A, 1, D + m + Nb + ' +k=1' + IM + N + j + B + E + A, 4, D + m + UQ + ' +k=1' + AV + N + R + Bs + E + A, 1, D + m + MP + ' +k=1' + Ci + N + R + Bs + E + A, 1, D + m + Pe + ' +k=1' + Bo + N + R + Bs + E + A, 1, D + m + Qk + ' +k=1' + DP + N + R + Bs + E + A, 1, D + m + US + ' +k=1' + Eg + N + R + Bs + E + A, 1, D + m + Zc + ' +k=1' + Jt + N + R + Bs + E + A, 1, D + m + Nb + ' +k=1' + IM + N + R + Bs + E + A, 37, I + NR + o + Bc + BS + Ax + E + A, 1, I + Ki + o + Bc + BS + Ax + E + A, 40, D + L + Gj + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + UE + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + RI + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + Gl + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + SP + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + RJ + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + HO + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + ' +lon_0=29 +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + QQ + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 2, D + L + IG + ' +k=1' + s + N + Gk + Bc + BS + Ax + E + A, 39, I + JN + AU + BN + Gi + E + A, 59, H + ' +lat_1=36' + GM + ' +lon_0=9.9' + QL + O + Hk + AU + BN + Gi + E + A, 1, H + Sd + Se + ' +lon_0=9.9' + Nk + O + Hk + AU + BN + Gi + E + A, 129, I + ID + o + R + GR + E + A, 1, I + Io + o + R + GR + E + A, 1, I + MB + o + R + GR + E + A, 1, I + Nx + o + R + GR + E + A, 1, I + Nr + o + R + GR + E + A, 175, H + aL + ' +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256' + AI + Hk + AU + BN + HI + E + A, 70, H + aL + ' +lat_0=34.65 +lon_0=37.35 +k_0=0.9996256' + AI + Hk + AU + BN + HI + E + A, 10, GU + ' +lat_0=34.2 +lon_0=39.15 +k=0.9995341' + s + N + AU + BN + HI + E + A, 211, D + Gm + ' +lon_0=35 +k=1' + AI + ' +y_0=1100000' + Gn + HY + E + A, 1, D + Gm + QQ + ' +k=1 +x_0=615000 +y_0=810000' + Gn + HY + E + A, 1, D + Gm + HO + ' +k=1' + EW + IK + Gn + HY + E + A, 1, D + Gm + HO + ' +k=1' + EW + Tj + Gn + HY + E + A, 34, I + Ja + R + n + E + A, 1, I + KA + R + n + E + A, 1, I + Oq + R + n + E + A, 1, I + QD + R + n + E + A, 1, I + JN + R + n + E + A, 1, I + KC + R + n + E + A, 1, I + NR + R + n + E + A, 1, I + Ki + R + n + E + A, 1, I + Mf + R + n + E + A, 1, I + KD + R + n + E + A, 1, I + JZ + R + n + E + A, 52, D + L + HN + AP + O + N + R + n + E + A, 5, D + L + ' +lon_0=5' + AP + O + N + R + n + E + A, 144, I + JM + c + NM + E + A, 1, I + Me + c + NM + E + A, 460, Pu + ' +lat_0=47.14439372222222 +lon_0=19.04857177777778 +k_0=0.99993 +x_0=650000' + IK + aK + RE + E + A, 130, D + L + ' +lon_0=94.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=97.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=100.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=103.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=106.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=109.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=112.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=115.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=118.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=121.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=124.5' + V + h + DQ + j + B + E + A, 1, D + L + Pj + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=130.5' + V + h + DQ + j + B + E + A, 1, D + L + Tk + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=136.5' + V + h + DQ + j + B + E + A, 1, D + L + ' +lon_0=139.5' + V + h + DQ + j + B + E + A, 1, I + QF + IR + Bh + Av + E + A, 1, I + Ny + IR + Bh + Av + E + A, 1, I + Mh + IR + Bh + Av + E + A, 1, I + Mi + IR + Bh + Av + E + A, 1, I + NS + IR + Bh + Av + E + A, 1, I + Mg + IR + Bh + Av + E + A, 1, I + NT + IR + Bh + Av + E + A, 14, I + QF + j + B + E + A, 1, I + Ny + j + B + E + A, 1, I + Mh + j + B + E + A, 1, I + Mi + j + B + E + A, 1, I + NS + j + B + E + A, 1, I + Mg + j + B + E + A, 1, I + NT + j + B + E + A, 5, I + Ny + o + j + B + E + A, 1, I + Mh + o + j + B + E + A, 1, I + Mi + o + j + B + E + A, 1, I + NS + o + j + B + E + A, 1, I + Mg + o + j + B + E + A, 1, I + NT + o + j + B + E + A, 1, I + Ot + o + j + B + E + A, 1, I + Nv + o + j + B + E + A, 3, I + Ny + o + IR + Bh + Av + E + A, 1, I + Mh + o + IR + Bh + Av + E + A, 1, I + Mi + o + IR + Bh + Av + E + A, 1, I + NS + o + IR + Bh + Av + E + A, 1, I + Mg + o + IR + Bh + Av + E + A, 1, I + NT + o + IR + Bh + Av + E + A, 1, I + Ot + o + IR + Bh + Av + E + A, 1, I + Nv + o + IR + Bh + Av + E + A, 52, I + QF + By + Ay + JR + E + A, 1, I + Ny + By + Ay + JR + E + A, 1, I + Mh + By + Ay + JR + E + A, 99, I + Ny + By + Ay + NN + E + A, 1, I + Mh + By + Ay + NN + E + A, 52, H + ' +lat_1=18' + OX + Ld + ' +k_0=1 +x_0=167638.49597 +y_0=121918.90616' + RB + RC + ML + A, 100, H + ' +lat_1=18' + OX + Ld + ' +k_0=1' + Bv + ' +y_0=150000' + i + TG + E + A, 105, I + Te + By + Ay + JQ + E + A, 1, I + QF + By + Ay + JQ + E + A, 5, I + Rb + Lp + Hp + GQ + E + A, 1, I + Rc + Lp + Hp + GQ + E + A, 1, I + SO + Lp + Hp + GQ + E + A, 29, I + Rc + Go + CT + BT + E + A, 1, I + SO + Go + CT + BT + E + A, 1, I + Td + Go + CT + BT + E + A, 1, I + Te + Go + CT + BT + E + A, 1, I + QF + Go + CT + BT + E + A, 1, I + Ny + Go + CT + BT + E + A, 23, H + Sc + ' +lat_0=39.5 +lon_0=68 +k_0=0.99846154 +x_0=2153865.73916853 +y_0=2368292.194628102' + HK + Gv + GT + A, 1, H + Qq + Li + ' +lon_0=68' + Fz + JX + JY + HK + Gv + GT + A, 1, H + UM + IQ + ' +lon_0=74' + Fz + JX + JY + HK + Gv + GT + A, 1, H + ' +lat_1=19 +lat_0=19 +lon_0=80' + Fz + JX + JY + HK + Gv + GT + A, 1, H + ' +lat_1=12 +lat_0=12 +lon_0=80' + Fz + JX + JY + HK + Gv + GT + A, 1, H + UM + IQ + Hq + Fz + ' +x_0=2743185.69 +y_0=914395.23' + By + Ay + JQ + E + A, 1, H + Qq + Li + ' +lon_0=68' + Fz + ' +x_0=2743196.4 +y_0=914398.8' + Lp + Hp + GQ + E + A, 1, H + UM + IQ + ' +lon_0=74' + Fz + ' +x_0=2743196.4 +y_0=914398.8' + Lp + Hp + GQ + E + A, 1, H + Qq + Li + ' +lon_0=68' + Fz + PX + Qa + Go + CT + BT + E + A, 1, H + UM + IQ + ' +lon_0=74' + Fz + PX + Qa + Go + CT + BT + E + A, 1, H + UM + IQ + Hq + Fz + PX + Qa + Go + CT + BT + E + A, 1, H + ' +lat_1=19 +lat_0=19 +lon_0=80' + Fz + PX + Qa + Go + CT + BT + E + A, 1, H + UM + IQ + Hq + Fz + JX + JY + HK + Gv + GT + A, 1, H + ' +lat_1=12 +lat_0=12 +lon_0=80' + Fz + PX + Qa + Go + CT + BT + E + A, 117, Ck + ' +lat_0=1.287646666666667 +lon_0=103.8530022222222' + Zl + ' +y_0=30000' + GL + Bz + BV + E + A, 47, I + Ny + GL + Bz + BV + E + A, 1, I + Mh + GL + Bz + BV + E + A, 52, H + Qq + Li + JS + PZ + AV + aG + c + Qh + E + A, 118, I + IC + R + Hc + E + A, 1, I + Hi + R + Hc + E + A, 1, I + Gz + R + Hc + E + A, 97, I + Ik + R + AX + E + A, 1, I + IC + R + AX + E + A, 1, I + Hi + R + AX + E + A, 1, I + Gz + R + AX + E + A, 1, I + ID + R + AX + E + A, 56, I + Ik + o + R + AX + E + A, 1, I + IC + o + R + AX + E + A, 1, I + Hi + o + R + AX + E + A, 1, I + Gz + o + R + AX + E + A, 1, I + ID + o + R + AX + E + A, 1, I + Io + o + R + AX + E + A, 9, D + ' +lat_0=-6 +lon_0=-80.5 +k=0.99983008 +x_0=222000 +y_0=1426834.743' + R + AX + E + A, 1, D + ' +lat_0=-9.5 +lon_0=-76 +k=0.99932994 +x_0=720000 +y_0=1039979.159' + R + AX + E + A, 1, D + ' +lat_0=-9.5' + IL + ' +k=0.99952992 +x_0=1324000 +y_0=1040084.558' + R + AX + E + A, 107, D + Vp + ' +lon_0=-1' + Rv + ' +x_0=274319.51' + N + c + TR + E + A, 231, I + QD + AU + BN + E + A, 160, D + L + Fm + CP + O + N + i + GC + E + A, 1, D + L + ZU + CP + O + N + i + GC + E + A, 1, D + L + ZV + CP + O + N + i + GC + E + A, 1, D + L + Fr + CP + O + N + i + GC + E + A, 1, D + L + Ru + CP + O + N + i + GC + E + A, 433, I + Ja + C + B + E + A, 1, I + KA + C + B + E + A, 1, I + Oq + C + B + E + A, 1, I + QD + C + B + E + A, 1, I + JN + C + B + E + A, 1, I + KC + C + B + E + A, 1, I + NR + C + B + E + A, 1, I + Ki + C + B + E + A, 1, I + Mf + C + B + E + A, 1, I + KD + C + B + E + A, 47, D + L + II + AP + O + N + C + B + E + A, 48, I + JN + o + R + Qd + E + A, 259, H + Sd + Se + Yk + Nk + O + Hk + AU + BN + IO + E + A, 1, H + ' +lat_1=29.7 +lat_0=29.7' + Yk + ' +k_0=0.9996155960000001' + O + Hk + AU + BN + IO + E + A, 2, H + ' +lat_1=26.1 +lat_0=26.1' + Yk + ' +k_0=0.999616304 +x_0=1200000' + Is + AU + BN + IO + E + A, 1, H + ' +lat_1=22.5 +lat_0=22.5' + Yk + ' +k_0=0.999616437' + AV + Is + AU + BN + IO + E + A, 42, I + KD + Y + Tc + E + A, 94, I + QD + c + GS + E + A, 1, I + JN + c + GS + E + A, 59, D + Qi + ' +lon_0=4.5' + Rv + ' +x_0=230738.26' + N + c + GS + E + A, 1, D + Qi + ' +lon_0=8.5' + Rv + ' +x_0=670553.98' + N + c + GS + E + A, 1, D + Qi + ' +lon_0=12.5' + Rv + ' +x_0=1110369.7' + N + c + GS + E + A, 239, I + JN + AU + BN + NO + E + A, 60, I + JN + o + AU + BN + NO + E + A, 9, I + SK + X + E + A, 1, I + TV + X + E + A, 1, I + Xz + X + E + A, 1, I + TY + X + E + A, 1, I + RG + X + E + A, 1, I + Ro + X + E + A, 1, I + RH + X + E + A, 1, I + TW + X + E + A, 1, I + TX + X + E + A, 1, I + QE + X + E + A, 1, I + Ns + X + E + A, 1, I + Nt + X + E + A, 1, I + Nu + X + E + A, 1, I + Nw + X + E + A, 1, I + NP + X + E + A, 1, I + NQ + X + E + A, 1, I + Ik + X + E + A, 1, I + IC + X + E + A, 1, I + Hi + X + E + A, 1, I + Gz + X + E + A, 1, I + ID + X + E + A, 1, I + Io + X + E + A, 7, D + IY + IV + Pc + e + N + X + J + A, 1, D + Gm + OS + BG + e + N + X + J + A, 1, CU + ' +lat_0=57' + Ku + Kv + V + ' +x_0=5000000.001016002 +y_0=-5000000.001016002' + KE + GZ + X + J + A, 1, D + Ft + YN + V + e + N + X + J + A, 1, D + Ft + YO + V + e + N + X + J + A, 1, D + Ft + ON + V + e + N + X + J + A, 1, D + Ft + Ms + V + e + N + X + J + A, 1, D + Ft + KI + V + e + N + X + J + A, 1, D + Ft + YP + V + ' +x_0=213360.4267208534' + N + X + J + A, 1, D + Ft + YQ + V + e + N + X + J + A, 1, D + Ft + SW + V + Px + N + X + J + A, 1, H + Kw + Kx + UK + YR + Bw + N + X + J + A, 1, H + DW + Jn + y + HA + Z + N + X + J + A, 1, H + DX + DY + AA + HA + Z + N + X + J + A, 1, H + Ap + DZ + Ml + AJ + Z + N + X + J + A, 1, H + LO + QS + Da + Mm + Z + N + X + J + A, 1, H + Db + Dc + Mn + Ir + Z + N + X + J + A, 1, H + Dd + De + Df + Iw + Z + N + X + J + A, 2, D + Bl + Cn + V + e + N + X + J + A, 1, D + Bl + Co + V + e + N + X + J + A, 1, D + Bl + Iv + BG + e + N + X + J + A, 1, H + Dx + Dy + BC + IF + Z + N + X + J + A, 1, H + Dz + Mq + EA + IF + Z + N + X + J + A, 1, H + ' +lat_1=39.71666666666667 +lat_2=40.78333333333333' + y + Ba + Z + N + X + J + A, 1, H + LP + LQ + CY + Ba + Z + N + X + J + A, 1, H + Ap + Dg + f + Ba + Z + N + X + J + A, 1, H + Dh + Mo + Di + Jq + Px + N + X + J + A, 1, D + Ch + Cp + Mp + e + N + X + J + A, 1, D + Aq + CR + Am + e + N + X + J + A, 1, D + Aq + Ob + Am + e + N + X + J + A, 1, H + LR + Dj + QT + LS + Z + N + X + J + A, 6, D + Gm + Cq + V + e + N + X + J + A, 1, D + Gm + Cr + V + e + N + X + J + A, 1, D + p + Cs + BJ + e + N + X + J + A, 1, D + p + Jb + BJ + e + N + X + J + A, 1, D + p + Ix + BG + e + N + X + J + A, 1, D + f + Cz + EQ + e + N + X + J + A, 1, D + f + DA + Am + e + N + X + J + A, 1, D + DM + DB + AO + e + N + X + J + A, 1, D + DM + DC + AO + e + N + X + J + A, 1, H + EB + EC + Fo + GG + Z + N + X + J + A, 1, H + AY + ED + Fs + GG + Z + N + X + J + A, 1, H + EE + EF + AQ + Fl + Z + N + X + J + A, 1, H + EG + EH + f + CV + Z + N + X + J + A, 1, H + Az + DV + DM + Jo + Z + N + X + J + A, 1, H + ' +lat_1=36.73333333333333 +lat_2=37.93333333333333' + AB + EY + Z + N + X + J + A, 1, H + ' +lat_1=31.16666666666667 +lat_2=32.66666666666666 +lat_0=30.66666666666667' + Hg + Z + N + X + J + A, 1, H + ' +lat_1=29.3 +lat_2=30.7 +lat_0=28.66666666666667' + Bi + Z + N + X + J + A, 1, D + AL + HJ + V + e + N + X + J + A, 1, D + BD + DD + AO + e + N + X + J + A, 1, H + ' +lat_1=38.3 +lat_2=39.45' + CY + Ld + ' +x_0=243840.4876809754' + N + X + J + A, 1, H + ' +lat_1=41.71666666666667 +lat_2=42.68333333333333' + Ip + GE + Px + N + X + J + A, 1, H + ' +lat_1=41.28333333333333 +lat_2=41.48333333333333' + Ip + IL + ' +x_0=60960.12192024384' + N + X + J + A, 4, H + ' +lat_1=47.03333333333333 +lat_2=48.63333333333333' + Iq + DE + Z + N + X + J + A, 1, H + ' +lat_1=45.61666666666667 +lat_2=47.05' + IP + Js + Z + N + X + J + A, 1, H + ' +lat_1=43.78333333333333 +lat_2=45.21666666666667' + Nj + Na + Z + N + X + J + A, 1, D + Cb + Ct + Pc + e + N + X + J + A, 1, D + IY + Bx + Am + e + N + X + J + A, 1, D + Cd + RS + BG + e + N + X + J + A, 1, D + Cd + Hg + BG + e + N + X + J + A, 1, D + Id + RT + Am + e + N + X + J + A, 1, H + ' +lat_1=34.41666666666666 +lat_2=33.86666666666667 +lat_0=34.13333333333333' + IW + ' +x_0=1276106.450596901 +y_0=1268253.006858014' + X + J + A, 48, D + AK + HJ + V + BF + N + C + B + J + A, 1, D + BD + DD + AO + HT + N + C + B + J + A, 1, H + FU + FV + Iq + DE + An + Ao + C + B + J + A, 1, H + Ma + FW + IP + Js + An + Ao + C + B + J + A, 1, H + FX + FY + Nj + Na + An + Ao + C + B + J + A, 1, H + JT + Jn + FZ + CS + AG + N + C + B + J + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + J + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + J + A, 1, D + AK + HJ + V + BF + N + C + B + J + A, 1, D + BD + DD + AO + HT + N + C + B + J + A, 1, H + FU + FV + Iq + DE + An + Ao + C + B + J + A, 1, H + Ma + FW + IP + Js + An + Ao + C + B + J + A, 1, H + FX + FY + Nj + Na + An + Ao + C + B + J + A, 1, H + JT + Jn + FZ + CS + AG + N + C + B + J + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + J + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + J + A, 1, D + AK + HJ + V + BF + N + C + B + J + A, 1, D + BD + DD + AO + HT + N + C + B + J + A, 1, H + FU + FV + Iq + DE + An + Ao + C + B + J + A, 1, H + Ma + FW + IP + Js + An + Ao + C + B + J + A, 1, H + FX + FY + Nj + Na + An + Ao + C + B + J + A, 1, H + JT + Jn + FZ + CS + AG + N + C + B + J + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + J + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + J + A, 21, D + L + ET + V + Ab + N + C + B + E + A, 1, D + L + CR + V + Ab + N + C + B + E + A, 1, D + L + NV + V + Ab + N + C + B + E + A, 1, D + L + Jh + V + Ab + N + C + B + E + A, 1, D + L + Bu + V + Ab + N + C + B + E + A, 1, D + L + Rs + V + Ab + N + C + B + E + A, 1, D + L + OZ + V + Ab + N + C + B + E + A, 1, D + L + ' +lon_0=-53' + V + Ab + N + C + B + E + A, 1, D + L + Zd + V + Ab + N + C + B + E + A, 2, I + SK + C + B + E + A, 1, I + TV + C + B + E + A, 1, I + Xz + C + B + E + A, 1, I + TY + C + B + E + A, 1, I + RG + C + B + E + A, 1, I + Ro + C + B + E + A, 1, I + RH + C + B + E + A, 1, I + TW + C + B + E + A, 1, I + TX + C + B + E + A, 1, I + QE + C + B + E + A, 1, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, I + ID + C + B + E + A, 1, I + Io + C + B + E + A, 1, I + MB + C + B + E + A, 6, D + IY + IV + Pc + h + N + C + B + E + A, 1, D + Gm + OS + BG + a + N + C + B + E + A, 1, CU + ' +lat_0=57' + Ku + Kv + V + LX + EO + KE + GZ + C + B + E + A, 1, D + Ft + YN + V + O + N + C + B + E + A, 1, D + Ft + YO + V + O + N + C + B + E + A, 1, D + Ft + ON + V + O + N + C + B + E + A, 1, D + Ft + Ms + V + O + N + C + B + E + A, 1, D + Ft + KI + V + O + N + C + B + E + A, 1, D + Ft + YP + V + O + N + C + B + E + A, 1, D + Ft + YQ + V + O + N + C + B + E + A, 1, D + Ft + SW + V + O + N + C + B + E + A, 1, H + Kw + Kx + UK + YR + BZ + N + C + B + E + A, 1, H + DW + Jn + y + HA + Bd + Ae + C + B + E + A, 1, H + DX + DY + AA + HA + Bd + Ae + C + B + E + A, 1, H + Ap + DZ + Ml + AJ + Bd + Ae + C + B + E + A, 1, H + LO + QS + Da + Mm + Bd + Ae + C + B + E + A, 1, H + Db + Dc + Mn + Ir + Bd + Ae + C + B + E + A, 1, H + Dd + De + Df + Iw + Bd + Ae + C + B + E + A, 2, D + Bl + Cn + V + EX + N + C + B + E + A, 1, D + Bl + Co + V + EX + N + C + B + E + A, 1, D + Bl + Iv + BG + EX + N + C + B + E + A, 1, H + Dx + Dy + BC + IF + u + N + C + B + E + A, 1, H + Dz + Mq + EA + IF + u + Is + C + B + E + A, 1, H + Eh + Ei + y + Ba + Fw + Fx + C + B + E + A, 1, H + LP + LQ + CY + Ba + Fw + Fx + C + B + E + A, 1, H + Ap + Dg + f + Ba + Fw + Fx + C + B + E + A, 1, H + Dh + Mo + Di + Jq + QG + QH + C + B + E + A, 1, D + Ch + Cp + Mp + h + N + C + B + E + A, 1, D + Aq + CR + Am + h + N + C + B + E + A, 1, D + Aq + Ob + Am + h + N + C + B + E + A, 1, H + LR + Dj + QT + LS + a + N + C + B + E + A, 1, D + Kn + Sf + AO + O + N + C + B + E + A, 1, D + Ko + KO + AO + O + N + C + B + E + A, 1, D + GV + KI + Jl + O + N + C + B + E + A, 1, D + Kp + Sg + Jl + O + N + C + B + E + A, 1, D + Kq + KP + ' +k=1' + O + N + C + B + E + A, 1, D + Gm + Cq + V + h + N + C + B + E + A, 1, D + Gm + Cr + V + EW + N + C + B + E + A, 1, D + p + Cs + BJ + h + N + C + B + E + A, 1, D + p + Jb + BJ + O + N + C + B + E + A, 1, D + p + Ix + BG + CX + N + C + B + E + A, 1, D + f + Cz + EQ + AI + N + C + B + E + A, 1, D + f + DA + Am + EW + N + C + B + E + A, 1, D + DM + DB + AO + BU + KJ + C + B + E + A, 1, D + DM + DC + AO + HT + KJ + C + B + E + A, 1, H + EB + EC + Fo + GG + AV + AH + C + B + E + A, 1, H + AY + ED + Fs + GG + O + N + C + B + E + A, 1, H + EE + EF + AQ + Fl + u + N + C + B + E + A, 1, H + EG + EH + f + CV + u + Is + C + B + E + A, 2, H + Ej + Ek + AB + EY + O + Ae + C + B + E + A, 1, H + FS + FT + IY + Hg + BZ + N + C + B + E + A, 1, H + OH + OI + OJ + Bi + BZ + N + C + B + E + A, 1, D + AK + HJ + V + AI + N + C + B + E + A, 1, D + BD + DD + AO + HT + N + C + B + E + A, 1, H + MU + Nz + AA + Ld + u + N + C + B + E + A, 1, H + El + Dk + Ip + GE + h + Mk + C + B + E + A, 1, H + Em + En + Ip + IL + O + N + C + B + E + A, 1, H + Eo + Ep + Eq + Jh + Tl + N + C + B + E + A, 1, H + OA + Er + Es + BE + Pk + N + C + B + E + A, 1, H + Bq + OB + Fo + BE + LU + N + C + B + E + A, 1, H + FU + FV + Iq + DE + CX + EK + C + B + E + A, 1, H + Ma + FW + IP + Js + CX + EK + C + B + E + A, 1, H + FX + FY + Nj + Na + CX + EK + C + B + E + A, 1, D + Hj + Ct + CP + AI + N + C + B + E + A, 1, D + Hj + Bx + CP + EW + N + C + B + E + A, 1, D + Cd + RS + BG + Bv + N + C + B + E + A, 1, D + Cd + Hg + BG + O + N + C + B + E + A, 1, D + Id + RT + Am + YC + N + C + B + E + A, 41, I + JM + c + DO + E + A, 1, I + Me + c + DO + E + A, 80, I + Gz + R + TS + E + A, 80, '+proj=nzmg +lat_0=-41 +lon_0=173 +x_0=2510000 +y_0=6023150' + R + W + E + A, 5, D + ' +lat_0=-36.87986527777778 +lon_0=174.7643393611111' + V + AI + DN + R + W + E + A, 1, D + ' +lat_0=-37.76124980555556 +lon_0=176.46619725 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-38.62470277777778 +lon_0=177.8856362777778 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-39.65092930555556 +lon_0=176.6736805277778 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-39.13575830555556 +lon_0=174.22801175 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-39.51247038888889 +lon_0=175.6400368055556 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-40.24194713888889 +lon_0=175.4880996111111 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-40.92553263888889 +lon_0=175.6473496666667 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-41.30131963888888 +lon_0=174.7766231111111 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-40.71475905555556 +lon_0=172.6720465 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-41.27454472222222 +lon_0=173.2993168055555 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-41.28991152777778 +lon_0=172.1090281944444 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-41.81080286111111 +lon_0=171.5812600555556 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-42.33369427777778 +lon_0=171.5497713055556 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-42.68911658333333 +lon_0=173.0101333888889 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-41.54448666666666 +lon_0=173.8020741111111 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-42.88632236111111 +lon_0=170.9799935 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-43.11012813888889 +lon_0=170.2609258333333 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-43.97780288888889 +lon_0=168.606267 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-43.59063758333333 +lon_0=172.7271935833333 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-43.74871155555556 +lon_0=171.3607484722222 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-44.40222036111111 +lon_0=171.0572508333333 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-44.73526797222222 +lon_0=169.4677550833333 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-45.13290258333333 +lon_0=168.3986411944444 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-45.56372616666666 +lon_0=167.7388617777778 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-45.81619661111111 +lon_0=170.6285951666667 +k=1' + AI + DN + R + W + E + A, 1, D + ' +lat_0=-45.86151336111111 +lon_0=170.2825891111111' + Pc + AI + DN + R + W + E + A, 1, D + ' +lat_0=-46.60000961111111 +lon_0=168.342872 +k=1 +x_0=300002.66 +y_0=699999.58' + R + W + E + A, 26, I + MA + o + R + W + E + A, 1, I + Nq + o + R + W + E + A, 1, I + PL + o + R + W + E + A, 31, D + ' +lat_0=-39 +lon_0=175.5 +k=1 +x_0=274319.5243848086 +y_0=365759.3658464114' + R + W + TU + A, 1, D + Za + ' +lon_0=171.5 +k=1 +x_0=457199.2073080143 +y_0=457199.2073080143' + R + W + TU + A, 99, D + Fk + ' +lon_0=-4.666666666666667 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + ' +lon_0=-2.333333333333333 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + HN + ' +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + ' +lon_0=2.5 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + Vr + ' +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + ' +lon_0=10.16666666666667 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + ' +lon_0=14.16666666666667 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 1, D + Fk + ' +lon_0=18.33333333333333 +k=1' + s + N + Hn + EL + Aa + SN + E + A, 31, I + KA + R + JL + E + A, 64, D + BY + UZ + ' +k=1 +x_0=180.598 +y_0=-86.98999999999999' + R + JL + E + A, 7, H + PD + PE + ' +lon_0=5.399999999999999 +k_0=0.99950908' + O + Hk + ' +a=6376523' + RA + ZM + E + A, 61, H + PD + PE + HN + ' +k_0=0.999877341' + a + IK + AU + BN + Bk + Lv + E + A, 1, H + ' +lat_1=46.8 +lat_0=46.8' + HN + ' +k_0=0.99987742' + a + IK + AU + BN + Bk + Lv + E + A, 1, H + Xt + Xu + HN + ' +k_0=0.999877499' + a + IK + AU + BN + Bk + Lv + E + A, 1, H + Xv + Xw + HN + ' +k_0=0.99994471 +x_0=234.358 +y_0=185861.369' + AU + BN + Bk + Lv + E + A, 7, H + PD + PE + HN + ' +k_0=0.999877341' + a + Tj + AU + BN + Bk + Lv + E + A, 1, H + ' +lat_1=46.8 +lat_0=46.8' + HN + ' +k_0=0.99987742' + a + ' +y_0=2200000' + AU + BN + Bk + Lv + E + A, 1, H + Xt + Xu + HN + ' +k_0=0.999877499' + a + ' +y_0=3200000' + AU + BN + Bk + Lv + E + A, 1, H + Xv + Xw + HN + ' +k_0=0.99994471 +x_0=234.358 +y_0=4185861.369' + AU + BN + Bk + Lv + E + A, 126, D + ' +lat_0=49 +lon_0=-2 +k=0.9996012717' + u + ' +y_0=-100000' + PV + Lx + E + A, 491, Ck + LH + LI + Qx + ' +y_0=126867.909' + Nc + Nd + DS + E + A, 1, D + LH + LI + ' +k=1' + Qx + ' +y_0=1126867.909' + Nc + Nd + DS + E + A, 1, Ck + LH + LI + Qx + ' +y_0=1126867.909' + Nc + Nd + DS + E + A, 39, I + JN + o + AU + BN + TH + E + A, 116, I + Mh + o + C + B + E + A, 1, I + Mi + o + C + B + E + A, 1, I + NS + o + C + B + E + A, 1, I + Mg + o + C + B + E + A, 1, I + NT + o + C + B + E + A, 1, I + Ot + o + C + B + E + A, 1, I + Nv + o + C + B + E + A, 1, I + PM + o + C + B + E + A, 1, I + Re + o + C + B + E + A, 1, I + SM + o + C + B + E + A, 1, I + MA + o + C + B + E + A, 46, D + L + Gl + ' +k=1' + DP + N + M + F + E + A, 1, D + L + HO + ' +k=1' + Eg + N + M + F + E + A, 1, D + L + IG + ' +k=1' + Jt + N + M + F + E + A, 1, D + L + LN + ' +k=1' + IM + N + M + F + E + A, 1, D + L + JS + ' +k=1' + MS + N + M + F + E + A, 1, D + L + PS + ' +k=1' + MT + N + M + F + E + A, 1, D + L + RL + ' +k=1' + LY + N + M + F + E + A, 1, D + L + QW + ' +k=1' + Jp + N + M + F + E + A, 1, D + L + RM + ' +k=1' + LZ + N + M + F + E + A, 1, D + L + HP + ' +k=1' + HU + N + M + F + E + A, 1, D + L + HQ + ' +k=1' + Gw + N + M + F + E + A, 1, D + L + Hd + ' +k=1' + Hu + N + M + F + E + A, 1, D + L + HR + ' +k=1' + Hv + N + M + F + E + A, 1, D + L + HS + ' +k=1' + It + N + M + F + E + A, 1, D + L + EN + ' +k=1' + Hs + N + M + F + E + A, 1, D + L + Fy + ' +k=1' + Ht + N + M + F + E + A, 1, D + L + Fm + ' +k=1' + HV + N + M + F + E + A, 1, D + L + Fr + ' +k=1' + Hw + N + M + F + E + A, 1, D + L + Ed + ' +k=1' + HW + N + M + F + E + A, 1, D + L + Fn + ' +k=1' + Hx + N + M + F + E + A, 1, D + L + Pf + ' +k=1' + La + N + M + F + E + A, 1, D + L + Od + ' +k=1' + Hy + N + M + F + E + A, 1, D + L + NY + ' +k=1' + Hz + N + M + F + E + A, 1, D + L + Pg + ' +k=1' + IA + N + M + F + E + A, 1, D + L + NZ + ' +k=1' + IB + N + M + F + E + A, 1, D + L + Lf + ' +k=1' + Gx + N + M + F + E + A, 1, D + L + KG + ' +k=1' + IT + N + M + F + E + A, 1, D + L + KH + ' +k=1' + Gc + N + M + F + E + A, 1, D + L + Lh + ' +k=1' + IU + N + M + F + E + A, 168, D + ' +lat_0=24.45' + Vv + Jl + h + Hk + R + QO + E + A, 391, GU + Xx + Yo + ' +k=0.9999079' + s + N + Y + Fv + E + A, 1, GU + Xx + Yo + ' +k=0.9999079 +x_0=155000 +y_0=463000' + Y + Fv + E + A, 109, UU + L + Nb + LX + Ak + x + Al + E + A, 67, I + IC + x + Al + E + A, 1, I + Hi + x + Al + E + A, 1, I + Gz + x + Al + E + A, 1, I + ID + x + Al + E + A, 1, I + Io + x + Al + E + A, 15, I + Ik + o + x + Al + E + A, 1, I + IC + o + x + Al + E + A, 1, I + Hi + o + x + Al + E + A, 1, I + Gz + o + x + Al + E + A, 1, I + ID + o + x + Al + E + A, 1, I + Io + o + x + Al + E + A, 1, I + MB + o + x + Al + E + A, 1, I + Nx + o + x + Al + E + A, 1, I + Nr + o + x + Al + E + A, 25, I + Gz + o + R + Nn + E + A, 1, I + ID + o + R + Nn + E + A, 112, I + KC + o + HB + Bt + E + A, 38, D + Pi + ' +lon_0=11 +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + ' +lon_0=13 +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + Gj + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + UE + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + RI + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + Gl + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + SP + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 2, D + Pi + RJ + ' +k=1' + s + N + Gk + HB + Bt + GK + A, 317, CU + ' +lat_0=-18.9 +lonc=44.10000000000001 +alpha=18.9' + EP + u + CO + ' +gamma=18.9' + R + HD + Lv + E + A, 36, I + JZ + o + R + HD + E + A, 1, I + JM + o + R + HD + E + A, 110, I + Mi + Lo + GD + E + A, 1, I + NS + Lo + GD + E + A, 21, CU + Qi + Yz + PF + Ph + ' +x_0=590476.8714630401 +y_0=442857.653094361' + If + Lo + GD + ' +to_meter=20.11676512155263' + A, 1, CU + Qi + Yz + PF + Ph + ' +x_0=590476.8727431979 +y_0=442857.6545573985' + If + Lo + GD + ' +to_meter=0.3047994715386762' + A, 1, CU + Qi + Yz + PF + Ph + ' +x_0=590476.87 +y_0=442857.65' + If + Lo + GD + E + A, 28, D + YA + ' +lon_0=-8 +k=1' + h + KJ + PV + Bb + E + A, 1, D + YA + ' +lon_0=-8 +k=1.000035' + h + KJ + Ok + Bb + E + A, 1, D + YA + ' +lon_0=-8 +k=1.000035' + h + KJ + Ok + Bb + E + A, 258, D + PT + Zz + V + s + N + Y + g + E + A, 1, D + PT + NX + V + s + N + Y + g + E + A, 1, D + GM + Ox + V + s + N + Y + g + E + A, 1, D + PT + Tk + V + s + N + Y + g + E + A, 1, D + GM + Oy + V + s + N + Y + g + E + A, 1, D + GM + Rw + V + s + N + Y + g + E + A, 1, D + GM + Oz + V + s + N + Y + g + E + A, 1, D + GM + aA + V + s + N + Y + g + E + A, 1, D + GM + PA + V + s + N + Y + g + E + A, 1, D + Fs + PB + V + s + N + Y + g + E + A, 1, D + IZ + ZH + V + s + N + Y + g + E + A, 1, D + IZ + ZI + V + s + N + Y + g + E + A, 1, D + IZ + ZJ + V + s + N + Y + g + E + A, 1, D + IQ + ' +lon_0=142' + V + s + N + Y + g + E + A, 1, D + IQ + Pj + V + s + N + Y + g + E + A, 1, D + IQ + ' +lon_0=124' + V + s + N + Y + g + E + A, 1, D + IQ + NX + V + s + N + Y + g + E + A, 1, D + ' +lat_0=20' + Rw + V + s + N + Y + g + E + A, 1, D + IQ + ZR + V + s + N + Y + g + E + A, 21, Ck + Vs + UX + ' +x_0=86501.46392051999' + aS + Ee + Ef + JK + Vo + A, 139, I + JM + Gn + E + A, 1, I + Me + Gn + E + A, 151, H + ' +lat_1=36' + GM + SC + QL + O + Hk + AU + BN + JC + E + A, 1, H + Sd + Se + SC + Nk + O + Hk + AU + BN + JC + E + A, 1, H + ' +lat_1=36' + GM + SC + QL + O + Hk + AU + BN + E + A, 1, H + Sd + Se + SC + Nk + O + Hk + AU + BN + E + A, 235, I + KA + c + Af + E + A, 1, I + Oq + c + Af + E + A, 1, I + QD + c + Af + E + A, 1, I + JN + c + Af + E + A, 59, H + ' +lat_1=36' + GM + SC + QL + ' +x_0=500135 +y_0=300090' + c + Af + E + A, 1, H + Sd + Se + SC + Nk + ' +x_0=500135 +y_0=300090' + c + Af + E + A, 236, I + Ja + AU + BN + E + A, 93, I + ID + R + HE + E + A, 33, D + L + Nb + AP + O + N + R + HE + E + A, 16, D + L + Vn + AP + O + N + R + HE + E + A, 1, D + L + Vn + V + O + N + R + HE + E + A, 80, D + L + RP + ' +k=1' + s + EO + Y + Aw + Ls + E + A, 1, D + L + QQ + ' +k=1' + s + EO + Y + Aw + Ls + E + A, 1, D + L + ZG + ' +k=1' + s + EO + Y + Aw + Ls + E + A, 1, D + L + PG + ' +k=1' + s + EO + Y + z + E + A, 1, D + L + Ig + ' +k=1' + s + EO + Y + z + E + A, 1, D + L + PH + ' +k=1' + s + EO + Y + z + E + A, 1, D + L + PG + ' +k=1' + Bn + EO + Y + z + E + A, 1, D + L + Ig + ' +k=1 +x_0=450000' + EO + Y + z + E + A, 1, D + L + PH + ' +k=1' + YL + EO + Y + z + E + A, 22, D + L + RP + ' +k=1' + s + N + Y + Aw + Ls + E + A, 1, D + L + QQ + ' +k=1' + s + N + Y + Aw + Ls + E + A, 1, D + L + ZG + ' +k=1' + s + N + Y + Aw + Ls + E + A, 1, D + L + PG + ' +k=1' + Bn + N + Y + z + E + A, 1, D + L + Ig + ' +k=1 +x_0=450000' + N + Y + z + E + A, 1, D + L + PH + ' +k=1' + YL + N + Y + z + E + A, 1, H + LM + Nh + ' +lat_0=47.5' + Ig + u + Is + Y + z + E + A, 1, D + L + RP + ' +k=1' + Bn + N + Y + Aw + Ls + E + A, 1, D + L + QQ + ' +k=1 +x_0=450000' + N + Y + Aw + Ls + E + A, 1, D + L + ZG + ' +k=1' + YL + N + Y + Aw + Ls + E + A, 10, H + Ks + Kt + Hr + ' +lon_0=4.356939722222222 +x_0=150000.01256 +y_0=5400088.4378' + R + GP + E + A, 70, H + ' +lat_1=51.16666723333333 +lat_2=49.8333339' + Hr + ' +lon_0=4.367486666666666 +x_0=150000.013 +y_0=5400088.438' + R + GP + E + A, 96, D + L + ZO + ' +k=1' + Ci + N + Y + AC + E + A, 1, D + L + KB + ' +k=1' + Bo + N + Y + AC + E + A, 1, D + L + IH + ' +k=1' + DP + N + Y + AC + E + A, 1, D + L + Gj + ' +k=1' + Eg + N + Y + AC + E + A, 59, I + Ja + AU + BN + No + E + A, 1, I + KA + AU + BN + No + E + A, 71, GU + ' +lat_0=45.9 +lon_0=25.39246588888889 +k=0.9996667' + O + Ae + R + QP + E + A, 238, I + JZ + j + MR + E + A, 1, I + JM + j + MR + E + A, 62, D + L + SQ + ' +k=1' + O + N + C + Rr + E + A, 64, I + Ns + C + B + E + A, 1, I + Nt + C + B + E + A, 1, I + Nu + C + B + E + A, 1, I + Nw + C + B + E + A, 1, I + NP + C + B + E + A, 1, I + NQ + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, I + ID + C + B + E + A, 1, I + Io + C + B + E + A, 1, I + Ik + o + C + B + E + A, 1, I + IC + o + C + B + E + A, 1, I + Hi + o + C + B + E + A, 1, I + Gz + o + C + B + E + A, 1, I + ID + o + C + B + E + A, 1, I + Io + o + C + B + E + A, 1, I + MB + o + C + B + E + A, 1, I + Nx + o + C + B + E + A, 1, I + Nr + o + C + B + E + A, 1, I + Ik + C + B + E + A, 1, I + IC + C + B + E + A, 1, I + Hi + C + B + E + A, 1, I + Gz + C + B + E + A, 1, I + ID + C + B + E + A, 1, I + Io + C + B + E + A, 1, I + Ik + o + C + B + E + A, 1, I + IC + o + C + B + E + A, 1, I + Hi + o + C + B + E + A, 1, I + Gz + o + C + B + E + A, 1, I + ID + o + C + B + E + A, 1, I + Io + o + C + B + E + A, 1, I + MB + o + C + B + E + A, 1, I + Nx + o + C + B + E + A, 1, I + Nr + o + C + B + E + A, 1, H + ' +lat_1=48.71666666666667 +lat_2=47.85' + Ib + IS + Z + N + X + J + A, 1, H + ' +lat_1=47.88333333333333 +lat_2=46.45 +lat_0=45.83333333333334' + IS + Z + N + X + J + A, 1, H + ' +lat_1=46.4 +lat_2=44.86666666666667' + IZ + IS + Z + N + X + J + A, 2, H + ' +lat_1=41.85 +lat_2=42.81666666666667 +lat_0=41.33333333333334' + CS + Z + N + X + J + A, 1, H + ' +lat_1=40.28333333333333' + Dk + BY + ' +lon_0=-99.5' + Z + N + X + J + A, 1, D + CQ + DF + V + e + N + X + J + A, 1, D + CQ + DG + V + e + N + X + J + A, 1, D + CQ + DH + V + e + N + X + J + A, 1, D + Fp + DI + AO + e + N + X + J + A, 1, D + BA + ' +lon_0=-74.66666666666667' + EQ + Z + N + X + J + A, 1, D + Bl + Cu + Hm + e + N + X + J + A, 1, D + Bl + Iy + V + e + N + X + J + A, 1, D + Bl + Cv + Iz + e + N + X + J + A, 1, D + Fs + ' +lon_0=-74.33333333333333' + AO + e + N + X + J + A, 1, D + Fs + Cw + Ad + e + N + X + J + A, 1, D + Fs + Cx + Ad + e + N + X + J + A, 2, H + ' +lat_1=34.33333333333334 +lat_2=36.16666666666666' + LT + NW + Z + N + X + J + A, 1, H + ' +lat_1=47.43333333333333' + Xy + Ib + EZ + Z + N + X + J + A, 1, H + ' +lat_1=46.18333333333333 +lat_2=47.48333333333333' + Be + EZ + Z + N + X + J + A, 1, H + ' +lat_1=40.43333333333333 +lat_2=41.7' + BY + ET + Z + N + X + J + A, 1, H + ' +lat_1=38.73333333333333 +lat_2=40.03333333333333' + Ch + ET + Z + N + X + J + A, 1, H + ' +lat_1=35.56666666666667' + Du + QU + Fl + Z + N + X + J + A, 1, H + ' +lat_1=33.93333333333333 +lat_2=35.23333333333333' + Do + Fl + Z + N + X + J + A, 1, H + ' +lat_1=44.33333333333334' + Nh + AK + AJ + Z + N + X + J + A, 1, H + ' +lat_1=42.33333333333334 +lat_2=44' + p + AJ + Z + N + X + J + A, 1, H + ' +lat_1=40.88333333333333 +lat_2=41.95' + BB + Ea + Z + N + X + J + A, 2, D + EI + GE + ' +k=0.9999938' + e + N + X + J + A, 1, H + ' +lat_1=33.76666666666667 +lat_2=34.96666666666667' + PT + CR + Z + N + X + J + A, 2, H + ' +lat_1=32.33333333333334 +lat_2=33.66666666666666' + Dr + CR + Z + N + X + J + A, 1, H + ' +lat_1=44.41666666666666 +lat_2=45.68333333333333' + AL + CS + Z + N + X + J + A, 1, H + ' +lat_1=42.83333333333334 +lat_2=44.4' + EJ + Ag + Z + N + X + J + A, 2, H + aL + ' +lat_2=36.18333333333333' + QV + Jr + Z + N + X + J + A, 1, H + ' +lat_1=32.13333333333333 +lat_2=33.96666666666667' + Ds + ' +lon_0=-97.5' + Z + N + X + J + A, 1, H + ' +lat_1=30.11666666666667 +lat_2=31.88333333333333' + Cb + Ag + Z + N + X + J + A, 1, H + ' +lat_1=28.38333333333333 +lat_2=30.28333333333333' + Dt + Ji + Z + N + X + J + A, 1, H + ' +lat_1=26.16666666666667 +lat_2=27.83333333333333' + Cc + CV + Z + N + X + J + A, 1, H + ' +lat_1=40.71666666666667 +lat_2=41.78333333333333' + Br + BI + Z + N + X + J + A, 1, H + ' +lat_1=39.01666666666667 +lat_2=40.65' + AQ + BI + Z + N + X + J + A, 1, H + ' +lat_1=37.21666666666667 +lat_2=38.35' + f + BI + Z + N + X + J + A, 1, D + Fp + LW + JA + e + N + X + J + A, 1, H + ' +lat_1=38.03333333333333 +lat_2=39.2' + AA + GF + Z + N + X + J + A, 1, H + Dn + ' +lat_2=37.96666666666667' + AB + GF + Z + N + X + J + A, 1, H + ' +lat_1=47.5' + Xy + Ib + Cy + Z + N + X + J + A, 1, H + ' +lat_1=45.83333333333334 +lat_2=47.33333333333334' + Dv + AJ + Z + N + X + J + A, 1, H + ' +lat_1=39 +lat_2=40.25' + Mr + Ga + Z + N + X + J + A, 1, H + ' +lat_1=37.48333333333333 +lat_2=38.88333333333333' + QX + CR + Z + N + X + J + A, 1, H + ' +lat_1=45.56666666666667 +lat_2=46.76666666666667' + Dw + Bu + Z + N + X + J + A, 1, H + ' +lat_1=44.25' + Hl + AL + Bu + Z + N + X + J + A, 1, H + ' +lat_1=42.73333333333333 +lat_2=44.06666666666667' + PR + Bu + Z + N + X + J + A, 1, D + LL + DJ + Am + e + N + X + J + A, 1, D + LL + DK + Am + e + N + X + J + A, 1, D + LL + JB + Am + e + N + X + J + A, 1, D + LL + DL + Am + e + N + X + J + A, 6, D + L + Ji + AP + k + N + X + J + A, 1, D + L + Rs + AP + k + N + X + J + A, 1, D + L + Jh + AP + k + N + X + J + A, 1, D + L + CR + AP + k + N + X + J + A, 14, D + L + ' +lon_0=-53' + V + Ab + N + X + E + A, 1, D + L + Zd + V + Ab + N + X + E + A, 1, D + L + Tf + V + Ab + N + X + E + A, 1, D + L + RQ + V + Ab + N + X + E + A, 1, D + L + RR + V + Ab + N + X + E + A, 1, D + L + Tg + V + Ab + N + X + E + A, 12, H + UF + Nh + IZ + HJ + s + N + X + E + A, 1, H + CD + CE + Cc + Bi + Z + N + X + J + A, 1, H + LM + RK + MV + IS + a + N + C + B + E + A, 4, H + JT + Jn + FZ + CS + O + N + C + B + E + A, 3, D + CQ + DF + V + h + Tm + C + B + E + A, 1, D + CQ + DG + V + O + Hh + C + B + E + A, 1, D + CQ + DH + V + CX + LV + C + B + E + A, 1, D + Fp + DI + AO + AI + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + Bl + Cu + Hm + OC + N + C + B + E + A, 1, D + Bl + Iy + V + O + N + C + B + E + A, 1, D + Bl + Cv + Iz + YD + N + C + B + E + A, 1, D + BA + Gp + V + Bn + N + C + B + E + A, 1, D + Fs + Cw + Ad + Bv + N + C + B + E + A, 1, D + Fs + Cx + Ad + Qo + N + C + B + E + A, 1, H + Dl + Dm + BB + Oc + AI + N + C + B + E + A, 1, H + Et + Eu + LT + NW + Rh + N + C + B + E + A, 1, H + BH + Ev + Ib + EZ + a + N + C + B + E + A, 1, H + Ew + Ex + Be + EZ + a + N + C + B + E + A, 1, H + OK + Fa + BY + ET + a + N + C + B + E + A, 1, H + Fb + Fc + Ch + ET + a + N + C + B + E + A, 1, H + Dn + Ey + QU + Fl + a + N + C + B + E + A, 1, H + Ez + FA + Do + Fl + a + N + C + B + E + A, 1, H + PP + CZ + AK + AJ + Ci + N + C + B + E + A, 1, H + PQ + Ca + p + AJ + AV + N + C + B + E + A, 1, H + MW + FB + BB + Ea + a + N + C + B + E + A, 1, H + Dp + Dq + y + Ea + a + N + C + B + E + A, 1, D + EI + GE + Lb + BU + N + C + B + E + A, 3, H + FC + OD + Dr + CR + OE + N + C + B + E + A, 1, H + Fd + Fe + AL + CS + a + N + C + B + E + A, 1, H + OL + Ff + EJ + Ag + a + N + C + B + E + A, 1, H + FD + MX + BC + MQ + a + N + C + B + E + A, 1, H + FE + MY + QV + Jr + h + AH + C + B + E + A, 1, H + FF + FG + Ds + CV + a + Cl + C + B + E + A, 1, H + FH + FI + Cb + Ag + EW + Fq + C + B + E + A, 1, H + FJ + FK + Dt + Ji + a + LV + C + B + E + A, 1, H + CD + CE + Cc + CV + AI + Ju + C + B + E + A, 1, H + AY + CF + Br + BI + O + AH + C + B + E + A, 1, H + JF + CG + AQ + BI + O + Cl + C + B + E + A, 1, H + JG + CH + f + BI + O + Fq + C + B + E + A, 1, D + Fp + LW + JA + O + N + C + B + E + A, 1, H + OF + FL + AA + GF + Bo + Cl + C + B + E + A, 1, H + Az + Du + AB + GF + Bo + AH + C + B + E + A, 1, H + BH + OG + Ib + Cy + O + N + C + B + E + A, 1, H + FM + FN + Dv + AJ + O + N + C + B + E + A, 1, H + Mb + RN + Mr + Ga + a + N + C + B + E + A, 1, H + Fg + Fh + QX + CR + a + N + C + B + E + A, 1, H + FO + FP + Dw + Bu + a + N + C + B + E + A, 1, H + Jc + MZ + AL + Bu + a + N + C + B + E + A, 1, H + FQ + FR + PR + Bu + a + N + C + B + E + A, 1, D + CA + DJ + Ad + h + N + C + B + E + A, 1, D + CA + DK + Ad + u + EK + C + B + E + A, 1, D + CA + JB + Ad + a + N + C + B + E + A, 1, D + CA + DL + Ad + CX + EK + C + B + E + A, 3, H + GW + GX + GY + GA + h + IK + C + B + E + A, 3, D + L + Ji + AP + k + N + C + B + J + A, 1, D + L + Rs + AP + k + N + C + B + J + A, 1, D + L + Jh + AP + k + N + C + B + J + A, 1, D + L + CR + AP + k + N + C + B + J + A, 14, D + L + ' +lon_0=-53' + V + Ab + N + C + B + E + A, 1, D + L + Zd + V + Ab + N + C + B + E + A, 1, D + L + Tf + V + Ab + N + C + B + E + A, 1, D + L + RQ + V + Ab + N + C + B + E + A, 1, D + L + RR + V + Ab + N + C + B + E + A, 1, D + L + Tg + V + Ab + N + C + B + E + A, 1, D + L + IL + V + Ab + N + C + B + E + A, 1, D + L + Th + V + Ab + N + C + B + E + A, 1, D + L + Ti + V + Ab + N + C + B + E + A, 1, D + L + Ga + V + Ab + N + C + B + E + A, 1, D + L + ET + V + Ab + N + C + B + E + A, 1, D + L + CR + V + Ab + N + C + B + E + A, 1, D + L + NV + V + Ab + N + C + B + E + A, 1, D + L + Jh + V + Ab + N + C + B + E + A, 1, D + L + Bu + V + Ab + N + C + B + E + A, 1, D + L + Rs + V + Ab + N + C + B + E + A, 1, D + L + OZ + V + Ab + N + C + B + E + A, 1, H + UF + Nh + IZ + HJ + s + N + C + B + E + A, 1, H + CD + CE + ' +lat_0=25.5' + Bi + BZ + N + C + B + E + A, 2, I + SK + T + P + E + A, 1, I + TV + T + P + E + A, 1, I + Xz + T + P + E + A, 1, I + TY + T + P + E + A, 1, I + RG + T + P + E + A, 1, I + Ro + T + P + E + A, 1, I + RH + T + P + E + A, 1, I + TW + T + P + E + A, 1, I + TX + T + P + E + A, 1, I + QE + T + P + E + A, 1, I + Ns + T + P + E + A, 1, I + Nt + T + P + E + A, 1, I + Nu + T + P + E + A, 1, I + Nw + T + P + E + A, 1, I + NP + T + P + E + A, 1, I + NQ + T + P + E + A, 1, I + Ik + T + P + E + A, 1, I + IC + T + P + E + A, 1, I + Hi + T + P + E + A, 1, I + Gz + T + P + E + A, 1, I + ID + T + P + E + A, 1, I + Io + T + P + E + A, 1, I + MB + T + P + E + A, 1, I + Nx + T + P + E + A, 1, I + Nr + T + P + E + A, 1, I + Os + T + P + E + A, 1, I + SL + T + P + E + A, 1, I + Ja + T + P + E + A, 1, I + KA + T + P + E + A, 1, I + Oq + T + P + E + A, 1, I + QD + T + P + E + A, 1, I + JN + T + P + E + A, 1, I + KC + T + P + E + A, 1, I + NR + T + P + E + A, 1, I + Ki + T + P + E + A, 1, I + Mf + T + P + E + A, 1, I + KD + T + P + E + A, 1, I + JZ + T + P + E + A, 1, I + JM + T + P + E + A, 1, I + Me + T + P + E + A, 1, I + Rb + T + P + E + A, 1, I + Rc + T + P + E + A, 1, I + SO + T + P + E + A, 1, I + Td + T + P + E + A, 1, I + Te + T + P + E + A, 1, I + QF + T + P + E + A, 1, I + Ny + T + P + E + A, 1, I + Mh + T + P + E + A, 1, I + Mi + T + P + E + A, 1, I + NS + T + P + E + A, 1, I + Mg + T + P + E + A, 1, I + NT + T + P + E + A, 1, I + Ot + T + P + E + A, 1, I + Nv + T + P + E + A, 1, I + PM + T + P + E + A, 1, I + Re + T + P + E + A, 1, I + SM + T + P + E + A, 1, I + MA + T + P + E + A, 1, I + Nq + T + P + E + A, 1, I + PL + T + P + E + A, 41, I + SK + o + T + P + E + A, 1, I + TV + o + T + P + E + A, 1, I + Xz + o + T + P + E + A, 1, I + TY + o + T + P + E + A, 1, I + RG + o + T + P + E + A, 1, I + Ro + o + T + P + E + A, 1, I + RH + o + T + P + E + A, 1, I + TW + o + T + P + E + A, 1, I + TX + o + T + P + E + A, 1, I + QE + o + T + P + E + A, 1, I + Ns + o + T + P + E + A, 1, I + Nt + o + T + P + E + A, 1, I + Nu + o + T + P + E + A, 1, I + Nw + o + T + P + E + A, 1, I + NP + o + T + P + E + A, 1, I + NQ + o + T + P + E + A, 1, I + Ik + o + T + P + E + A, 1, I + IC + o + T + P + E + A, 1, I + Hi + o + T + P + E + A, 1, I + Gz + o + T + P + E + A, 1, I + ID + o + T + P + E + A, 1, I + Io + o + T + P + E + A, 1, I + MB + o + T + P + E + A, 1, I + Nx + o + T + P + E + A, 1, I + Nr + o + T + P + E + A, 1, I + Os + o + T + P + E + A, 1, I + SL + o + T + P + E + A, 1, I + Ja + o + T + P + E + A, 1, I + KA + o + T + P + E + A, 1, I + Oq + o + T + P + E + A, 1, I + QD + o + T + P + E + A, 1, I + JN + o + T + P + E + A, 1, I + KC + o + T + P + E + A, 1, I + NR + o + T + P + E + A, 1, I + Ki + o + T + P + E + A, 1, I + Mf + o + T + P + E + A, 1, I + KD + o + T + P + E + A, 1, I + JZ + o + T + P + E + A, 1, I + JM + o + T + P + E + A, 1, I + Me + o + T + P + E + A, 1, I + Rb + o + T + P + E + A, 1, I + Rc + o + T + P + E + A, 1, I + SO + o + T + P + E + A, 1, I + Td + o + T + P + E + A, 1, I + Te + o + T + P + E + A, 1, I + QF + o + T + P + E + A, 1, I + Ny + o + T + P + E + A, 1, I + Mh + o + T + P + E + A, 1, I + Mi + o + T + P + E + A, 1, I + NS + o + T + P + E + A, 1, I + Mg + o + T + P + E + A, 1, I + NT + o + T + P + E + A, 1, I + Ot + o + T + P + E + A, 1, I + Nv + o + T + P + E + A, 1, I + PM + o + T + P + E + A, 1, I + Re + o + T + P + E + A, 1, I + SM + o + T + P + E + A, 1, I + MA + o + T + P + E + A, 1, I + Nq + o + T + P + E + A, 1, I + PL + o + T + P + E + A, 41, I + SK + T + Q + E + A, 1, I + TV + T + Q + E + A, 1, I + Xz + T + Q + E + A, 1, I + TY + T + Q + E + A, 1, I + RG + T + Q + E + A, 1, I + Ro + T + Q + E + A, 1, I + RH + T + Q + E + A, 1, I + TW + T + Q + E + A, 1, I + TX + T + Q + E + A, 1, I + QE + T + Q + E + A, 1, I + Ns + T + Q + E + A, 1, I + Nt + T + Q + E + A, 1, I + Nu + T + Q + E + A, 1, I + Nw + T + Q + E + A, 1, I + NP + T + Q + E + A, 1, I + NQ + T + Q + E + A, 1, I + Ik + T + Q + E + A, 1, I + IC + T + Q + E + A, 1, I + Hi + T + Q + E + A, 1, I + Gz + T + Q + E + A, 1, I + ID + T + Q + E + A, 1, I + Io + T + Q + E + A, 1, I + MB + T + Q + E + A, 1, I + Nx + T + Q + E + A, 1, I + Nr + T + Q + E + A, 1, I + Os + T + Q + E + A, 1, I + SL + T + Q + E + A, 1, I + Ja + T + Q + E + A, 1, I + KA + T + Q + E + A, 1, I + Oq + T + Q + E + A, 1, I + QD + T + Q + E + A, 1, I + JN + T + Q + E + A, 1, I + KC + T + Q + E + A, 1, I + NR + T + Q + E + A, 1, I + Ki + T + Q + E + A, 1, I + Mf + T + Q + E + A, 1, I + KD + T + Q + E + A, 1, I + JZ + T + Q + E + A, 1, I + JM + T + Q + E + A, 1, I + Me + T + Q + E + A, 1, I + Rb + T + Q + E + A, 1, I + Rc + T + Q + E + A, 1, I + SO + T + Q + E + A, 1, I + Td + T + Q + E + A, 1, I + Te + T + Q + E + A, 1, I + QF + T + Q + E + A, 1, I + Ny + T + Q + E + A, 1, I + Mh + T + Q + E + A, 1, I + Mi + T + Q + E + A, 1, I + NS + T + Q + E + A, 1, I + Mg + T + Q + E + A, 1, I + NT + T + Q + E + A, 1, I + Ot + T + Q + E + A, 1, I + Nv + T + Q + E + A, 1, I + PM + T + Q + E + A, 1, I + Re + T + Q + E + A, 1, I + SM + T + Q + E + A, 1, I + MA + T + Q + E + A, 1, I + Nq + T + Q + E + A, 1, I + PL + T + Q + E + A, 41, I + SK + o + T + Q + E + A, 1, I + TV + o + T + Q + E + A, 1, I + Xz + o + T + Q + E + A, 1, I + TY + o + T + Q + E + A, 1, I + RG + o + T + Q + E + A, 1, I + Ro + o + T + Q + E + A, 1, I + RH + o + T + Q + E + A, 1, I + TW + o + T + Q + E + A, 1, I + TX + o + T + Q + E + A, 1, I + QE + o + T + Q + E + A, 1, I + Ns + o + T + Q + E + A, 1, I + Nt + o + T + Q + E + A, 1, I + Nu + o + T + Q + E + A, 1, I + Nw + o + T + Q + E + A, 1, I + NP + o + T + Q + E + A, 1, I + NQ + o + T + Q + E + A, 1, I + Ik + o + T + Q + E + A, 1, I + IC + o + T + Q + E + A, 1, I + Hi + o + T + Q + E + A, 1, I + Gz + o + T + Q + E + A, 1, I + ID + o + T + Q + E + A, 1, I + Io + o + T + Q + E + A, 1, I + MB + o + T + Q + E + A, 1, I + Nx + o + T + Q + E + A, 1, I + Nr + o + T + Q + E + A, 1, I + Os + o + T + Q + E + A, 1, I + SL + o + T + Q + E + A, 1, I + Ja + o + T + Q + E + A, 1, I + KA + o + T + Q + E + A, 1, I + Oq + o + T + Q + E + A, 1, I + QD + o + T + Q + E + A, 1, I + JN + o + T + Q + E + A, 1, I + KC + o + T + Q + E + A, 1, I + NR + o + T + Q + E + A, 1, I + Ki + o + T + Q + E + A, 1, I + Mf + o + T + Q + E + A, 1, I + KD + o + T + Q + E + A, 1, I + JZ + o + T + Q + E + A, 1, I + JM + o + T + Q + E + A, 1, I + Me + o + T + Q + E + A, 1, I + Rb + o + T + Q + E + A, 1, I + Rc + o + T + Q + E + A, 1, I + SO + o + T + Q + E + A, 1, I + Td + o + T + Q + E + A, 1, I + Te + o + T + Q + E + A, 1, I + QF + o + T + Q + E + A, 1, I + Ny + o + T + Q + E + A, 1, I + Mh + o + T + Q + E + A, 1, I + Mi + o + T + Q + E + A, 1, I + NS + o + T + Q + E + A, 1, I + Mg + o + T + Q + E + A, 1, I + NT + o + T + Q + E + A, 1, I + Ot + o + T + Q + E + A, 1, I + Nv + o + T + Q + E + A, 1, I + PM + o + T + Q + E + A, 1, I + Re + o + T + Q + E + A, 1, I + SM + o + T + Q + E + A, 1, I + MA + o + T + Q + E + A, 1, I + Nq + o + T + Q + E + A, 1, I + PL + o + T + Q + E + A, 41, I + SK + S + E + A, 1, I + TV + S + E + A, 1, I + Xz + S + E + A, 1, I + TY + S + E + A, 1, I + RG + S + E + A, 1, I + Ro + S + E + A, 1, I + RH + S + E + A, 1, I + TW + S + E + A, 1, I + TX + S + E + A, 1, I + QE + S + E + A, 1, I + Ns + S + E + A, 1, I + Nt + S + E + A, 1, I + Nu + S + E + A, 1, I + Nw + S + E + A, 1, I + NP + S + E + A, 1, I + NQ + S + E + A, 1, I + Ik + S + E + A, 1, I + IC + S + E + A, 1, I + Hi + S + E + A, 1, I + Gz + S + E + A, 1, I + ID + S + E + A, 1, I + Io + S + E + A, 1, I + MB + S + E + A, 1, I + Nx + S + E + A, 1, I + Nr + S + E + A, 1, I + Os + S + E + A, 1, I + SL + S + E + A, 1, I + Ja + S + E + A, 1, I + KA + S + E + A, 1, I + Oq + S + E + A, 1, I + QD + S + E + A, 1, I + JN + S + E + A, 1, I + KC + S + E + A, 1, I + NR + S + E + A, 1, I + Ki + S + E + A, 1, I + Mf + S + E + A, 1, I + KD + S + E + A, 1, I + JZ + S + E + A, 1, I + JM + S + E + A, 1, I + Me + S + E + A, 1, I + Rb + S + E + A, 1, I + Rc + S + E + A, 1, I + SO + S + E + A, 1, I + Td + S + E + A, 1, I + Te + S + E + A, 1, I + QF + S + E + A, 1, I + Ny + S + E + A, 1, I + Mh + S + E + A, 1, I + Mi + S + E + A, 1, I + NS + S + E + A, 1, I + Mg + S + E + A, 1, I + NT + S + E + A, 1, I + Ot + S + E + A, 1, I + Nv + S + E + A, 1, I + PM + S + E + A, 1, I + Re + S + E + A, 1, I + SM + S + E + A, 1, I + MA + S + E + A, 1, I + Nq + S + E + A, 1, I + PL + S + E + A, 1, BP + Hr + Qm + HN + Rd + Bd + Cl + S + E + A, 3, D + L + Ji + AP + k + N + S + J + A, 1, D + L + Rs + AP + k + N + S + J + A, 1, D + L + Jh + AP + k + N + S + J + A, 1, D + L + CR + AP + k + N + S + J + A, 34, I + SK + o + S + E + A, 1, I + TV + o + S + E + A, 1, I + Xz + o + S + E + A, 1, I + TY + o + S + E + A, 1, I + RG + o + S + E + A, 1, I + Ro + o + S + E + A, 1, I + RH + o + S + E + A, 1, I + TW + o + S + E + A, 1, I + TX + o + S + E + A, 1, I + QE + o + S + E + A, 1, I + Ns + o + S + E + A, 1, I + Nt + o + S + E + A, 1, I + Nu + o + S + E + A, 1, I + Nw + o + S + E + A, 1, I + NP + o + S + E + A, 1, I + NQ + o + S + E + A, 1, I + Ik + o + S + E + A, 1, I + IC + o + S + E + A, 1, I + Hi + o + S + E + A, 1, I + Gz + o + S + E + A, 1, I + ID + o + S + E + A, 1, I + Io + o + S + E + A, 1, I + MB + o + S + E + A, 1, I + Nx + o + S + E + A, 1, I + Nr + o + S + E + A, 1, I + Os + o + S + E + A, 1, I + SL + o + S + E + A, 1, I + Ja + o + S + E + A, 1, I + KA + o + S + E + A, 1, I + Oq + o + S + E + A, 1, I + QD + o + S + E + A, 1, I + JN + o + S + E + A, 1, I + KC + o + S + E + A, 1, I + NR + o + S + E + A, 1, I + Ki + o + S + E + A, 1, I + Mf + o + S + E + A, 1, I + KD + o + S + E + A, 1, I + JZ + o + S + E + A, 1, I + JM + o + S + E + A, 1, I + Me + o + S + E + A, 1, I + Rb + o + S + E + A, 1, I + Rc + o + S + E + A, 1, I + SO + o + S + E + A, 1, I + Td + o + S + E + A, 1, I + Te + o + S + E + A, 1, I + QF + o + S + E + A, 1, I + Ny + o + S + E + A, 1, I + Mh + o + S + E + A, 1, I + Mi + o + S + E + A, 1, I + NS + o + S + E + A, 1, I + Mg + o + S + E + A, 1, I + NT + o + S + E + A, 1, I + Ot + o + S + E + A, 1, I + Nv + o + S + E + A, 1, I + PM + o + S + E + A, 1, I + Re + o + S + E + A, 1, I + SM + o + S + E + A, 1, I + MA + o + S + E + A, 1, I + Nq + o + S + E + A, 1, I + PL + o + S + E + A, 1, BP + m + ' +lat_ts=-90' + HN + Rd + Bd + Cl + S + E + A, 5, D + L + PN + AP + O + Ak + S + E + A].reduce((acc, it, i) => {\n  if (i % 2 === 0) {\n    // v is the addition in EPSG code\n    const cur = acc.prev + it;\n    const code = \"EPSG:\" + cur;\n    acc.defs.push([code]);\n    acc.prev = cur;\n  } else {\n    // v is the proj4 text\n    acc.defs[acc.defs.length - 1].push(it);\n  }\n\n  return acc;\n}, {\n  defs: [],\n  prev: 0\n}).defs;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/proj4js-definitions/proj4js-definitions.js\n");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function (obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"); // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  define(Gp, toStringTagSymbol, \"Generator\"); // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  define(Gp, iteratorSymbol, function () {\n    return this;\n  });\n  define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function (skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function () {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function (exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function (type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function (record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function (finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function (tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\n true ? module.exports : 0);\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/regenerator-runtime/runtime.js\n");

/***/ }),

/***/ "./node_modules/reproject-bbox/reproject-bbox.js":
/*!*******************************************************!*\
  !*** ./node_modules/reproject-bbox/reproject-bbox.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const merge = __webpack_require__(/*! proj4-merge */ \"./node_modules/proj4-merge/proj4-merge.js\");\n\nconst proj4 = __webpack_require__(/*! proj4-fully-loaded */ \"./node_modules/proj4-fully-loaded/proj4-fully-loaded.js\");\n\nmodule.exports = ({\n  bbox,\n  from,\n  proj4: _proj4,\n  to\n}) => {\n  if (typeof from === \"number\") from = \"EPSG:\" + from;\n  if (typeof to === \"number\") to = \"EPSG:\" + to;\n  const instances = [_proj4, proj4];\n  if (typeof window === \"object\" && window.proj4) instances.push(window.proj4);\n  if (typeof self === \"object\" && self.proj4) instances.push(self.proj4);\n  const proj = merge(instances);\n  const fwd = proj(from, to).forward;\n  const [xmin, ymin, xmax, ymax] = bbox;\n  const topleft = fwd([xmin, ymax]);\n  const topright = fwd([xmax, ymax]);\n  const bottomleft = fwd([xmin, ymin]);\n  const bottomright = fwd([xmax, ymin]);\n  const corners = [topleft, topright, bottomleft, bottomright];\n  const xs = corners.map(corner => corner[0]);\n  const ys = corners.map(corner => corner[1]);\n  return [Math.min(...xs), Math.min(...ys), Math.max(...xs), Math.max(...ys)];\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVwcm9qZWN0LWJib3gvcmVwcm9qZWN0LWJib3guanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3JlcHJvamVjdC1iYm94L3JlcHJvamVjdC1iYm94LmpzPzIzOTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWVyZ2UgPSByZXF1aXJlKFwicHJvajQtbWVyZ2VcIik7XG5jb25zdCBwcm9qNCA9IHJlcXVpcmUoXCJwcm9qNC1mdWxseS1sb2FkZWRcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gKHsgYmJveCwgZnJvbSwgcHJvajQ6IF9wcm9qNCwgdG8gfSkgPT4ge1xuICBpZiAodHlwZW9mIGZyb20gPT09IFwibnVtYmVyXCIpIGZyb20gPSBcIkVQU0c6XCIgKyBmcm9tO1xuICBpZiAodHlwZW9mIHRvID09PSBcIm51bWJlclwiKSB0byA9IFwiRVBTRzpcIiArIHRvO1xuXG4gIGNvbnN0IGluc3RhbmNlcyA9IFtfcHJvajQsIHByb2o0XTtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIgJiYgd2luZG93LnByb2o0KSBpbnN0YW5jZXMucHVzaCh3aW5kb3cucHJvajQpO1xuICBpZiAodHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgJiYgc2VsZi5wcm9qNCkgaW5zdGFuY2VzLnB1c2goc2VsZi5wcm9qNCk7XG5cbiAgY29uc3QgcHJvaiA9IG1lcmdlKGluc3RhbmNlcyk7XG5cbiAgY29uc3QgZndkID0gcHJvaihmcm9tLCB0bykuZm9yd2FyZDtcbiAgY29uc3QgW3htaW4sIHltaW4sIHhtYXgsIHltYXhdID0gYmJveDtcblxuICBjb25zdCB0b3BsZWZ0ID0gZndkKFt4bWluLCB5bWF4XSk7XG4gIGNvbnN0IHRvcHJpZ2h0ID0gZndkKFt4bWF4LCB5bWF4XSk7XG4gIGNvbnN0IGJvdHRvbWxlZnQgPSBmd2QoW3htaW4sIHltaW5dKTtcbiAgY29uc3QgYm90dG9tcmlnaHQgPSBmd2QoW3htYXgsIHltaW5dKTtcblxuICBjb25zdCBjb3JuZXJzID0gW3RvcGxlZnQsIHRvcHJpZ2h0LCBib3R0b21sZWZ0LCBib3R0b21yaWdodF07XG5cbiAgY29uc3QgeHMgPSBjb3JuZXJzLm1hcCgoY29ybmVyKSA9PiBjb3JuZXJbMF0pO1xuICBjb25zdCB5cyA9IGNvcm5lcnMubWFwKChjb3JuZXIpID0+IGNvcm5lclsxXSk7XG5cbiAgcmV0dXJuIFtNYXRoLm1pbiguLi54cyksIE1hdGgubWluKC4uLnlzKSwgTWF0aC5tYXgoLi4ueHMpLCBNYXRoLm1heCguLi55cyldO1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reproject-bbox/reproject-bbox.js\n");

/***/ }),

/***/ "./node_modules/reproject-geojson/pluggable.js":
/*!*****************************************************!*\
  !*** ./node_modules/reproject-geojson/pluggable.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;const clone = data => JSON.parse(JSON.stringify(data));\n\nfunction reprojectGeoJSONPluggable(data, {\n  in_place = false,\n  reproject\n}) {\n  if (typeof reproject !== \"function\") {\n    throw new Error(`[reproject-geojson] you must specify a reproject function`);\n  }\n\n  if (in_place !== true) data = clone(data);\n\n  if (data.type === \"FeatureCollection\") {\n    data.features = data.features.map(feature => reprojectGeoJSONPluggable(feature, {\n      in_place,\n      reproject\n    }));\n  } else if (data.type === \"Feature\") {\n    data.geometry = reprojectGeoJSONPluggable(data.geometry, {\n      in_place,\n      reproject\n    });\n  } else if (data.type === \"LineString\") {\n    data.coordinates = data.coordinates.map(coord => reproject(coord));\n  } else if (data.type === \"MultiLineString\") {\n    data.coordinates = data.coordinates.map(line => line.map(coord => reproject(coord)));\n  } else if (data.type === \"MultiPoint\") {\n    data.coordinates = data.coordinates.map(point => reproject(point));\n  } else if (data.type === \"MultiPolygon\") {\n    data.coordinates = data.coordinates.map(polygon => {\n      return polygon.map(ring => ring.map(coord => reproject(coord)));\n    });\n  } else if (data.type === \"Point\") {\n    data.coordinates = reproject(data.coordinates);\n  } else if (data.type === \"Polygon\") {\n    data.coordinates = data.coordinates.map(ring => ring.map(coord => reproject(coord)));\n  }\n\n  return data;\n}\n\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return reprojectGeoJSONPluggable;\n}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\nif (true) module.exports = reprojectGeoJSONPluggable;\nif (typeof window === \"object\") window.reprojectGeoJSONPluggable = reprojectGeoJSONPluggable;\nif (typeof self === \"object\") self.reprojectGeoJSONPluggable = reprojectGeoJSONPluggable;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVwcm9qZWN0LWdlb2pzb24vcGx1Z2dhYmxlLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy9yZXByb2plY3QtZ2VvanNvbi9wbHVnZ2FibGUuanM/Y2EyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjbG9uZSA9IGRhdGEgPT4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhKSk7XG5cbmZ1bmN0aW9uIHJlcHJvamVjdEdlb0pTT05QbHVnZ2FibGUoZGF0YSwgeyBpbl9wbGFjZSA9IGZhbHNlLCByZXByb2plY3QgfSkge1xuICBpZiAodHlwZW9mIHJlcHJvamVjdCAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBbcmVwcm9qZWN0LWdlb2pzb25dIHlvdSBtdXN0IHNwZWNpZnkgYSByZXByb2plY3QgZnVuY3Rpb25gKTtcbiAgfVxuICBpZiAoaW5fcGxhY2UgIT09IHRydWUpIGRhdGEgPSBjbG9uZShkYXRhKTtcblxuICBpZiAoZGF0YS50eXBlID09PSBcIkZlYXR1cmVDb2xsZWN0aW9uXCIpIHtcbiAgICBkYXRhLmZlYXR1cmVzID0gZGF0YS5mZWF0dXJlcy5tYXAoZmVhdHVyZSA9PiByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlKGZlYXR1cmUsIHsgaW5fcGxhY2UsIHJlcHJvamVjdCB9KSk7XG4gIH0gZWxzZSBpZiAoZGF0YS50eXBlID09PSBcIkZlYXR1cmVcIikge1xuICAgIGRhdGEuZ2VvbWV0cnkgPSByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlKGRhdGEuZ2VvbWV0cnksIHsgaW5fcGxhY2UsIHJlcHJvamVjdCB9KTtcbiAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09IFwiTGluZVN0cmluZ1wiKSB7XG4gICAgZGF0YS5jb29yZGluYXRlcyA9IGRhdGEuY29vcmRpbmF0ZXMubWFwKGNvb3JkID0+IHJlcHJvamVjdChjb29yZCkpO1xuICB9IGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gXCJNdWx0aUxpbmVTdHJpbmdcIikge1xuICAgIGRhdGEuY29vcmRpbmF0ZXMgPSBkYXRhLmNvb3JkaW5hdGVzLm1hcChsaW5lID0+IGxpbmUubWFwKGNvb3JkID0+IHJlcHJvamVjdChjb29yZCkpKTtcbiAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09IFwiTXVsdGlQb2ludFwiKSB7XG4gICAgZGF0YS5jb29yZGluYXRlcyA9IGRhdGEuY29vcmRpbmF0ZXMubWFwKHBvaW50ID0+IHJlcHJvamVjdChwb2ludCkpO1xuICB9IGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gXCJNdWx0aVBvbHlnb25cIikge1xuICAgIGRhdGEuY29vcmRpbmF0ZXMgPSBkYXRhLmNvb3JkaW5hdGVzLm1hcChwb2x5Z29uID0+IHtcbiAgICAgIHJldHVybiBwb2x5Z29uLm1hcChyaW5nID0+IHJpbmcubWFwKGNvb3JkID0+IHJlcHJvamVjdChjb29yZCkpKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmIChkYXRhLnR5cGUgPT09IFwiUG9pbnRcIikge1xuICAgIGRhdGEuY29vcmRpbmF0ZXMgPSByZXByb2plY3QoZGF0YS5jb29yZGluYXRlcyk7XG4gIH0gZWxzZSBpZiAoZGF0YS50eXBlID09PSBcIlBvbHlnb25cIikge1xuICAgIGRhdGEuY29vcmRpbmF0ZXMgPSBkYXRhLmNvb3JkaW5hdGVzLm1hcChyaW5nID0+IHJpbmcubWFwKGNvb3JkID0+IHJlcHJvamVjdChjb29yZCkpKTtcbiAgfVxuICByZXR1cm4gZGF0YTtcbn1cblxuaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKVxuICBkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlO1xuICB9KTtcbmlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiKSBtb2R1bGUuZXhwb3J0cyA9IHJlcHJvamVjdEdlb0pTT05QbHVnZ2FibGU7XG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgd2luZG93LnJlcHJvamVjdEdlb0pTT05QbHVnZ2FibGUgPSByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlO1xuaWYgKHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiKSBzZWxmLnJlcHJvamVjdEdlb0pTT05QbHVnZ2FibGUgPSByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/reproject-geojson/pluggable.js\n");

/***/ }),

/***/ "./node_modules/reproject-geojson/reproject-geojson.js":
/*!*************************************************************!*\
  !*** ./node_modules/reproject-geojson/reproject-geojson.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;const proj4 = __webpack_require__(/*! proj4-fully-loaded */ \"./node_modules/proj4-fully-loaded/proj4-fully-loaded.js\");\n\nconst reprojectGeoJSONPluggable = __webpack_require__(/*! ./pluggable.js */ \"./node_modules/reproject-geojson/pluggable.js\");\n\nfunction reprojectGeoJSON(data, {\n  from: _from = \"EPSG:4326\",\n  in_place = false,\n  to: _to = \"EPSG:4326\"\n}) {\n  if (typeof _from === \"number\" || _from.match(/^\\d+$/)) _from = \"EPSG:\" + _from;\n  if (typeof _to === \"number\" || _to.match(/^\\d+$/)) _to = \"EPSG:\" + _to;\n  return reprojectGeoJSONPluggable(data, {\n    in_place,\n    reproject: proj4(_from, _to).forward\n  });\n}\n\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return reprojectGeoJSON;\n}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\nif (true) module.exports = reprojectGeoJSON;\nif (typeof window === \"object\") window.reprojectGeoJSON = reprojectGeoJSON;\nif (typeof self === \"object\") self.reprojectGeoJSON = reprojectGeoJSON;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVwcm9qZWN0LWdlb2pzb24vcmVwcm9qZWN0LWdlb2pzb24uanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBOztBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvcmVwcm9qZWN0LWdlb2pzb24vcmVwcm9qZWN0LWdlb2pzb24uanM/YTM0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwcm9qNCA9IHJlcXVpcmUoXCJwcm9qNC1mdWxseS1sb2FkZWRcIik7XG5jb25zdCByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlID0gcmVxdWlyZShcIi4vcGx1Z2dhYmxlLmpzXCIpO1xuXG5mdW5jdGlvbiByZXByb2plY3RHZW9KU09OKGRhdGEsIHsgZnJvbTogX2Zyb20gPSBcIkVQU0c6NDMyNlwiLCBpbl9wbGFjZSA9IGZhbHNlLCB0bzogX3RvID0gXCJFUFNHOjQzMjZcIiB9KSB7XG4gIGlmICh0eXBlb2YgX2Zyb20gPT09IFwibnVtYmVyXCIgfHwgX2Zyb20ubWF0Y2goL15cXGQrJC8pKSBfZnJvbSA9IFwiRVBTRzpcIiArIF9mcm9tO1xuICBpZiAodHlwZW9mIF90byA9PT0gXCJudW1iZXJcIiB8fCBfdG8ubWF0Y2goL15cXGQrJC8pKSBfdG8gPSBcIkVQU0c6XCIgKyBfdG87XG4gIHJldHVybiByZXByb2plY3RHZW9KU09OUGx1Z2dhYmxlKGRhdGEsIHtcbiAgICBpbl9wbGFjZSxcbiAgICByZXByb2plY3Q6IHByb2o0KF9mcm9tLCBfdG8pLmZvcndhcmRcbiAgfSk7XG59XG5cbmlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZClcbiAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gcmVwcm9qZWN0R2VvSlNPTjtcbiAgfSk7XG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIikgbW9kdWxlLmV4cG9ydHMgPSByZXByb2plY3RHZW9KU09OO1xuaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIHdpbmRvdy5yZXByb2plY3RHZW9KU09OID0gcmVwcm9qZWN0R2VvSlNPTjtcbmlmICh0eXBlb2Ygc2VsZiA9PT0gXCJvYmplY3RcIikgc2VsZi5yZXByb2plY3RHZW9KU09OID0gcmVwcm9qZWN0R2VvSlNPTjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/reproject-geojson/reproject-geojson.js\n");

/***/ }),

/***/ "./node_modules/segflip/segflip.js":
/*!*****************************************!*\
  !*** ./node_modules/segflip/segflip.js ***!
  \*****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;// [ [0, 11], [58, 59] ],\n// [ [-1, 12], [57, 60] ] // subtract one from start and add one to end\n// [ 0, -1, 12, 57, 60, 255 ] // flatten\n// [ [0, -1], [12, 57], [60, 255] ] // pair\n// [ [12, 57], [60, 255] ] // discard bad like [0, -1]\nfunction segflip({\n  segments: segs,\n  min = -Infinity,\n  max = Infinity,\n  debug = false\n}) {\n  if (debug) console.log(\"[segflip] segs:\", segs);\n\n  if (segs === undefined || segs === null || Array.isArray(segs) && segs.length === 0) {\n    if (debug) console.log(\"[segflip] segments are empty so return the whole row flipped\");\n    return [[min, max]];\n  }\n\n  const nums = segs.map(([start, end]) => [start - 1, end + 1]).flat();\n  nums.unshift(min);\n  nums.push(max);\n  if (debug) console.log(\"flattened nums:\", nums);\n  const results = [];\n\n  for (let i = 1; i < nums.length; i += 2) {\n    const start = nums[i - 1];\n    const end = nums[i];\n    if (start > end) continue; // e.g. [0, -1]\n\n    results.push([start, end]);\n  }\n\n  return results;\n}\n\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n  return segflip;\n}).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\nif (true) module.exports = segflip;\nif (typeof window === \"object\") window.segflip = segflip;\nif (typeof self === \"object\") self.segflip = segflip;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VnZmxpcC9zZWdmbGlwLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0dlb1Jhc3RlckxheWVyLy4vbm9kZV9tb2R1bGVzL3NlZ2ZsaXAvc2VnZmxpcC5qcz9hZmM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFsgWzAsIDExXSwgWzU4LCA1OV0gXSxcbi8vIFsgWy0xLCAxMl0sIFs1NywgNjBdIF0gLy8gc3VidHJhY3Qgb25lIGZyb20gc3RhcnQgYW5kIGFkZCBvbmUgdG8gZW5kXG4vLyBbIDAsIC0xLCAxMiwgNTcsIDYwLCAyNTUgXSAvLyBmbGF0dGVuXG4vLyBbIFswLCAtMV0sIFsxMiwgNTddLCBbNjAsIDI1NV0gXSAvLyBwYWlyXG4vLyBbIFsxMiwgNTddLCBbNjAsIDI1NV0gXSAvLyBkaXNjYXJkIGJhZCBsaWtlIFswLCAtMV1cblxuZnVuY3Rpb24gc2VnZmxpcCh7IHNlZ21lbnRzOiBzZWdzLCBtaW4gPSAtSW5maW5pdHksIG1heCA9IEluZmluaXR5LCBkZWJ1ZyA9IGZhbHNlIH0pIHtcbiAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhcIltzZWdmbGlwXSBzZWdzOlwiLCBzZWdzKTtcbiAgaWYgKHNlZ3MgPT09IHVuZGVmaW5lZCB8fCBzZWdzID09PSBudWxsIHx8IChBcnJheS5pc0FycmF5KHNlZ3MpICYmIHNlZ3MubGVuZ3RoID09PSAwKSkge1xuICAgIGlmIChkZWJ1ZykgY29uc29sZS5sb2coXCJbc2VnZmxpcF0gc2VnbWVudHMgYXJlIGVtcHR5IHNvIHJldHVybiB0aGUgd2hvbGUgcm93IGZsaXBwZWRcIik7XG4gICAgcmV0dXJuIFtbbWluLCBtYXhdXTtcbiAgfVxuXG4gIGNvbnN0IG51bXMgPSBzZWdzLm1hcCgoW3N0YXJ0LCBlbmRdKSA9PiBbc3RhcnQgLSAxLCBlbmQgKyAxXSkuZmxhdCgpO1xuICBudW1zLnVuc2hpZnQobWluKTtcbiAgbnVtcy5wdXNoKG1heCk7XG5cbiAgaWYgKGRlYnVnKSBjb25zb2xlLmxvZyhcImZsYXR0ZW5lZCBudW1zOlwiLCBudW1zKTtcblxuICBjb25zdCByZXN1bHRzID0gW107XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgbnVtcy5sZW5ndGg7IGkgKz0gMikge1xuICAgIGNvbnN0IHN0YXJ0ID0gbnVtc1tpIC0gMV07XG4gICAgY29uc3QgZW5kID0gbnVtc1tpXTtcbiAgICBpZiAoc3RhcnQgPiBlbmQpIGNvbnRpbnVlOyAvLyBlLmcuIFswLCAtMV1cbiAgICByZXN1bHRzLnB1c2goW3N0YXJ0LCBlbmRdKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0cztcbn1cblxuaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKVxuICBkZWZpbmUoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBzZWdmbGlwO1xuICB9KTtcbmlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiKSBtb2R1bGUuZXhwb3J0cyA9IHNlZ2ZsaXA7XG5pZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgd2luZG93LnNlZ2ZsaXAgPSBzZWdmbGlwO1xuaWYgKHR5cGVvZiBzZWxmID09PSBcIm9iamVjdFwiKSBzZWxmLnNlZ2ZsaXAgPSBzZWdmbGlwO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/segflip/segflip.js\n");

/***/ }),

/***/ "./node_modules/snap-bbox/snap-bbox.js":
/*!*********************************************!*\
  !*** ./node_modules/snap-bbox/snap-bbox.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = ({\n  bbox,\n  container,\n  debug,\n  origin,\n  padding,\n  scale\n}) => {\n  if (debug) console.log(\"[snap-bbox] starting\");\n  if (debug) console.log(\"[snap-bbox] bbox:\", bbox);\n  if (debug) console.log(\"[snap-bbox] debug:\", debug);\n  if (debug) console.log(\"[snap-bbox] origin:\", origin);\n  if (debug) console.log(\"[snap-bbox] padding:\", padding);\n  if (debug) console.log(\"[snap-bbox] scale:\", scale);\n  const [originX, originY] = origin;\n  if (debug) console.log(\"[snap-bbox] originX:\", originX);\n  if (debug) console.log(\"[snap-bbox] originY:\", originY);\n  const [padX, padY] = padding || [0, 0];\n  if (debug) console.log(\"[snap-bbox] padX:\", padX);\n  if (debug) console.log(\"[snap-bbox] padY:\", padY);\n  const [scale_x, scale_y] = scale;\n  if (debug) console.log(\"[snap-bbox] scale_x:\", scale_x);\n  if (debug) console.log(\"[snap-bbox] scale_y:\", scale_y); // if sign is -1 then x/y value decreases\n  // as grid cell number increases\n\n  const sign_scale_x = Math.sign(scale_x);\n  const sign_scale_y = Math.sign(scale_y);\n  if (debug) console.log(\"[snap-bbox] sign_scale_x:\", sign_scale_x);\n  if (debug) console.log(\"[snap-bbox] sign_scale_y:\", sign_scale_y);\n  const [xmin, ymin, xmax, ymax] = bbox;\n  if (debug) console.log(\"[snap-bbox] xmin:\", xmin);\n  if (debug) console.log(\"[snap-bbox] ymin:\", ymin);\n  if (debug) console.log(\"[snap-bbox] xmax:\", xmax);\n  if (debug) console.log(\"[snap-bbox] ymax:\", ymax);\n  const left = (xmin - originX) / scale_x;\n  const right = (xmax - originX) / scale_x;\n  const top = (ymax - originY) / scale_y;\n  const bottom = (ymin - originY) / scale_y;\n  if (debug) console.log(\"[snap-bbox] left:\", left);\n  if (debug) console.log(\"[snap-bbox] right:\", right);\n  if (debug) console.log(\"[snap-bbox] top:\", top);\n  if (debug) console.log(\"[snap-bbox] bottom:\", bottom); // we're rounding here, so we don't ask for half a pixel\n\n  let left_int = Math.floor(left) - padX;\n  let right_int = Math.ceil(right) + padX; // top_int is the number of pixels from the top edge of the grid\n  // so we want to subtract the padding\n\n  let top_int = Math.floor(top) - padY; // bottom_int is the number of pixels from the top edge of the edge\n  // so we want to increase the padding\n\n  let bottom_int = Math.ceil(bottom) + padY;\n  if (debug) console.log(\"[snap-bbox] left_int:\", left_int);\n  if (debug) console.log(\"[snap-bbox] right_int:\", right_int);\n  if (debug) console.log(\"[snap-bbox] top_int:\", top_int);\n  if (debug) console.log(\"[snap-bbox] bottom_int:\", bottom_int);\n\n  if (container) {\n    if (debug) console.log(\"[snap-bbox] container:\", container);\n    const min_left = (container[0] - originX) / scale_x;\n    const max_right = (container[2] - originX) / scale_x;\n    const min_top = (container[3] - originY) / scale_y;\n    const max_bottom = (container[1] - originY) / scale_y;\n    if (debug) console.log(\"[snap-bbox] min_left:\", min_left);\n    if (debug) console.log(\"[snap-bbox] max_right:\", max_right);\n    if (debug) console.log(\"[snap-bbox] min_top:\", min_top);\n    if (debug) console.log(\"[snap-bbox] max_bottom:\", max_bottom);\n    const min_left_int = Math.ceil(min_left);\n    const max_right_int = Math.floor(max_right);\n    const min_top_int = Math.ceil(min_top);\n    const max_bottom_int = Math.floor(max_bottom);\n    if (debug) console.log(\"[snap-bbox] min_left_int:\", min_left_int);\n    if (debug) console.log(\"[snap-bbox] max_right_int:\", max_right_int);\n    if (debug) console.log(\"[snap-bbox] min_top_int:\", min_top_int);\n    if (debug) console.log(\"[snap-bbox] max_bottom_int:\", max_bottom_int);\n    left_int = Math.max(left_int, min_left_int);\n    right_int = Math.min(right_int, max_right_int);\n    top_int = Math.max(top_int, min_top_int);\n    bottom_int = Math.min(bottom_int, max_bottom_int);\n    if (debug) console.log(\"[snap-bbox] after containment, left_int:\", left_int);\n    if (debug) console.log(\"[snap-bbox] after containment, right_int:\", right_int);\n    if (debug) console.log(\"[snap-bbox] after containment, top_int:\", top_int);\n    if (debug) console.log(\"[snap-bbox] after containment, bottom_int:\", bottom_int);\n  } // need ternary expresssions below because\n  // top_int is sometimes -0, which fails\n  // some NodeJS strict equality tests with 0\n  // however, 0 === -0 evaluates to true in NodeJS\n\n\n  const bbox_in_grid_cells = [left_int === 0 ? 0 : left_int, bottom_int === 0 ? 0 : bottom_int, right_int === 0 ? 0 : right_int, top_int === 0 ? 0 : top_int];\n  if (debug) console.log(\"[snap-bbox] bbox_in_grid_cells:\", bbox_in_grid_cells);\n  const bbox_in_coordinate_system = [originX + left_int * scale_x, // xmin\n  originY + bottom_int * scale_y, // ymin\n  originX + right_int * scale_x, // xmax\n  originY + top_int * scale_y // ymax\n  ];\n  return {\n    bbox_in_coordinate_system,\n    bbox_in_grid_cells\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/snap-bbox/snap-bbox.js\n");

/***/ }),

/***/ "./node_modules/utm-utils/src/getHemisphere.js":
/*!*****************************************************!*\
  !*** ./node_modules/utm-utils/src/getHemisphere.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("module.exports = function getHemisphere(projection) {\n  const projstr = projection.toString();\n\n  if (projstr.startsWith('326')) {\n    return 'N';\n  } else if (projstr.startsWith('327')) {\n    return 'S';\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9nZXRIZW1pc3BoZXJlLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldEhlbWlzcGhlcmUiLCJwcm9qZWN0aW9uIiwicHJvanN0ciIsInRvU3RyaW5nIiwic3RhcnRzV2l0aCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9nZXRIZW1pc3BoZXJlLmpzPzk5NDgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRIZW1pc3BoZXJlIChwcm9qZWN0aW9uKSB7XG4gICAgY29uc3QgcHJvanN0ciA9IHByb2plY3Rpb24udG9TdHJpbmcoKTtcbiAgICBpZiAocHJvanN0ci5zdGFydHNXaXRoKCczMjYnKSkge1xuICAgICAgcmV0dXJuICdOJztcbiAgICB9IGVsc2UgaWYgKHByb2pzdHIuc3RhcnRzV2l0aCgnMzI3JykpIHtcbiAgICAgIHJldHVybiAnUyc7XG4gICAgfVxuICB9Il0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLGFBQVQsQ0FBd0JDLFVBQXhCLEVBQW9DO0VBQ2pELE1BQU1DLE9BQU8sR0FBR0QsVUFBVSxDQUFDRSxRQUFYLEVBQWhCOztFQUNBLElBQUlELE9BQU8sQ0FBQ0UsVUFBUixDQUFtQixLQUFuQixDQUFKLEVBQStCO0lBQzdCLE9BQU8sR0FBUDtFQUNELENBRkQsTUFFTyxJQUFJRixPQUFPLENBQUNFLFVBQVIsQ0FBbUIsS0FBbkIsQ0FBSixFQUErQjtJQUNwQyxPQUFPLEdBQVA7RUFDRDtBQUNGLENBUEgifQ==\n//# sourceURL=webpack-internal:///./node_modules/utm-utils/src/getHemisphere.js\n");

/***/ }),

/***/ "./node_modules/utm-utils/src/getProjString.js":
/*!*****************************************************!*\
  !*** ./node_modules/utm-utils/src/getProjString.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const getZone = __webpack_require__(/*! ./getZone */ \"./node_modules/utm-utils/src/getZone.js\");\n\nconst getHemisphere = __webpack_require__(/*! ./getHemisphere */ \"./node_modules/utm-utils/src/getHemisphere.js\");\n\nmodule.exports = function getProjString(projection) {\n  const zone = getZone(projection);\n  const hemisphere = getHemisphere(projection);\n  return `+proj=utm +zone=${zone}${hemisphere === 'S' ? ' +south ' : ' '}+ellps=WGS84 +datum=WGS84 +units=m +no_defs`;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9nZXRQcm9qU3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy91dG0tdXRpbHMvc3JjL2dldFByb2pTdHJpbmcuanM/NjQ3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnZXRab25lID0gcmVxdWlyZSgnLi9nZXRab25lJyk7XG5jb25zdCBnZXRIZW1pc3BoZXJlID0gcmVxdWlyZSgnLi9nZXRIZW1pc3BoZXJlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UHJvalN0cmluZyAocHJvamVjdGlvbikge1xuICAgIGNvbnN0IHpvbmUgPSBnZXRab25lKHByb2plY3Rpb24pO1xuICAgIGNvbnN0IGhlbWlzcGhlcmUgPSBnZXRIZW1pc3BoZXJlKHByb2plY3Rpb24pO1xuICAgIHJldHVybiBgK3Byb2o9dXRtICt6b25lPSR7em9uZX0ke2hlbWlzcGhlcmUgPT09ICdTJyA/ICcgK3NvdXRoICcgOiAnICd9K2VsbHBzPVdHUzg0ICtkYXR1bT1XR1M4NCArdW5pdHM9bSArbm9fZGVmc2A7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/utm-utils/src/getProjString.js\n");

/***/ }),

/***/ "./node_modules/utm-utils/src/getZone.js":
/*!***********************************************!*\
  !*** ./node_modules/utm-utils/src/getZone.js ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = function getZone(projection) {\n  return Number.parseInt(projection.toString().substring(3));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9nZXRab25lLmpzLmpzIiwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImdldFpvbmUiLCJwcm9qZWN0aW9uIiwiTnVtYmVyIiwicGFyc2VJbnQiLCJ0b1N0cmluZyIsInN1YnN0cmluZyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9nZXRab25lLmpzPzk3ZjAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBnZXRab25lIChwcm9qZWN0aW9uKSB7XG4gICAgcmV0dXJuIE51bWJlci5wYXJzZUludChwcm9qZWN0aW9uLnRvU3RyaW5nKCkuc3Vic3RyaW5nKDMpKTtcbn07Il0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFNBQVNDLE9BQVQsQ0FBa0JDLFVBQWxCLEVBQThCO0VBQzNDLE9BQU9DLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQkYsVUFBVSxDQUFDRyxRQUFYLEdBQXNCQyxTQUF0QixDQUFnQyxDQUFoQyxDQUFoQixDQUFQO0FBQ0gsQ0FGRCJ9\n//# sourceURL=webpack-internal:///./node_modules/utm-utils/src/getZone.js\n");

/***/ }),

/***/ "./node_modules/utm-utils/src/isUTM.js":
/*!*********************************************!*\
  !*** ./node_modules/utm-utils/src/isUTM.js ***!
  \*********************************************/
/***/ ((module) => {

eval("module.exports = function isUTM(projection) {\n  const projstr = projection.toString();\n  return projstr.startsWith('326') || projstr.startsWith('327');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdXRtLXV0aWxzL3NyYy9pc1VUTS5qcy5qcyIsIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpc1VUTSIsInByb2plY3Rpb24iLCJwcm9qc3RyIiwidG9TdHJpbmciLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL25vZGVfbW9kdWxlcy91dG0tdXRpbHMvc3JjL2lzVVRNLmpzPzc5YjUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc1VUTShwcm9qZWN0aW9uKSB7XG4gICAgY29uc3QgcHJvanN0ciA9IHByb2plY3Rpb24udG9TdHJpbmcoKTtcbiAgICByZXR1cm4gcHJvanN0ci5zdGFydHNXaXRoKCczMjYnKSB8fCBwcm9qc3RyLnN0YXJ0c1dpdGgoJzMyNycpO1xufSJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxLQUFULENBQWVDLFVBQWYsRUFBMkI7RUFDeEMsTUFBTUMsT0FBTyxHQUFHRCxVQUFVLENBQUNFLFFBQVgsRUFBaEI7RUFDQSxPQUFPRCxPQUFPLENBQUNFLFVBQVIsQ0FBbUIsS0FBbkIsS0FBNkJGLE9BQU8sQ0FBQ0UsVUFBUixDQUFtQixLQUFuQixDQUFwQztBQUNILENBSEQifQ==\n//# sourceURL=webpack-internal:///./node_modules/utm-utils/src/isUTM.js\n");

/***/ }),

/***/ "./node_modules/wkt-parser/index.js":
/*!******************************************!*\
  !*** ./node_modules/wkt-parser/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser */ \"./node_modules/wkt-parser/parser.js\");\n/* harmony import */ var _process__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./process */ \"./node_modules/wkt-parser/process.js\");\nvar D2R = 0.01745329251994329577;\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n\n  if (!(outName in obj) && inName in obj) {\n    obj[outName] = obj[inName];\n\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n\n  if (wkt.AXIS) {\n    var axisOrder = '';\n\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n\n      if (axis[0].indexOf('north') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north') {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || (axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south') {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east') {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || (axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west') {\n        axisOrder += 'w';\n      }\n    }\n\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert * wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n\n  var geogcs = wkt.GEOGCS;\n\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n\n      wkt.datumCode = 'wgs84';\n    }\n\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, -6);\n    }\n\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, -8);\n    }\n\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n\n    if (~wkt.datumCode.indexOf('tm65') || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n\n  var renamer = function (a) {\n    return rename(wkt, a);\n  };\n\n  var list = [['standard_parallel_1', 'Standard_Parallel_1'], ['standard_parallel_1', 'Latitude of 1st standard parallel'], ['standard_parallel_2', 'Standard_Parallel_2'], ['standard_parallel_2', 'Latitude of 2nd standard parallel'], ['false_easting', 'False_Easting'], ['false_easting', 'False easting'], ['false-easting', 'Easting at false origin'], ['false_northing', 'False_Northing'], ['false_northing', 'False northing'], ['false_northing', 'Northing at false origin'], ['central_meridian', 'Central_Meridian'], ['central_meridian', 'Longitude of natural origin'], ['central_meridian', 'Longitude of false origin'], ['latitude_of_origin', 'Latitude_Of_Origin'], ['latitude_of_origin', 'Central_Parallel'], ['latitude_of_origin', 'Latitude of natural origin'], ['latitude_of_origin', 'Latitude of false origin'], ['scale_factor', 'Scale_Factor'], ['k0', 'scale_factor'], ['latitude_of_center', 'Latitude_Of_Center'], ['latitude_of_center', 'Latitude_of_center'], ['lat0', 'latitude_of_center', d2r], ['longitude_of_center', 'Longitude_Of_Center'], ['longitude_of_center', 'Longitude_of_center'], ['longc', 'longitude_of_center', d2r], ['x0', 'false_easting', toMeter], ['y0', 'false_northing', toMeter], ['long0', 'central_meridian', d2r], ['lat0', 'latitude_of_origin', d2r], ['lat0', 'standard_parallel_1', d2r], ['lat1', 'standard_parallel_1', d2r], ['lat2', 'standard_parallel_2', d2r], ['azimuth', 'Azimuth'], ['alpha', 'azimuth', d2r], ['srsCode', 'name']];\n  list.forEach(renamer);\n\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(wkt) {\n  var lisp = (0,_parser__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  (0,_process__WEBPACK_IMPORTED_MODULE_1__.sExpr)(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wkt-parser/index.js\n");

/***/ }),

/***/ "./node_modules/wkt-parser/parser.js":
/*!*******************************************!*\
  !*** ./node_modules/wkt-parser/parser.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parseString);\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/; // const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\n\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\n\nParser.prototype.readCharicter = function () {\n  var char = this.text[this.place++];\n\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n\n      char = this.text[this.place++];\n    }\n  }\n\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n\n    case KEYWORD:\n      return this.keyword(char);\n\n    case QUOTED:\n      return this.quoted(char);\n\n    case AFTERQUOTE:\n      return this.afterquote(char);\n\n    case NUMBER:\n      return this.number(char);\n\n    case ENDED:\n      return;\n  }\n};\n\nParser.prototype.afterquote = function (char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in afterquote yet, index ' + this.place);\n};\n\nParser.prototype.afterItem = function (char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (char === ']') {\n    this.level--;\n\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\n\nParser.prototype.number = function (char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in number yet, index ' + this.place);\n};\n\nParser.prototype.quoted = function (char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n\n  this.word += char;\n  return;\n};\n\nParser.prototype.keyword = function (char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in keyword yet, index ' + this.place);\n};\n\nParser.prototype.neutral = function (char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n\n  throw new Error('havn\\'t handled \"' + char + '\" in neutral yet, index ' + this.place);\n};\n\nParser.prototype.output = function () {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n\n  if (this.state === ENDED) {\n    return this.root;\n  }\n\n  throw new Error('unable to parse string \"' + this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2t0LXBhcnNlci9wYXJzZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQVpBO0FBY0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvd2t0LXBhcnNlci9wYXJzZXIuanM/YTRjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBwYXJzZVN0cmluZztcblxudmFyIE5FVVRSQUwgPSAxO1xudmFyIEtFWVdPUkQgPSAyO1xudmFyIE5VTUJFUiA9IDM7XG52YXIgUVVPVEVEID0gNDtcbnZhciBBRlRFUlFVT1RFID0gNTtcbnZhciBFTkRFRCA9IC0xO1xudmFyIHdoaXRlc3BhY2UgPSAvXFxzLztcbnZhciBsYXRpbiA9IC9bQS1aYS16XS87XG52YXIga2V5d29yZCA9IC9bQS1aYS16ODRfXS87XG52YXIgZW5kVGhpbmdzID0gL1ssXFxdXS87XG52YXIgZGlnZXRzID0gL1tcXGRcXC5FXFwtXFwrXS87XG4vLyBjb25zdCBpZ25vcmVkQ2hhciA9IC9bXFxzX1xcLVxcL1xcKFxcKV0vZztcbmZ1bmN0aW9uIFBhcnNlcih0ZXh0KSB7XG4gIGlmICh0eXBlb2YgdGV4dCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ25vdCBhIHN0cmluZycpO1xuICB9XG4gIHRoaXMudGV4dCA9IHRleHQudHJpbSgpO1xuICB0aGlzLmxldmVsID0gMDtcbiAgdGhpcy5wbGFjZSA9IDA7XG4gIHRoaXMucm9vdCA9IG51bGw7XG4gIHRoaXMuc3RhY2sgPSBbXTtcbiAgdGhpcy5jdXJyZW50T2JqZWN0ID0gbnVsbDtcbiAgdGhpcy5zdGF0ZSA9IE5FVVRSQUw7XG59XG5QYXJzZXIucHJvdG90eXBlLnJlYWRDaGFyaWN0ZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIGNoYXIgPSB0aGlzLnRleHRbdGhpcy5wbGFjZSsrXTtcbiAgaWYgKHRoaXMuc3RhdGUgIT09IFFVT1RFRCkge1xuICAgIHdoaWxlICh3aGl0ZXNwYWNlLnRlc3QoY2hhcikpIHtcbiAgICAgIGlmICh0aGlzLnBsYWNlID49IHRoaXMudGV4dC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY2hhciA9IHRoaXMudGV4dFt0aGlzLnBsYWNlKytdO1xuICAgIH1cbiAgfVxuICBzd2l0Y2ggKHRoaXMuc3RhdGUpIHtcbiAgICBjYXNlIE5FVVRSQUw6XG4gICAgICByZXR1cm4gdGhpcy5uZXV0cmFsKGNoYXIpO1xuICAgIGNhc2UgS0VZV09SRDpcbiAgICAgIHJldHVybiB0aGlzLmtleXdvcmQoY2hhcilcbiAgICBjYXNlIFFVT1RFRDpcbiAgICAgIHJldHVybiB0aGlzLnF1b3RlZChjaGFyKTtcbiAgICBjYXNlIEFGVEVSUVVPVEU6XG4gICAgICByZXR1cm4gdGhpcy5hZnRlcnF1b3RlKGNoYXIpO1xuICAgIGNhc2UgTlVNQkVSOlxuICAgICAgcmV0dXJuIHRoaXMubnVtYmVyKGNoYXIpO1xuICAgIGNhc2UgRU5ERUQ6XG4gICAgICByZXR1cm47XG4gIH1cbn07XG5QYXJzZXIucHJvdG90eXBlLmFmdGVycXVvdGUgPSBmdW5jdGlvbihjaGFyKSB7XG4gIGlmIChjaGFyID09PSAnXCInKSB7XG4gICAgdGhpcy53b3JkICs9ICdcIic7XG4gICAgdGhpcy5zdGF0ZSA9IFFVT1RFRDtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGVuZFRoaW5ncy50ZXN0KGNoYXIpKSB7XG4gICAgdGhpcy53b3JkID0gdGhpcy53b3JkLnRyaW0oKTtcbiAgICB0aGlzLmFmdGVySXRlbShjaGFyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdoYXZuXFwndCBoYW5kbGVkIFwiJyArY2hhciArICdcIiBpbiBhZnRlcnF1b3RlIHlldCwgaW5kZXggJyArIHRoaXMucGxhY2UpO1xufTtcblBhcnNlci5wcm90b3R5cGUuYWZ0ZXJJdGVtID0gZnVuY3Rpb24oY2hhcikge1xuICBpZiAoY2hhciA9PT0gJywnKSB7XG4gICAgaWYgKHRoaXMud29yZCAhPT0gbnVsbCkge1xuICAgICAgdGhpcy5jdXJyZW50T2JqZWN0LnB1c2godGhpcy53b3JkKTtcbiAgICB9XG4gICAgdGhpcy53b3JkID0gbnVsbDtcbiAgICB0aGlzLnN0YXRlID0gTkVVVFJBTDtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGNoYXIgPT09ICddJykge1xuICAgIHRoaXMubGV2ZWwtLTtcbiAgICBpZiAodGhpcy53b3JkICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmN1cnJlbnRPYmplY3QucHVzaCh0aGlzLndvcmQpO1xuICAgICAgdGhpcy53b3JkID0gbnVsbDtcbiAgICB9XG4gICAgdGhpcy5zdGF0ZSA9IE5FVVRSQUw7XG4gICAgdGhpcy5jdXJyZW50T2JqZWN0ID0gdGhpcy5zdGFjay5wb3AoKTtcbiAgICBpZiAoIXRoaXMuY3VycmVudE9iamVjdCkge1xuICAgICAgdGhpcy5zdGF0ZSA9IEVOREVEO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxufTtcblBhcnNlci5wcm90b3R5cGUubnVtYmVyID0gZnVuY3Rpb24oY2hhcikge1xuICBpZiAoZGlnZXRzLnRlc3QoY2hhcikpIHtcbiAgICB0aGlzLndvcmQgKz0gY2hhcjtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGVuZFRoaW5ncy50ZXN0KGNoYXIpKSB7XG4gICAgdGhpcy53b3JkID0gcGFyc2VGbG9hdCh0aGlzLndvcmQpO1xuICAgIHRoaXMuYWZ0ZXJJdGVtKGNoYXIpO1xuICAgIHJldHVybjtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoJ2hhdm5cXCd0IGhhbmRsZWQgXCInICtjaGFyICsgJ1wiIGluIG51bWJlciB5ZXQsIGluZGV4ICcgKyB0aGlzLnBsYWNlKTtcbn07XG5QYXJzZXIucHJvdG90eXBlLnF1b3RlZCA9IGZ1bmN0aW9uKGNoYXIpIHtcbiAgaWYgKGNoYXIgPT09ICdcIicpIHtcbiAgICB0aGlzLnN0YXRlID0gQUZURVJRVU9URTtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhpcy53b3JkICs9IGNoYXI7XG4gIHJldHVybjtcbn07XG5QYXJzZXIucHJvdG90eXBlLmtleXdvcmQgPSBmdW5jdGlvbihjaGFyKSB7XG4gIGlmIChrZXl3b3JkLnRlc3QoY2hhcikpIHtcbiAgICB0aGlzLndvcmQgKz0gY2hhcjtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGNoYXIgPT09ICdbJykge1xuICAgIHZhciBuZXdPYmplY3RzID0gW107XG4gICAgbmV3T2JqZWN0cy5wdXNoKHRoaXMud29yZCk7XG4gICAgdGhpcy5sZXZlbCsrO1xuICAgIGlmICh0aGlzLnJvb3QgPT09IG51bGwpIHtcbiAgICAgIHRoaXMucm9vdCA9IG5ld09iamVjdHM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY3VycmVudE9iamVjdC5wdXNoKG5ld09iamVjdHMpO1xuICAgIH1cbiAgICB0aGlzLnN0YWNrLnB1c2godGhpcy5jdXJyZW50T2JqZWN0KTtcbiAgICB0aGlzLmN1cnJlbnRPYmplY3QgPSBuZXdPYmplY3RzO1xuICAgIHRoaXMuc3RhdGUgPSBORVVUUkFMO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoZW5kVGhpbmdzLnRlc3QoY2hhcikpIHtcbiAgICB0aGlzLmFmdGVySXRlbShjaGFyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdoYXZuXFwndCBoYW5kbGVkIFwiJyArY2hhciArICdcIiBpbiBrZXl3b3JkIHlldCwgaW5kZXggJyArIHRoaXMucGxhY2UpO1xufTtcblBhcnNlci5wcm90b3R5cGUubmV1dHJhbCA9IGZ1bmN0aW9uKGNoYXIpIHtcbiAgaWYgKGxhdGluLnRlc3QoY2hhcikpIHtcbiAgICB0aGlzLndvcmQgPSBjaGFyO1xuICAgIHRoaXMuc3RhdGUgPSBLRVlXT1JEO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoY2hhciA9PT0gJ1wiJykge1xuICAgIHRoaXMud29yZCA9ICcnO1xuICAgIHRoaXMuc3RhdGUgPSBRVU9URUQ7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChkaWdldHMudGVzdChjaGFyKSkge1xuICAgIHRoaXMud29yZCA9IGNoYXI7XG4gICAgdGhpcy5zdGF0ZSA9IE5VTUJFUjtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKGVuZFRoaW5ncy50ZXN0KGNoYXIpKSB7XG4gICAgdGhpcy5hZnRlckl0ZW0oY2hhcik7XG4gICAgcmV0dXJuO1xuICB9XG4gIHRocm93IG5ldyBFcnJvcignaGF2blxcJ3QgaGFuZGxlZCBcIicgK2NoYXIgKyAnXCIgaW4gbmV1dHJhbCB5ZXQsIGluZGV4ICcgKyB0aGlzLnBsYWNlKTtcbn07XG5QYXJzZXIucHJvdG90eXBlLm91dHB1dCA9IGZ1bmN0aW9uKCkge1xuICB3aGlsZSAodGhpcy5wbGFjZSA8IHRoaXMudGV4dC5sZW5ndGgpIHtcbiAgICB0aGlzLnJlYWRDaGFyaWN0ZXIoKTtcbiAgfVxuICBpZiAodGhpcy5zdGF0ZSA9PT0gRU5ERUQpIHtcbiAgICByZXR1cm4gdGhpcy5yb290O1xuICB9XG4gIHRocm93IG5ldyBFcnJvcigndW5hYmxlIHRvIHBhcnNlIHN0cmluZyBcIicgK3RoaXMudGV4dCArICdcIi4gU3RhdGUgaXMgJyArIHRoaXMuc3RhdGUpO1xufTtcblxuZnVuY3Rpb24gcGFyc2VTdHJpbmcodHh0KSB7XG4gIHZhciBwYXJzZXIgPSBuZXcgUGFyc2VyKHR4dCk7XG4gIHJldHVybiBwYXJzZXIub3V0cHV0KCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/wkt-parser/parser.js\n");

/***/ }),

/***/ "./node_modules/wkt-parser/process.js":
/*!********************************************!*\
  !*** ./node_modules/wkt-parser/process.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sExpr\": () => (/* binding */ sExpr)\n/* harmony export */ });\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n\n  var thing = key ? {} : obj;\n  var out = value.reduce(function (newObj, item) {\n    sExpr(item, newObj);\n    return newObj;\n  }, thing);\n\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nfunction sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n\n  var key = v.shift();\n\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n\n    obj[key] = v[0];\n    return;\n  }\n\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n\n    obj[key].push(v);\n    return;\n  }\n\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n\n      return;\n\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n\n      return;\n\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n\n    default:\n      i = -1;\n\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n\n      return mapit(obj, key, v);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd2t0LXBhcnNlci9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7O0FBSUE7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBOztBQUtBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBdERBO0FBd0RBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vR2VvUmFzdGVyTGF5ZXIvLi9ub2RlX21vZHVsZXMvd2t0LXBhcnNlci9wcm9jZXNzLmpzPzgzNDYiXSwic291cmNlc0NvbnRlbnQiOlsiXG5cbmZ1bmN0aW9uIG1hcGl0KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoQXJyYXkuaXNBcnJheShrZXkpKSB7XG4gICAgdmFsdWUudW5zaGlmdChrZXkpO1xuICAgIGtleSA9IG51bGw7XG4gIH1cbiAgdmFyIHRoaW5nID0ga2V5ID8ge30gOiBvYmo7XG5cbiAgdmFyIG91dCA9IHZhbHVlLnJlZHVjZShmdW5jdGlvbihuZXdPYmosIGl0ZW0pIHtcbiAgICBzRXhwcihpdGVtLCBuZXdPYmopO1xuICAgIHJldHVybiBuZXdPYmpcbiAgfSwgdGhpbmcpO1xuICBpZiAoa2V5KSB7XG4gICAgb2JqW2tleV0gPSBvdXQ7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNFeHByKHYsIG9iaikge1xuICBpZiAoIUFycmF5LmlzQXJyYXkodikpIHtcbiAgICBvYmpbdl0gPSB0cnVlO1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIga2V5ID0gdi5zaGlmdCgpO1xuICBpZiAoa2V5ID09PSAnUEFSQU1FVEVSJykge1xuICAgIGtleSA9IHYuc2hpZnQoKTtcbiAgfVxuICBpZiAodi5sZW5ndGggPT09IDEpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2WzBdKSkge1xuICAgICAgb2JqW2tleV0gPSB7fTtcbiAgICAgIHNFeHByKHZbMF0sIG9ialtrZXldKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgb2JqW2tleV0gPSB2WzBdO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIXYubGVuZ3RoKSB7XG4gICAgb2JqW2tleV0gPSB0cnVlO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoa2V5ID09PSAnVE9XR1M4NCcpIHtcbiAgICBvYmpba2V5XSA9IHY7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChrZXkgPT09ICdBWElTJykge1xuICAgIGlmICghKGtleSBpbiBvYmopKSB7XG4gICAgICBvYmpba2V5XSA9IFtdO1xuICAgIH1cbiAgICBvYmpba2V5XS5wdXNoKHYpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoIUFycmF5LmlzQXJyYXkoa2V5KSkge1xuICAgIG9ialtrZXldID0ge307XG4gIH1cblxuICB2YXIgaTtcbiAgc3dpdGNoIChrZXkpIHtcbiAgICBjYXNlICdVTklUJzpcbiAgICBjYXNlICdQUklNRU0nOlxuICAgIGNhc2UgJ1ZFUlRfREFUVU0nOlxuICAgICAgb2JqW2tleV0gPSB7XG4gICAgICAgIG5hbWU6IHZbMF0udG9Mb3dlckNhc2UoKSxcbiAgICAgICAgY29udmVydDogdlsxXVxuICAgICAgfTtcbiAgICAgIGlmICh2Lmxlbmd0aCA9PT0gMykge1xuICAgICAgICBzRXhwcih2WzJdLCBvYmpba2V5XSk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgY2FzZSAnU1BIRVJPSUQnOlxuICAgIGNhc2UgJ0VMTElQU09JRCc6XG4gICAgICBvYmpba2V5XSA9IHtcbiAgICAgICAgbmFtZTogdlswXSxcbiAgICAgICAgYTogdlsxXSxcbiAgICAgICAgcmY6IHZbMl1cbiAgICAgIH07XG4gICAgICBpZiAodi5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgc0V4cHIodlszXSwgb2JqW2tleV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIGNhc2UgJ1BST0pFQ1RFRENSUyc6XG4gICAgY2FzZSAnUFJPSkNSUyc6XG4gICAgY2FzZSAnR0VPR0NTJzpcbiAgICBjYXNlICdHRU9DQ1MnOlxuICAgIGNhc2UgJ1BST0pDUyc6XG4gICAgY2FzZSAnTE9DQUxfQ1MnOlxuICAgIGNhc2UgJ0dFT0RDUlMnOlxuICAgIGNhc2UgJ0dFT0RFVElDQ1JTJzpcbiAgICBjYXNlICdHRU9ERVRJQ0RBVFVNJzpcbiAgICBjYXNlICdFREFUVU0nOlxuICAgIGNhc2UgJ0VOR0lORUVSSU5HREFUVU0nOlxuICAgIGNhc2UgJ1ZFUlRfQ1MnOlxuICAgIGNhc2UgJ1ZFUlRDUlMnOlxuICAgIGNhc2UgJ1ZFUlRJQ0FMQ1JTJzpcbiAgICBjYXNlICdDT01QRF9DUyc6XG4gICAgY2FzZSAnQ09NUE9VTkRDUlMnOlxuICAgIGNhc2UgJ0VOR0lORUVSSU5HQ1JTJzpcbiAgICBjYXNlICdFTkdDUlMnOlxuICAgIGNhc2UgJ0ZJVFRFRF9DUyc6XG4gICAgY2FzZSAnTE9DQUxfREFUVU0nOlxuICAgIGNhc2UgJ0RBVFVNJzpcbiAgICAgIHZbMF0gPSBbJ25hbWUnLCB2WzBdXTtcbiAgICAgIG1hcGl0KG9iaiwga2V5LCB2KTtcbiAgICAgIHJldHVybjtcbiAgICBkZWZhdWx0OlxuICAgICAgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IHYubGVuZ3RoKSB7XG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2W2ldKSkge1xuICAgICAgICAgIHJldHVybiBzRXhwcih2LCBvYmpba2V5XSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBtYXBpdChvYmosIGtleSwgdik7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/wkt-parser/process.js\n");

/***/ }),

/***/ "./src/georaster-layer-for-leaflet.ts":
/*!********************************************!*\
  !*** ./src/georaster-layer-for-leaflet.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime/runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! leaflet */ \"leaflet\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chroma-js */ \"./node_modules/chroma-js/chroma.js\");\n/* harmony import */ var chroma_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(chroma_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var geocanvas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! geocanvas */ \"./node_modules/geocanvas/src/full.js\");\n/* harmony import */ var geocanvas__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(geocanvas__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var utm_utils_src_isUTM__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! utm-utils/src/isUTM */ \"./node_modules/utm-utils/src/isUTM.js\");\n/* harmony import */ var utm_utils_src_isUTM__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(utm_utils_src_isUTM__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var utm_utils_src_getProjString__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! utm-utils/src/getProjString */ \"./node_modules/utm-utils/src/getProjString.js\");\n/* harmony import */ var utm_utils_src_getProjString__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(utm_utils_src_getProjString__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! proj4-fully-loaded */ \"./node_modules/proj4-fully-loaded/proj4-fully-loaded.js\");\n/* harmony import */ var proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var geo_extent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! geo-extent */ \"./node_modules/geo-extent/dist/geo-extent.mjs\");\n/* harmony import */ var snap_bbox__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! snap-bbox */ \"./node_modules/snap-bbox/snap-bbox.js\");\n/* harmony import */ var snap_bbox__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(snap_bbox__WEBPACK_IMPORTED_MODULE_8__);\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\n/* global proj4 */\n\n\n\n\n\n\n\n\n\nvar EPSG4326 = 4326;\nvar PROJ4_SUPPORTED_PROJECTIONS = new Set([3785, 3857, 4269, 4326, 900913, 102113]);\nvar MAX_NORTHING = 1000;\nvar MAX_EASTING = 1000;\nvar ORIGIN = [0, 0];\n\nvar log = function log(obj) {\n  return console.log(\"[georaster-layer-for-leaflet] \", obj);\n}; // figure out if simple CRS\n// even if not created with same instance of LeafletJS\n\n\nvar isSimpleCRS = function isSimpleCRS(crs) {\n  var _crs$transformation, _crs$transformation2, _crs$transformation3, _crs$transformation4;\n\n  return crs === leaflet__WEBPACK_IMPORTED_MODULE_1__.CRS.Simple || !crs.code && crs.infinite && (crs === null || crs === void 0 ? void 0 : (_crs$transformation = crs.transformation) === null || _crs$transformation === void 0 ? void 0 : _crs$transformation._a) === 1 && (crs === null || crs === void 0 ? void 0 : (_crs$transformation2 = crs.transformation) === null || _crs$transformation2 === void 0 ? void 0 : _crs$transformation2._b) === 0 && (crs === null || crs === void 0 ? void 0 : (_crs$transformation3 = crs.transformation) === null || _crs$transformation3 === void 0 ? void 0 : _crs$transformation3._c) === -1 && (crs === null || crs === void 0 ? void 0 : (_crs$transformation4 = crs.transformation) === null || _crs$transformation4 === void 0 ? void 0 : _crs$transformation4._d) === 0;\n};\n\nvar GeoRasterLayer = leaflet__WEBPACK_IMPORTED_MODULE_1__.GridLayer.extend({\n  options: {\n    updateWhenIdle: true,\n    updateWhenZooming: false,\n    keepBuffer: 25,\n    resolution: Math.pow(2, 5),\n    debugLevel: 0\n  },\n  initialize: function initialize(options) {\n    var _this = this;\n\n    try {\n      if (options.georasters) {\n        this.georasters = options.georasters;\n      } else if (options.georaster) {\n        this.georasters = [options.georaster];\n      } else {\n        throw new Error(\"You initialized a GeoRasterLayer without a georaster or georasters value.\");\n      }\n\n      if (this.sourceType === \"url\") {\n        options.updateWhenIdle = false;\n        options.updateWhenZooming = true;\n        options.keepBuffer = 16;\n      }\n\n      if (options.resampleMethod) {\n        this.resampleMethod = options.resampleMethod;\n      }\n      /*\n          Unpacking values for use later.\n          We do this in order to increase speed.\n      */\n\n\n      var keys = [\"height\", \"width\", \"noDataValue\", \"palette\", \"pixelHeight\", \"pixelWidth\", \"projection\", \"sourceType\", \"xmin\", \"xmax\", \"ymin\", \"ymax\"];\n\n      if (this.georasters.length > 1) {\n        keys.forEach(function (key) {\n          if (_this.same(_this.georasters, key)) {\n            _this[key] = _this.georasters[0][key];\n          } else {\n            throw new Error(\"all GeoRasters must have the same \" + key);\n          }\n        });\n      } else if (this.georasters.length === 1) {\n        keys.forEach(function (key) {\n          _this[key] = _this.georasters[0][key];\n        });\n      }\n\n      this._cache = {\n        innerTile: {},\n        tile: {}\n      };\n      this.extent = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent([this.xmin, this.ymin, this.xmax, this.ymax], {\n        srs: this.projection\n      }); // used later if simple projection\n\n      this.ratio = this.height / this.width;\n      this.debugLevel = options.debugLevel;\n      if (this.debugLevel >= 1) log({\n        options: options\n      });\n\n      if (this.georasters.every(function (georaster) {\n        return _typeof(georaster.values) === \"object\";\n      })) {\n        this.rasters = this.georasters.reduce(function (result, georaster) {\n          // added double-check of values to make typescript linter and compiler happy\n          if (georaster.values) {\n            result = result.concat(georaster.values);\n            return result;\n          }\n        }, []);\n        if (this.debugLevel > 1) console.log(\"this.rasters:\", this.rasters);\n      }\n\n      if (options.mask) {\n        if (typeof options.mask === \"string\") {\n          this.mask = fetch(options.mask).then(function (r) {\n            return r.json();\n          });\n        } else if (_typeof(options.mask) === \"object\") {\n          this.mask = Promise.resolve(options.mask);\n        } // default mask srs is the EPSG:4326 projection used by GeoJSON\n\n\n        this.mask_srs = options.mask_srs || \"EPSG:4326\";\n      }\n\n      this.mask_strategy = options.mask_strategy || \"outside\";\n      this.chroma = (chroma_js__WEBPACK_IMPORTED_MODULE_2___default());\n      this.scale = chroma_js__WEBPACK_IMPORTED_MODULE_2___default().scale(); // could probably replace some day with a simple\n      // (for let k in options) { this.options[k] = options[k]; }\n      // but need to find a way around TypeScript any issues\n\n      leaflet__WEBPACK_IMPORTED_MODULE_1__.Util.setOptions(this, options);\n      /*\n          Caching the constant tile size, so we don't recalculate everytime we\n          create a new tile\n      */\n\n      var tileSize = this.getTileSize();\n      this.tileHeight = tileSize.y;\n      this.tileWidth = tileSize.x;\n\n      if (this.georasters.length > 1 && !options.pixelValuesToColorFn) {\n        throw \"you must pass in a pixelValuesToColorFn if you are combining rasters\";\n      } // total number of bands across all georasters\n\n\n      this.numBands = this.georasters.reduce(function (total, g) {\n        return total + g.numberOfRasters;\n      }, 0);\n      if (this.debugLevel > 1) console.log(\"this.numBands:\", this.numBands); // in-case we want to track dynamic/running stats of all pixels fetched\n\n      this.currentStats = {\n        mins: new Array(this.numBands),\n        maxs: new Array(this.numBands),\n        ranges: new Array(this.numBands)\n      };\n\n      if (this.georasters.length === 1 && this.georasters[0].sourceType === \"url\" && this.georasters[0].numberOfRasters === 1 && !options.pixelValuesToColorFn) {\n        this.calcStats = true;\n      } // if you haven't specified a pixelValuesToColorFn\n      // and the image is YCbCr, add a function to convert YCbCr\n\n\n      this.checkIfYCbCr = new Promise( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve) {\n          var _this$georasters$0$_g, _image$fileDirectory, image;\n\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!_this.options.pixelValuesToColorFn) {\n                    _context.next = 2;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\", resolve(true));\n\n                case 2:\n                  if (!(_this.georasters.length === 1 && _this.georasters[0].numberOfRasters === 3)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 5;\n                  return (_this$georasters$0$_g = _this.georasters[0]._geotiff) === null || _this$georasters$0$_g === void 0 ? void 0 : _this$georasters$0$_g.getImage();\n\n                case 5:\n                  image = _context.sent;\n\n                  if ((image === null || image === void 0 ? void 0 : (_image$fileDirectory = image.fileDirectory) === null || _image$fileDirectory === void 0 ? void 0 : _image$fileDirectory.PhotometricInterpretation) === 6) {\n                    _this.options.pixelValuesToColorFn = function (values) {\n                      var r = Math.round(values[0] + 1.402 * (values[2] - 0x80));\n                      var g = Math.round(values[0] - 0.34414 * (values[1] - 0x80) - 0.71414 * (values[2] - 0x80));\n                      var b = Math.round(values[0] + 1.772 * (values[1] - 0x80));\n                      return \"rgb(\".concat(r, \",\").concat(g, \",\").concat(b, \")\");\n                    };\n                  }\n\n                case 7:\n                  return _context.abrupt(\"return\", resolve(true));\n\n                case 8:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } catch (error) {\n      console.error(\"ERROR initializing GeoTIFFLayer\", error);\n    }\n  },\n  getRasters: function getRasters(options) {\n    var _this2 = this;\n\n    var innerTileTopLeftPoint = options.innerTileTopLeftPoint,\n        heightOfSampleInScreenPixels = options.heightOfSampleInScreenPixels,\n        widthOfSampleInScreenPixels = options.widthOfSampleInScreenPixels,\n        zoom = options.zoom,\n        numberOfSamplesAcross = options.numberOfSamplesAcross,\n        numberOfSamplesDown = options.numberOfSamplesDown,\n        ymax = options.ymax,\n        xmin = options.xmin;\n    if (this.debugLevel >= 1) console.log(\"starting getRasters with options:\", options); // called if georaster was constructed from URL and we need to get\n    // data separately for each tile\n    // aka 'COG mode'\n\n    /*\n      This function takes in coordinates in the rendered image inner tile and\n      returns the y and x values in the original raster\n    */\n\n    var rasterCoordsForTileCoords = function rasterCoordsForTileCoords(h, w) {\n      var xInMapPixels = innerTileTopLeftPoint.x + w * widthOfSampleInScreenPixels;\n      var yInMapPixels = innerTileTopLeftPoint.y + h * heightOfSampleInScreenPixels;\n      var mapPoint = leaflet__WEBPACK_IMPORTED_MODULE_1__.point(xInMapPixels, yInMapPixels);\n      if (_this2.debugLevel >= 1) log({\n        mapPoint: mapPoint\n      });\n\n      var _this2$getMap$unproje = _this2.getMap().unproject(mapPoint, zoom),\n          lat = _this2$getMap$unproje.lat,\n          lng = _this2$getMap$unproje.lng;\n\n      if (_this2.projection === EPSG4326) {\n        return {\n          y: Math.round((ymax - lat) / _this2.pixelHeight),\n          x: Math.round((lng - xmin) / _this2.pixelWidth)\n        };\n      } else if (_this2.getProjector()) {\n        /* source raster doesn't use latitude and longitude,\n           so need to reproject point from lat/long to projection of raster\n        */\n        var _this2$getProjector$i = _this2.getProjector().inverse([lng, lat]),\n            _this2$getProjector$i2 = _slicedToArray(_this2$getProjector$i, 2),\n            x = _this2$getProjector$i2[0],\n            y = _this2$getProjector$i2[1];\n\n        if (x === Infinity || y === Infinity) {\n          if (_this2.debugLevel >= 1) console.error(\"projector converted\", [lng, lat], \"to\", [x, y]);\n        }\n\n        return {\n          y: Math.round((ymax - y) / _this2.pixelHeight),\n          x: Math.round((x - xmin) / _this2.pixelWidth)\n        };\n      } else {\n        return null;\n      }\n    }; // careful not to flip min_y/max_y here\n\n\n    var topLeft = rasterCoordsForTileCoords(0, 0);\n    var bottomRight = rasterCoordsForTileCoords(numberOfSamplesDown, numberOfSamplesAcross);\n    var getValuesOptions = {\n      bottom: bottomRight === null || bottomRight === void 0 ? void 0 : bottomRight.y,\n      height: numberOfSamplesDown,\n      left: topLeft === null || topLeft === void 0 ? void 0 : topLeft.x,\n      right: bottomRight === null || bottomRight === void 0 ? void 0 : bottomRight.x,\n      top: topLeft === null || topLeft === void 0 ? void 0 : topLeft.y,\n      width: numberOfSamplesAcross\n    };\n\n    if (!Object.values(getValuesOptions).every(function (it) {\n      return it !== undefined && isFinite(it);\n    })) {\n      console.error(\"getRasters failed because not all values are finite:\", getValuesOptions);\n    } else {\n      // !note: The types need confirmation - SFR 2021-01-20\n      return Promise.all(this.georasters.map(function (georaster) {\n        return georaster.getValues(_objectSpread(_objectSpread({}, getValuesOptions), {}, {\n          resampleMethod: _this2.resampleMethod || \"bilinear\"\n        }));\n      })).then(function (valuesByGeoRaster) {\n        return valuesByGeoRaster.reduce(function (result, values) {\n          result = result.concat(values);\n          return result;\n        }, []);\n      });\n    }\n  },\n  createTile: function createTile(coords, done) {\n    /* This tile is the square piece of the Leaflet map that we draw on */\n    var tile = leaflet__WEBPACK_IMPORTED_MODULE_1__.DomUtil.create(\"canvas\", \"leaflet-tile\"); // we do this because sometimes css normalizers will set * to box-sizing: border-box\n\n    tile.style.boxSizing = \"content-box\"; // start tile hidden\n\n    tile.style.visibility = \"hidden\";\n    var context = tile.getContext(\"2d\"); // note that we aren't setting the tile height or width here\n    // drawTile dynamically sets the width and padding based on\n    // how much the georaster takes up the tile area\n\n    this.drawTile({\n      tile: tile,\n      coords: coords,\n      context: context,\n      done: done\n    });\n    return tile;\n  },\n  drawTile: function drawTile(_ref2) {\n    var _this3 = this;\n\n    var tile = _ref2.tile,\n        coords = _ref2.coords,\n        context = _ref2.context,\n        done = _ref2.done;\n\n    try {\n      var _this$debugLevel = this.debugLevel,\n          debugLevel = _this$debugLevel === void 0 ? 0 : _this$debugLevel;\n      if (debugLevel >= 2) console.log(\"starting drawTile with\", {\n        tile: tile,\n        coords: coords,\n        context: context,\n        done: done\n      }); // stringified hash of tile coordinates for caching purposes\n\n      var cacheKey = [coords.x, coords.y, coords.z].join(\",\");\n      if (debugLevel >= 2) log({\n        cacheKey: cacheKey\n      });\n      var mapCRS = this.getMapCRS();\n      if (debugLevel >= 2) log({\n        mapCRS: mapCRS\n      });\n      var inSimpleCRS = isSimpleCRS(mapCRS);\n      if (debugLevel >= 2) log({\n        inSimpleCRS: inSimpleCRS\n      }); // Unpacking values for increased speed\n\n      var rasters = this.rasters,\n          xmin = this.xmin,\n          xmax = this.xmax,\n          ymin = this.ymin,\n          ymax = this.ymax;\n      var rasterHeight = this.height;\n      var rasterWidth = this.width;\n      var extentOfLayer = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(this.getBounds(), {\n        srs: inSimpleCRS ? \"simple\" : 4326\n      });\n      if (debugLevel >= 2) log({\n        extentOfLayer: extentOfLayer\n      });\n      var pixelHeight = inSimpleCRS ? extentOfLayer.height / rasterHeight : this.pixelHeight;\n      var pixelWidth = inSimpleCRS ? extentOfLayer.width / rasterWidth : this.pixelWidth;\n      if (debugLevel >= 2) log({\n        pixelHeight: pixelHeight,\n        pixelWidth: pixelWidth\n      }); // these values are used, so we don't try to sample outside of the raster\n\n      var xMinOfLayer = this.xMinOfLayer,\n          xMaxOfLayer = this.xMaxOfLayer,\n          yMinOfLayer = this.yMinOfLayer,\n          yMaxOfLayer = this.yMaxOfLayer;\n\n      var boundsOfTile = this._tileCoordsToBounds(coords);\n\n      if (debugLevel >= 2) log({\n        boundsOfTile: boundsOfTile\n      });\n      var code = mapCRS.code;\n      if (debugLevel >= 2) log({\n        code: code\n      });\n      var extentOfTile = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(boundsOfTile, {\n        srs: inSimpleCRS ? \"simple\" : 4326\n      });\n      if (debugLevel >= 2) log({\n        extentOfTile: extentOfTile\n      }); // create blue outline around tiles\n\n      if (debugLevel >= 4) {\n        if (!this._cache.tile[cacheKey]) {\n          this._cache.tile[cacheKey] = leaflet__WEBPACK_IMPORTED_MODULE_1__.rectangle(extentOfTile.leafletBounds, {\n            fillOpacity: 0\n          }).addTo(this.getMap()).bindTooltip(cacheKey, {\n            direction: \"center\",\n            permanent: true\n          });\n        }\n      }\n\n      var extentOfTileInMapCRS = inSimpleCRS ? extentOfTile : extentOfTile.reproj(code);\n      if (debugLevel >= 2) log({\n        extentOfTileInMapCRS: extentOfTileInMapCRS\n      });\n      var extentOfInnerTileInMapCRS = extentOfTileInMapCRS.crop(inSimpleCRS ? extentOfLayer : this.extent);\n      if (debugLevel >= 2) console.log(\"[georaster-layer-for-leaflet] extentOfInnerTileInMapCRS\", extentOfInnerTileInMapCRS.reproj(inSimpleCRS ? \"simple\" : 4326));\n      if (debugLevel >= 2) log({\n        coords: coords,\n        extentOfInnerTileInMapCRS: extentOfInnerTileInMapCRS,\n        extent: this.extent\n      }); // create blue outline around tiles\n\n      if (debugLevel >= 4) {\n        if (!this._cache.innerTile[cacheKey]) {\n          var ext = inSimpleCRS ? extentOfInnerTileInMapCRS : extentOfInnerTileInMapCRS.reproj(4326);\n          this._cache.innerTile[cacheKey] = leaflet__WEBPACK_IMPORTED_MODULE_1__.rectangle(ext.leafletBounds, {\n            color: \"#F00\",\n            dashArray: \"5, 10\",\n            fillOpacity: 0\n          }).addTo(this.getMap());\n        }\n      }\n\n      var widthOfScreenPixelInMapCRS = extentOfTileInMapCRS.width / this.tileWidth;\n      var heightOfScreenPixelInMapCRS = extentOfTileInMapCRS.height / this.tileHeight;\n      if (debugLevel >= 3) log({\n        heightOfScreenPixelInMapCRS: heightOfScreenPixelInMapCRS,\n        widthOfScreenPixelInMapCRS: widthOfScreenPixelInMapCRS\n      }); // expand tile sampling area to align with raster pixels\n\n      var oldExtentOfInnerTileInRasterCRS = inSimpleCRS ? extentOfInnerTileInMapCRS : extentOfInnerTileInMapCRS.reproj(this.projection);\n      var snapped = snap_bbox__WEBPACK_IMPORTED_MODULE_8___default()({\n        bbox: oldExtentOfInnerTileInRasterCRS.bbox,\n        // pad xmax and ymin of container to tolerate ceil() and floor() in snap()\n        container: inSimpleCRS ? [extentOfLayer.xmin, extentOfLayer.ymin - 0.25 * pixelHeight, extentOfLayer.xmax + 0.25 * pixelWidth, extentOfLayer.ymax] : [xmin, ymin - 0.25 * pixelHeight, xmax + 0.25 * pixelWidth, ymax],\n        debug: debugLevel >= 2,\n        origin: inSimpleCRS ? [extentOfLayer.xmin, extentOfLayer.ymax] : [xmin, ymax],\n        scale: [pixelWidth, -pixelHeight] // negative because origin is at ymax\n\n      });\n      var extentOfInnerTileInRasterCRS = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(snapped.bbox_in_coordinate_system, {\n        srs: inSimpleCRS ? \"simple\" : this.projection\n      });\n      var gridbox = snapped.bbox_in_grid_cells;\n      var snappedSamplesAcross = Math.abs(gridbox[2] - gridbox[0]);\n      var snappedSamplesDown = Math.abs(gridbox[3] - gridbox[1]);\n      var rasterPixelsAcross = Math.ceil(oldExtentOfInnerTileInRasterCRS.width / pixelWidth);\n      var rasterPixelsDown = Math.ceil(oldExtentOfInnerTileInRasterCRS.height / pixelHeight);\n      var resolution = this.options.resolution;\n      var layerCropExtent = inSimpleCRS ? extentOfLayer : this.extent;\n      var recropTileOrig = oldExtentOfInnerTileInRasterCRS.crop(layerCropExtent); // may be null\n\n      var maxSamplesAcross = 1;\n      var maxSamplesDown = 1;\n\n      if (recropTileOrig !== null) {\n        var recropTileProj = inSimpleCRS ? recropTileOrig : recropTileOrig.reproj(code);\n        var recropTile = recropTileProj.crop(extentOfTileInMapCRS);\n\n        if (recropTile !== null) {\n          maxSamplesAcross = Math.ceil(resolution * (recropTile.width / extentOfTileInMapCRS.width));\n          maxSamplesDown = Math.ceil(resolution * (recropTile.height / extentOfTileInMapCRS.height));\n        }\n      }\n\n      var overdrawTileAcross = rasterPixelsAcross < maxSamplesAcross;\n      var overdrawTileDown = rasterPixelsDown < maxSamplesDown;\n      var numberOfSamplesAcross = overdrawTileAcross ? snappedSamplesAcross : maxSamplesAcross;\n      var numberOfSamplesDown = overdrawTileDown ? snappedSamplesDown : maxSamplesDown;\n      if (debugLevel >= 3) console.log(\"[georaster-layer-for-leaflet] extent of inner tile before snapping \" + extentOfInnerTileInMapCRS.reproj(inSimpleCRS ? \"simple\" : 4326).bbox.toString()); // Reprojecting the bounding box back to the map CRS would expand it\n      // (unless the projection is purely scaling and translation),\n      // so instead just extend the old map bounding box proportionately.\n\n      var oldrb = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(oldExtentOfInnerTileInRasterCRS.bbox);\n      var newrb = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(extentOfInnerTileInRasterCRS.bbox);\n      var oldmb = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(extentOfInnerTileInMapCRS.bbox);\n\n      if (oldrb.width && oldrb.height) {\n        var n0 = (newrb.xmin - oldrb.xmin) / oldrb.width * oldmb.width;\n        var n1 = (newrb.ymin - oldrb.ymin) / oldrb.height * oldmb.height;\n        var n2 = (newrb.xmax - oldrb.xmax) / oldrb.width * oldmb.width;\n        var n3 = (newrb.ymax - oldrb.ymax) / oldrb.height * oldmb.height;\n\n        if (!overdrawTileAcross) {\n          n0 = Math.max(n0, 0);\n          n2 = Math.min(n2, 0);\n        }\n\n        if (!overdrawTileDown) {\n          n1 = Math.max(n1, 0);\n          n3 = Math.min(n3, 0);\n        }\n\n        var newbox = [oldmb.xmin + n0, oldmb.ymin + n1, oldmb.xmax + n2, oldmb.ymax + n3];\n        extentOfInnerTileInMapCRS = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(newbox, {\n          srs: extentOfInnerTileInMapCRS.srs\n        });\n      } // create outline around raster pixels\n\n\n      if (debugLevel >= 4) {\n        if (!this._cache.innerTile[cacheKey]) {\n          var _ext = inSimpleCRS ? extentOfInnerTileInMapCRS : extentOfInnerTileInMapCRS.reproj(4326);\n\n          this._cache.innerTile[cacheKey] = leaflet__WEBPACK_IMPORTED_MODULE_1__.rectangle(_ext.leafletBounds, {\n            color: \"#F00\",\n            dashArray: \"5, 10\",\n            fillOpacity: 0\n          }).addTo(this.getMap());\n        }\n      }\n\n      if (debugLevel >= 3) console.log(\"[georaster-layer-for-leaflet] extent of inner tile after snapping \" + extentOfInnerTileInMapCRS.reproj(inSimpleCRS ? \"simple\" : 4326).bbox.toString()); // Note that the snapped \"inner\" tile may extend beyond the original tile,\n      // in which case the padding values will be negative.\n      // we round here because sometimes there will be slight floating arithmetic issues\n      // where the padding is like 0.00000000000001\n\n      var padding = {\n        left: Math.round((extentOfInnerTileInMapCRS.xmin - extentOfTileInMapCRS.xmin) / widthOfScreenPixelInMapCRS),\n        right: Math.round((extentOfTileInMapCRS.xmax - extentOfInnerTileInMapCRS.xmax) / widthOfScreenPixelInMapCRS),\n        top: Math.round((extentOfTileInMapCRS.ymax - extentOfInnerTileInMapCRS.ymax) / heightOfScreenPixelInMapCRS),\n        bottom: Math.round((extentOfInnerTileInMapCRS.ymin - extentOfTileInMapCRS.ymin) / heightOfScreenPixelInMapCRS)\n      };\n      if (debugLevel >= 3) log({\n        padding: padding\n      });\n      var innerTileHeight = this.tileHeight - padding.top - padding.bottom;\n      var innerTileWidth = this.tileWidth - padding.left - padding.right;\n      if (debugLevel >= 3) log({\n        innerTileHeight: innerTileHeight,\n        innerTileWidth: innerTileWidth\n      });\n\n      if (debugLevel >= 4) {\n        var xMinOfInnerTileInMapCRS = extentOfTileInMapCRS.xmin + padding.left * widthOfScreenPixelInMapCRS;\n        var yMinOfInnerTileInMapCRS = extentOfTileInMapCRS.ymin + padding.bottom * heightOfScreenPixelInMapCRS;\n        var xMaxOfInnerTileInMapCRS = extentOfTileInMapCRS.xmax - padding.right * widthOfScreenPixelInMapCRS;\n        var yMaxOfInnerTileInMapCRS = extentOfTileInMapCRS.ymax - padding.top * heightOfScreenPixelInMapCRS;\n        log({\n          xMinOfInnerTileInMapCRS: xMinOfInnerTileInMapCRS,\n          yMinOfInnerTileInMapCRS: yMinOfInnerTileInMapCRS,\n          xMaxOfInnerTileInMapCRS: xMaxOfInnerTileInMapCRS,\n          yMaxOfInnerTileInMapCRS: yMaxOfInnerTileInMapCRS\n        });\n      }\n\n      var canvasPadding = {\n        left: Math.max(padding.left, 0),\n        right: Math.max(padding.right, 0),\n        top: Math.max(padding.top, 0),\n        bottom: Math.max(padding.bottom, 0)\n      };\n      var canvasHeight = this.tileHeight - canvasPadding.top - canvasPadding.bottom;\n      var canvasWidth = this.tileWidth - canvasPadding.left - canvasPadding.right; // set padding and size of canvas tile\n\n      tile.style.paddingTop = canvasPadding.top + \"px\";\n      tile.style.paddingRight = canvasPadding.right + \"px\";\n      tile.style.paddingBottom = canvasPadding.bottom + \"px\";\n      tile.style.paddingLeft = canvasPadding.left + \"px\";\n      tile.height = canvasHeight;\n      tile.style.height = canvasHeight + \"px\";\n      tile.width = canvasWidth;\n      tile.style.width = canvasWidth + \"px\";\n      if (debugLevel >= 3) console.log(\"setting tile height to \" + canvasHeight + \"px\");\n      if (debugLevel >= 3) console.log(\"setting tile width to \" + canvasWidth + \"px\"); // set how large to display each sample in screen pixels\n\n      var heightOfSampleInScreenPixels = innerTileHeight / numberOfSamplesDown;\n      var heightOfSampleInScreenPixelsInt = Math.ceil(heightOfSampleInScreenPixels);\n      var widthOfSampleInScreenPixels = innerTileWidth / numberOfSamplesAcross;\n      var widthOfSampleInScreenPixelsInt = Math.ceil(widthOfSampleInScreenPixels);\n      var map = this.getMap();\n      var tileSize = this.getTileSize(); // this converts tile coordinates (how many tiles down and right)\n      // to pixels from left and top of tile pane\n\n      var tileNwPoint = coords.scaleBy(tileSize);\n      if (debugLevel >= 4) log({\n        tileNwPoint: tileNwPoint\n      });\n      var xLeftOfInnerTile = tileNwPoint.x + padding.left;\n      var yTopOfInnerTile = tileNwPoint.y + padding.top;\n      var innerTileTopLeftPoint = {\n        x: xLeftOfInnerTile,\n        y: yTopOfInnerTile\n      };\n      if (debugLevel >= 4) log({\n        innerTileTopLeftPoint: innerTileTopLeftPoint\n      }); // render asynchronously so tiles show up as they finish instead of all at once (which blocks the UI)\n\n      setTimeout( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var zoom, tileRasters, noDataValue, bandIndex, min, max, band, rowIndex, row, columnIndex, value, _loop, h, _ret;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                zoom = coords.z;\n                _context2.prev = 1;\n                tileRasters = null;\n\n                if (rasters) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 6;\n                return _this3.getRasters({\n                  innerTileTopLeftPoint: innerTileTopLeftPoint,\n                  heightOfSampleInScreenPixels: heightOfSampleInScreenPixels,\n                  widthOfSampleInScreenPixels: widthOfSampleInScreenPixels,\n                  zoom: zoom,\n                  pixelHeight: pixelHeight,\n                  pixelWidth: pixelWidth,\n                  numberOfSamplesAcross: numberOfSamplesAcross,\n                  numberOfSamplesDown: numberOfSamplesDown,\n                  ymax: ymax,\n                  xmin: xmin\n                });\n\n              case 6:\n                tileRasters = _context2.sent;\n\n                if (tileRasters && _this3.calcStats) {\n                  noDataValue = _this3.noDataValue;\n\n                  for (bandIndex = 0; bandIndex < tileRasters.length; bandIndex++) {\n                    min = _this3.currentStats.mins[bandIndex];\n                    max = _this3.currentStats.maxs[bandIndex];\n                    band = tileRasters[bandIndex];\n\n                    for (rowIndex = 0; rowIndex < band.length; rowIndex++) {\n                      row = band[rowIndex];\n\n                      for (columnIndex = 0; columnIndex < row.length; columnIndex++) {\n                        value = row[columnIndex];\n\n                        if (value !== noDataValue) {\n                          if (min === undefined || value < min) min = value;\n                          if (max === undefined || value > max) max = value;\n                        }\n                      }\n                    }\n\n                    _this3.currentStats.mins[bandIndex] = min;\n                    _this3.currentStats.maxs[bandIndex] = max;\n                    _this3.currentStats.ranges[bandIndex] = max - min;\n                  }\n                }\n\n              case 8:\n                _context2.next = 10;\n                return _this3.checkIfYCbCr;\n\n              case 10:\n                _loop = function _loop(h) {\n                  var yCenterInMapPixels = yTopOfInnerTile + (h + 0.5) * heightOfSampleInScreenPixels;\n                  var latWestPoint = leaflet__WEBPACK_IMPORTED_MODULE_1__.point(xLeftOfInnerTile, yCenterInMapPixels);\n\n                  var _map$unproject = map.unproject(latWestPoint, zoom),\n                      lat = _map$unproject.lat;\n\n                  if (lat > yMinOfLayer && lat < yMaxOfLayer) {\n                    var _ret2 = function () {\n                      var yInTilePixels = Math.round(h * heightOfSampleInScreenPixels) + Math.min(padding.top, 0);\n                      var yInRasterPixels = 0;\n\n                      if (inSimpleCRS || _this3.projection === EPSG4326) {\n                        yInRasterPixels = Math.floor((yMaxOfLayer - lat) / pixelHeight);\n                      }\n\n                      var _loop2 = function _loop2(w) {\n                        var latLngPoint = leaflet__WEBPACK_IMPORTED_MODULE_1__.point(xLeftOfInnerTile + (w + 0.5) * widthOfSampleInScreenPixels, yCenterInMapPixels);\n\n                        var _map$unproject2 = map.unproject(latLngPoint, zoom),\n                            xOfLayer = _map$unproject2.lng;\n\n                        if (xOfLayer > xMinOfLayer && xOfLayer < xMaxOfLayer) {\n                          var xInRasterPixels = 0;\n\n                          if (inSimpleCRS || _this3.projection === EPSG4326) {\n                            xInRasterPixels = Math.floor((xOfLayer - xMinOfLayer) / pixelWidth);\n                          } else if (_this3.getProjector()) {\n                            var inverted = _this3.getProjector().inverse({\n                              x: xOfLayer,\n                              y: lat\n                            });\n\n                            var yInSrc = inverted.y;\n                            yInRasterPixels = Math.floor((ymax - yInSrc) / pixelHeight);\n                            if (yInRasterPixels < 0 || yInRasterPixels >= rasterHeight) return \"continue\";\n                            var xInSrc = inverted.x;\n                            xInRasterPixels = Math.floor((xInSrc - xmin) / pixelWidth);\n                            if (xInRasterPixels < 0 || xInRasterPixels >= rasterWidth) return \"continue\";\n                          }\n\n                          var values = null;\n\n                          if (tileRasters) {\n                            // get value from array specific to this tile\n                            values = tileRasters.map(function (band) {\n                              return band[h][w];\n                            });\n                          } else if (rasters) {\n                            // get value from array with data for entire raster\n                            values = rasters.map(function (band) {\n                              return band[yInRasterPixels][xInRasterPixels];\n                            });\n                          } else {\n                            done(new Error(\"no rasters are available for, so skipping value generation\"));\n                            return {\n                              v: {\n                                v: {\n                                  v: void 0\n                                }\n                              }\n                            };\n                          } // x-axis coordinate of the starting point of the rectangle representing the raster pixel\n\n\n                          var x = Math.round(w * widthOfSampleInScreenPixels) + Math.min(padding.left, 0); // y-axis coordinate of the starting point of the rectangle representing the raster pixel\n\n                          var y = yInTilePixels; // how many real screen pixels does a pixel of the sampled raster take up\n\n                          var width = widthOfSampleInScreenPixelsInt;\n                          var height = heightOfSampleInScreenPixelsInt;\n\n                          if (_this3.options.customDrawFunction) {\n                            _this3.options.customDrawFunction({\n                              values: values,\n                              context: context,\n                              x: x,\n                              y: y,\n                              width: width,\n                              height: height,\n                              rasterX: xInRasterPixels,\n                              rasterY: yInRasterPixels,\n                              sampleX: w,\n                              sampleY: h,\n                              sampledRaster: tileRasters\n                            });\n                          } else {\n                            var color = _this3.getColor(values);\n\n                            if (color && context) {\n                              context.fillStyle = color;\n                              context.fillRect(x, y, width, height);\n                            }\n                          }\n                        }\n                      };\n\n                      for (var w = 0; w < numberOfSamplesAcross; w++) {\n                        var _ret3 = _loop2(w);\n\n                        if (_ret3 === \"continue\") continue;\n                        if (_typeof(_ret3) === \"object\") return _ret3.v;\n                      }\n                    }();\n\n                    if (_typeof(_ret2) === \"object\") return _ret2.v;\n                  }\n                };\n\n                h = 0;\n\n              case 12:\n                if (!(h < numberOfSamplesDown)) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _ret = _loop(h);\n\n                if (!(_typeof(_ret) === \"object\")) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", _ret.v);\n\n              case 16:\n                h++;\n                _context2.next = 12;\n                break;\n\n              case 19:\n                if (_this3.mask) {\n                  if (inSimpleCRS) {\n                    console.warn(\"[georaster-layer-for-leaflet] mask is not supported when using simple projection\");\n                  } else {\n                    _this3.mask.then(function (mask) {\n                      geocanvas__WEBPACK_IMPORTED_MODULE_3___default().maskCanvas({\n                        canvas: tile,\n                        // eslint-disable-next-line camelcase\n                        canvas_bbox: extentOfInnerTileInMapCRS.bbox,\n                        // need to support simple projection too\n                        // eslint-disable-next-line camelcase\n                        canvas_srs: 3857,\n                        // default map crs, need to support simple\n                        mask: mask,\n                        // eslint-disable-next-line camelcase\n                        mask_srs: _this3.mask_srs,\n                        strategy: _this3.mask_strategy // hide everything inside or outside the mask\n\n                      });\n                    });\n                  }\n                }\n\n                tile.style.visibility = \"visible\"; // set to default\n\n                done(undefined, tile);\n                _context2.next = 27;\n                break;\n\n              case 24:\n                _context2.prev = 24;\n                _context2.t0 = _context2[\"catch\"](1);\n                done(_context2.t0, tile);\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 24]]);\n      })), 0);\n    } catch (error) {\n      done(error, tile);\n    }\n  },\n  // copied from Leaflet with slight modifications,\n  // including removing the lines that set the tile size\n  _initTile: function _initTile(tile) {\n    if (!tile) return;\n    leaflet__WEBPACK_IMPORTED_MODULE_1__.DomUtil.addClass(tile, \"leaflet-tile\");\n    tile.onselectstart = leaflet__WEBPACK_IMPORTED_MODULE_1__.Util.falseFn;\n    tile.onmousemove = leaflet__WEBPACK_IMPORTED_MODULE_1__.Util.falseFn; // update opacity on tiles in IE7-8 because of filter inheritance problems\n\n    if (leaflet__WEBPACK_IMPORTED_MODULE_1__.Browser.ielt9 && this.options.opacity < 1) {\n      leaflet__WEBPACK_IMPORTED_MODULE_1__.DomUtil.setOpacity(tile, this.options.opacity);\n    } // without this hack, tiles disappear after zoom on Chrome for Android\n    // https://github.com/Leaflet/Leaflet/issues/2078\n\n\n    if (leaflet__WEBPACK_IMPORTED_MODULE_1__.Browser.android && !leaflet__WEBPACK_IMPORTED_MODULE_1__.Browser.android23) {\n      tile.style.WebkitBackfaceVisibility = \"hidden\";\n    }\n  },\n  // method from https://github.com/Leaflet/Leaflet/blob/bb1d94ac7f2716852213dd11563d89855f8d6bb1/src/layer/ImageOverlay.js\n  getBounds: function getBounds() {\n    this.initBounds();\n    return this._bounds;\n  },\n  getMap: function getMap() {\n    return this._map || this._mapToAdd;\n  },\n  getMapCRS: function getMapCRS() {\n    var _this$getMap;\n\n    return ((_this$getMap = this.getMap()) === null || _this$getMap === void 0 ? void 0 : _this$getMap.options.crs) || leaflet__WEBPACK_IMPORTED_MODULE_1__.CRS.EPSG3857;\n  },\n  // add in to ensure backwards compatability with Leaflet 1.0.3\n  _tileCoordsToNwSe: function _tileCoordsToNwSe(coords) {\n    var map = this.getMap();\n    var tileSize = this.getTileSize();\n    var nwPoint = coords.scaleBy(tileSize);\n    var sePoint = nwPoint.add(tileSize);\n    var nw = map.unproject(nwPoint, coords.z);\n    var se = map.unproject(sePoint, coords.z);\n    return [nw, se];\n  },\n  _tileCoordsToBounds: function _tileCoordsToBounds(coords) {\n    var _this$_tileCoordsToNw = this._tileCoordsToNwSe(coords),\n        _this$_tileCoordsToNw2 = _slicedToArray(_this$_tileCoordsToNw, 2),\n        nw = _this$_tileCoordsToNw2[0],\n        se = _this$_tileCoordsToNw2[1];\n\n    var bounds = new leaflet__WEBPACK_IMPORTED_MODULE_1__.LatLngBounds(nw, se);\n\n    if (!this.options.noWrap) {\n      var crs = this.getMap().options.crs;\n      bounds = crs.wrapLatLngBounds(bounds);\n    }\n\n    return bounds;\n  },\n  _isValidTile: function _isValidTile(coords) {\n    var crs = this.getMapCRS();\n\n    if (!crs.infinite) {\n      // don't load tile if it's out of bounds and not wrapped\n      var globalBounds = this._globalTileRange;\n\n      if (!crs.wrapLng && (coords.x < globalBounds.min.x || coords.x > globalBounds.max.x) || !crs.wrapLat && (coords.y < globalBounds.min.y || coords.y > globalBounds.max.y)) {\n        return false;\n      }\n    }\n\n    var bounds = this.getBounds();\n\n    if (!bounds) {\n      return true;\n    }\n\n    var x = coords.x,\n        y = coords.y,\n        z = coords.z; // not sure what srs should be here when simple crs\n\n    var layerExtent = new geo_extent__WEBPACK_IMPORTED_MODULE_7__.GeoExtent(bounds, {\n      srs: 4326\n    });\n\n    var boundsOfTile = this._tileCoordsToBounds(coords); // check given tile coordinates\n\n\n    if (layerExtent.overlaps(boundsOfTile)) return true; // if not within the original confines of the earth return false\n    // we don't want wrapping if using Simple CRS\n\n    if (isSimpleCRS(crs)) return false; // width of the globe in tiles at the given zoom level\n\n    var width = Math.pow(2, z); // check one world to the left\n\n    var leftCoords = leaflet__WEBPACK_IMPORTED_MODULE_1__.point(x - width, y);\n    leftCoords.z = z;\n\n    var leftBounds = this._tileCoordsToBounds(leftCoords);\n\n    if (layerExtent.overlaps(leftBounds)) return true; // check one world to the right\n\n    var rightCoords = leaflet__WEBPACK_IMPORTED_MODULE_1__.point(x + width, y);\n    rightCoords.z = z;\n\n    var rightBounds = this._tileCoordsToBounds(rightCoords);\n\n    if (layerExtent.overlaps(rightBounds)) return true;\n    return false;\n  },\n  getColor: function getColor(values) {\n    var _this4 = this;\n\n    if (this.options.pixelValuesToColorFn) {\n      return this.options.pixelValuesToColorFn(values);\n    } else {\n      var numberOfValues = values.length;\n      var haveDataForAllBands = values.every(function (value) {\n        return value !== undefined && value !== _this4.noDataValue;\n      });\n\n      if (haveDataForAllBands) {\n        if (numberOfValues == 1) {\n          var value = values[0];\n\n          if (this.palette) {\n            var _this$palette$value = _slicedToArray(this.palette[value], 4),\n                r = _this$palette$value[0],\n                g = _this$palette$value[1],\n                b = _this$palette$value[2],\n                a = _this$palette$value[3];\n\n            return \"rgba(\".concat(r, \",\").concat(g, \",\").concat(b, \",\").concat(a / 255, \")\");\n          } else if (this.georasters[0].mins) {\n            var _this$georasters$ = this.georasters[0],\n                mins = _this$georasters$.mins,\n                ranges = _this$georasters$.ranges;\n            return this.scale((values[0] - mins[0]) / ranges[0]).hex();\n          } else if (this.currentStats.mins) {\n            var min = this.currentStats.mins[0];\n            var range = this.currentStats.ranges[0];\n            return this.scale((values[0] - min) / range).hex();\n          }\n        } else if (numberOfValues === 2) {\n          return \"rgb(\".concat(values[0], \",\").concat(values[1], \",0)\");\n        } else if (numberOfValues === 3) {\n          return \"rgb(\".concat(values[0], \",\").concat(values[1], \",\").concat(values[2], \")\");\n        } else if (numberOfValues === 4) {\n          return \"rgba(\".concat(values[0], \",\").concat(values[1], \",\").concat(values[2], \",\").concat(values[3] / 255, \")\");\n        }\n      }\n    }\n  },\n\n  /**\n   * Redraws the active map tiles updating the pixel values using the supplie callback\n   */\n  updateColors: function updateColors(pixelValuesToColorFn) {\n    var _this5 = this;\n\n    var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      debugLevel: -1\n    },\n        _ref4$debugLevel = _ref4.debugLevel,\n        debugLevel = _ref4$debugLevel === void 0 ? -1 : _ref4$debugLevel;\n\n    if (!pixelValuesToColorFn) {\n      throw new Error(\"Missing pixelValuesToColorFn function\");\n    } // if debugLevel is -1, set it to the default for the class\n\n\n    if (debugLevel === -1) debugLevel = this.debugLevel;\n    if (debugLevel >= 1) console.log(\"Start updating active tile pixel values\"); // update option to ensure correct colours at other zoom levels.\n\n    this.options.pixelValuesToColorFn = pixelValuesToColorFn;\n    var tiles = this.getActiveTiles();\n\n    if (!tiles) {\n      console.error(\"No active tiles available\");\n      return this;\n    }\n\n    if (debugLevel >= 1) console.log(\"Active tiles fetched\", tiles);\n    tiles.forEach(function (tile) {\n      var coords = tile.coords,\n          el = tile.el;\n\n      _this5.drawTile({\n        tile: el,\n        coords: coords,\n        context: el.getContext(\"2d\")\n      });\n    });\n    if (debugLevel >= 1) console.log(\"Finished updating active tile colours\");\n    return this;\n  },\n  getTiles: function getTiles() {\n    // transform _tiles object collection into an array\n    return Object.values(this._tiles);\n  },\n  getActiveTiles: function getActiveTiles() {\n    var _this6 = this;\n\n    var tiles = this.getTiles(); // only return valid tiles\n\n    return tiles.filter(function (tile) {\n      return _this6._isValidTile(tile.coords);\n    });\n  },\n  isSupportedProjection: function isSupportedProjection() {\n    if (this._isSupportedProjection === undefined) {\n      var projection = this.projection;\n\n      if (utm_utils_src_isUTM__WEBPACK_IMPORTED_MODULE_4___default()(projection)) {\n        this._isSupportedProjection = true;\n      } else if (PROJ4_SUPPORTED_PROJECTIONS.has(projection)) {\n        this._isSupportedProjection = true;\n      } else if (typeof (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default()) === \"function\" && \"EPSG:\".concat(projection) in (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default().defs)) {\n        this._isSupportedProjection = true;\n      } else if (typeof proj4 === \"function\" && typeof proj4.defs !== \"undefined\" && \"EPSG:\".concat(projection) in proj4.defs) {\n        this._isSupportedProjection = true;\n      } else {\n        this._isSupportedProjection = false;\n      }\n    }\n\n    return this._isSupportedProjection;\n  },\n  getProjectionString: function getProjectionString(projection) {\n    if (utm_utils_src_isUTM__WEBPACK_IMPORTED_MODULE_4___default()(projection)) {\n      return utm_utils_src_getProjString__WEBPACK_IMPORTED_MODULE_5___default()(projection);\n    }\n\n    return \"EPSG:\".concat(projection);\n  },\n  initBounds: function initBounds(options) {\n    if (!options) options = this.options;\n\n    if (!this._bounds) {\n      var debugLevel = this.debugLevel,\n          height = this.height,\n          width = this.width,\n          projection = this.projection,\n          xmin = this.xmin,\n          xmax = this.xmax,\n          ymin = this.ymin,\n          ymax = this.ymax; // check if map using Simple CRS\n\n      if (isSimpleCRS(this.getMapCRS())) {\n        if (height === width) {\n          this._bounds = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds([ORIGIN, [MAX_NORTHING, MAX_EASTING]]);\n        } else if (height > width) {\n          this._bounds = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds([ORIGIN, [MAX_NORTHING, MAX_EASTING / this.ratio]]);\n        } else if (width > height) {\n          this._bounds = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds([ORIGIN, [MAX_NORTHING * this.ratio, MAX_EASTING]]);\n        }\n      } else if (projection === EPSG4326) {\n        if (debugLevel >= 1) console.log(\"georaster projection is in \".concat(EPSG4326));\n        var minLatWest = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLng(ymin, xmin);\n        var maxLatEast = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLng(ymax, xmax);\n        this._bounds = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds(minLatWest, maxLatEast);\n      } else if (this.getProjector()) {\n        if (debugLevel >= 1) console.log(\"projection is UTM or supported by proj4\");\n        var bottomLeft = this.getProjector().forward({\n          x: xmin,\n          y: ymin\n        });\n\n        var _minLatWest = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLng(bottomLeft.y, bottomLeft.x);\n\n        var topRight = this.getProjector().forward({\n          x: xmax,\n          y: ymax\n        });\n\n        var _maxLatEast = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLng(topRight.y, topRight.x);\n\n        this._bounds = leaflet__WEBPACK_IMPORTED_MODULE_1__.latLngBounds(_minLatWest, _maxLatEast);\n      } else {\n        if (typeof (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default()) !== \"function\") {\n          throw \"You are using the lite version of georaster-layer-for-leaflet, which does not support rasters with the projection \".concat(projection, \".  Please try using the default build or add the projection definition to your global proj4.\");\n        } else {\n          throw \"GeoRasterLayer does not provide built-in support for rasters with the projection \".concat(projection, \".  Add the projection definition to your global proj4.\");\n        }\n      } // these values are used so we don't try to sample outside of the raster\n\n\n      this.xMinOfLayer = this._bounds.getWest();\n      this.xMaxOfLayer = this._bounds.getEast();\n      this.yMaxOfLayer = this._bounds.getNorth();\n      this.yMinOfLayer = this._bounds.getSouth();\n      options.bounds = this._bounds;\n    }\n  },\n  getProjector: function getProjector() {\n    if (this.isSupportedProjection()) {\n      if (!(proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default()) && !proj4) {\n        throw \"proj4 must be found in the global scope in order to load a raster that uses this projection\";\n      }\n\n      if (!this._projector) {\n        var projString = this.getProjectionString(this.projection);\n        if (this.debugLevel >= 1) log({\n          projString: projString\n        });\n        var proj4Lib;\n\n        if (projString.startsWith(\"EPSG\")) {\n          if (typeof proj4 === \"function\" && typeof proj4.defs === \"function\" && projString in proj4.defs) {\n            proj4Lib = proj4;\n          } else if (typeof (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default()) === \"function\" && typeof (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default().defs) === \"function\" && projString in (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default().defs)) {\n            proj4Lib = (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default());\n          } else {\n            throw \"[georaster-layer-for-leaflet] projection not found in proj4 instance\";\n          }\n        } else {\n          if (typeof proj4 === \"function\") {\n            proj4Lib = proj4;\n          } else if (typeof (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default()) === \"function\") {\n            proj4Lib = (proj4_fully_loaded__WEBPACK_IMPORTED_MODULE_6___default());\n          } else {\n            throw \"[georaster-layer-for-leaflet] projection not found in proj4 instance\";\n          }\n        }\n\n        this._projector = proj4Lib(projString, \"EPSG:\".concat(EPSG4326));\n        if (this.debugLevel >= 1) console.log(\"projector set\");\n      }\n\n      return this._projector;\n    }\n  },\n  same: function same(array, key) {\n    return new Set(array.map(function (item) {\n      return item[key];\n    })).size === 1;\n  }\n});\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") {\n  window[\"GeoRasterLayer\"] = GeoRasterLayer;\n}\n\nif (typeof self !== \"undefined\") {\n  self[\"GeoRasterLayer\"] = GeoRasterLayer;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GeoRasterLayer); // Explicitly exports public types//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2VvcmFzdGVyLWxheWVyLWZvci1sZWFmbGV0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBOzs7Ozs7OztBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBZ0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBO0FBR0E7OztBQUNBO0FBQUE7O0FBQUE7QUFBQTs7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBUUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUNBOztBQWNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFBQTtBQUFBOztBQUdBO0FBRUE7QUFDQTtBQUFBO0FBQUE7O0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBR0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQUE7QUFBQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7O0FBTUE7QUFNQTtBQUNBO0FBR0E7OztBQUNBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTs7QUFBQTtBQUdBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBWEE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBVUE7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7O0FBU0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFEQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUdBOztBQUdBO0FBRUE7QUFHQTtBQUNBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFFQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFHQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7O0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBR0E7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7O0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBS0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBR0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTs7QUFiQTtBQWVBO0FBQ0E7QUFEQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBT0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7O0FBRUE7QUFPQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUdBOztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBOztBQUdBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBR0E7O0FBSEE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVkE7O0FBTEE7QUFLQTs7QUFZQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFyQ0E7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUEyQ0E7QUFDQTs7QUFDQTtBQUFBOztBQUNBO0FBQUE7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFDQTs7QUFOQTtBQVNBOztBQUlBO0FBQUE7O0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBOzs7QUFHQTs7QUFHQTs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBWEE7QUFhQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXpFQTs7QUFRQTtBQUFBOztBQUFBO0FBQUE7QUFrRUE7QUExRUE7O0FBQUE7QUEyRUE7QUF6SEE7O0FBMENBOztBQTFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBOztBQUFBO0FBMENBO0FBMUNBO0FBQUE7O0FBQUE7QUE0SEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFUQTtBQVdBO0FBQ0E7QUFDQTs7QUFFQTs7QUFDQTtBQWpKQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQW1KQTs7QUFuSkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFzSkE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFHQTs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFDQTtBQUlBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFBQTtBQUFBOztBQUdBO0FBQUE7QUFBQTs7QUFFQTs7O0FBR0E7QUFHQTs7QUFDQTs7QUFHQTs7QUFHQTtBQUNBOztBQUNBOztBQUNBOztBQUdBO0FBQ0E7O0FBQ0E7O0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUdBOztBQUFBO0FBREE7QUFBQTtBQUNBO0FBQUE7O0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUVBOztBQUdBO0FBRUE7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBOztBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUNBOztBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUVBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQXQ3QkE7QUF5N0JBOztBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9HZW9SYXN0ZXJMYXllci8uL3NyYy9nZW9yYXN0ZXItbGF5ZXItZm9yLWxlYWZsZXQudHM/NWVjZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgcHJvajQgKi9cbmltcG9ydCBcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiO1xuaW1wb3J0ICogYXMgTCBmcm9tIFwibGVhZmxldFwiO1xuaW1wb3J0IGNocm9tYSBmcm9tIFwiY2hyb21hLWpzXCI7XG5pbXBvcnQgZ2VvY2FudmFzIGZyb20gXCJnZW9jYW52YXNcIjtcbmltcG9ydCBpc1VUTSBmcm9tIFwidXRtLXV0aWxzL3NyYy9pc1VUTVwiO1xuaW1wb3J0IGdldFByb2pTdHJpbmcgZnJvbSBcInV0bS11dGlscy9zcmMvZ2V0UHJvalN0cmluZ1wiO1xuaW1wb3J0IHR5cGUgeyBDb29yZHMsIERvbmVDYWxsYmFjaywgTGF0TG5nQm91bmRzLCBMYXRMbmdUdXBsZSB9IGZyb20gXCJsZWFmbGV0XCI7XG5pbXBvcnQgcHJvajRGdWxseUxvYWRlZCBmcm9tIFwicHJvajQtZnVsbHktbG9hZGVkXCI7XG5pbXBvcnQgeyBHZW9FeHRlbnQgfSBmcm9tIFwiZ2VvLWV4dGVudFwiO1xuaW1wb3J0IHNuYXAgZnJvbSBcInNuYXAtYmJveFwiO1xuXG5pbXBvcnQgdHlwZSB7XG4gIEN1c3RvbUNSUyxcbiAgQ3VzdG9tQ1NTU3R5bGVEZWNsYXJhdGlvbixcbiAgR2VvUmFzdGVyTGF5ZXJPcHRpb25zLFxuICBHZW9SYXN0ZXIsXG4gIEdlb1Jhc3RlcktleXMsXG4gIEdldFJhc3Rlck9wdGlvbnMsXG4gIERyYXdUaWxlT3B0aW9ucyxcbiAgTWFzayxcbiAgTWFza1N0cmF0ZWd5LFxuICBQaXhlbFZhbHVlc1RvQ29sb3JGbixcbiAgVGlsZVxufSBmcm9tIFwiLi90eXBlc1wiO1xuXG5jb25zdCBFUFNHNDMyNiA9IDQzMjY7XG5jb25zdCBQUk9KNF9TVVBQT1JURURfUFJPSkVDVElPTlMgPSBuZXcgU2V0KFszNzg1LCAzODU3LCA0MjY5LCA0MzI2LCA5MDA5MTMsIDEwMjExM10pO1xuY29uc3QgTUFYX05PUlRISU5HID0gMTAwMDtcbmNvbnN0IE1BWF9FQVNUSU5HID0gMTAwMDtcbmNvbnN0IE9SSUdJTjogTGF0TG5nVHVwbGUgPSBbMCwgMF07XG5cbmNvbnN0IGxvZyA9IChvYmo6IGFueSkgPT4gY29uc29sZS5sb2coXCJbZ2VvcmFzdGVyLWxheWVyLWZvci1sZWFmbGV0XSBcIiwgb2JqKTtcblxuLy8gZmlndXJlIG91dCBpZiBzaW1wbGUgQ1JTXG4vLyBldmVuIGlmIG5vdCBjcmVhdGVkIHdpdGggc2FtZSBpbnN0YW5jZSBvZiBMZWFmbGV0SlNcbmNvbnN0IGlzU2ltcGxlQ1JTID0gKGNyczogQ3VzdG9tQ1JTKSA9PlxuICBjcnMgPT09IEwuQ1JTLlNpbXBsZSB8fFxuICAoIWNycy5jb2RlICYmXG4gICAgY3JzLmluZmluaXRlICYmXG4gICAgY3JzPy50cmFuc2Zvcm1hdGlvbj8uX2EgPT09IDEgJiZcbiAgICBjcnM/LnRyYW5zZm9ybWF0aW9uPy5fYiA9PT0gMCAmJlxuICAgIGNycz8udHJhbnNmb3JtYXRpb24/Ll9jID09PSAtMSAmJlxuICAgIGNycz8udHJhbnNmb3JtYXRpb24/Ll9kID09PSAwKTtcblxuY29uc3QgR2VvUmFzdGVyTGF5ZXI6IChuZXcgKG9wdGlvbnM6IEdlb1Jhc3RlckxheWVyT3B0aW9ucykgPT4gYW55KSAmIHR5cGVvZiBMLkNsYXNzID0gTC5HcmlkTGF5ZXIuZXh0ZW5kKHtcbiAgb3B0aW9uczoge1xuICAgIHVwZGF0ZVdoZW5JZGxlOiB0cnVlLFxuICAgIHVwZGF0ZVdoZW5ab29taW5nOiBmYWxzZSxcbiAgICBrZWVwQnVmZmVyOiAyNSxcbiAgICByZXNvbHV0aW9uOiAyICoqIDUsXG4gICAgZGVidWdMZXZlbDogMFxuICB9LFxuXG4gIGluaXRpYWxpemU6IGZ1bmN0aW9uIChvcHRpb25zOiBHZW9SYXN0ZXJMYXllck9wdGlvbnMpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKG9wdGlvbnMuZ2VvcmFzdGVycykge1xuICAgICAgICB0aGlzLmdlb3Jhc3RlcnMgPSBvcHRpb25zLmdlb3Jhc3RlcnM7XG4gICAgICB9IGVsc2UgaWYgKG9wdGlvbnMuZ2VvcmFzdGVyKSB7XG4gICAgICAgIHRoaXMuZ2VvcmFzdGVycyA9IFtvcHRpb25zLmdlb3Jhc3Rlcl07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgaW5pdGlhbGl6ZWQgYSBHZW9SYXN0ZXJMYXllciB3aXRob3V0IGEgZ2VvcmFzdGVyIG9yIGdlb3Jhc3RlcnMgdmFsdWUuXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy5zb3VyY2VUeXBlID09PSBcInVybFwiKSB7XG4gICAgICAgIG9wdGlvbnMudXBkYXRlV2hlbklkbGUgPSBmYWxzZTtcbiAgICAgICAgb3B0aW9ucy51cGRhdGVXaGVuWm9vbWluZyA9IHRydWU7XG4gICAgICAgIG9wdGlvbnMua2VlcEJ1ZmZlciA9IDE2O1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5yZXNhbXBsZU1ldGhvZCkge1xuICAgICAgICB0aGlzLnJlc2FtcGxlTWV0aG9kID0gb3B0aW9ucy5yZXNhbXBsZU1ldGhvZDtcbiAgICAgIH1cblxuICAgICAgLypcbiAgICAgICAgICBVbnBhY2tpbmcgdmFsdWVzIGZvciB1c2UgbGF0ZXIuXG4gICAgICAgICAgV2UgZG8gdGhpcyBpbiBvcmRlciB0byBpbmNyZWFzZSBzcGVlZC5cbiAgICAgICovXG4gICAgICBjb25zdCBrZXlzID0gW1xuICAgICAgICBcImhlaWdodFwiLFxuICAgICAgICBcIndpZHRoXCIsXG4gICAgICAgIFwibm9EYXRhVmFsdWVcIixcbiAgICAgICAgXCJwYWxldHRlXCIsXG4gICAgICAgIFwicGl4ZWxIZWlnaHRcIixcbiAgICAgICAgXCJwaXhlbFdpZHRoXCIsXG4gICAgICAgIFwicHJvamVjdGlvblwiLFxuICAgICAgICBcInNvdXJjZVR5cGVcIixcbiAgICAgICAgXCJ4bWluXCIsXG4gICAgICAgIFwieG1heFwiLFxuICAgICAgICBcInltaW5cIixcbiAgICAgICAgXCJ5bWF4XCJcbiAgICAgIF07XG4gICAgICBpZiAodGhpcy5nZW9yYXN0ZXJzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAga2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXMuc2FtZSh0aGlzLmdlb3Jhc3RlcnMsIGtleSkpIHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHRoaXMuZ2VvcmFzdGVyc1swXVtrZXldO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJhbGwgR2VvUmFzdGVycyBtdXN0IGhhdmUgdGhlIHNhbWUgXCIgKyBrZXkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZ2VvcmFzdGVycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAga2V5cy5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgdGhpc1trZXldID0gdGhpcy5nZW9yYXN0ZXJzWzBdW2tleV07XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9jYWNoZSA9IHtcbiAgICAgICAgaW5uZXJUaWxlOiB7fSxcbiAgICAgICAgdGlsZToge31cbiAgICAgIH07XG5cbiAgICAgIHRoaXMuZXh0ZW50ID0gbmV3IEdlb0V4dGVudChbdGhpcy54bWluLCB0aGlzLnltaW4sIHRoaXMueG1heCwgdGhpcy55bWF4XSwgeyBzcnM6IHRoaXMucHJvamVjdGlvbiB9KTtcblxuICAgICAgLy8gdXNlZCBsYXRlciBpZiBzaW1wbGUgcHJvamVjdGlvblxuICAgICAgdGhpcy5yYXRpbyA9IHRoaXMuaGVpZ2h0IC8gdGhpcy53aWR0aDtcblxuICAgICAgdGhpcy5kZWJ1Z0xldmVsID0gb3B0aW9ucy5kZWJ1Z0xldmVsO1xuICAgICAgaWYgKHRoaXMuZGVidWdMZXZlbCA+PSAxKSBsb2coeyBvcHRpb25zIH0pO1xuXG4gICAgICBpZiAodGhpcy5nZW9yYXN0ZXJzLmV2ZXJ5KChnZW9yYXN0ZXI6IEdlb1Jhc3RlcikgPT4gdHlwZW9mIGdlb3Jhc3Rlci52YWx1ZXMgPT09IFwib2JqZWN0XCIpKSB7XG4gICAgICAgIHRoaXMucmFzdGVycyA9IHRoaXMuZ2VvcmFzdGVycy5yZWR1Y2UoKHJlc3VsdDogbnVtYmVyW11bXVtdLCBnZW9yYXN0ZXI6IEdlb1Jhc3RlcikgPT4ge1xuICAgICAgICAgIC8vIGFkZGVkIGRvdWJsZS1jaGVjayBvZiB2YWx1ZXMgdG8gbWFrZSB0eXBlc2NyaXB0IGxpbnRlciBhbmQgY29tcGlsZXIgaGFwcHlcbiAgICAgICAgICBpZiAoZ2VvcmFzdGVyLnZhbHVlcykge1xuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmNvbmNhdChnZW9yYXN0ZXIudmFsdWVzKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBbXSk7XG4gICAgICAgIGlmICh0aGlzLmRlYnVnTGV2ZWwgPiAxKSBjb25zb2xlLmxvZyhcInRoaXMucmFzdGVyczpcIiwgdGhpcy5yYXN0ZXJzKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG9wdGlvbnMubWFzaykge1xuICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubWFzayA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIHRoaXMubWFzayA9IGZldGNoKG9wdGlvbnMubWFzaykudGhlbihyID0+IHIuanNvbigpKSBhcyBQcm9taXNlPE1hc2s+O1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLm1hc2sgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgICAgICB0aGlzLm1hc2sgPSBQcm9taXNlLnJlc29sdmUob3B0aW9ucy5tYXNrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGRlZmF1bHQgbWFzayBzcnMgaXMgdGhlIEVQU0c6NDMyNiBwcm9qZWN0aW9uIHVzZWQgYnkgR2VvSlNPTlxuICAgICAgICB0aGlzLm1hc2tfc3JzID0gb3B0aW9ucy5tYXNrX3NycyB8fCBcIkVQU0c6NDMyNlwiO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm1hc2tfc3RyYXRlZ3kgPSAob3B0aW9ucy5tYXNrX3N0cmF0ZWd5IHx8IFwib3V0c2lkZVwiKSBhcyBNYXNrU3RyYXRlZ3k7XG5cbiAgICAgIHRoaXMuY2hyb21hID0gY2hyb21hO1xuICAgICAgdGhpcy5zY2FsZSA9IGNocm9tYS5zY2FsZSgpO1xuXG4gICAgICAvLyBjb3VsZCBwcm9iYWJseSByZXBsYWNlIHNvbWUgZGF5IHdpdGggYSBzaW1wbGVcbiAgICAgIC8vIChmb3IgbGV0IGsgaW4gb3B0aW9ucykgeyB0aGlzLm9wdGlvbnNba10gPSBvcHRpb25zW2tdOyB9XG4gICAgICAvLyBidXQgbmVlZCB0byBmaW5kIGEgd2F5IGFyb3VuZCBUeXBlU2NyaXB0IGFueSBpc3N1ZXNcbiAgICAgIEwuVXRpbC5zZXRPcHRpb25zKHRoaXMsIG9wdGlvbnMpO1xuXG4gICAgICAvKlxuICAgICAgICAgIENhY2hpbmcgdGhlIGNvbnN0YW50IHRpbGUgc2l6ZSwgc28gd2UgZG9uJ3QgcmVjYWxjdWxhdGUgZXZlcnl0aW1lIHdlXG4gICAgICAgICAgY3JlYXRlIGEgbmV3IHRpbGVcbiAgICAgICovXG4gICAgICBjb25zdCB0aWxlU2l6ZSA9IHRoaXMuZ2V0VGlsZVNpemUoKTtcbiAgICAgIHRoaXMudGlsZUhlaWdodCA9IHRpbGVTaXplLnk7XG4gICAgICB0aGlzLnRpbGVXaWR0aCA9IHRpbGVTaXplLng7XG5cbiAgICAgIGlmICh0aGlzLmdlb3Jhc3RlcnMubGVuZ3RoID4gMSAmJiAhb3B0aW9ucy5waXhlbFZhbHVlc1RvQ29sb3JGbikge1xuICAgICAgICB0aHJvdyBcInlvdSBtdXN0IHBhc3MgaW4gYSBwaXhlbFZhbHVlc1RvQ29sb3JGbiBpZiB5b3UgYXJlIGNvbWJpbmluZyByYXN0ZXJzXCI7XG4gICAgICB9XG5cbiAgICAgIC8vIHRvdGFsIG51bWJlciBvZiBiYW5kcyBhY3Jvc3MgYWxsIGdlb3Jhc3RlcnNcbiAgICAgIHRoaXMubnVtQmFuZHMgPSB0aGlzLmdlb3Jhc3RlcnMucmVkdWNlKCh0b3RhbDogbnVtYmVyLCBnOiBHZW9SYXN0ZXIpID0+IHRvdGFsICsgZy5udW1iZXJPZlJhc3RlcnMsIDApO1xuICAgICAgaWYgKHRoaXMuZGVidWdMZXZlbCA+IDEpIGNvbnNvbGUubG9nKFwidGhpcy5udW1CYW5kczpcIiwgdGhpcy5udW1CYW5kcyk7XG5cbiAgICAgIC8vIGluLWNhc2Ugd2Ugd2FudCB0byB0cmFjayBkeW5hbWljL3J1bm5pbmcgc3RhdHMgb2YgYWxsIHBpeGVscyBmZXRjaGVkXG4gICAgICB0aGlzLmN1cnJlbnRTdGF0cyA9IHtcbiAgICAgICAgbWluczogbmV3IEFycmF5KHRoaXMubnVtQmFuZHMpLFxuICAgICAgICBtYXhzOiBuZXcgQXJyYXkodGhpcy5udW1CYW5kcyksXG4gICAgICAgIHJhbmdlczogbmV3IEFycmF5KHRoaXMubnVtQmFuZHMpXG4gICAgICB9O1xuXG4gICAgICBpZiAoXG4gICAgICAgIHRoaXMuZ2VvcmFzdGVycy5sZW5ndGggPT09IDEgJiZcbiAgICAgICAgdGhpcy5nZW9yYXN0ZXJzWzBdLnNvdXJjZVR5cGUgPT09IFwidXJsXCIgJiZcbiAgICAgICAgdGhpcy5nZW9yYXN0ZXJzWzBdLm51bWJlck9mUmFzdGVycyA9PT0gMSAmJlxuICAgICAgICAhb3B0aW9ucy5waXhlbFZhbHVlc1RvQ29sb3JGblxuICAgICAgKSB7XG4gICAgICAgIHRoaXMuY2FsY1N0YXRzID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gaWYgeW91IGhhdmVuJ3Qgc3BlY2lmaWVkIGEgcGl4ZWxWYWx1ZXNUb0NvbG9yRm5cbiAgICAgIC8vIGFuZCB0aGUgaW1hZ2UgaXMgWUNiQ3IsIGFkZCBhIGZ1bmN0aW9uIHRvIGNvbnZlcnQgWUNiQ3JcbiAgICAgIHRoaXMuY2hlY2tJZllDYkNyID0gbmV3IFByb21pc2UoYXN5bmMgcmVzb2x2ZSA9PiB7XG4gICAgICAgIGlmICh0aGlzLm9wdGlvbnMucGl4ZWxWYWx1ZXNUb0NvbG9yRm4pIHJldHVybiByZXNvbHZlKHRydWUpO1xuICAgICAgICBpZiAodGhpcy5nZW9yYXN0ZXJzLmxlbmd0aCA9PT0gMSAmJiB0aGlzLmdlb3Jhc3RlcnNbMF0ubnVtYmVyT2ZSYXN0ZXJzID09PSAzKSB7XG4gICAgICAgICAgY29uc3QgaW1hZ2UgPSBhd2FpdCB0aGlzLmdlb3Jhc3RlcnNbMF0uX2dlb3RpZmY/LmdldEltYWdlKCk7XG4gICAgICAgICAgaWYgKGltYWdlPy5maWxlRGlyZWN0b3J5Py5QaG90b21ldHJpY0ludGVycHJldGF0aW9uID09PSA2KSB7XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMucGl4ZWxWYWx1ZXNUb0NvbG9yRm4gPSAodmFsdWVzOiBudW1iZXJbXSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCByID0gTWF0aC5yb3VuZCh2YWx1ZXNbMF0gKyAxLjQwMiAqICh2YWx1ZXNbMl0gLSAweDgwKSk7XG4gICAgICAgICAgICAgIGNvbnN0IGcgPSBNYXRoLnJvdW5kKHZhbHVlc1swXSAtIDAuMzQ0MTQgKiAodmFsdWVzWzFdIC0gMHg4MCkgLSAwLjcxNDE0ICogKHZhbHVlc1syXSAtIDB4ODApKTtcbiAgICAgICAgICAgICAgY29uc3QgYiA9IE1hdGgucm91bmQodmFsdWVzWzBdICsgMS43NzIgKiAodmFsdWVzWzFdIC0gMHg4MCkpO1xuICAgICAgICAgICAgICByZXR1cm4gYHJnYigke3J9LCR7Z30sJHtifSlgO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc29sdmUodHJ1ZSk7XG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVSUk9SIGluaXRpYWxpemluZyBHZW9USUZGTGF5ZXJcIiwgZXJyb3IpO1xuICAgIH1cbiAgfSxcblxuICBnZXRSYXN0ZXJzOiBmdW5jdGlvbiAob3B0aW9uczogR2V0UmFzdGVyT3B0aW9ucykge1xuICAgIGNvbnN0IHtcbiAgICAgIGlubmVyVGlsZVRvcExlZnRQb2ludCxcbiAgICAgIGhlaWdodE9mU2FtcGxlSW5TY3JlZW5QaXhlbHMsXG4gICAgICB3aWR0aE9mU2FtcGxlSW5TY3JlZW5QaXhlbHMsXG4gICAgICB6b29tLFxuICAgICAgbnVtYmVyT2ZTYW1wbGVzQWNyb3NzLFxuICAgICAgbnVtYmVyT2ZTYW1wbGVzRG93bixcbiAgICAgIHltYXgsXG4gICAgICB4bWluXG4gICAgfSA9IG9wdGlvbnM7XG4gICAgaWYgKHRoaXMuZGVidWdMZXZlbCA+PSAxKSBjb25zb2xlLmxvZyhcInN0YXJ0aW5nIGdldFJhc3RlcnMgd2l0aCBvcHRpb25zOlwiLCBvcHRpb25zKTtcblxuICAgIC8vIGNhbGxlZCBpZiBnZW9yYXN0ZXIgd2FzIGNvbnN0cnVjdGVkIGZyb20gVVJMIGFuZCB3ZSBuZWVkIHRvIGdldFxuICAgIC8vIGRhdGEgc2VwYXJhdGVseSBmb3IgZWFjaCB0aWxlXG4gICAgLy8gYWthICdDT0cgbW9kZSdcblxuICAgIC8qXG4gICAgICBUaGlzIGZ1bmN0aW9uIHRha2VzIGluIGNvb3JkaW5hdGVzIGluIHRoZSByZW5kZXJlZCBpbWFnZSBpbm5lciB0aWxlIGFuZFxuICAgICAgcmV0dXJucyB0aGUgeSBhbmQgeCB2YWx1ZXMgaW4gdGhlIG9yaWdpbmFsIHJhc3RlclxuICAgICovXG4gICAgY29uc3QgcmFzdGVyQ29vcmRzRm9yVGlsZUNvb3JkcyA9IChoOiBudW1iZXIsIHc6IG51bWJlcik6IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSB8IG51bGwgPT4ge1xuICAgICAgY29uc3QgeEluTWFwUGl4ZWxzID0gaW5uZXJUaWxlVG9wTGVmdFBvaW50LnggKyB3ICogd2lkdGhPZlNhbXBsZUluU2NyZWVuUGl4ZWxzO1xuICAgICAgY29uc3QgeUluTWFwUGl4ZWxzID0gaW5uZXJUaWxlVG9wTGVmdFBvaW50LnkgKyBoICogaGVpZ2h0T2ZTYW1wbGVJblNjcmVlblBpeGVscztcblxuICAgICAgY29uc3QgbWFwUG9pbnQgPSBMLnBvaW50KHhJbk1hcFBpeGVscywgeUluTWFwUGl4ZWxzKTtcbiAgICAgIGlmICh0aGlzLmRlYnVnTGV2ZWwgPj0gMSkgbG9nKHsgbWFwUG9pbnQgfSk7XG5cbiAgICAgIGNvbnN0IHsgbGF0LCBsbmcgfSA9IHRoaXMuZ2V0TWFwKCkudW5wcm9qZWN0KG1hcFBvaW50LCB6b29tKTtcblxuICAgICAgaWYgKHRoaXMucHJvamVjdGlvbiA9PT0gRVBTRzQzMjYpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB5OiBNYXRoLnJvdW5kKCh5bWF4IC0gbGF0KSAvIHRoaXMucGl4ZWxIZWlnaHQpLFxuICAgICAgICAgIHg6IE1hdGgucm91bmQoKGxuZyAtIHhtaW4pIC8gdGhpcy5waXhlbFdpZHRoKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmdldFByb2plY3RvcigpKSB7XG4gICAgICAgIC8qIHNvdXJjZSByYXN0ZXIgZG9lc24ndCB1c2UgbGF0aXR1ZGUgYW5kIGxvbmdpdHVkZSxcbiAgICAgICAgICAgc28gbmVlZCB0byByZXByb2plY3QgcG9pbnQgZnJvbSBsYXQvbG9uZyB0byBwcm9qZWN0aW9uIG9mIHJhc3RlclxuICAgICAgICAqL1xuICAgICAgICBjb25zdCBbeCwgeV0gPSB0aGlzLmdldFByb2plY3RvcigpLmludmVyc2UoW2xuZywgbGF0XSk7XG4gICAgICAgIGlmICh4ID09PSBJbmZpbml0eSB8fCB5ID09PSBJbmZpbml0eSkge1xuICAgICAgICAgIGlmICh0aGlzLmRlYnVnTGV2ZWwgPj0gMSkgY29uc29sZS5lcnJvcihcInByb2plY3RvciBjb252ZXJ0ZWRcIiwgW2xuZywgbGF0XSwgXCJ0b1wiLCBbeCwgeV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgeTogTWF0aC5yb3VuZCgoeW1heCAtIHkpIC8gdGhpcy5waXhlbEhlaWdodCksXG4gICAgICAgICAgeDogTWF0aC5yb3VuZCgoeCAtIHhtaW4pIC8gdGhpcy5waXhlbFdpZHRoKVxuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIGNhcmVmdWwgbm90IHRvIGZsaXAgbWluX3kvbWF4X3kgaGVyZVxuICAgIGNvbnN0IHRvcExlZnQgPSByYXN0ZXJDb29yZHNGb3JUaWxlQ29vcmRzKDAsIDApO1xuICAgIGNvbnN0IGJvdHRvbVJpZ2h0ID0gcmFzdGVyQ29vcmRzRm9yVGlsZUNvb3JkcyhudW1iZXJPZlNhbXBsZXNEb3duLCBudW1iZXJPZlNhbXBsZXNBY3Jvc3MpO1xuXG4gICAgY29uc3QgZ2V0VmFsdWVzT3B0aW9ucyA9IHtcbiAgICAgIGJvdHRvbTogYm90dG9tUmlnaHQ/LnksXG4gICAgICBoZWlnaHQ6IG51bWJlck9mU2FtcGxlc0Rvd24sXG4gICAgICBsZWZ0OiB0b3BMZWZ0Py54LFxuICAgICAgcmlnaHQ6IGJvdHRvbVJpZ2h0Py54LFxuICAgICAgdG9wOiB0b3BMZWZ0Py55LFxuICAgICAgd2lkdGg6IG51bWJlck9mU2FtcGxlc0Fjcm9zc1xuICAgIH07XG5cbiAgICBpZiAoIU9iamVjdC52YWx1ZXMoZ2V0VmFsdWVzT3B0aW9ucykuZXZlcnkoaXQgPT4gaXQgIT09IHVuZGVmaW5lZCAmJiBpc0Zpbml0ZShpdCkpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiZ2V0UmFzdGVycyBmYWlsZWQgYmVjYXVzZSBub3QgYWxsIHZhbHVlcyBhcmUgZmluaXRlOlwiLCBnZXRWYWx1ZXNPcHRpb25zKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gIW5vdGU6IFRoZSB0eXBlcyBuZWVkIGNvbmZpcm1hdGlvbiAtIFNGUiAyMDIxLTAxLTIwXG4gICAgICByZXR1cm4gUHJvbWlzZS5hbGwoXG4gICAgICAgIHRoaXMuZ2VvcmFzdGVycy5tYXAoKGdlb3Jhc3RlcjogR2VvUmFzdGVyKSA9PlxuICAgICAgICAgIGdlb3Jhc3Rlci5nZXRWYWx1ZXMoeyAuLi5nZXRWYWx1ZXNPcHRpb25zLCByZXNhbXBsZU1ldGhvZDogdGhpcy5yZXNhbXBsZU1ldGhvZCB8fCBcImJpbGluZWFyXCIgfSlcbiAgICAgICAgKVxuICAgICAgKS50aGVuKHZhbHVlc0J5R2VvUmFzdGVyID0+XG4gICAgICAgIHZhbHVlc0J5R2VvUmFzdGVyLnJlZHVjZSgocmVzdWx0OiBudW1iZXJbXVtdW10sIHZhbHVlcykgPT4ge1xuICAgICAgICAgIHJlc3VsdCA9IHJlc3VsdC5jb25jYXQodmFsdWVzIGFzIG51bWJlcltdW10pO1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0sIFtdKVxuICAgICAgKTtcbiAgICB9XG4gIH0sXG5cbiAgY3JlYXRlVGlsZTogZnVuY3Rpb24gKGNvb3JkczogQ29vcmRzLCBkb25lOiBEb25lQ2FsbGJhY2spIHtcbiAgICAvKiBUaGlzIHRpbGUgaXMgdGhlIHNxdWFyZSBwaWVjZSBvZiB0aGUgTGVhZmxldCBtYXAgdGhhdCB3ZSBkcmF3IG9uICovXG4gICAgY29uc3QgdGlsZSA9IEwuRG9tVXRpbC5jcmVhdGUoXCJjYW52YXNcIiwgXCJsZWFmbGV0LXRpbGVcIikgYXMgSFRNTENhbnZhc0VsZW1lbnQ7XG5cbiAgICAvLyB3ZSBkbyB0aGlzIGJlY2F1c2Ugc29tZXRpbWVzIGNzcyBub3JtYWxpemVycyB3aWxsIHNldCAqIHRvIGJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgICB0aWxlLnN0eWxlLmJveFNpemluZyA9IFwiY29udGVudC1ib3hcIjtcblxuICAgIC8vIHN0YXJ0IHRpbGUgaGlkZGVuXG4gICAgdGlsZS5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcblxuICAgIGNvbnN0IGNvbnRleHQgPSB0aWxlLmdldENvbnRleHQoXCIyZFwiKTtcblxuICAgIC8vIG5vdGUgdGhhdCB3ZSBhcmVuJ3Qgc2V0dGluZyB0aGUgdGlsZSBoZWlnaHQgb3Igd2lkdGggaGVyZVxuICAgIC8vIGRyYXdUaWxlIGR5bmFtaWNhbGx5IHNldHMgdGhlIHdpZHRoIGFuZCBwYWRkaW5nIGJhc2VkIG9uXG4gICAgLy8gaG93IG11Y2ggdGhlIGdlb3Jhc3RlciB0YWtlcyB1cCB0aGUgdGlsZSBhcmVhXG4gICAgdGhpcy5kcmF3VGlsZSh7IHRpbGUsIGNvb3JkcywgY29udGV4dCwgZG9uZSB9KTtcblxuICAgIHJldHVybiB0aWxlO1xuICB9LFxuXG4gIGRyYXdUaWxlOiBmdW5jdGlvbiAoeyB0aWxlLCBjb29yZHMsIGNvbnRleHQsIGRvbmUgfTogRHJhd1RpbGVPcHRpb25zKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHsgZGVidWdMZXZlbCA9IDAgfSA9IHRoaXM7XG5cbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDIpIGNvbnNvbGUubG9nKFwic3RhcnRpbmcgZHJhd1RpbGUgd2l0aFwiLCB7IHRpbGUsIGNvb3JkcywgY29udGV4dCwgZG9uZSB9KTtcblxuICAgICAgLy8gc3RyaW5naWZpZWQgaGFzaCBvZiB0aWxlIGNvb3JkaW5hdGVzIGZvciBjYWNoaW5nIHB1cnBvc2VzXG4gICAgICBjb25zdCBjYWNoZUtleSA9IFtjb29yZHMueCwgY29vcmRzLnksIGNvb3Jkcy56XS5qb2luKFwiLFwiKTtcbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDIpIGxvZyh7IGNhY2hlS2V5IH0pO1xuXG4gICAgICBjb25zdCBtYXBDUlMgPSB0aGlzLmdldE1hcENSUygpO1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMikgbG9nKHsgbWFwQ1JTIH0pO1xuXG4gICAgICBjb25zdCBpblNpbXBsZUNSUyA9IGlzU2ltcGxlQ1JTKG1hcENSUyk7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAyKSBsb2coeyBpblNpbXBsZUNSUyB9KTtcblxuICAgICAgLy8gVW5wYWNraW5nIHZhbHVlcyBmb3IgaW5jcmVhc2VkIHNwZWVkXG4gICAgICBjb25zdCB7IHJhc3RlcnMsIHhtaW4sIHhtYXgsIHltaW4sIHltYXggfSA9IHRoaXM7XG4gICAgICBjb25zdCByYXN0ZXJIZWlnaHQgPSB0aGlzLmhlaWdodDtcbiAgICAgIGNvbnN0IHJhc3RlcldpZHRoID0gdGhpcy53aWR0aDtcblxuICAgICAgY29uc3QgZXh0ZW50T2ZMYXllciA9IG5ldyBHZW9FeHRlbnQodGhpcy5nZXRCb3VuZHMoKSwgeyBzcnM6IGluU2ltcGxlQ1JTID8gXCJzaW1wbGVcIiA6IDQzMjYgfSk7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAyKSBsb2coeyBleHRlbnRPZkxheWVyIH0pO1xuXG4gICAgICBjb25zdCBwaXhlbEhlaWdodCA9IGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZMYXllci5oZWlnaHQgLyByYXN0ZXJIZWlnaHQgOiB0aGlzLnBpeGVsSGVpZ2h0O1xuICAgICAgY29uc3QgcGl4ZWxXaWR0aCA9IGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZMYXllci53aWR0aCAvIHJhc3RlcldpZHRoIDogdGhpcy5waXhlbFdpZHRoO1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMikgbG9nKHsgcGl4ZWxIZWlnaHQsIHBpeGVsV2lkdGggfSk7XG5cbiAgICAgIC8vIHRoZXNlIHZhbHVlcyBhcmUgdXNlZCwgc28gd2UgZG9uJ3QgdHJ5IHRvIHNhbXBsZSBvdXRzaWRlIG9mIHRoZSByYXN0ZXJcbiAgICAgIGNvbnN0IHsgeE1pbk9mTGF5ZXIsIHhNYXhPZkxheWVyLCB5TWluT2ZMYXllciwgeU1heE9mTGF5ZXIgfSA9IHRoaXM7XG4gICAgICBjb25zdCBib3VuZHNPZlRpbGUgPSB0aGlzLl90aWxlQ29vcmRzVG9Cb3VuZHMoY29vcmRzKTtcbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDIpIGxvZyh7IGJvdW5kc09mVGlsZSB9KTtcblxuICAgICAgY29uc3QgeyBjb2RlIH0gPSBtYXBDUlM7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAyKSBsb2coeyBjb2RlIH0pO1xuICAgICAgY29uc3QgZXh0ZW50T2ZUaWxlID0gbmV3IEdlb0V4dGVudChib3VuZHNPZlRpbGUsIHsgc3JzOiBpblNpbXBsZUNSUyA/IFwic2ltcGxlXCIgOiA0MzI2IH0pO1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMikgbG9nKHsgZXh0ZW50T2ZUaWxlIH0pO1xuXG4gICAgICAvLyBjcmVhdGUgYmx1ZSBvdXRsaW5lIGFyb3VuZCB0aWxlc1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gNCkge1xuICAgICAgICBpZiAoIXRoaXMuX2NhY2hlLnRpbGVbY2FjaGVLZXldKSB7XG4gICAgICAgICAgdGhpcy5fY2FjaGUudGlsZVtjYWNoZUtleV0gPSBMLnJlY3RhbmdsZShleHRlbnRPZlRpbGUubGVhZmxldEJvdW5kcywgeyBmaWxsT3BhY2l0eTogMCB9KVxuICAgICAgICAgICAgLmFkZFRvKHRoaXMuZ2V0TWFwKCkpXG4gICAgICAgICAgICAuYmluZFRvb2x0aXAoY2FjaGVLZXksIHsgZGlyZWN0aW9uOiBcImNlbnRlclwiLCBwZXJtYW5lbnQ6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc3QgZXh0ZW50T2ZUaWxlSW5NYXBDUlMgPSBpblNpbXBsZUNSUyA/IGV4dGVudE9mVGlsZSA6IGV4dGVudE9mVGlsZS5yZXByb2ooY29kZSk7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAyKSBsb2coeyBleHRlbnRPZlRpbGVJbk1hcENSUyB9KTtcblxuICAgICAgbGV0IGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMgPSBleHRlbnRPZlRpbGVJbk1hcENSUy5jcm9wKGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZMYXllciA6IHRoaXMuZXh0ZW50KTtcbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDIpXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIFwiW2dlb3Jhc3Rlci1sYXllci1mb3ItbGVhZmxldF0gZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSU1wiLFxuICAgICAgICAgIGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMucmVwcm9qKGluU2ltcGxlQ1JTID8gXCJzaW1wbGVcIiA6IDQzMjYpXG4gICAgICAgICk7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAyKSBsb2coeyBjb29yZHMsIGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMsIGV4dGVudDogdGhpcy5leHRlbnQgfSk7XG5cbiAgICAgIC8vIGNyZWF0ZSBibHVlIG91dGxpbmUgYXJvdW5kIHRpbGVzXG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSA0KSB7XG4gICAgICAgIGlmICghdGhpcy5fY2FjaGUuaW5uZXJUaWxlW2NhY2hlS2V5XSkge1xuICAgICAgICAgIGNvbnN0IGV4dCA9IGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUyA6IGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMucmVwcm9qKDQzMjYpO1xuICAgICAgICAgIHRoaXMuX2NhY2hlLmlubmVyVGlsZVtjYWNoZUtleV0gPSBMLnJlY3RhbmdsZShleHQubGVhZmxldEJvdW5kcywge1xuICAgICAgICAgICAgY29sb3I6IFwiI0YwMFwiLFxuICAgICAgICAgICAgZGFzaEFycmF5OiBcIjUsIDEwXCIsXG4gICAgICAgICAgICBmaWxsT3BhY2l0eTogMFxuICAgICAgICAgIH0pLmFkZFRvKHRoaXMuZ2V0TWFwKCkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHdpZHRoT2ZTY3JlZW5QaXhlbEluTWFwQ1JTID0gZXh0ZW50T2ZUaWxlSW5NYXBDUlMud2lkdGggLyB0aGlzLnRpbGVXaWR0aDtcbiAgICAgIGNvbnN0IGhlaWdodE9mU2NyZWVuUGl4ZWxJbk1hcENSUyA9IGV4dGVudE9mVGlsZUluTWFwQ1JTLmhlaWdodCAvIHRoaXMudGlsZUhlaWdodDtcbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDMpIGxvZyh7IGhlaWdodE9mU2NyZWVuUGl4ZWxJbk1hcENSUywgd2lkdGhPZlNjcmVlblBpeGVsSW5NYXBDUlMgfSk7XG5cbiAgICAgIC8vIGV4cGFuZCB0aWxlIHNhbXBsaW5nIGFyZWEgdG8gYWxpZ24gd2l0aCByYXN0ZXIgcGl4ZWxzXG4gICAgICBjb25zdCBvbGRFeHRlbnRPZklubmVyVGlsZUluUmFzdGVyQ1JTID0gaW5TaW1wbGVDUlNcbiAgICAgICAgPyBleHRlbnRPZklubmVyVGlsZUluTWFwQ1JTXG4gICAgICAgIDogZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy5yZXByb2oodGhpcy5wcm9qZWN0aW9uKTtcbiAgICAgIGNvbnN0IHNuYXBwZWQgPSBzbmFwKHtcbiAgICAgICAgYmJveDogb2xkRXh0ZW50T2ZJbm5lclRpbGVJblJhc3RlckNSUy5iYm94LFxuICAgICAgICAvLyBwYWQgeG1heCBhbmQgeW1pbiBvZiBjb250YWluZXIgdG8gdG9sZXJhdGUgY2VpbCgpIGFuZCBmbG9vcigpIGluIHNuYXAoKVxuICAgICAgICBjb250YWluZXI6IGluU2ltcGxlQ1JTXG4gICAgICAgICAgPyBbXG4gICAgICAgICAgICAgIGV4dGVudE9mTGF5ZXIueG1pbixcbiAgICAgICAgICAgICAgZXh0ZW50T2ZMYXllci55bWluIC0gMC4yNSAqIHBpeGVsSGVpZ2h0LFxuICAgICAgICAgICAgICBleHRlbnRPZkxheWVyLnhtYXggKyAwLjI1ICogcGl4ZWxXaWR0aCxcbiAgICAgICAgICAgICAgZXh0ZW50T2ZMYXllci55bWF4XG4gICAgICAgICAgICBdXG4gICAgICAgICAgOiBbeG1pbiwgeW1pbiAtIDAuMjUgKiBwaXhlbEhlaWdodCwgeG1heCArIDAuMjUgKiBwaXhlbFdpZHRoLCB5bWF4XSxcbiAgICAgICAgZGVidWc6IGRlYnVnTGV2ZWwgPj0gMixcbiAgICAgICAgb3JpZ2luOiBpblNpbXBsZUNSUyA/IFtleHRlbnRPZkxheWVyLnhtaW4sIGV4dGVudE9mTGF5ZXIueW1heF0gOiBbeG1pbiwgeW1heF0sXG4gICAgICAgIHNjYWxlOiBbcGl4ZWxXaWR0aCwgLXBpeGVsSGVpZ2h0XSAvLyBuZWdhdGl2ZSBiZWNhdXNlIG9yaWdpbiBpcyBhdCB5bWF4XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IGV4dGVudE9mSW5uZXJUaWxlSW5SYXN0ZXJDUlMgPSBuZXcgR2VvRXh0ZW50KHNuYXBwZWQuYmJveF9pbl9jb29yZGluYXRlX3N5c3RlbSwge1xuICAgICAgICBzcnM6IGluU2ltcGxlQ1JTID8gXCJzaW1wbGVcIiA6IHRoaXMucHJvamVjdGlvblxuICAgICAgfSk7XG5cbiAgICAgIGNvbnN0IGdyaWRib3ggPSBzbmFwcGVkLmJib3hfaW5fZ3JpZF9jZWxscztcbiAgICAgIGNvbnN0IHNuYXBwZWRTYW1wbGVzQWNyb3NzID0gTWF0aC5hYnMoZ3JpZGJveFsyXSAtIGdyaWRib3hbMF0pO1xuICAgICAgY29uc3Qgc25hcHBlZFNhbXBsZXNEb3duID0gTWF0aC5hYnMoZ3JpZGJveFszXSAtIGdyaWRib3hbMV0pO1xuICAgICAgY29uc3QgcmFzdGVyUGl4ZWxzQWNyb3NzID0gTWF0aC5jZWlsKG9sZEV4dGVudE9mSW5uZXJUaWxlSW5SYXN0ZXJDUlMud2lkdGggLyBwaXhlbFdpZHRoKTtcbiAgICAgIGNvbnN0IHJhc3RlclBpeGVsc0Rvd24gPSBNYXRoLmNlaWwob2xkRXh0ZW50T2ZJbm5lclRpbGVJblJhc3RlckNSUy5oZWlnaHQgLyBwaXhlbEhlaWdodCk7XG4gICAgICBjb25zdCB7IHJlc29sdXRpb24gfSA9IHRoaXMub3B0aW9ucztcbiAgICAgIGNvbnN0IGxheWVyQ3JvcEV4dGVudCA9IGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZMYXllciA6IHRoaXMuZXh0ZW50O1xuICAgICAgY29uc3QgcmVjcm9wVGlsZU9yaWcgPSBvbGRFeHRlbnRPZklubmVyVGlsZUluUmFzdGVyQ1JTLmNyb3AobGF5ZXJDcm9wRXh0ZW50KTsgLy8gbWF5IGJlIG51bGxcbiAgICAgIGxldCBtYXhTYW1wbGVzQWNyb3NzID0gMTtcbiAgICAgIGxldCBtYXhTYW1wbGVzRG93biA9IDE7XG4gICAgICBpZiAocmVjcm9wVGlsZU9yaWcgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgcmVjcm9wVGlsZVByb2ogPSBpblNpbXBsZUNSUyA/IHJlY3JvcFRpbGVPcmlnIDogcmVjcm9wVGlsZU9yaWcucmVwcm9qKGNvZGUpO1xuICAgICAgICBjb25zdCByZWNyb3BUaWxlID0gcmVjcm9wVGlsZVByb2ouY3JvcChleHRlbnRPZlRpbGVJbk1hcENSUyk7XG4gICAgICAgIGlmIChyZWNyb3BUaWxlICE9PSBudWxsKSB7XG4gICAgICAgICAgbWF4U2FtcGxlc0Fjcm9zcyA9IE1hdGguY2VpbChyZXNvbHV0aW9uICogKHJlY3JvcFRpbGUud2lkdGggLyBleHRlbnRPZlRpbGVJbk1hcENSUy53aWR0aCkpO1xuICAgICAgICAgIG1heFNhbXBsZXNEb3duID0gTWF0aC5jZWlsKHJlc29sdXRpb24gKiAocmVjcm9wVGlsZS5oZWlnaHQgLyBleHRlbnRPZlRpbGVJbk1hcENSUy5oZWlnaHQpKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBjb25zdCBvdmVyZHJhd1RpbGVBY3Jvc3MgPSByYXN0ZXJQaXhlbHNBY3Jvc3MgPCBtYXhTYW1wbGVzQWNyb3NzO1xuICAgICAgY29uc3Qgb3ZlcmRyYXdUaWxlRG93biA9IHJhc3RlclBpeGVsc0Rvd24gPCBtYXhTYW1wbGVzRG93bjtcbiAgICAgIGNvbnN0IG51bWJlck9mU2FtcGxlc0Fjcm9zcyA9IG92ZXJkcmF3VGlsZUFjcm9zcyA/IHNuYXBwZWRTYW1wbGVzQWNyb3NzIDogbWF4U2FtcGxlc0Fjcm9zcztcbiAgICAgIGNvbnN0IG51bWJlck9mU2FtcGxlc0Rvd24gPSBvdmVyZHJhd1RpbGVEb3duID8gc25hcHBlZFNhbXBsZXNEb3duIDogbWF4U2FtcGxlc0Rvd247XG5cbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDMpXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIFwiW2dlb3Jhc3Rlci1sYXllci1mb3ItbGVhZmxldF0gZXh0ZW50IG9mIGlubmVyIHRpbGUgYmVmb3JlIHNuYXBwaW5nIFwiICtcbiAgICAgICAgICAgIGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMucmVwcm9qKGluU2ltcGxlQ1JTID8gXCJzaW1wbGVcIiA6IDQzMjYpLmJib3gudG9TdHJpbmcoKVxuICAgICAgICApO1xuXG4gICAgICAvLyBSZXByb2plY3RpbmcgdGhlIGJvdW5kaW5nIGJveCBiYWNrIHRvIHRoZSBtYXAgQ1JTIHdvdWxkIGV4cGFuZCBpdFxuICAgICAgLy8gKHVubGVzcyB0aGUgcHJvamVjdGlvbiBpcyBwdXJlbHkgc2NhbGluZyBhbmQgdHJhbnNsYXRpb24pLFxuICAgICAgLy8gc28gaW5zdGVhZCBqdXN0IGV4dGVuZCB0aGUgb2xkIG1hcCBib3VuZGluZyBib3ggcHJvcG9ydGlvbmF0ZWx5LlxuICAgICAgY29uc3Qgb2xkcmIgPSBuZXcgR2VvRXh0ZW50KG9sZEV4dGVudE9mSW5uZXJUaWxlSW5SYXN0ZXJDUlMuYmJveCk7XG4gICAgICBjb25zdCBuZXdyYiA9IG5ldyBHZW9FeHRlbnQoZXh0ZW50T2ZJbm5lclRpbGVJblJhc3RlckNSUy5iYm94KTtcbiAgICAgIGNvbnN0IG9sZG1iID0gbmV3IEdlb0V4dGVudChleHRlbnRPZklubmVyVGlsZUluTWFwQ1JTLmJib3gpO1xuICAgICAgaWYgKG9sZHJiLndpZHRoICYmIG9sZHJiLmhlaWdodCkge1xuICAgICAgICBsZXQgbjAgPSAoKG5ld3JiLnhtaW4gLSBvbGRyYi54bWluKSAvIG9sZHJiLndpZHRoKSAqIG9sZG1iLndpZHRoO1xuICAgICAgICBsZXQgbjEgPSAoKG5ld3JiLnltaW4gLSBvbGRyYi55bWluKSAvIG9sZHJiLmhlaWdodCkgKiBvbGRtYi5oZWlnaHQ7XG4gICAgICAgIGxldCBuMiA9ICgobmV3cmIueG1heCAtIG9sZHJiLnhtYXgpIC8gb2xkcmIud2lkdGgpICogb2xkbWIud2lkdGg7XG4gICAgICAgIGxldCBuMyA9ICgobmV3cmIueW1heCAtIG9sZHJiLnltYXgpIC8gb2xkcmIuaGVpZ2h0KSAqIG9sZG1iLmhlaWdodDtcbiAgICAgICAgaWYgKCFvdmVyZHJhd1RpbGVBY3Jvc3MpIHtcbiAgICAgICAgICBuMCA9IE1hdGgubWF4KG4wLCAwKTtcbiAgICAgICAgICBuMiA9IE1hdGgubWluKG4yLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIW92ZXJkcmF3VGlsZURvd24pIHtcbiAgICAgICAgICBuMSA9IE1hdGgubWF4KG4xLCAwKTtcbiAgICAgICAgICBuMyA9IE1hdGgubWluKG4zLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBuZXdib3ggPSBbb2xkbWIueG1pbiArIG4wLCBvbGRtYi55bWluICsgbjEsIG9sZG1iLnhtYXggKyBuMiwgb2xkbWIueW1heCArIG4zXTtcbiAgICAgICAgZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUyA9IG5ldyBHZW9FeHRlbnQobmV3Ym94LCB7IHNyczogZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy5zcnMgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIGNyZWF0ZSBvdXRsaW5lIGFyb3VuZCByYXN0ZXIgcGl4ZWxzXG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSA0KSB7XG4gICAgICAgIGlmICghdGhpcy5fY2FjaGUuaW5uZXJUaWxlW2NhY2hlS2V5XSkge1xuICAgICAgICAgIGNvbnN0IGV4dCA9IGluU2ltcGxlQ1JTID8gZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUyA6IGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMucmVwcm9qKDQzMjYpO1xuICAgICAgICAgIHRoaXMuX2NhY2hlLmlubmVyVGlsZVtjYWNoZUtleV0gPSBMLnJlY3RhbmdsZShleHQubGVhZmxldEJvdW5kcywge1xuICAgICAgICAgICAgY29sb3I6IFwiI0YwMFwiLFxuICAgICAgICAgICAgZGFzaEFycmF5OiBcIjUsIDEwXCIsXG4gICAgICAgICAgICBmaWxsT3BhY2l0eTogMFxuICAgICAgICAgIH0pLmFkZFRvKHRoaXMuZ2V0TWFwKCkpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDMpXG4gICAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICAgIFwiW2dlb3Jhc3Rlci1sYXllci1mb3ItbGVhZmxldF0gZXh0ZW50IG9mIGlubmVyIHRpbGUgYWZ0ZXIgc25hcHBpbmcgXCIgK1xuICAgICAgICAgICAgZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy5yZXByb2ooaW5TaW1wbGVDUlMgPyBcInNpbXBsZVwiIDogNDMyNikuYmJveC50b1N0cmluZygpXG4gICAgICAgICk7XG5cbiAgICAgIC8vIE5vdGUgdGhhdCB0aGUgc25hcHBlZCBcImlubmVyXCIgdGlsZSBtYXkgZXh0ZW5kIGJleW9uZCB0aGUgb3JpZ2luYWwgdGlsZSxcbiAgICAgIC8vIGluIHdoaWNoIGNhc2UgdGhlIHBhZGRpbmcgdmFsdWVzIHdpbGwgYmUgbmVnYXRpdmUuXG5cbiAgICAgIC8vIHdlIHJvdW5kIGhlcmUgYmVjYXVzZSBzb21ldGltZXMgdGhlcmUgd2lsbCBiZSBzbGlnaHQgZmxvYXRpbmcgYXJpdGhtZXRpYyBpc3N1ZXNcbiAgICAgIC8vIHdoZXJlIHRoZSBwYWRkaW5nIGlzIGxpa2UgMC4wMDAwMDAwMDAwMDAwMVxuICAgICAgY29uc3QgcGFkZGluZyA9IHtcbiAgICAgICAgbGVmdDogTWF0aC5yb3VuZCgoZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy54bWluIC0gZXh0ZW50T2ZUaWxlSW5NYXBDUlMueG1pbikgLyB3aWR0aE9mU2NyZWVuUGl4ZWxJbk1hcENSUyksXG4gICAgICAgIHJpZ2h0OiBNYXRoLnJvdW5kKChleHRlbnRPZlRpbGVJbk1hcENSUy54bWF4IC0gZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy54bWF4KSAvIHdpZHRoT2ZTY3JlZW5QaXhlbEluTWFwQ1JTKSxcbiAgICAgICAgdG9wOiBNYXRoLnJvdW5kKChleHRlbnRPZlRpbGVJbk1hcENSUy55bWF4IC0gZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy55bWF4KSAvIGhlaWdodE9mU2NyZWVuUGl4ZWxJbk1hcENSUyksXG4gICAgICAgIGJvdHRvbTogTWF0aC5yb3VuZCgoZXh0ZW50T2ZJbm5lclRpbGVJbk1hcENSUy55bWluIC0gZXh0ZW50T2ZUaWxlSW5NYXBDUlMueW1pbikgLyBoZWlnaHRPZlNjcmVlblBpeGVsSW5NYXBDUlMpXG4gICAgICB9O1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMykgbG9nKHsgcGFkZGluZyB9KTtcblxuICAgICAgY29uc3QgaW5uZXJUaWxlSGVpZ2h0ID0gdGhpcy50aWxlSGVpZ2h0IC0gcGFkZGluZy50b3AgLSBwYWRkaW5nLmJvdHRvbTtcbiAgICAgIGNvbnN0IGlubmVyVGlsZVdpZHRoID0gdGhpcy50aWxlV2lkdGggLSBwYWRkaW5nLmxlZnQgLSBwYWRkaW5nLnJpZ2h0O1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMykgbG9nKHsgaW5uZXJUaWxlSGVpZ2h0LCBpbm5lclRpbGVXaWR0aCB9KTtcblxuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gNCkge1xuICAgICAgICBjb25zdCB4TWluT2ZJbm5lclRpbGVJbk1hcENSUyA9IGV4dGVudE9mVGlsZUluTWFwQ1JTLnhtaW4gKyBwYWRkaW5nLmxlZnQgKiB3aWR0aE9mU2NyZWVuUGl4ZWxJbk1hcENSUztcbiAgICAgICAgY29uc3QgeU1pbk9mSW5uZXJUaWxlSW5NYXBDUlMgPSBleHRlbnRPZlRpbGVJbk1hcENSUy55bWluICsgcGFkZGluZy5ib3R0b20gKiBoZWlnaHRPZlNjcmVlblBpeGVsSW5NYXBDUlM7XG4gICAgICAgIGNvbnN0IHhNYXhPZklubmVyVGlsZUluTWFwQ1JTID0gZXh0ZW50T2ZUaWxlSW5NYXBDUlMueG1heCAtIHBhZGRpbmcucmlnaHQgKiB3aWR0aE9mU2NyZWVuUGl4ZWxJbk1hcENSUztcbiAgICAgICAgY29uc3QgeU1heE9mSW5uZXJUaWxlSW5NYXBDUlMgPSBleHRlbnRPZlRpbGVJbk1hcENSUy55bWF4IC0gcGFkZGluZy50b3AgKiBoZWlnaHRPZlNjcmVlblBpeGVsSW5NYXBDUlM7XG4gICAgICAgIGxvZyh7IHhNaW5PZklubmVyVGlsZUluTWFwQ1JTLCB5TWluT2ZJbm5lclRpbGVJbk1hcENSUywgeE1heE9mSW5uZXJUaWxlSW5NYXBDUlMsIHlNYXhPZklubmVyVGlsZUluTWFwQ1JTIH0pO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBjYW52YXNQYWRkaW5nID0ge1xuICAgICAgICBsZWZ0OiBNYXRoLm1heChwYWRkaW5nLmxlZnQsIDApLFxuICAgICAgICByaWdodDogTWF0aC5tYXgocGFkZGluZy5yaWdodCwgMCksXG4gICAgICAgIHRvcDogTWF0aC5tYXgocGFkZGluZy50b3AsIDApLFxuICAgICAgICBib3R0b206IE1hdGgubWF4KHBhZGRpbmcuYm90dG9tLCAwKVxuICAgICAgfTtcbiAgICAgIGNvbnN0IGNhbnZhc0hlaWdodCA9IHRoaXMudGlsZUhlaWdodCAtIGNhbnZhc1BhZGRpbmcudG9wIC0gY2FudmFzUGFkZGluZy5ib3R0b207XG4gICAgICBjb25zdCBjYW52YXNXaWR0aCA9IHRoaXMudGlsZVdpZHRoIC0gY2FudmFzUGFkZGluZy5sZWZ0IC0gY2FudmFzUGFkZGluZy5yaWdodDtcblxuICAgICAgLy8gc2V0IHBhZGRpbmcgYW5kIHNpemUgb2YgY2FudmFzIHRpbGVcbiAgICAgIHRpbGUuc3R5bGUucGFkZGluZ1RvcCA9IGNhbnZhc1BhZGRpbmcudG9wICsgXCJweFwiO1xuICAgICAgdGlsZS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBjYW52YXNQYWRkaW5nLnJpZ2h0ICsgXCJweFwiO1xuICAgICAgdGlsZS5zdHlsZS5wYWRkaW5nQm90dG9tID0gY2FudmFzUGFkZGluZy5ib3R0b20gKyBcInB4XCI7XG4gICAgICB0aWxlLnN0eWxlLnBhZGRpbmdMZWZ0ID0gY2FudmFzUGFkZGluZy5sZWZ0ICsgXCJweFwiO1xuXG4gICAgICB0aWxlLmhlaWdodCA9IGNhbnZhc0hlaWdodDtcbiAgICAgIHRpbGUuc3R5bGUuaGVpZ2h0ID0gY2FudmFzSGVpZ2h0ICsgXCJweFwiO1xuXG4gICAgICB0aWxlLndpZHRoID0gY2FudmFzV2lkdGg7XG4gICAgICB0aWxlLnN0eWxlLndpZHRoID0gY2FudmFzV2lkdGggKyBcInB4XCI7XG4gICAgICBpZiAoZGVidWdMZXZlbCA+PSAzKSBjb25zb2xlLmxvZyhcInNldHRpbmcgdGlsZSBoZWlnaHQgdG8gXCIgKyBjYW52YXNIZWlnaHQgKyBcInB4XCIpO1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMykgY29uc29sZS5sb2coXCJzZXR0aW5nIHRpbGUgd2lkdGggdG8gXCIgKyBjYW52YXNXaWR0aCArIFwicHhcIik7XG5cbiAgICAgIC8vIHNldCBob3cgbGFyZ2UgdG8gZGlzcGxheSBlYWNoIHNhbXBsZSBpbiBzY3JlZW4gcGl4ZWxzXG4gICAgICBjb25zdCBoZWlnaHRPZlNhbXBsZUluU2NyZWVuUGl4ZWxzID0gaW5uZXJUaWxlSGVpZ2h0IC8gbnVtYmVyT2ZTYW1wbGVzRG93bjtcbiAgICAgIGNvbnN0IGhlaWdodE9mU2FtcGxlSW5TY3JlZW5QaXhlbHNJbnQgPSBNYXRoLmNlaWwoaGVpZ2h0T2ZTYW1wbGVJblNjcmVlblBpeGVscyk7XG4gICAgICBjb25zdCB3aWR0aE9mU2FtcGxlSW5TY3JlZW5QaXhlbHMgPSBpbm5lclRpbGVXaWR0aCAvIG51bWJlck9mU2FtcGxlc0Fjcm9zcztcbiAgICAgIGNvbnN0IHdpZHRoT2ZTYW1wbGVJblNjcmVlblBpeGVsc0ludCA9IE1hdGguY2VpbCh3aWR0aE9mU2FtcGxlSW5TY3JlZW5QaXhlbHMpO1xuXG4gICAgICBjb25zdCBtYXAgPSB0aGlzLmdldE1hcCgpO1xuICAgICAgY29uc3QgdGlsZVNpemUgPSB0aGlzLmdldFRpbGVTaXplKCk7XG5cbiAgICAgIC8vIHRoaXMgY29udmVydHMgdGlsZSBjb29yZGluYXRlcyAoaG93IG1hbnkgdGlsZXMgZG93biBhbmQgcmlnaHQpXG4gICAgICAvLyB0byBwaXhlbHMgZnJvbSBsZWZ0IGFuZCB0b3Agb2YgdGlsZSBwYW5lXG4gICAgICBjb25zdCB0aWxlTndQb2ludCA9IGNvb3Jkcy5zY2FsZUJ5KHRpbGVTaXplKTtcbiAgICAgIGlmIChkZWJ1Z0xldmVsID49IDQpIGxvZyh7IHRpbGVOd1BvaW50IH0pO1xuICAgICAgY29uc3QgeExlZnRPZklubmVyVGlsZSA9IHRpbGVOd1BvaW50LnggKyBwYWRkaW5nLmxlZnQ7XG4gICAgICBjb25zdCB5VG9wT2ZJbm5lclRpbGUgPSB0aWxlTndQb2ludC55ICsgcGFkZGluZy50b3A7XG4gICAgICBjb25zdCBpbm5lclRpbGVUb3BMZWZ0UG9pbnQgPSB7IHg6IHhMZWZ0T2ZJbm5lclRpbGUsIHk6IHlUb3BPZklubmVyVGlsZSB9O1xuICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gNCkgbG9nKHsgaW5uZXJUaWxlVG9wTGVmdFBvaW50IH0pO1xuXG4gICAgICAvLyByZW5kZXIgYXN5bmNocm9ub3VzbHkgc28gdGlsZXMgc2hvdyB1cCBhcyB0aGV5IGZpbmlzaCBpbnN0ZWFkIG9mIGFsbCBhdCBvbmNlICh3aGljaCBibG9ja3MgdGhlIFVJKVxuICAgICAgc2V0VGltZW91dChhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHsgejogem9vbSB9ID0gY29vcmRzO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGxldCB0aWxlUmFzdGVyczogbnVtYmVyW11bXVtdIHwgbnVsbCA9IG51bGw7XG4gICAgICAgICAgaWYgKCFyYXN0ZXJzKSB7XG4gICAgICAgICAgICB0aWxlUmFzdGVycyA9IGF3YWl0IHRoaXMuZ2V0UmFzdGVycyh7XG4gICAgICAgICAgICAgIGlubmVyVGlsZVRvcExlZnRQb2ludCxcbiAgICAgICAgICAgICAgaGVpZ2h0T2ZTYW1wbGVJblNjcmVlblBpeGVscyxcbiAgICAgICAgICAgICAgd2lkdGhPZlNhbXBsZUluU2NyZWVuUGl4ZWxzLFxuICAgICAgICAgICAgICB6b29tLFxuICAgICAgICAgICAgICBwaXhlbEhlaWdodCxcbiAgICAgICAgICAgICAgcGl4ZWxXaWR0aCxcbiAgICAgICAgICAgICAgbnVtYmVyT2ZTYW1wbGVzQWNyb3NzLFxuICAgICAgICAgICAgICBudW1iZXJPZlNhbXBsZXNEb3duLFxuICAgICAgICAgICAgICB5bWF4LFxuICAgICAgICAgICAgICB4bWluXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICh0aWxlUmFzdGVycyAmJiB0aGlzLmNhbGNTdGF0cykge1xuICAgICAgICAgICAgICBjb25zdCB7IG5vRGF0YVZhbHVlIH0gPSB0aGlzO1xuICAgICAgICAgICAgICBmb3IgKGxldCBiYW5kSW5kZXggPSAwOyBiYW5kSW5kZXggPCB0aWxlUmFzdGVycy5sZW5ndGg7IGJhbmRJbmRleCsrKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1pbiA9IHRoaXMuY3VycmVudFN0YXRzLm1pbnNbYmFuZEluZGV4XTtcbiAgICAgICAgICAgICAgICBsZXQgbWF4ID0gdGhpcy5jdXJyZW50U3RhdHMubWF4c1tiYW5kSW5kZXhdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJhbmQgPSB0aWxlUmFzdGVyc1tiYW5kSW5kZXhdO1xuICAgICAgICAgICAgICAgIGZvciAobGV0IHJvd0luZGV4ID0gMDsgcm93SW5kZXggPCBiYW5kLmxlbmd0aDsgcm93SW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgY29uc3Qgcm93ID0gYmFuZFtyb3dJbmRleF07XG4gICAgICAgICAgICAgICAgICBmb3IgKGxldCBjb2x1bW5JbmRleCA9IDA7IGNvbHVtbkluZGV4IDwgcm93Lmxlbmd0aDsgY29sdW1uSW5kZXgrKykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHJvd1tjb2x1bW5JbmRleF07XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbm9EYXRhVmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICBpZiAobWluID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPCBtaW4pIG1pbiA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXggPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA+IG1heCkgbWF4ID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U3RhdHMubWluc1tiYW5kSW5kZXhdID0gbWluO1xuICAgICAgICAgICAgICAgIHRoaXMuY3VycmVudFN0YXRzLm1heHNbYmFuZEluZGV4XSA9IG1heDtcbiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRTdGF0cy5yYW5nZXNbYmFuZEluZGV4XSA9IG1heCAtIG1pbjtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGF3YWl0IHRoaXMuY2hlY2tJZllDYkNyO1xuXG4gICAgICAgICAgZm9yIChsZXQgaCA9IDA7IGggPCBudW1iZXJPZlNhbXBsZXNEb3duOyBoKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHlDZW50ZXJJbk1hcFBpeGVscyA9IHlUb3BPZklubmVyVGlsZSArIChoICsgMC41KSAqIGhlaWdodE9mU2FtcGxlSW5TY3JlZW5QaXhlbHM7XG4gICAgICAgICAgICBjb25zdCBsYXRXZXN0UG9pbnQgPSBMLnBvaW50KHhMZWZ0T2ZJbm5lclRpbGUsIHlDZW50ZXJJbk1hcFBpeGVscyk7XG4gICAgICAgICAgICBjb25zdCB7IGxhdCB9ID0gbWFwLnVucHJvamVjdChsYXRXZXN0UG9pbnQsIHpvb20pO1xuICAgICAgICAgICAgaWYgKGxhdCA+IHlNaW5PZkxheWVyICYmIGxhdCA8IHlNYXhPZkxheWVyKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHlJblRpbGVQaXhlbHMgPSBNYXRoLnJvdW5kKGggKiBoZWlnaHRPZlNhbXBsZUluU2NyZWVuUGl4ZWxzKSArIE1hdGgubWluKHBhZGRpbmcudG9wLCAwKTtcblxuICAgICAgICAgICAgICBsZXQgeUluUmFzdGVyUGl4ZWxzID0gMDtcbiAgICAgICAgICAgICAgaWYgKGluU2ltcGxlQ1JTIHx8IHRoaXMucHJvamVjdGlvbiA9PT0gRVBTRzQzMjYpIHtcbiAgICAgICAgICAgICAgICB5SW5SYXN0ZXJQaXhlbHMgPSBNYXRoLmZsb29yKCh5TWF4T2ZMYXllciAtIGxhdCkgLyBwaXhlbEhlaWdodCk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBmb3IgKGxldCB3ID0gMDsgdyA8IG51bWJlck9mU2FtcGxlc0Fjcm9zczsgdysrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGF0TG5nUG9pbnQgPSBMLnBvaW50KFxuICAgICAgICAgICAgICAgICAgeExlZnRPZklubmVyVGlsZSArICh3ICsgMC41KSAqIHdpZHRoT2ZTYW1wbGVJblNjcmVlblBpeGVscyxcbiAgICAgICAgICAgICAgICAgIHlDZW50ZXJJbk1hcFBpeGVsc1xuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBsbmc6IHhPZkxheWVyIH0gPSBtYXAudW5wcm9qZWN0KGxhdExuZ1BvaW50LCB6b29tKTtcbiAgICAgICAgICAgICAgICBpZiAoeE9mTGF5ZXIgPiB4TWluT2ZMYXllciAmJiB4T2ZMYXllciA8IHhNYXhPZkxheWVyKSB7XG4gICAgICAgICAgICAgICAgICBsZXQgeEluUmFzdGVyUGl4ZWxzID0gMDtcbiAgICAgICAgICAgICAgICAgIGlmIChpblNpbXBsZUNSUyB8fCB0aGlzLnByb2plY3Rpb24gPT09IEVQU0c0MzI2KSB7XG4gICAgICAgICAgICAgICAgICAgIHhJblJhc3RlclBpeGVscyA9IE1hdGguZmxvb3IoKHhPZkxheWVyIC0geE1pbk9mTGF5ZXIpIC8gcGl4ZWxXaWR0aCk7XG4gICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZ2V0UHJvamVjdG9yKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaW52ZXJ0ZWQgPSB0aGlzLmdldFByb2plY3RvcigpLmludmVyc2UoeyB4OiB4T2ZMYXllciwgeTogbGF0IH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB5SW5TcmMgPSBpbnZlcnRlZC55O1xuICAgICAgICAgICAgICAgICAgICB5SW5SYXN0ZXJQaXhlbHMgPSBNYXRoLmZsb29yKCh5bWF4IC0geUluU3JjKSAvIHBpeGVsSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHlJblJhc3RlclBpeGVscyA8IDAgfHwgeUluUmFzdGVyUGl4ZWxzID49IHJhc3RlckhlaWdodCkgY29udGludWU7XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeEluU3JjID0gaW52ZXJ0ZWQueDtcbiAgICAgICAgICAgICAgICAgICAgeEluUmFzdGVyUGl4ZWxzID0gTWF0aC5mbG9vcigoeEluU3JjIC0geG1pbikgLyBwaXhlbFdpZHRoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHhJblJhc3RlclBpeGVscyA8IDAgfHwgeEluUmFzdGVyUGl4ZWxzID49IHJhc3RlcldpZHRoKSBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZXMgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgaWYgKHRpbGVSYXN0ZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGdldCB2YWx1ZSBmcm9tIGFycmF5IHNwZWNpZmljIHRvIHRoaXMgdGlsZVxuICAgICAgICAgICAgICAgICAgICB2YWx1ZXMgPSB0aWxlUmFzdGVycy5tYXAoYmFuZCA9PiBiYW5kW2hdW3ddKTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmFzdGVycykge1xuICAgICAgICAgICAgICAgICAgICAvLyBnZXQgdmFsdWUgZnJvbSBhcnJheSB3aXRoIGRhdGEgZm9yIGVudGlyZSByYXN0ZXJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzID0gcmFzdGVycy5tYXAoKGJhbmQ6IG51bWJlcltdW10pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYmFuZFt5SW5SYXN0ZXJQaXhlbHNdW3hJblJhc3RlclBpeGVsc107XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZG9uZShuZXcgRXJyb3IoXCJubyByYXN0ZXJzIGFyZSBhdmFpbGFibGUgZm9yLCBzbyBza2lwcGluZyB2YWx1ZSBnZW5lcmF0aW9uXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAvLyB4LWF4aXMgY29vcmRpbmF0ZSBvZiB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgdGhlIHJlY3RhbmdsZSByZXByZXNlbnRpbmcgdGhlIHJhc3RlciBwaXhlbFxuICAgICAgICAgICAgICAgICAgY29uc3QgeCA9IE1hdGgucm91bmQodyAqIHdpZHRoT2ZTYW1wbGVJblNjcmVlblBpeGVscykgKyBNYXRoLm1pbihwYWRkaW5nLmxlZnQsIDApO1xuXG4gICAgICAgICAgICAgICAgICAvLyB5LWF4aXMgY29vcmRpbmF0ZSBvZiB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgdGhlIHJlY3RhbmdsZSByZXByZXNlbnRpbmcgdGhlIHJhc3RlciBwaXhlbFxuICAgICAgICAgICAgICAgICAgY29uc3QgeSA9IHlJblRpbGVQaXhlbHM7XG5cbiAgICAgICAgICAgICAgICAgIC8vIGhvdyBtYW55IHJlYWwgc2NyZWVuIHBpeGVscyBkb2VzIGEgcGl4ZWwgb2YgdGhlIHNhbXBsZWQgcmFzdGVyIHRha2UgdXBcbiAgICAgICAgICAgICAgICAgIGNvbnN0IHdpZHRoID0gd2lkdGhPZlNhbXBsZUluU2NyZWVuUGl4ZWxzSW50O1xuICAgICAgICAgICAgICAgICAgY29uc3QgaGVpZ2h0ID0gaGVpZ2h0T2ZTYW1wbGVJblNjcmVlblBpeGVsc0ludDtcblxuICAgICAgICAgICAgICAgICAgaWYgKHRoaXMub3B0aW9ucy5jdXN0b21EcmF3RnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vcHRpb25zLmN1c3RvbURyYXdGdW5jdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgdmFsdWVzLFxuICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgeCxcbiAgICAgICAgICAgICAgICAgICAgICB5LFxuICAgICAgICAgICAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgICAgICAgICAgIGhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgICByYXN0ZXJYOiB4SW5SYXN0ZXJQaXhlbHMsXG4gICAgICAgICAgICAgICAgICAgICAgcmFzdGVyWTogeUluUmFzdGVyUGl4ZWxzLFxuICAgICAgICAgICAgICAgICAgICAgIHNhbXBsZVg6IHcsXG4gICAgICAgICAgICAgICAgICAgICAgc2FtcGxlWTogaCxcbiAgICAgICAgICAgICAgICAgICAgICBzYW1wbGVkUmFzdGVyOiB0aWxlUmFzdGVyc1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbG9yID0gdGhpcy5nZXRDb2xvcih2YWx1ZXMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29sb3IgJiYgY29udGV4dCkge1xuICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG4gICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5maWxsUmVjdCh4LCB5LCB3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0aGlzLm1hc2spIHtcbiAgICAgICAgICAgIGlmIChpblNpbXBsZUNSUykge1xuICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJbZ2VvcmFzdGVyLWxheWVyLWZvci1sZWFmbGV0XSBtYXNrIGlzIG5vdCBzdXBwb3J0ZWQgd2hlbiB1c2luZyBzaW1wbGUgcHJvamVjdGlvblwiKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHRoaXMubWFzay50aGVuKChtYXNrOiBNYXNrKSA9PiB7XG4gICAgICAgICAgICAgICAgZ2VvY2FudmFzLm1hc2tDYW52YXMoe1xuICAgICAgICAgICAgICAgICAgY2FudmFzOiB0aWxlLFxuICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICAgICAgICAgICAgY2FudmFzX2Jib3g6IGV4dGVudE9mSW5uZXJUaWxlSW5NYXBDUlMuYmJveCwgLy8gbmVlZCB0byBzdXBwb3J0IHNpbXBsZSBwcm9qZWN0aW9uIHRvb1xuICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICAgICAgICAgICAgY2FudmFzX3NyczogMzg1NywgLy8gZGVmYXVsdCBtYXAgY3JzLCBuZWVkIHRvIHN1cHBvcnQgc2ltcGxlXG4gICAgICAgICAgICAgICAgICBtYXNrLFxuICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGNhbWVsY2FzZVxuICAgICAgICAgICAgICAgICAgbWFza19zcnM6IHRoaXMubWFza19zcnMsXG4gICAgICAgICAgICAgICAgICBzdHJhdGVneTogdGhpcy5tYXNrX3N0cmF0ZWd5IC8vIGhpZGUgZXZlcnl0aGluZyBpbnNpZGUgb3Igb3V0c2lkZSB0aGUgbWFza1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICB0aWxlLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjsgLy8gc2V0IHRvIGRlZmF1bHRcbiAgICAgICAgICBkb25lKHVuZGVmaW5lZCwgdGlsZSk7XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgICAgICBkb25lKGVycm9yLCB0aWxlKTtcbiAgICAgICAgfVxuICAgICAgfSwgMCk7XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgZG9uZShlcnJvciwgdGlsZSk7XG4gICAgfVxuICB9LFxuXG4gIC8vIGNvcGllZCBmcm9tIExlYWZsZXQgd2l0aCBzbGlnaHQgbW9kaWZpY2F0aW9ucyxcbiAgLy8gaW5jbHVkaW5nIHJlbW92aW5nIHRoZSBsaW5lcyB0aGF0IHNldCB0aGUgdGlsZSBzaXplXG4gIF9pbml0VGlsZTogZnVuY3Rpb24gKHRpbGU6IEhUTUxDYW52YXNFbGVtZW50KSB7XG4gICAgaWYgKCF0aWxlKSByZXR1cm47XG4gICAgTC5Eb21VdGlsLmFkZENsYXNzKHRpbGUsIFwibGVhZmxldC10aWxlXCIpO1xuXG4gICAgdGlsZS5vbnNlbGVjdHN0YXJ0ID0gTC5VdGlsLmZhbHNlRm47XG4gICAgdGlsZS5vbm1vdXNlbW92ZSA9IEwuVXRpbC5mYWxzZUZuO1xuXG4gICAgLy8gdXBkYXRlIG9wYWNpdHkgb24gdGlsZXMgaW4gSUU3LTggYmVjYXVzZSBvZiBmaWx0ZXIgaW5oZXJpdGFuY2UgcHJvYmxlbXNcbiAgICBpZiAoTC5Ccm93c2VyLmllbHQ5ICYmIHRoaXMub3B0aW9ucy5vcGFjaXR5IDwgMSkge1xuICAgICAgTC5Eb21VdGlsLnNldE9wYWNpdHkodGlsZSwgdGhpcy5vcHRpb25zLm9wYWNpdHkpO1xuICAgIH1cblxuICAgIC8vIHdpdGhvdXQgdGhpcyBoYWNrLCB0aWxlcyBkaXNhcHBlYXIgYWZ0ZXIgem9vbSBvbiBDaHJvbWUgZm9yIEFuZHJvaWRcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vTGVhZmxldC9MZWFmbGV0L2lzc3Vlcy8yMDc4XG4gICAgaWYgKEwuQnJvd3Nlci5hbmRyb2lkICYmICFMLkJyb3dzZXIuYW5kcm9pZDIzKSB7XG4gICAgICAoPEN1c3RvbUNTU1N0eWxlRGVjbGFyYXRpb24+dGlsZS5zdHlsZSkuV2Via2l0QmFja2ZhY2VWaXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcbiAgICB9XG4gIH0sXG5cbiAgLy8gbWV0aG9kIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL0xlYWZsZXQvTGVhZmxldC9ibG9iL2JiMWQ5NGFjN2YyNzE2ODUyMjEzZGQxMTU2M2Q4OTg1NWY4ZDZiYjEvc3JjL2xheWVyL0ltYWdlT3ZlcmxheS5qc1xuICBnZXRCb3VuZHM6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmluaXRCb3VuZHMoKTtcbiAgICByZXR1cm4gdGhpcy5fYm91bmRzO1xuICB9LFxuXG4gIGdldE1hcDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLl9tYXAgfHwgdGhpcy5fbWFwVG9BZGQ7XG4gIH0sXG5cbiAgZ2V0TWFwQ1JTOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0TWFwKCk/Lm9wdGlvbnMuY3JzIHx8IEwuQ1JTLkVQU0czODU3O1xuICB9LFxuXG4gIC8vIGFkZCBpbiB0byBlbnN1cmUgYmFja3dhcmRzIGNvbXBhdGFiaWxpdHkgd2l0aCBMZWFmbGV0IDEuMC4zXG4gIF90aWxlQ29vcmRzVG9Od1NlOiBmdW5jdGlvbiAoY29vcmRzOiBDb29yZHMpIHtcbiAgICBjb25zdCBtYXAgPSB0aGlzLmdldE1hcCgpO1xuICAgIGNvbnN0IHRpbGVTaXplID0gdGhpcy5nZXRUaWxlU2l6ZSgpO1xuICAgIGNvbnN0IG53UG9pbnQgPSBjb29yZHMuc2NhbGVCeSh0aWxlU2l6ZSk7XG4gICAgY29uc3Qgc2VQb2ludCA9IG53UG9pbnQuYWRkKHRpbGVTaXplKTtcbiAgICBjb25zdCBudyA9IG1hcC51bnByb2plY3QobndQb2ludCwgY29vcmRzLnopO1xuICAgIGNvbnN0IHNlID0gbWFwLnVucHJvamVjdChzZVBvaW50LCBjb29yZHMueik7XG4gICAgcmV0dXJuIFtudywgc2VdO1xuICB9LFxuXG4gIF90aWxlQ29vcmRzVG9Cb3VuZHM6IGZ1bmN0aW9uIChjb29yZHM6IENvb3Jkcykge1xuICAgIGNvbnN0IFtudywgc2VdID0gdGhpcy5fdGlsZUNvb3Jkc1RvTndTZShjb29yZHMpO1xuICAgIGxldCBib3VuZHM6IExhdExuZ0JvdW5kcyA9IG5ldyBMLkxhdExuZ0JvdW5kcyhudywgc2UpO1xuXG4gICAgaWYgKCF0aGlzLm9wdGlvbnMubm9XcmFwKSB7XG4gICAgICBjb25zdCB7IGNycyB9ID0gdGhpcy5nZXRNYXAoKS5vcHRpb25zO1xuICAgICAgYm91bmRzID0gY3JzLndyYXBMYXRMbmdCb3VuZHMoYm91bmRzKTtcbiAgICB9XG4gICAgcmV0dXJuIGJvdW5kcztcbiAgfSxcblxuICBfaXNWYWxpZFRpbGU6IGZ1bmN0aW9uIChjb29yZHM6IENvb3Jkcykge1xuICAgIGNvbnN0IGNycyA9IHRoaXMuZ2V0TWFwQ1JTKCk7XG5cbiAgICBpZiAoIWNycy5pbmZpbml0ZSkge1xuICAgICAgLy8gZG9uJ3QgbG9hZCB0aWxlIGlmIGl0J3Mgb3V0IG9mIGJvdW5kcyBhbmQgbm90IHdyYXBwZWRcbiAgICAgIGNvbnN0IGdsb2JhbEJvdW5kcyA9IHRoaXMuX2dsb2JhbFRpbGVSYW5nZTtcbiAgICAgIGlmIChcbiAgICAgICAgKCFjcnMud3JhcExuZyAmJiAoY29vcmRzLnggPCBnbG9iYWxCb3VuZHMubWluLnggfHwgY29vcmRzLnggPiBnbG9iYWxCb3VuZHMubWF4LngpKSB8fFxuICAgICAgICAoIWNycy53cmFwTGF0ICYmIChjb29yZHMueSA8IGdsb2JhbEJvdW5kcy5taW4ueSB8fCBjb29yZHMueSA+IGdsb2JhbEJvdW5kcy5tYXgueSkpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGJvdW5kcyA9IHRoaXMuZ2V0Qm91bmRzKCk7XG5cbiAgICBpZiAoIWJvdW5kcykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgeyB4LCB5LCB6IH0gPSBjb29yZHM7XG5cbiAgICAvLyBub3Qgc3VyZSB3aGF0IHNycyBzaG91bGQgYmUgaGVyZSB3aGVuIHNpbXBsZSBjcnNcbiAgICBjb25zdCBsYXllckV4dGVudCA9IG5ldyBHZW9FeHRlbnQoYm91bmRzLCB7IHNyczogNDMyNiB9KTtcblxuICAgIGNvbnN0IGJvdW5kc09mVGlsZSA9IHRoaXMuX3RpbGVDb29yZHNUb0JvdW5kcyhjb29yZHMpO1xuXG4gICAgLy8gY2hlY2sgZ2l2ZW4gdGlsZSBjb29yZGluYXRlc1xuICAgIGlmIChsYXllckV4dGVudC5vdmVybGFwcyhib3VuZHNPZlRpbGUpKSByZXR1cm4gdHJ1ZTtcblxuICAgIC8vIGlmIG5vdCB3aXRoaW4gdGhlIG9yaWdpbmFsIGNvbmZpbmVzIG9mIHRoZSBlYXJ0aCByZXR1cm4gZmFsc2VcbiAgICAvLyB3ZSBkb24ndCB3YW50IHdyYXBwaW5nIGlmIHVzaW5nIFNpbXBsZSBDUlNcbiAgICBpZiAoaXNTaW1wbGVDUlMoY3JzKSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgLy8gd2lkdGggb2YgdGhlIGdsb2JlIGluIHRpbGVzIGF0IHRoZSBnaXZlbiB6b29tIGxldmVsXG4gICAgY29uc3Qgd2lkdGggPSBNYXRoLnBvdygyLCB6KTtcblxuICAgIC8vIGNoZWNrIG9uZSB3b3JsZCB0byB0aGUgbGVmdFxuICAgIGNvbnN0IGxlZnRDb29yZHMgPSBMLnBvaW50KHggLSB3aWR0aCwgeSkgYXMgQ29vcmRzO1xuICAgIGxlZnRDb29yZHMueiA9IHo7XG4gICAgY29uc3QgbGVmdEJvdW5kcyA9IHRoaXMuX3RpbGVDb29yZHNUb0JvdW5kcyhsZWZ0Q29vcmRzKTtcbiAgICBpZiAobGF5ZXJFeHRlbnQub3ZlcmxhcHMobGVmdEJvdW5kcykpIHJldHVybiB0cnVlO1xuXG4gICAgLy8gY2hlY2sgb25lIHdvcmxkIHRvIHRoZSByaWdodFxuICAgIGNvbnN0IHJpZ2h0Q29vcmRzID0gTC5wb2ludCh4ICsgd2lkdGgsIHkpIGFzIENvb3JkcztcbiAgICByaWdodENvb3Jkcy56ID0gejtcbiAgICBjb25zdCByaWdodEJvdW5kcyA9IHRoaXMuX3RpbGVDb29yZHNUb0JvdW5kcyhyaWdodENvb3Jkcyk7XG4gICAgaWYgKGxheWVyRXh0ZW50Lm92ZXJsYXBzKHJpZ2h0Qm91bmRzKSkgcmV0dXJuIHRydWU7XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH0sXG5cbiAgZ2V0Q29sb3I6IGZ1bmN0aW9uICh2YWx1ZXM6IG51bWJlcltdKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgICBpZiAodGhpcy5vcHRpb25zLnBpeGVsVmFsdWVzVG9Db2xvckZuKSB7XG4gICAgICByZXR1cm4gdGhpcy5vcHRpb25zLnBpeGVsVmFsdWVzVG9Db2xvckZuKHZhbHVlcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IG51bWJlck9mVmFsdWVzID0gdmFsdWVzLmxlbmd0aDtcbiAgICAgIGNvbnN0IGhhdmVEYXRhRm9yQWxsQmFuZHMgPSB2YWx1ZXMuZXZlcnkodmFsdWUgPT4gdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gdGhpcy5ub0RhdGFWYWx1ZSk7XG4gICAgICBpZiAoaGF2ZURhdGFGb3JBbGxCYW5kcykge1xuICAgICAgICBpZiAobnVtYmVyT2ZWYWx1ZXMgPT0gMSkge1xuICAgICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVzWzBdO1xuICAgICAgICAgIGlmICh0aGlzLnBhbGV0dGUpIHtcbiAgICAgICAgICAgIGNvbnN0IFtyLCBnLCBiLCBhXSA9IHRoaXMucGFsZXR0ZVt2YWx1ZV07XG4gICAgICAgICAgICByZXR1cm4gYHJnYmEoJHtyfSwke2d9LCR7Yn0sJHthIC8gMjU1fSlgO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5nZW9yYXN0ZXJzWzBdLm1pbnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgbWlucywgcmFuZ2VzIH0gPSB0aGlzLmdlb3Jhc3RlcnNbMF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zY2FsZSgodmFsdWVzWzBdIC0gbWluc1swXSkgLyByYW5nZXNbMF0pLmhleCgpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5jdXJyZW50U3RhdHMubWlucykge1xuICAgICAgICAgICAgY29uc3QgbWluID0gdGhpcy5jdXJyZW50U3RhdHMubWluc1swXTtcbiAgICAgICAgICAgIGNvbnN0IHJhbmdlID0gdGhpcy5jdXJyZW50U3RhdHMucmFuZ2VzWzBdO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2NhbGUoKHZhbHVlc1swXSAtIG1pbikgLyByYW5nZSkuaGV4KCk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKG51bWJlck9mVmFsdWVzID09PSAyKSB7XG4gICAgICAgICAgcmV0dXJuIGByZ2IoJHt2YWx1ZXNbMF19LCR7dmFsdWVzWzFdfSwwKWA7XG4gICAgICAgIH0gZWxzZSBpZiAobnVtYmVyT2ZWYWx1ZXMgPT09IDMpIHtcbiAgICAgICAgICByZXR1cm4gYHJnYigke3ZhbHVlc1swXX0sJHt2YWx1ZXNbMV19LCR7dmFsdWVzWzJdfSlgO1xuICAgICAgICB9IGVsc2UgaWYgKG51bWJlck9mVmFsdWVzID09PSA0KSB7XG4gICAgICAgICAgcmV0dXJuIGByZ2JhKCR7dmFsdWVzWzBdfSwke3ZhbHVlc1sxXX0sJHt2YWx1ZXNbMl19LCR7dmFsdWVzWzNdIC8gMjU1fSlgO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBSZWRyYXdzIHRoZSBhY3RpdmUgbWFwIHRpbGVzIHVwZGF0aW5nIHRoZSBwaXhlbCB2YWx1ZXMgdXNpbmcgdGhlIHN1cHBsaWUgY2FsbGJhY2tcbiAgICovXG4gIHVwZGF0ZUNvbG9ycyhcbiAgICBwaXhlbFZhbHVlc1RvQ29sb3JGbjogLyoqVGhlIGNhbGxiYWNrIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBjb2xvdXIgYmFzZWQgb24gdGhlIHZhbHVlcyBvZiBlYWNoIHBpeGVsICovIFBpeGVsVmFsdWVzVG9Db2xvckZuLFxuICAgIHsgZGVidWdMZXZlbCA9IC0xIH0gPSB7IGRlYnVnTGV2ZWw6IC0xIH1cbiAgKSB7XG4gICAgaWYgKCFwaXhlbFZhbHVlc1RvQ29sb3JGbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyBwaXhlbFZhbHVlc1RvQ29sb3JGbiBmdW5jdGlvblwiKTtcbiAgICB9XG5cbiAgICAvLyBpZiBkZWJ1Z0xldmVsIGlzIC0xLCBzZXQgaXQgdG8gdGhlIGRlZmF1bHQgZm9yIHRoZSBjbGFzc1xuICAgIGlmIChkZWJ1Z0xldmVsID09PSAtMSkgZGVidWdMZXZlbCA9IHRoaXMuZGVidWdMZXZlbDtcblxuICAgIGlmIChkZWJ1Z0xldmVsID49IDEpIGNvbnNvbGUubG9nKFwiU3RhcnQgdXBkYXRpbmcgYWN0aXZlIHRpbGUgcGl4ZWwgdmFsdWVzXCIpO1xuXG4gICAgLy8gdXBkYXRlIG9wdGlvbiB0byBlbnN1cmUgY29ycmVjdCBjb2xvdXJzIGF0IG90aGVyIHpvb20gbGV2ZWxzLlxuICAgIHRoaXMub3B0aW9ucy5waXhlbFZhbHVlc1RvQ29sb3JGbiA9IHBpeGVsVmFsdWVzVG9Db2xvckZuO1xuXG4gICAgY29uc3QgdGlsZXMgPSB0aGlzLmdldEFjdGl2ZVRpbGVzKCk7XG4gICAgaWYgKCF0aWxlcykge1xuICAgICAgY29uc29sZS5lcnJvcihcIk5vIGFjdGl2ZSB0aWxlcyBhdmFpbGFibGVcIik7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBpZiAoZGVidWdMZXZlbCA+PSAxKSBjb25zb2xlLmxvZyhcIkFjdGl2ZSB0aWxlcyBmZXRjaGVkXCIsIHRpbGVzKTtcblxuICAgIHRpbGVzLmZvckVhY2goKHRpbGU6IFRpbGUpID0+IHtcbiAgICAgIGNvbnN0IHsgY29vcmRzLCBlbCB9ID0gdGlsZTtcbiAgICAgIHRoaXMuZHJhd1RpbGUoeyB0aWxlOiBlbCwgY29vcmRzLCBjb250ZXh0OiBlbC5nZXRDb250ZXh0KFwiMmRcIikgfSk7XG4gICAgfSk7XG4gICAgaWYgKGRlYnVnTGV2ZWwgPj0gMSkgY29uc29sZS5sb2coXCJGaW5pc2hlZCB1cGRhdGluZyBhY3RpdmUgdGlsZSBjb2xvdXJzXCIpO1xuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIGdldFRpbGVzKCk6IFRpbGVbXSB7XG4gICAgLy8gdHJhbnNmb3JtIF90aWxlcyBvYmplY3QgY29sbGVjdGlvbiBpbnRvIGFuIGFycmF5XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcy5fdGlsZXMpO1xuICB9LFxuXG4gIGdldEFjdGl2ZVRpbGVzKCk6IFRpbGVbXSB7XG4gICAgY29uc3QgdGlsZXM6IFRpbGVbXSA9IHRoaXMuZ2V0VGlsZXMoKTtcbiAgICAvLyBvbmx5IHJldHVybiB2YWxpZCB0aWxlc1xuICAgIHJldHVybiB0aWxlcy5maWx0ZXIodGlsZSA9PiB0aGlzLl9pc1ZhbGlkVGlsZSh0aWxlLmNvb3JkcykpO1xuICB9LFxuXG4gIGlzU3VwcG9ydGVkUHJvamVjdGlvbjogZnVuY3Rpb24gKCkge1xuICAgIGlmICh0aGlzLl9pc1N1cHBvcnRlZFByb2plY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgcHJvamVjdGlvbiA9IHRoaXMucHJvamVjdGlvbjtcbiAgICAgIGlmIChpc1VUTShwcm9qZWN0aW9uKSkge1xuICAgICAgICB0aGlzLl9pc1N1cHBvcnRlZFByb2plY3Rpb24gPSB0cnVlO1xuICAgICAgfSBlbHNlIGlmIChQUk9KNF9TVVBQT1JURURfUFJPSkVDVElPTlMuaGFzKHByb2plY3Rpb24pKSB7XG4gICAgICAgIHRoaXMuX2lzU3VwcG9ydGVkUHJvamVjdGlvbiA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKHR5cGVvZiBwcm9qNEZ1bGx5TG9hZGVkID09PSBcImZ1bmN0aW9uXCIgJiYgYEVQU0c6JHtwcm9qZWN0aW9ufWAgaW4gcHJvajRGdWxseUxvYWRlZC5kZWZzKSB7XG4gICAgICAgIHRoaXMuX2lzU3VwcG9ydGVkUHJvamVjdGlvbiA9IHRydWU7XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICB0eXBlb2YgcHJvajQgPT09IFwiZnVuY3Rpb25cIiAmJlxuICAgICAgICB0eXBlb2YgcHJvajQuZGVmcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBgRVBTRzoke3Byb2plY3Rpb259YCBpbiBwcm9qNC5kZWZzXG4gICAgICApIHtcbiAgICAgICAgdGhpcy5faXNTdXBwb3J0ZWRQcm9qZWN0aW9uID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX2lzU3VwcG9ydGVkUHJvamVjdGlvbiA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGhpcy5faXNTdXBwb3J0ZWRQcm9qZWN0aW9uO1xuICB9LFxuXG4gIGdldFByb2plY3Rpb25TdHJpbmc6IGZ1bmN0aW9uIChwcm9qZWN0aW9uOiBudW1iZXIpIHtcbiAgICBpZiAoaXNVVE0ocHJvamVjdGlvbikpIHtcbiAgICAgIHJldHVybiBnZXRQcm9qU3RyaW5nKHByb2plY3Rpb24pO1xuICAgIH1cbiAgICByZXR1cm4gYEVQU0c6JHtwcm9qZWN0aW9ufWA7XG4gIH0sXG5cbiAgaW5pdEJvdW5kczogZnVuY3Rpb24gKG9wdGlvbnM6IEdlb1Jhc3RlckxheWVyT3B0aW9ucykge1xuICAgIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICBpZiAoIXRoaXMuX2JvdW5kcykge1xuICAgICAgY29uc3QgeyBkZWJ1Z0xldmVsLCBoZWlnaHQsIHdpZHRoLCBwcm9qZWN0aW9uLCB4bWluLCB4bWF4LCB5bWluLCB5bWF4IH0gPSB0aGlzO1xuICAgICAgLy8gY2hlY2sgaWYgbWFwIHVzaW5nIFNpbXBsZSBDUlNcbiAgICAgIGlmIChpc1NpbXBsZUNSUyh0aGlzLmdldE1hcENSUygpKSkge1xuICAgICAgICBpZiAoaGVpZ2h0ID09PSB3aWR0aCkge1xuICAgICAgICAgIHRoaXMuX2JvdW5kcyA9IEwubGF0TG5nQm91bmRzKFtPUklHSU4sIFtNQVhfTk9SVEhJTkcsIE1BWF9FQVNUSU5HXV0pO1xuICAgICAgICB9IGVsc2UgaWYgKGhlaWdodCA+IHdpZHRoKSB7XG4gICAgICAgICAgdGhpcy5fYm91bmRzID0gTC5sYXRMbmdCb3VuZHMoW09SSUdJTiwgW01BWF9OT1JUSElORywgTUFYX0VBU1RJTkcgLyB0aGlzLnJhdGlvXV0pO1xuICAgICAgICB9IGVsc2UgaWYgKHdpZHRoID4gaGVpZ2h0KSB7XG4gICAgICAgICAgdGhpcy5fYm91bmRzID0gTC5sYXRMbmdCb3VuZHMoW09SSUdJTiwgW01BWF9OT1JUSElORyAqIHRoaXMucmF0aW8sIE1BWF9FQVNUSU5HXV0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHByb2plY3Rpb24gPT09IEVQU0c0MzI2KSB7XG4gICAgICAgIGlmIChkZWJ1Z0xldmVsID49IDEpIGNvbnNvbGUubG9nKGBnZW9yYXN0ZXIgcHJvamVjdGlvbiBpcyBpbiAke0VQU0c0MzI2fWApO1xuICAgICAgICBjb25zdCBtaW5MYXRXZXN0ID0gTC5sYXRMbmcoeW1pbiwgeG1pbik7XG4gICAgICAgIGNvbnN0IG1heExhdEVhc3QgPSBMLmxhdExuZyh5bWF4LCB4bWF4KTtcbiAgICAgICAgdGhpcy5fYm91bmRzID0gTC5sYXRMbmdCb3VuZHMobWluTGF0V2VzdCwgbWF4TGF0RWFzdCk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZ2V0UHJvamVjdG9yKCkpIHtcbiAgICAgICAgaWYgKGRlYnVnTGV2ZWwgPj0gMSkgY29uc29sZS5sb2coXCJwcm9qZWN0aW9uIGlzIFVUTSBvciBzdXBwb3J0ZWQgYnkgcHJvajRcIik7XG4gICAgICAgIGNvbnN0IGJvdHRvbUxlZnQgPSB0aGlzLmdldFByb2plY3RvcigpLmZvcndhcmQoeyB4OiB4bWluLCB5OiB5bWluIH0pO1xuICAgICAgICBjb25zdCBtaW5MYXRXZXN0ID0gTC5sYXRMbmcoYm90dG9tTGVmdC55LCBib3R0b21MZWZ0LngpO1xuICAgICAgICBjb25zdCB0b3BSaWdodCA9IHRoaXMuZ2V0UHJvamVjdG9yKCkuZm9yd2FyZCh7IHg6IHhtYXgsIHk6IHltYXggfSk7XG4gICAgICAgIGNvbnN0IG1heExhdEVhc3QgPSBMLmxhdExuZyh0b3BSaWdodC55LCB0b3BSaWdodC54KTtcbiAgICAgICAgdGhpcy5fYm91bmRzID0gTC5sYXRMbmdCb3VuZHMobWluTGF0V2VzdCwgbWF4TGF0RWFzdCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodHlwZW9mIHByb2o0RnVsbHlMb2FkZWQgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgIHRocm93IGBZb3UgYXJlIHVzaW5nIHRoZSBsaXRlIHZlcnNpb24gb2YgZ2VvcmFzdGVyLWxheWVyLWZvci1sZWFmbGV0LCB3aGljaCBkb2VzIG5vdCBzdXBwb3J0IHJhc3RlcnMgd2l0aCB0aGUgcHJvamVjdGlvbiAke3Byb2plY3Rpb259LiAgUGxlYXNlIHRyeSB1c2luZyB0aGUgZGVmYXVsdCBidWlsZCBvciBhZGQgdGhlIHByb2plY3Rpb24gZGVmaW5pdGlvbiB0byB5b3VyIGdsb2JhbCBwcm9qNC5gO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRocm93IGBHZW9SYXN0ZXJMYXllciBkb2VzIG5vdCBwcm92aWRlIGJ1aWx0LWluIHN1cHBvcnQgZm9yIHJhc3RlcnMgd2l0aCB0aGUgcHJvamVjdGlvbiAke3Byb2plY3Rpb259LiAgQWRkIHRoZSBwcm9qZWN0aW9uIGRlZmluaXRpb24gdG8geW91ciBnbG9iYWwgcHJvajQuYDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyB0aGVzZSB2YWx1ZXMgYXJlIHVzZWQgc28gd2UgZG9uJ3QgdHJ5IHRvIHNhbXBsZSBvdXRzaWRlIG9mIHRoZSByYXN0ZXJcbiAgICAgIHRoaXMueE1pbk9mTGF5ZXIgPSB0aGlzLl9ib3VuZHMuZ2V0V2VzdCgpO1xuICAgICAgdGhpcy54TWF4T2ZMYXllciA9IHRoaXMuX2JvdW5kcy5nZXRFYXN0KCk7XG4gICAgICB0aGlzLnlNYXhPZkxheWVyID0gdGhpcy5fYm91bmRzLmdldE5vcnRoKCk7XG4gICAgICB0aGlzLnlNaW5PZkxheWVyID0gdGhpcy5fYm91bmRzLmdldFNvdXRoKCk7XG5cbiAgICAgIG9wdGlvbnMuYm91bmRzID0gdGhpcy5fYm91bmRzO1xuICAgIH1cbiAgfSxcblxuICBnZXRQcm9qZWN0b3I6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5pc1N1cHBvcnRlZFByb2plY3Rpb24oKSkge1xuICAgICAgaWYgKCFwcm9qNEZ1bGx5TG9hZGVkICYmICFwcm9qNCkge1xuICAgICAgICB0aHJvdyBcInByb2o0IG11c3QgYmUgZm91bmQgaW4gdGhlIGdsb2JhbCBzY29wZSBpbiBvcmRlciB0byBsb2FkIGEgcmFzdGVyIHRoYXQgdXNlcyB0aGlzIHByb2plY3Rpb25cIjtcbiAgICAgIH1cbiAgICAgIGlmICghdGhpcy5fcHJvamVjdG9yKSB7XG4gICAgICAgIGNvbnN0IHByb2pTdHJpbmcgPSB0aGlzLmdldFByb2plY3Rpb25TdHJpbmcodGhpcy5wcm9qZWN0aW9uKTtcbiAgICAgICAgaWYgKHRoaXMuZGVidWdMZXZlbCA+PSAxKSBsb2coeyBwcm9qU3RyaW5nIH0pO1xuICAgICAgICBsZXQgcHJvajRMaWI7XG4gICAgICAgIGlmIChwcm9qU3RyaW5nLnN0YXJ0c1dpdGgoXCJFUFNHXCIpKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBwcm9qNCA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBwcm9qNC5kZWZzID09PSBcImZ1bmN0aW9uXCIgJiYgcHJvalN0cmluZyBpbiBwcm9qNC5kZWZzKSB7XG4gICAgICAgICAgICBwcm9qNExpYiA9IHByb2o0O1xuICAgICAgICAgIH0gZWxzZSBpZiAoXG4gICAgICAgICAgICB0eXBlb2YgcHJvajRGdWxseUxvYWRlZCA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgICAgICB0eXBlb2YgcHJvajRGdWxseUxvYWRlZC5kZWZzID09PSBcImZ1bmN0aW9uXCIgJiZcbiAgICAgICAgICAgIHByb2pTdHJpbmcgaW4gcHJvajRGdWxseUxvYWRlZC5kZWZzXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBwcm9qNExpYiA9IHByb2o0RnVsbHlMb2FkZWQ7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IFwiW2dlb3Jhc3Rlci1sYXllci1mb3ItbGVhZmxldF0gcHJvamVjdGlvbiBub3QgZm91bmQgaW4gcHJvajQgaW5zdGFuY2VcIjtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBwcm9qNCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBwcm9qNExpYiA9IHByb2o0O1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHByb2o0RnVsbHlMb2FkZWQgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcHJvajRMaWIgPSBwcm9qNEZ1bGx5TG9hZGVkO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBcIltnZW9yYXN0ZXItbGF5ZXItZm9yLWxlYWZsZXRdIHByb2plY3Rpb24gbm90IGZvdW5kIGluIHByb2o0IGluc3RhbmNlXCI7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Byb2plY3RvciA9IHByb2o0TGliKHByb2pTdHJpbmcsIGBFUFNHOiR7RVBTRzQzMjZ9YCk7XG5cbiAgICAgICAgaWYgKHRoaXMuZGVidWdMZXZlbCA+PSAxKSBjb25zb2xlLmxvZyhcInByb2plY3RvciBzZXRcIik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5fcHJvamVjdG9yO1xuICAgIH1cbiAgfSxcblxuICBzYW1lKGFycmF5OiBHZW9SYXN0ZXJbXSwga2V5OiBHZW9SYXN0ZXJLZXlzKSB7XG4gICAgcmV0dXJuIG5ldyBTZXQoYXJyYXkubWFwKGl0ZW0gPT4gaXRlbVtrZXldKSkuc2l6ZSA9PT0gMTtcbiAgfVxufSk7XG5cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cbmlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSB7XG4gICh3aW5kb3cgYXMgYW55KVtcIkdlb1Jhc3RlckxheWVyXCJdID0gR2VvUmFzdGVyTGF5ZXI7XG59XG5pZiAodHlwZW9mIHNlbGYgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgKHNlbGYgYXMgYW55KVtcIkdlb1Jhc3RlckxheWVyXCJdID0gR2VvUmFzdGVyTGF5ZXI7XG59XG4vKiBlc2xpbnQtZW5hYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnkgKi9cblxuZXhwb3J0IGRlZmF1bHQgR2VvUmFzdGVyTGF5ZXI7XG5cbi8vIEV4cGxpY2l0bHkgZXhwb3J0cyBwdWJsaWMgdHlwZXNcbmV4cG9ydCB0eXBlIHsgR2VvUmFzdGVyLCBHZW9SYXN0ZXJMYXllck9wdGlvbnMsIFBpeGVsVmFsdWVzVG9Db2xvckZuIH0gZnJvbSBcIi4vdHlwZXNcIjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/georaster-layer-for-leaflet.ts\n");

/***/ }),

/***/ "leaflet":
/*!****************************************************************************************!*\
  !*** external {"root":"L","commonjs":"leaflet","amd":"leaflet","commonjs2":"leaflet"} ***!
  \****************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_leaflet__;

/***/ }),

/***/ "./node_modules/geo-extent/dist/geo-extent.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/geo-extent/dist/geo-extent.mjs ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GeoExtent\": () => (/* binding */ GeoExtent)\n/* harmony export */ });\n/* harmony import */ var preciso_add_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preciso/add.js */ \"./node_modules/preciso/add.js\");\n/* harmony import */ var preciso_divide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preciso/divide.js */ \"./node_modules/preciso/divide.js\");\n/* harmony import */ var preciso_multiply_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! preciso/multiply.js */ \"./node_modules/preciso/multiply.js\");\n/* harmony import */ var preciso_subtract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! preciso/subtract.js */ \"./node_modules/preciso/subtract.js\");\n/* harmony import */ var get_epsg_code__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! get-epsg-code */ \"./node_modules/get-epsg-code/dist/get-epsg-code-all.node.min.js\");\n/* harmony import */ var reproject_bbox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! reproject-bbox */ \"./node_modules/reproject-bbox/reproject-bbox.js\");\n/****\n * TO DO:\n * add support for GeoJSON and need to check projection of GeoJSON\n */\n\n\n\n\n\n\n\nconst avg = (a, b) => preciso_divide_js__WEBPACK_IMPORTED_MODULE_1__(preciso_add_js__WEBPACK_IMPORTED_MODULE_0__(a.toString(), b.toString()), \"2\");\nconst isAry = o => Array.isArray(o);\nconst isDef = o => o !== undefined && o !== null && o !== \"\";\nconst isFunc = o => typeof o === \"function\";\n\n// identifying GeoJSON currently unused\n// shouldn't rely on type being provided\n// because sometimes the rest could be valid but no type is provided\n// const isFeatureCollection = it => isObj(it) && it.type === \"FeatureCollection\" && hasKey(it, \"features\");\n// const isFeature = it => isObj(it) && it.type === \"Feature\" && hasKey(it, \"geometry\");\n// const isGeometryCollection = it => isObj(it) && it.type === \"GeometryCollection\" && hasKey(\"geometries\");\n// const isMultiPolygon = it => isObj(it) && it.type === \"MultiPolygon\" && hasKey(it, \"coordinates\");\n// const isPolygon = it => isObj(it) && it.type === \"Polygon\" && hasKey(it, \"coordinates\");\n// const isPoint = it => isObj(it) && it.type === \"Point\" && hasKey(it, \"coordinates\");\n// const isMultiPoint = it => isObj(it) && isObj.type === \"MultiPoint\" && hasKey(it, \"coordinates\");\n\nconst isObj = o => typeof o === \"object\";\nconst isStr = o => typeof o === \"string\";\nconst isNum = o => typeof o === \"number\";\nconst isLeafletLatLngBounds = o => isObj(o) && hasFuncs(o, [\"getEast\", \"getNorth\", \"getSouth\", \"getWest\"]);\nconst hasFunc = (o, f) => isObj(o) && isFunc(o[f]);\nconst hasObj = (o, k) => isObj(o) && isObj(o[k]);\nconst hasFuncs = (o, fs) => fs.every(f => hasFunc(o, f));\nconst hasObjs = (o, ks) => ks.every(k => hasObj(o, k));\nconst hasKey = (o, k) => isObj(o) && o[k] !== undefined && o[k] !== null;\nconst hasKeys = (o, ks) => ks.every(k => hasKey(o, k));\nconst allNums = ary => isAry(ary) && ary.every(isNum);\nconst allStrs = ary => isAry(ary) && ary.every(isStr);\nconst getConstructor = o => (typeof obj === \"object\" && typeof obj.constructor === \"function\") || undefined;\nconst normalize = srs => {\n  if (!srs) return srs;\n  if (isStr(srs) && srs.startsWith(\"EPSG:\")) return srs;\n  if (isStr(srs) && srs.match(/^\\d+$/)) return \"EPSG:\" + srs;\n  else if (isNum(srs)) return \"EPSG:\" + srs;\n  const code = get_epsg_code__WEBPACK_IMPORTED_MODULE_4__(srs);\n  if (isNum(code)) return \"EPSG:\" + code;\n  return srs;\n};\n\n// currently unused\n// const getConstructorName = o =>\n//   (typeof obj === \"object\" &&\n//     typeof obj.constructor === \"function\" &&\n//     typeof obj.constructor.name === \"string\" &&\n//     obj.constructor.name) ||\n//   undefined;\n\n// const forEachCoord = (data, cb) => {\n//   if (data.features) data.features.forEach(forEachCoord);\n//   else if (data.geometry) forEachCoord(data.geometry);\n//   else if (data.coordinates) forEachCoord(data.coordinates);\n//   else if (Array.isArray(data) && Array.isArray(data[0])) data.map(forEachCoord);\n//   else if (Array.isArray(data) && (data.length === 2 || data.length === 3) && typeof data[0] === \"number\") {\n//     const [x, y, z] = data;\n//     cb({ x, y, z });\n//   }\n// };\n\n// const getExtentOfGeoJSON = geojson => {\n//   let xmin, xmax, ymin, ymax;\n//   if (geojson.features) {\n\n//   }\n// }\n\nclass GeoExtent {\n  constructor(o, { srs } = {}) {\n    this.srs = normalize(srs);\n\n    let xmin, xmax, ymin, ymax;\n    let xmin_str, xmax_str, ymin_str, ymax_str;\n    if (getConstructor(o) === this.constructor) {\n      ({ xmin, xmax, ymin, ymax } = o);\n      if (isDef(o.srs)) {\n        this.srs = normalize(o.srs);\n      }\n    }\n    if (isAry(o) && o.length === 4 && allNums(o)) {\n      [xmin, ymin, xmax, ymax] = o;\n    } else if (isAry(o) && o.length === 4 && allStrs(o)) {\n      [xmin_str, ymin_str, xmax_str, ymax_str] = o;\n      [xmin, ymin, xmax, ymax] = o.map(str => Number(str));\n    } else if (isAry(o) && o.length === 2 && o.every(isAry) && o.every(o => o.length === 2 && allNums(o))) {\n      [[ymin, xmin], [ymax, xmax]] = o;\n    } else if (isLeafletLatLngBounds(o)) {\n      (xmin = o.getWest()), (xmax = o.getEast()), (ymin = o.getSouth()), (ymax = o.getNorth());\n      if (!isDef(this.srs)) this.srs = \"EPSG:4326\";\n    } else if (isAry(o) && o.length === 2 && o.every(it => hasKeys(it, [\"x\", \"y\"]))) {\n      [{ x: xmin, y: ymin }, { x: xmax, y: ymax }] = o;\n    } else if (isObj(o) && hasKeys(o, [\"x\", \"y\"]) && isNum(o.x) && isNum(o.y)) {\n      // receive a point like { x: 147, y: -18 } because isn't a point\n      // really just an extent with zero height and width?\n      xmin = xmax = o.x;\n      ymin = ymax = o.y;\n      if (hasKey(o, \"spatialReference\") && hasKey(o.spatialReference, \"wkid\")) {\n        if (!isDef(this.srs)) this.srs = normalize(o.spatialReference.wkid);\n      }\n    } else if (isObj(o) && hasKeys(o, [\"xmin\", \"xmax\", \"ymin\", \"ymax\"])) {\n      ({ xmin, xmax, ymin, ymax } = o);\n      const keys = [\"srs\", \"crs\", \"proj\", \"projection\"];\n\n      for (let i = 0; i < keys.length; i++) {\n        const k = keys[i];\n        const v = o[k];\n        const normalized = normalize(v);\n        if (normalized) {\n          this.srs = normalized;\n          break;\n        }\n      }\n\n      if (!this.srs && isDef(o.srs)) {\n        this.srs = o.srs;\n      }\n    } else if (isAry(o) && o.length === 2 && allNums(o)) {\n      // assume [ x , y ]\n      xmin = xmax = o[0];\n      ymin = ymax = o[1];\n    } else if (isObj(o) && hasFuncs(o, [\"getCoordinates\"])) {\n      const xy = o.getCoordinates();\n      xmin = xmax = xy[0];\n      ymin = ymax = xy[1];\n    } else if (isObj(o) && hasKey(o, \"bbox\") && o.bbox.length === 4 && allNums(o)) {\n      // like GeoJSON with bbox property set\n      // { type: \"Feature\", \"bbox\": [-37, 7, 12, 67 ], \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [...] } }\n      [xmin, ymin, xmax, ymax] = o.bbox;\n    } else if (hasObj(o, \"_bounds\") && isLeafletLatLngBounds(o._bounds)) {\n      const { _bounds } = o;\n      (xmin = _bounds.getWest()), (xmax = _bounds.getEast()), (ymin = _bounds.getSouth()), (ymax = _bounds.getNorth());\n      if (!this.srs) this.srs = \"EPSG:4326\";\n    } else if (isObj(o) && isObj(o._bounds) && hasObjs(o._bounds, [\"_southWest\", \"_northEast\"])) {\n      ({ lat: ymin, lng: xmin } = o._bounds._southWest);\n      ({ lat: ymax, lng: xmax } = o._bounds._northEast);\n      if (!isDef(this.srs)) this.srs = \"EPSG:4326\";\n    } else {\n      throw new Error(\"[geo-extent] unknown format\");\n    }\n\n    this.xmin = xmin;\n    this.xmin_str = xmin_str || xmin.toString();\n    this.ymin = ymin;\n    this.ymin_str = ymin_str || ymin.toString();\n    this.xmax = xmax;\n    this.xmax_str = xmax_str || xmax.toString();\n    this.ymax = ymax;\n    this.ymax_str = ymax_str || ymax.toString();\n\n    this.width_str = preciso_subtract_js__WEBPACK_IMPORTED_MODULE_3__(this.xmax_str, this.xmin_str);\n    this.width = Number(this.width_str);\n\n    this.height_str = preciso_subtract_js__WEBPACK_IMPORTED_MODULE_3__(this.ymax_str, this.ymin_str);\n    this.height = Number(this.height_str);\n\n    // corners\n    this.bottomLeft = { x: xmin, y: ymin };\n    this.bottomRight = { x: xmax, y: ymin };\n    this.topLeft = { x: xmin, y: ymax };\n    this.topRight = { x: xmax, y: ymax };\n\n    this.leafletBounds = [\n      [this.ymin, this.xmin],\n      [this.ymax, this.xmax]\n    ];\n\n    this.area_str = preciso_multiply_js__WEBPACK_IMPORTED_MODULE_2__(this.width_str, this.height_str);\n    this.area = Number(this.area_str);\n\n    this.perimeter_str = preciso_add_js__WEBPACK_IMPORTED_MODULE_0__(preciso_multiply_js__WEBPACK_IMPORTED_MODULE_2__(this.width_str, \"2\"), preciso_multiply_js__WEBPACK_IMPORTED_MODULE_2__(this.height_str, \"2\"));\n    this.perimeter = Number(this.perimeter_str);\n\n    this.bbox = [xmin, ymin, xmax, ymax];\n    this.bbox_str = [this.xmin_str, this.ymin_str, this.xmax_str, this.ymax_str];\n\n    this.center_str = {\n      x: avg(xmin_str || xmin, xmax_str || xmax),\n      y: avg(ymin_str || ymin, ymax_str || ymax)\n    };\n    this.center = { x: Number(this.center_str.x), y: Number(this.center_str.y) };\n\n    this.str = this.bbox_str.join(\",\");\n  }\n\n  _pre(_this, _other) {\n    // convert other to an extent instance (if not already)\n    _other = new this.constructor(_other);\n\n    if (!isDef(_this.srs) && !isDef(_other.srs)) {\n      // assume same/no projection\n    } else if (isDef(_this.srs) && !isDef(_other.srs)) {\n      // assume other is the same srs as this\n      _other = new _this.constructor({ ..._other, srs: _this.srs });\n    } else if (!isDef(_this.srs) && isDef(_other.srs)) {\n      // assume this' srs is the same as other\n      _this = new _this.constructor({ ..._this, srs: _other.srs });\n    } else if (isDef(_this.srs) && isDef(_other.srs) && _this.srs !== _other.srs) {\n      _other = _other.reproj(_this.srs);\n    } else if (isDef(_this.srs) && isDef(_other.srs) && _this.srs === _other.srs) {\n      // same projection, so no reprojection necessary\n    } else {\n      throw \"UH OH\";\n    }\n    return [_this, _other];\n  }\n\n  clone() {\n    return new this.constructor(this);\n  }\n\n  contains(other) {\n    const [_this, _other] = this._pre(this, other);\n\n    const xContains = _other.xmin >= _this.xmin && _other.xmax <= _this.xmax;\n    const yContains = _other.ymin >= _this.ymin && _other.ymax <= _this.ymax;\n\n    return xContains && yContains;\n  }\n\n  // should return null if no overlap\n  crop(other) {\n    other = new this.constructor(other);\n\n    // if really no overlap then return null\n    if (this.overlaps(other, { quiet: true }) === false && other.overlaps(this, { quiet: true }) === false) return null;\n\n    // first check if other fully contains this extent\n    // in which case, we don't really need to crop\n    // and can just return the extent of this\n    if (other.contains(this)) return this.clone();\n\n    // check if special case where other crosses 180th meridian\n    if (other.srs === \"EPSG:4326\" && (other.xmin < -180 || other.xmax > 180)) {\n      const parts = other.unwrap();\n\n      let cropped = parts.map(it => this.crop(it));\n\n      // filter out any parts that are null (didn't overlap)\n      cropped = cropped.filter(Boolean);\n\n      // no overlap\n      if (cropped.length === 0) return null;\n\n      let combo = cropped[0];\n      for (let i = 1; i < cropped.length; i++) combo = combo.combine(cropped[i]);\n\n      return combo;\n    }\n\n    // if both this and other have srs defined reproject\n    // otherwise, assume they are the same projection\n    let another = isDef(this.srs) && isDef(other.srs) ? other.reproj(this.srs, { quiet: true }) : other.clone();\n    if (another) {\n      if (!this.overlaps(another)) return null;\n      const xmin = Math.max(this.xmin, another.xmin);\n      const ymin = Math.max(this.ymin, another.ymin);\n      const xmax = Math.min(this.xmax, another.xmax);\n      const ymax = Math.min(this.ymax, another.ymax);\n      return new this.constructor([xmin, ymin, xmax, ymax], { srs: this.srs });\n    }\n\n    // fall back to converting everything to 4326 and cropping there\n    const this4326 = isDef(this.srs) ? this.reproj(4326) : this;\n    const other4326 = isDef(other.srs) ? other.reproj(4326) : other;\n    const [aMinLon, aMinLat, aMaxLon, aMaxLat] = this4326.bbox;\n    const [bMinLon, bMinLat, bMaxLon, bMaxLat] = other4326.bbox;\n\n    if (!this4326.overlaps(other4326)) return null;\n\n    const minLon = Math.max(aMinLon, bMinLon);\n    const minLat = Math.max(aMinLat, bMinLat);\n    const maxLon = Math.min(aMaxLon, bMaxLon);\n    const maxLat = Math.min(aMaxLat, bMaxLat);\n    return new this.constructor([minLon, minLat, maxLon, maxLat], { srs: 4326 }).reproj(this.srs);\n  }\n\n  // add two extents together\n  // result is a new extent in the projection of this\n  combine(other) {\n    if (isDef(this.srs) && isDef(other.srs)) {\n      other = other.reproj(this.srs);\n    }\n\n    const xmin = Math.min(this.xmin, other.xmin);\n    const xmax = Math.max(this.xmax, other.xmax);\n    const ymin = Math.min(this.ymin, other.ymin);\n    const ymax = Math.max(this.ymax, other.ymax);\n\n    return new this.constructor({ xmin, xmax, ymin, ymax, srs: this.srs });\n  }\n\n  equals(other, { digits = 13, strict = true } = { digits: 13, strict: true }) {\n    // convert other to GeoExtent if necessary\n    other = new this.constructor(other);\n\n    if (isDef(this.srs) && isDef(other.srs)) {\n      other = other.reproj(this.srs);\n    } else if (strict && isDef(this.srs) !== !isDef(this.srs)) {\n      return false;\n    }\n    const str1 = this.bbox.map(n => n.toFixed(digits)).join(\",\");\n    const str2 = other.bbox.map(n => n.toFixed(digits)).join(\",\");\n    return str1 === str2;\n  }\n\n  /*\n    shouldn't accept GeoJSON as input because the extent created from a GeoJSON\n    might overlap, but the actual polygon wouldn't.\n    Or at least make the user have to be explicit about the functionality via\n    a flag like overlaps(geojson, { strict: false })\n  */\n  overlaps(other, { quiet = false } = { quite: false }) {\n    try {\n      const [_this, _other] = this._pre(this, other);\n\n      const yOverlaps = _other.ymin <= _this.ymax && _other.ymax >= _this.ymin;\n      const xOverlaps = _other.xmin <= _this.xmax && _other.xmax >= _this.xmin;\n\n      return xOverlaps && yOverlaps;\n    } catch (error) {\n      if (quiet) return;\n      else throw error;\n    }\n  }\n\n  reproj(to, { quiet = false } = { quiet: false }) {\n    to = normalize(to); // normalize srs\n\n    // don't need to reproject, so just return a clone\n    if (isDef(this.srs) && this.srs === normalize(to)) return this.clone();\n\n    if (!isDef(this.srs)) {\n      if (quiet) return;\n      throw new Error(`[geo-extent] cannot reproject ${this.bbox} without a projection set`);\n    }\n\n    // unwrap, reproject pieces, and combine\n    if (this.srs === \"EPSG:4326\" && (this.xmin < -180 || this.xmax > 180)) {\n      try {\n        const parts = this.unwrap().map(ext => ext.reproj(to));\n        let combo = parts[0];\n        for (let i = 1; i < parts.length; i++) combo = combo.combine(parts[i]);\n        return combo;\n      } catch (error) {\n        if (quiet) return;\n        throw error;\n      }\n    }\n\n    const reprojected = reproject_bbox__WEBPACK_IMPORTED_MODULE_5__({\n      bbox: this.bbox,\n      from: this.srs,\n      to\n    });\n\n    if (reprojected.some(isNaN)) {\n      if (quiet) return;\n      throw new Error(`[geo-extent] failed to reproject ${this.bbox} from ${this.srs} to ${to}`);\n    }\n    return new GeoExtent(reprojected, { srs: to });\n  }\n\n  unwrap() {\n    const { xmin, ymin, xmax, ymax, srs } = this;\n\n    // not in 4326, so just return a clone\n    if (srs !== \"EPSG:4326\") return [this.clone()];\n\n    // extent is within the normal extent of the earth, so return clone\n    if (xmin > -180 && xmax < 180) return [this.clone()];\n\n    // handle special case where extent overflows xmin and then overlaps itself\n    if (xmin < -180 && xmax >= xmin + 360) return [new this.constructor([-180, ymin, 180, ymax], { srs: 4326 })];\n\n    if (xmax > 180 && xmin <= xmax - 360) return [new this.constructor([-180, ymin, 180, ymax], { srs: 4326 })];\n\n    let extents = [];\n\n    // extent overflows left edge of the world\n    if (xmin < -180) {\n      extents.push(new this.constructor([xmin + 360, ymin, 180, ymax], { srs }));\n    }\n\n    // add extent for part between -180 to 180 longitude\n    extents.push(new this.constructor([xmin < -180 ? -180 : xmin, ymin, xmax > 180 ? 180 : xmax, ymax], { srs }));\n\n    // extent overflows right edge of the world\n    if (this.xmax > 180) {\n      extents.push(new this.constructor([-180, ymin, xmax - 360, ymax], { srs }));\n    }\n\n    return extents;\n  }\n\n  asEsriJSON() {\n    return {\n      xmin: this.xmin,\n      ymin: this.ymin,\n      xmax: this.xmax,\n      ymax: this.ymax,\n      spatialReference: {\n        wkid: this.srs\n      }\n    };\n  }\n\n  asGeoJSON() {\n    const { xmin, ymin, xmax, ymax } = this.srs === \"EPSG:4326\" ? this : this.reproj(4326);\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"Polygon\",\n        coordinates: [\n          [\n            [xmin, ymax],\n            [xmax, ymax],\n            [xmax, ymin],\n            [xmin, ymin],\n            [xmin, ymax]\n          ]\n        ]\n      }\n    };\n  }\n\n  asObj() {\n    const res = {};\n    for (let k in this) {\n      const v = this[k];\n      if (!isFunc(v)) {\n        res[k] = v;\n      }\n    }\n    return res;\n  }\n}\n\nif (typeof define === \"function\" && define.amd)\n  define(function () {\n    return GeoExtent;\n  });\nif (typeof self === \"object\") self.GeoExtent = GeoExtent;\nif (typeof window === \"object\") window.GeoExtent = GeoExtent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/geo-extent/dist/geo-extent.mjs\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/georaster-layer-for-leaflet.ts");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});