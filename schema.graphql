"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

type AccessmodFile {
  id: String!
  uri: String!
  fileset: AccessmodFileset
  mimeType: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccessmodFileset {
  id: String!
  name: String!
  role: AccessmodFilesetRole
  owner: User!
  files: [AccessmodFile]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum AccessmodFilesetFormat {
  VECTOR
  RASTER
  TABULAR
}

type AccessmodFilesetPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [AccessmodFileset!]!
}

type AccessmodFilesetRole {
  id: String!
  name: String!
  format: AccessmodFilesetFormat!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccessmodFilesetRolePage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [AccessmodFilesetRole!]!
}

type AccessmodProject {
  id: String!
  name: String!
  spatialResolution: Int!
  country: Country!
  owner: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AccessmodProjectPage {
  pageNumber: Int!
  totalPages: Int!
  totalItems: Int!
  items: [AccessmodProject!]!
}

type Avatar {
  initials: String!
  color: String!
}

type Country {
  code: String!
  alpha3: String!
  name: String!
  flag: String!
}

input CountryInput {
  code: String!
  alpha3: String
  name: String
  flag: String
}

input CreateAccessmodFileInput {
  filesetId: String!
  uri: String!
  mimeType: String!
}

type CreateAccessmodFileResult {
  success: Boolean!
  file: AccessmodFile
}

input CreateAccessmodFilesetInput {
  name: String!
  projectId: String!
  roleId: String!
}

type CreateAccessmodFilesetResult {
  success: Boolean!
  fileset: AccessmodFileset
}

input CreateAccessmodProjectInput {
  name: String!
  spatialResolution: Int!
  country: CountryInput!
}

type CreateAccessmodProjectResult {
  success: Boolean!
  project: AccessmodProject
}

scalar Date

scalar DateTime

input DeleteAccessmodFileInput {
  id: String!
}

type DeleteAccessmodFileResult {
  success: Boolean!
}

input DeleteAccessmodFilesetInput {
  id: String!
}

type DeleteAccessmodFilesetResult {
  success: Boolean!
}

input DeleteAccessmodProjectInput {
  id: String!
}

type DeleteAccessmodProjectResult {
  success: Boolean!
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResult {
  success: Boolean!
  me: User
}

type LogoutResult {
  success: Boolean!
}

type Mutation {
  login(input: LoginInput!): LoginResult
  logout: LogoutResult
  createAccessmodProject(input: CreateAccessmodProjectInput): CreateAccessmodProjectResult
  updateAccessmodProject(input: UpdateAccessmodProjectInput): UpdateAccessmodProjectResult
  deleteAccessmodProject(input: DeleteAccessmodProjectInput): DeleteAccessmodProjectResult
  createAccessmodFileset(input: CreateAccessmodFilesetInput): CreateAccessmodFilesetResult
  deleteAccessmodFileset(input: DeleteAccessmodFilesetInput): DeleteAccessmodFilesetResult
  prepareAccessmodFileUpload(input: PrepareAccessmodFileUploadInput): PrepareAccessmodFileUploadResult
  createAccessmodFile(input: CreateAccessmodFileInput): CreateAccessmodFileResult
  deleteAccessmodFile(input: DeleteAccessmodFileInput): DeleteAccessmodFileResult
}

type Organization {
  id: String!
  name: String!
  type: String!
  url: String!
  contactInfo: String!
}

input OrganizationInput {
  id: String!
  name: String
  type: String
  url: String
  contactInfo: String
}

input PrepareAccessmodFileUploadInput {
  filesetId: String!
  mimeType: String!
}

type PrepareAccessmodFileUploadResult {
  success: Boolean!
  uploadUrl: String
  fileUri: String
}

type Query {
  me: User
  countries: [Country!]
  organizations: [Organization!]
  accessmodProject(id: String): AccessmodProject
  accessmodProjects(page: Int, perPage: Int): AccessmodProjectPage!
  accessmodFileset(id: String): AccessmodFileset
  accessmodFilesets(projectId: String!, page: Int, perPage: Int): AccessmodFilesetPage!
  accessmodFilesetRole(id: String!): AccessmodFilesetRole
  accessmodFilesetRoles(page: Int, perPage: Int): AccessmodFilesetRolePage
}

input UpdateAccessmodProjectInput {
  id: String!
  name: String
  spatialResolution: Int
  country: CountryInput
}

type UpdateAccessmodProjectResult {
  success: Boolean!
  project: AccessmodProject
}

type User {
  id: String!
  email: String!
  firstName: String
  lastName: String
  avatar: Avatar!
}

